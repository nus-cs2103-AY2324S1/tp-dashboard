[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T09-3/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T09-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-T09-3/tp)\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# MediLink Contacts","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"* MediLink Contacts aims to help medical staff including nurses/doctors/pharmacists navigate through patient details in","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"  their high workload and time-pressured working environment. When medical emergencies arise, it becomes crucial to","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"  provide rapid access to emergency contacts for patients and access other details of the patients to make decisions","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"  more quickly. It is optimised for CLI so that users can quickly access the information.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"* For the detailed documentation of this project, see the","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"  **[MedicLink Contacts Product Website](https://ay2324s1-cs2103t-t09-3.github.io/tp/)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"### Acknowledgements","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"cmHuang777":14,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"### Tanveer Singh","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"\u003cimg src\u003d\"images/tanveersingh10.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"[[homepage](https://www.linkedin.com/in/tanveersingh10/)]","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"[[github](https://github.com/tanveersingh10)]","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"[[portfolio](team/tanveersingh10.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"### Koh Kai Jie","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"\u003cimg src\u003d\"images/kohkaijie.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"[[homepage](https://www.linkedin.com/in/koh-kai-jie-1064b728b/)]","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"[[github](http://github.com/kohkaijie)]","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"[[portfolio](team/kohkaijie.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"* Role: Developer","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"### Mohammed Faiz","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003cimg src\u003d\"images/mohammed-faizzzz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"[[LinkedIn](https://www.linkedin.com/in/mohammed-faiz-47585017a/)]","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"[[Github](https://github.com/Mohammed-Faizzzz)]","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"[[Portfolio](team/mohammed-faizzzz.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* Responsibilities: Doctor Class and related Classes/Features","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"### Chong Zhen Xi, Isaac","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"\u003cimg src\u003d\"images/chonguschonguschongus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"[[LinkedIn](https://www.linkedin.com/in/zhen-xi-chong-0a6499292/)]","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"[[github](http://github.com/chonguschonguschongus)]","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"[[portfolio](team/chonguschonguschongus.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"### Huang Chao Ming","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"\u003cimg src\u003d\"images/cmhuang777.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"[[github](http://github.com/cmHuang777)]","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"[[portfolio](team/cmhuang777.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanveersingh10":5,"kohkaijie":6,"cmHuang777":4,"Mohammed-Faizzzz":6,"-":36,"chonguschonguschongus":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"MediLink Contacts is a brownfield software project based","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"off [AddressBook Level-3](https://se-education.org/addressbook-level3/), created under the module CS2103 for the School","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"of Computing in the National University of Singapore","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"Java dependencies:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"* Jackson for JSON data storage","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"* JavaFX for our GUI","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"* JUnit5 for testing","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"Documentation dependencies:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"* Jekyll","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"_PlantUML","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"**`Main`** (consisting of","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"The *Sequence","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"The **API","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"**API","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"cmHuang777"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"cmHuang777"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"cmHuang777"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"cmHuang777"},"content":"**Target user profile**: Hospital staff who","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"cmHuang777"},"content":"**Value proposition**: When medical emergencies arise, it becomes crucial to provide rapid access to emergency contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"cmHuang777"},"content":"and patients\u0027 details. Our app provides a way to efficiently navigate through pertinent contacts for their everyday","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"cmHuang777"},"content":"tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"| Priority | As a …​                           | I want to …​                        | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"cmHuang777"},"content":"|----------|-----------------------------------|-------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"-"},"content":"| `* * *`  | new user                          | see usage instructions              | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"cmHuang777"},"content":"| `* * *`  | Hospital Staff                    | add a new patient                   | access patient details quickly next time                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"cmHuang777"},"content":"| `* * *`  | Hospital Staff                    | add a new doctor                    | include doctors assigned to the patients                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"cmHuang777"},"content":"| `* * *`  | Hospital Staff                    | delete a patient/doctor             | remove entries that I no longer need                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"cmHuang777"},"content":"| `* * *`  | Hospital Staff                    | update patient details              | information remains accurate                                           |","lastModifiedDate":"2023-10-03"},{"lineNumber":302,"author":{"gitId":"cmHuang777"},"content":"| `* * *`  | Hospital Staff                    | find a patient/doctor by NRIC       | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"cmHuang777"},"content":"| `* * *`  | Hospital Staff                    | reassign patients to doctors/nurses | account for changes in the people treating the patients                |","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"cmHuang777"},"content":"| `* *`    | Hospital Staff                    | hide private contact details        | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"cmHuang777"},"content":"| `*`      | Hospital Staff with many contacts | sort persons by name                | locate a person easily                                                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"cmHuang777"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"cmHuang777"},"content":"otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"cmHuang777"},"content":"**Use case: UC1 - Add Patient**","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"cmHuang777"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"cmHuang777"},"content":"1. User requests to add a patient by specifying details about the patient.","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"cmHuang777"},"content":"2. Medilink Contacts adds the patient to the database.","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"cmHuang777"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"cmHuang777"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"cmHuang777"},"content":"* 1a. Medilink Contacts detects error in command.","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"cmHuang777"},"content":"    * 1a1. Medilink Contacts prompts user to correct the format of the command.","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"cmHuang777"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"cmHuang777"},"content":"* 1b. Medilink Contacts detects duplicate patient entry by checking the NRIC.","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"cmHuang777"},"content":"    * 1b1. Medilink Contacts prompts user patient already exists.","lastModifiedDate":"2023-10-03"},{"lineNumber":332,"author":{"gitId":"cmHuang777"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"cmHuang777"},"content":"**Use case: UC2 - Delete a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"1. User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"cmHuang777"},"content":"2. Medilink Contacts shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"-"},"content":"3. User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"cmHuang777"},"content":"4. Medilink Contacts deletes the person","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"cmHuang777"},"content":"* 3a. The given NRIC is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"cmHuang777"},"content":"    * 3a1. Medilink Contacts shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"cmHuang777"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-10-03"},{"lineNumber":364,"author":{"gitId":"cmHuang777"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-03"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"cmHuang777"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-10-03"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"cmHuang777"},"content":"2. Saving window preferences","lastModifiedDate":"2023-10-03"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"cmHuang777"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"cmHuang777"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2023-10-03"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"cmHuang777"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"cmHuang777"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"cmHuang777"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"cmHuang777"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2023-10-03"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"cmHuang777"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"cmHuang777":82,"-":342}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"MediLink Contacts(MLC) is a **desktop app for managing patients and doctors details, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, MLC can get your patients management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"1. Download the latest `mediLink.jar` from [here](https://github.com/AY2324S1-CS2103T-T09-3/tp/releases).","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your MLC.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar medilink.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"   * `add Doctor n/John Doe ic/S9851386G g/M p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pt/T0123456H` : Adds a doctor named `John Doe` to the Address Book.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"   * `delete ic/S9851386G` : Deletes the person with ic S9851386G.","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"## Contents","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"- [Adding a Doctor: `add Doctor`](#adding-a-doctor--add-doctor)","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"- [Adding a Patient: `add Patient`](#adding-a-patient--add-patient)","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"### Adding a Doctor: `add Doctor`","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"Adds a Doctor to the hospital database.","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"Format: `add Doctor n/NAME ic/IC g/GENDER p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​ pt/PATIENT_1 …​`","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"**Tip:**","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:note:","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"**Take Note:**","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"- A doctor **MUST** have a non-empty NAME and a valid IC at the very least. Failure to include these details may result in an error.","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"- Phone Numbers and Emails have to be in a valid format.","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"- PHONE_NUMBER must have exactly 8 digits.","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"- EMAIL must contain email domain (eg. `@gmail.com`).","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"- PATIENT must contain the valid IC of a Patient in the Database.","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"* `add Doctor n/John Doe ic/S9851386G g/M p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pt/T0123456H`","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"* `add Doctor n/Betsy Crowe ic/S9851586G g/F p/98765433 e/betsycrowe@example.com a/#104-C, Wakanda St 42 t/Surgeon pt/T0123556H`","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"### Adding a Patient: `add Patient`","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"Adds a Patient to the hospital database.","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"cmHuang777"},"content":"Format: `add-patient n/NAME ic/IC g/GENDER p/PHONE_NUMBER ec/EMERGENCY_CONTACT e/EMAIL a/ADDRESS [t/TAG] [d/DOCTOR] [c/CONDITION] [b/BLOODTYPE] …​`","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"cmHuang777"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:note:","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"**Take Note:**","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"- A patient **MUST** have a non-empty NAME and a valid IC at the very least. Failure to include these details may result in an error.","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"- Phone Numbers and Emails have to be in a valid format.","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"    - PHONE_NUMBER must have exactly 8 digits.","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"cmHuang777"},"content":"    - EMAIL must contain email domain (eg. `@gmail.com`).","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"cmHuang777"},"content":"- DOCTOR must contain the valid IC of a doctor in the Database.","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"- EMERGENCY_CONTACT must contain valid emergency contact number, which needs to be a valid phone number.","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"cmHuang777"},"content":"- Blood type must be a combination of A/B/AB/O and +/-","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"cmHuang777"},"content":"* `add-patient n/John Doe ic/S9851386G g/M p/98765432 ec/90123456 e/johnd@example.com a/John street, block 123, #01-01 d/T0123456H c/pneumothorax b/O+`  ","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"cmHuang777"},"content":"* `add-patient n/Betsy Crowe ic/S9851586G g/F p/98765433 e/betsycrowe@example.com a/#104-C, Wakanda St 42 t/High Priority pt/T0123556H`","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"cmHuang777"},"content":"Shows a list of all persons in the MediLink Contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"cmHuang777"},"content":"Edits an existing person in the MediLink Contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"Format: `edit NRIC [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"* Edits the person at the specified `NRIC`. The NRIC **must be a valid IC number** ","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"tanveersingh10"},"content":"* Must edit appropriate fields based on whether the person is a patient or doctor (e.g. can\u0027t update condition of a doctor)","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"cmHuang777"},"content":"*  `edit T0123456A p/91234567 e/johndoe@example.com g/F` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"tanveersingh10"},"content":"*  `edit S9876543B pt/T0123456A n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"kohkaijie"},"content":"Format: `delete NRIC`","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"kohkaijie"},"content":"* Deletes the person with the specified NRIC.","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"kohkaijie"},"content":"* The NRIC **must be a valid NRIC format** and must belong to a person in the addressbook.","lastModifiedDate":"2023-10-11"},{"lineNumber":172,"author":{"gitId":"kohkaijie"},"content":"* The NRIC is case-sensitive. e.g `tXXXXXXXz` is not the same as `TXXXXXXXZ`","lastModifiedDate":"2023-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"kohkaijie"},"content":"* `delete S1234567J` deletes Jonathan who has the NRIC `S1234567J`","lastModifiedDate":"2023-10-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"cmHuang777"},"content":"Clears all entries from the MdeiLink Contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"cmHuang777"},"content":"MediLink Contacts data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"cmHuang777"},"content":"MediLink Contacts data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":198,"author":{"gitId":"cmHuang777"},"content":"If your changes to the data file makes its format invalid, MediLink Contacts will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"cmHuang777"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MediLink Contacts home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"cmHuang777"},"content":"| Action          | Format, Examples                                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"cmHuang777"},"content":"|-----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":224,"author":{"gitId":"cmHuang777"},"content":"| **New Doctor**  | `add Doctor n/NAME ic/IC g/GENDER p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​ pt/PATIENT_1 …​` \u003cbr\u003e e.g., `add Doctor n/John Doe ic/S9851386G g/M p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pt/T0123456H`                                                                               |","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"cmHuang777"},"content":"| **New Patient** | `add Patient n/NAME ic/IC g/GENDER p/PHONE_NUMBER ec/EMERGENCY_CONTACT e/EMAIL a/ADDRESS [t/TAG] [d/DOCTOR] [c/CONDITION] [b/BLOODTYPE] …​` \u003cbr\u003e e.g., `add Patient n/John Doe ic/S9851386G g/M p/98765432 ec/90123456 e/johnd@example.com a/John street, block 123, #01-01 d/T0123456H c/pneumothorax b/O+` |","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"cmHuang777"},"content":"| **Clear**       | `clear`                                                                                                                                                                                                                                                                                                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"cmHuang777"},"content":"| **Delete**      | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                                                                                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"cmHuang777"},"content":"| **Edit**        | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                                                                                                                                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"cmHuang777"},"content":"| **Find**        | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":230,"author":{"gitId":"cmHuang777"},"content":"| **List**        | `list`                                                                                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-10-05"},{"lineNumber":231,"author":{"gitId":"cmHuang777"},"content":"| **Help**        | `help`                                                                                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"tanveersingh10":4,"kohkaijie":5,"cmHuang777":46,"Mohammed-Faizzzz":15,"-":161}},{"path":"docs/team/chonguschonguschongus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"layout: page","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"title: Isaac\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"chonguschonguschongus":46}},{"path":"docs/team/cmhuang777.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"title: Chao Ming\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"### Project: MediLink Contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"MediLink Contacts aims to help medical staff including nurses/doctors/pharmacists navigate through patient details in","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"their high workload and time-pressured working environment. When medical emergencies arise, it becomes crucial to","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"provide rapid access to emergency contacts for patients and access other details of the patients to make decisions more","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"quickly. It is optimised for CLI so that users can quickly access the information. There is also a GUI created with","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"JavaFX.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"  [Link to TP code dashboard](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dcmhuang777\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dcmHuang777\u0026tabRepo\u003dAY2324S1-CS2103T-T09-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"* **New Feature**: Created new Patient class","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"* **New Feature**: Modified current add person command to add new Patient class.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    * (to be added soon)","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"    * User Guide: (to be added soon)","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"    * Developer Guide: (to be added soon)","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"    * Forked the team repo from the source code","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    * Set up the team website","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"    * Updated readme","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"cmHuang777":38}},{"path":"docs/team/kohkaijie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"layout: page","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"title: Kai Jie\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"* **Tools**:","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"kohkaijie":46}},{"path":"docs/team/mohammed-faizzzz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"git---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"title: Faiz\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Mohammed-Faizzzz":46}},{"path":"docs/team/tanveersingh10.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"layout: page","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"title: Tanveer\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"* **Tools**:","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"tanveersingh10":45,"kohkaijie":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"     * Returns an unmodifiable view of the filtered list of patient","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /** Returns an unmodifiable view of the filtered list of doctors */","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cmHuang777":6,"Mohammed-Faizzzz":3,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return model.getFilteredDoctorList();","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cmHuang777":3,"Mohammed-Faizzzz":4,"-":86}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Person with specified nric cannot be found!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kohkaijie":1,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"            + PREFIX_NRIC + \"S1234567Z\"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kohkaijie":6,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/AddDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * Adds a Doctor to the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class AddDoctorCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String COMMAND_WORD \u003d \"add-doctor\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_NRIC + \"S1234567Z\"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New doctor added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final Doctor toAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Creates an AddCommand to add the specified {@code Doctor}","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public AddDoctorCommand(Doctor doctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        toAdd \u003d doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!(other instanceof AddDoctorCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddDoctorCommand otherAddCommand \u003d (AddDoctorCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Mohammed-Faizzzz":89}},{"path":"src/main/java/seedu/address/logic/commands/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public static final String COMMAND_WORD \u003d \"add-patient\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the address book. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_EMERGENCY_CONTACT + \"EMERGENCY_CONTACT \"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_NRIC + \"S1234567Z \"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"    private final Patient toAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"     * Creates an AddPatientCommand to add the specified {@code Patient}","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"        if (!(other instanceof AddPatientCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"        AddPatientCommand otherAddCommand \u003d (AddPatientCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cmHuang777":92}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"            + \": Deletes the person identified by specified nric.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"            + \"Parameters: nric (must be a valid nric belonging to a person in the contact list)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"            + \"Example: \" + COMMAND_WORD + \" T0333789H\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"    private final Ic targetIc;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"    public DeleteCommand(Ic targetIc) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"        this.targetIc \u003d targetIc;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"        // combine doctor list and patient list","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        List\u003cPerson\u003e lastShownList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        lastShownList.addAll(model.getFilteredDoctorList());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        lastShownList.addAll(model.getFilteredPatientList());","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"        for (Person target : lastShownList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"            if (targetIc.equals(target.getIc())) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"                model.deletePerson(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(target)));","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"        throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"kohkaijie"},"content":"        return targetIc.equals(otherDeleteCommand.targetIc);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"kohkaijie"},"content":"                .add(\"targetIc\", targetIc)","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kohkaijie":14,"cmHuang777":2,"Mohammed-Faizzzz":3,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"            + \"[\" + PREFIX_CONDITION + \"CONDITION] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"            + \"[\" + PREFIX_BLOODTYPE + \"BLOOD TYPE] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"            + \"[\" + PREFIX_EMERGENCY_CONTACT + \"EMAIL] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"            + \"Example: \" + COMMAND_WORD + \" T0123456H \"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"kohkaijie"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"kohkaijie"},"content":"            + PREFIX_REMARK + \"remarks\";","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"    public static final String MESSAGE_DOESNT_EXIST \u003d \"This person hasn\u0027t been saved\";","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"    private final Ic nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"    private String personRole;","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"     * @param nric of the person in the filtered person list to edit","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"    public EditCommand(Ic nric, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"        // combine doctor list and patient list","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        List\u003cPerson\u003e lastShownList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        lastShownList.addAll(model.getFilteredDoctorList());","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        lastShownList.addAll(model.getFilteredPatientList());","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"        List\u003cPerson\u003e personToEditList \u003d lastShownList.stream()","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"                .filter(x -\u003e x.getIc().equals(nric))","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"        if (personToEditList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"            throw new CommandException(MESSAGE_DOESNT_EXIST);","lastModifiedDate":"2023-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"tanveersingh10"},"content":"        //developer assumption - can\u0027t have 2 people with same IC","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"        assert personToEditList.size() \u003c 2;","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"        Person personToEdit \u003d personToEditList.get(0);","lastModifiedDate":"2023-10-08"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"        Person editedPerson;","lastModifiedDate":"2023-10-08"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"        if (personToEdit instanceof Patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"            personRole \u003d \"patient\";","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"tanveersingh10"},"content":"            editedPerson \u003d createEditedPatient((Patient) personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"tanveersingh10"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"tanveersingh10"},"content":"            assert personToEdit instanceof Doctor;","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"            if (editPersonDescriptor.getCondition().isPresent() || editPersonDescriptor.getBloodType().isPresent()) {","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"tanveersingh10"},"content":"                throw new CommandException(\"Doctors cannot have Condition or BloodType fields.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"tanveersingh10"},"content":"            personRole \u003d \"doctor\";","lastModifiedDate":"2023-10-08"},{"lineNumber":123,"author":{"gitId":"tanveersingh10"},"content":"            editedPerson \u003d createEditedDoctor(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":139,"author":{"gitId":"tanveersingh10"},"content":"    private static Doctor createEditedDoctor(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"kohkaijie"},"content":"        Remark updatedRemarks \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2023-09-26"},{"lineNumber":147,"author":{"gitId":"kohkaijie"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"kohkaijie"},"content":"        Ic updatedIc \u003d editPersonDescriptor.getIc().orElse(personToEdit.getIc());","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-10-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"tanveersingh10"},"content":"        return new Doctor(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemarks,","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"kohkaijie"},"content":"                updatedGender, updatedIc, updatedTags);","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":156,"author":{"gitId":"tanveersingh10"},"content":"    private static Patient createEditedPatient(Patient personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-08"},{"lineNumber":157,"author":{"gitId":"tanveersingh10"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-08"},{"lineNumber":158,"author":{"gitId":"tanveersingh10"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-10-08"},{"lineNumber":159,"author":{"gitId":"tanveersingh10"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-10-08"},{"lineNumber":160,"author":{"gitId":"cmHuang777"},"content":"        Phone updatedEmergencyContact \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"cmHuang777"},"content":"                editPersonDescriptor.getEmergencyContact().orElse(personToEdit.getEmergencyContact());","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"tanveersingh10"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-10-08"},{"lineNumber":163,"author":{"gitId":"tanveersingh10"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-10-08"},{"lineNumber":164,"author":{"gitId":"tanveersingh10"},"content":"        Remark updatedRemarks \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"tanveersingh10"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2023-10-08"},{"lineNumber":166,"author":{"gitId":"tanveersingh10"},"content":"        Ic updatedIc \u003d editPersonDescriptor.getIc().orElse(personToEdit.getIc());","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"tanveersingh10"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-10-08"},{"lineNumber":168,"author":{"gitId":"tanveersingh10"},"content":"        BloodType updatedBloodType \u003d editPersonDescriptor.getBloodType().orElse(personToEdit.getBloodType());","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"tanveersingh10"},"content":"        Condition updatedCondition \u003d editPersonDescriptor.getCondition().orElse(personToEdit.getCondition());","lastModifiedDate":"2023-10-08"},{"lineNumber":170,"author":{"gitId":"cmHuang777"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmergencyContact, updatedEmail, updatedAddress,","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"cmHuang777"},"content":"                updatedRemarks, updatedGender, updatedIc, updatedCondition, updatedBloodType, updatedTags);","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":186,"author":{"gitId":"tanveersingh10"},"content":"        return nric.equals(otherEditCommand.nric)","lastModifiedDate":"2023-10-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"tanveersingh10"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"cmHuang777"},"content":"        private Phone emergencyContact;","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"kohkaijie"},"content":"        private Remark remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":210,"author":{"gitId":"kohkaijie"},"content":"        private Gender gender;","lastModifiedDate":"2023-10-04"},{"lineNumber":211,"author":{"gitId":"kohkaijie"},"content":"        private Ic ic;","lastModifiedDate":"2023-10-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-04"},{"lineNumber":213,"author":{"gitId":"tanveersingh10"},"content":"        private Condition condition;","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"tanveersingh10"},"content":"        private BloodType bloodType;","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"cmHuang777"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":226,"author":{"gitId":"cmHuang777"},"content":"            setEmergencyContact(toCopy.emergencyContact);","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":229,"author":{"gitId":"kohkaijie"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-09-26"},{"lineNumber":230,"author":{"gitId":"kohkaijie"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-10-04"},{"lineNumber":231,"author":{"gitId":"kohkaijie"},"content":"            setIc(toCopy.ic);","lastModifiedDate":"2023-10-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-04"},{"lineNumber":233,"author":{"gitId":"tanveersingh10"},"content":"            setBloodType(toCopy.bloodType);","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"tanveersingh10"},"content":"            setCondition(toCopy.condition);","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"tanveersingh10"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, emergencyContact, address,","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"tanveersingh10"},"content":"                    gender, ic, tags, bloodType, condition, remark);","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"cmHuang777"},"content":"        public void setEmergencyContact(Phone phone) {","lastModifiedDate":"2023-10-16"},{"lineNumber":262,"author":{"gitId":"cmHuang777"},"content":"            this.emergencyContact \u003d phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":264,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":265,"author":{"gitId":"cmHuang777"},"content":"        public Optional\u003cPhone\u003e getEmergencyContact() {","lastModifiedDate":"2023-10-16"},{"lineNumber":266,"author":{"gitId":"cmHuang777"},"content":"            return Optional.ofNullable(emergencyContact);","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"kohkaijie"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-09-26"},{"lineNumber":286,"author":{"gitId":"kohkaijie"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":287,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":288,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":289,"author":{"gitId":"kohkaijie"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-09-26"},{"lineNumber":290,"author":{"gitId":"kohkaijie"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-09-26"},{"lineNumber":291,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":292,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":293,"author":{"gitId":"kohkaijie"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"kohkaijie"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":296,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"kohkaijie"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-10-04"},{"lineNumber":298,"author":{"gitId":"kohkaijie"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":300,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":301,"author":{"gitId":"kohkaijie"},"content":"        public void setIc(Ic ic) {","lastModifiedDate":"2023-10-04"},{"lineNumber":302,"author":{"gitId":"kohkaijie"},"content":"            this.ic \u003d ic;","lastModifiedDate":"2023-10-04"},{"lineNumber":303,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":304,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":305,"author":{"gitId":"kohkaijie"},"content":"        public Optional\u003cIc\u003e getIc() {","lastModifiedDate":"2023-10-04"},{"lineNumber":306,"author":{"gitId":"kohkaijie"},"content":"            return Optional.ofNullable(ic);","lastModifiedDate":"2023-10-04"},{"lineNumber":307,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":308,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":309,"author":{"gitId":"tanveersingh10"},"content":"        public void setCondition(Condition condition) {","lastModifiedDate":"2023-10-12"},{"lineNumber":310,"author":{"gitId":"tanveersingh10"},"content":"            this.condition \u003d condition;","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":312,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":313,"author":{"gitId":"tanveersingh10"},"content":"        public Optional\u003cCondition\u003e getCondition() {","lastModifiedDate":"2023-10-12"},{"lineNumber":314,"author":{"gitId":"tanveersingh10"},"content":"            return Optional.ofNullable(condition);","lastModifiedDate":"2023-10-12"},{"lineNumber":315,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":316,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":317,"author":{"gitId":"tanveersingh10"},"content":"        public void setBloodType(BloodType bloodType) {","lastModifiedDate":"2023-10-12"},{"lineNumber":318,"author":{"gitId":"tanveersingh10"},"content":"            this.bloodType \u003d bloodType;","lastModifiedDate":"2023-10-12"},{"lineNumber":319,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":320,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":321,"author":{"gitId":"tanveersingh10"},"content":"        public Optional\u003cBloodType\u003e getBloodType() {","lastModifiedDate":"2023-10-12"},{"lineNumber":322,"author":{"gitId":"tanveersingh10"},"content":"            return Optional.ofNullable(bloodType);","lastModifiedDate":"2023-10-12"},{"lineNumber":323,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":324,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":325,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":335,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":336,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":337,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":359,"author":{"gitId":"kohkaijie"},"content":"                    \u0026\u0026 Objects.equals(gender, otherEditPersonDescriptor.gender)","lastModifiedDate":"2023-10-04"},{"lineNumber":360,"author":{"gitId":"kohkaijie"},"content":"                    \u0026\u0026 Objects.equals(ic, otherEditPersonDescriptor.ic)","lastModifiedDate":"2023-10-04"},{"lineNumber":361,"author":{"gitId":"tanveersingh10"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2023-10-12"},{"lineNumber":362,"author":{"gitId":"tanveersingh10"},"content":"                    \u0026\u0026 Objects.equals(condition, otherEditPersonDescriptor.condition)","lastModifiedDate":"2023-10-12"},{"lineNumber":363,"author":{"gitId":"tanveersingh10"},"content":"                    \u0026\u0026 Objects.equals(bloodType, otherEditPersonDescriptor.bloodType)","lastModifiedDate":"2023-10-15"},{"lineNumber":364,"author":{"gitId":"tanveersingh10"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditPersonDescriptor.remark);","lastModifiedDate":"2023-10-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":374,"author":{"gitId":"kohkaijie"},"content":"                    .add(\"gender\", gender)","lastModifiedDate":"2023-10-04"},{"lineNumber":375,"author":{"gitId":"kohkaijie"},"content":"                    .add(\"nric\", ic)","lastModifiedDate":"2023-10-04"},{"lineNumber":376,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":377,"author":{"gitId":"tanveersingh10"},"content":"                    .add(\"condition\", condition)","lastModifiedDate":"2023-10-08"},{"lineNumber":378,"author":{"gitId":"tanveersingh10"},"content":"                    .add(\"blood type\", bloodType)","lastModifiedDate":"2023-10-12"},{"lineNumber":379,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tanveersingh10":84,"kohkaijie":50,"cmHuang777":21,"Mohammed-Faizzzz":3,"-":224}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"        // combine doctor list and patient list","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        List\u003cPerson\u003e combinedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        combinedList.addAll(model.getFilteredDoctorList());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        combinedList.addAll(model.getFilteredPatientList());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, combinedList.size()));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"cmHuang777":6,"Mohammed-Faizzzz":3,"-":54,"chonguschonguschongus":3}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * The RemarkCommand class represents a command in a software application for editing remarks associated with persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * This command allows the user to add or update a remark for a person identified by their index number in the last","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * person listing. If a remark already exists for the person, it will be overwritten by the new input remark.","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * If the remark input is empty, the existing remark for the person can be removed.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"    private final Index index;","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"    private final Remark remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"     * @param index  of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"        // combine doctor list and patient list","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        List\u003cPerson\u003e lastShownList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        lastShownList.addAll(model.getFilteredDoctorList());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        lastShownList.addAll(model.getFilteredPatientList());","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"kohkaijie"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"kohkaijie"},"content":"                personToEdit.getAddress(), remark, personToEdit.getGender(),","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"kohkaijie"},"content":"                personToEdit.getIc(), personToEdit.getTags());","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"kohkaijie"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"kohkaijie"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"kohkaijie"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"kohkaijie"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"kohkaijie"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"kohkaijie"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"kohkaijie"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"kohkaijie"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"kohkaijie"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"kohkaijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"kohkaijie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"kohkaijie"},"content":"            return true;","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"kohkaijie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"kohkaijie"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"kohkaijie"},"content":"            return false;","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"kohkaijie"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"kohkaijie"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"kohkaijie":83,"cmHuang777":3,"Mohammed-Faizzzz":12}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Mohammed-Faizzzz":1,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"                        PREFIX_REMARK, PREFIX_GENDER, PREFIX_NRIC);","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER,","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"                PREFIX_NRIC)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"                PREFIX_GENDER, PREFIX_NRIC);","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"        Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, gender, ic, tagList);","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kohkaijie":16,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * Parses input arguments and creates a new AddDoctorCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class AddDoctorCommandParser implements Parser\u003cAddDoctorCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @param userInput input entered by user","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public AddDoctorCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        PREFIX_TAG, PREFIX_REMARK, PREFIX_GENDER, PREFIX_NRIC);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER,","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                PREFIX_NRIC)","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                PREFIX_GENDER, PREFIX_NRIC);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor doctor \u003d new Doctor(name, phone, email, address, remark, gender, ic, tagList);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return new AddDoctorCommand(doctor);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Mohammed-Faizzzz":75}},{"path":"src/main/java/seedu/address/logic/parser/AddPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"public class AddPatientCommandParser implements Parser\u003cAddPatientCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPatientCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"     * and returns an AddPatientCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"    public AddPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"                        PREFIX_REMARK, PREFIX_GENDER, PREFIX_NRIC, PREFIX_CONDITION, PREFIX_BLOODTYPE,","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"                        PREFIX_EMERGENCY_CONTACT);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER,","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"                PREFIX_NRIC, PREFIX_CONDITION, PREFIX_BLOODTYPE, PREFIX_EMERGENCY_CONTACT)","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"                PREFIX_GENDER, PREFIX_NRIC, PREFIX_CONDITION, PREFIX_BLOODTYPE, PREFIX_EMERGENCY_CONTACT);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        Phone emergencyContact \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"                ParserUtil.parsePhone(argMultimap.getValue(PREFIX_EMERGENCY_CONTACT).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"        Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"        BloodType bloodType \u003d ParserUtil.parseBloodType(argMultimap.getValue(PREFIX_BLOODTYPE).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"        Condition condition \u003d ParserUtil.parseCondition(argMultimap.getValue(PREFIX_CONDITION).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"        Patient patient \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"                new Patient(name, phone, emergencyContact, email, address, remark, gender, ic, condition, bloodType,","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"                        tagList);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cmHuang777":85}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        case AddDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return new AddDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        case AddPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"            return new AddPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"kohkaijie"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"kohkaijie"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kohkaijie":3,"cmHuang777":3,"Mohammed-Faizzzz":4,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"    //new prefixes for Person","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"ic/\");","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"    //specific to patient","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"    public static final Prefix PREFIX_BLOODTYPE \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"    public static final Prefix PREFIX_CONDITION \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public static final Prefix PREFIX_EMERGENCY_CONTACT \u003d new Prefix(\"ec/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"    public static final Prefix PREFIX_DOCTOR \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"    //specific to doctor","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"    public static final Prefix PREFIX_PATIENTS \u003d new Prefix(\"pts/\");","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanveersingh10":1,"kohkaijie":13,"cmHuang777":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"            Ic ic \u003d ParserUtil.parseIc(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"            return new DeleteCommand(ic);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kohkaijie":3,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"                        PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_GENDER, PREFIX_NRIC, PREFIX_TAG,","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"                        PREFIX_BLOODTYPE, PREFIX_CONDITION, PREFIX_EMERGENCY_CONTACT);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"        Ic nric;","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"            nric \u003d ParserUtil.parseIc(argMultimap.getPreamble());","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_NRIC,","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"                PREFIX_GENDER, PREFIX_BLOODTYPE, PREFIX_CONDITION, PREFIX_DOCTOR, PREFIX_EMERGENCY_CONTACT);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"kohkaijie"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"kohkaijie"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"kohkaijie"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"kohkaijie"},"content":"            editPersonDescriptor.setIc(ParserUtil.parseIc(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"        if (argMultimap.getValue(PREFIX_CONDITION).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"            editPersonDescriptor.setCondition(ParserUtil.parseCondition(argMultimap.getValue(PREFIX_CONDITION).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"        if (argMultimap.getValue(PREFIX_BLOODTYPE).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"            editPersonDescriptor.setBloodType(ParserUtil.parseBloodType(argMultimap.getValue(PREFIX_BLOODTYPE).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"        if (argMultimap.getValue(PREFIX_EMERGENCY_CONTACT).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"            editPersonDescriptor.setEmergencyContact(ParserUtil.parsePhone(argMultimap","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"                    .getValue(PREFIX_EMERGENCY_CONTACT).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"        // make it pass a 3rd argument on whether doctor or patient","lastModifiedDate":"2023-09-30"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"        return new EditCommand(nric, editPersonDescriptor);","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanveersingh10":32,"kohkaijie":7,"-":79}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"        return new FindCommand(KeywordParser.parseInput(keywords));","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":28,"chonguschonguschongus":2}},{"path":"src/main/java/seedu/address/logic/parser/KeywordParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.GenderPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.IcContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":" * Parses user input to generate corresponding predicate.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"public class KeywordParser {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"     * Parses the given {@code String[]} of argument and returns","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"     * a Predicate that tests the given attribute.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    public static Predicate\u003cPerson\u003e parseInput(String[] input) {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"        Pattern nricPattern \u003d Pattern.compile(\"^[ST]\\\\d{7}[A-Z]$\");","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"        Pattern genderPattern \u003d Pattern.compile(\"^([MF])$\");","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"        Matcher genderMatcher \u003d genderPattern.matcher(input[0]);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        Matcher nricMatcher \u003d nricPattern.matcher(input[0]);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        if (nricMatcher.matches()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"            return new IcContainsKeywordsPredicate(input[0]);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"        } else if (genderMatcher.matches()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"            return new GenderPredicate(input[0]);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"            return new NameContainsKeywordsPredicate(Arrays.asList(input));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"chonguschonguschongus":36}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"    public static final String MESSAGE_INVALID_NRIC \u003d \"Invalid NRIC.\";","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"    public static final int SG_NRIC_LENGTH \u003d 9;","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":108,"author":{"gitId":"kohkaijie"},"content":"     * Parses a {@code String ic} into an {@code Ic}.","lastModifiedDate":"2023-10-01"},{"lineNumber":109,"author":{"gitId":"kohkaijie"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"kohkaijie"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":111,"author":{"gitId":"kohkaijie"},"content":"     * @throws ParseException if the given {@code ic} is invalid.","lastModifiedDate":"2023-10-01"},{"lineNumber":112,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":113,"author":{"gitId":"kohkaijie"},"content":"    public static Ic parseIc(String ic) throws ParseException {","lastModifiedDate":"2023-10-01"},{"lineNumber":114,"author":{"gitId":"kohkaijie"},"content":"        requireNonNull(ic);","lastModifiedDate":"2023-10-01"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"        String trimmedIc \u003d ic.trim().toUpperCase();","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"kohkaijie"},"content":"        if (!Ic.isValidIc(trimmedIc)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":117,"author":{"gitId":"kohkaijie"},"content":"            throw new ParseException(Ic.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-01"},{"lineNumber":118,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":119,"author":{"gitId":"kohkaijie"},"content":"        return new Ic(trimmedIc);","lastModifiedDate":"2023-10-01"},{"lineNumber":120,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":122,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"kohkaijie"},"content":"     * Parses a {@code String gender} into an {@code Gender}.","lastModifiedDate":"2023-10-01"},{"lineNumber":124,"author":{"gitId":"kohkaijie"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-01"},{"lineNumber":125,"author":{"gitId":"kohkaijie"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":126,"author":{"gitId":"kohkaijie"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-10-01"},{"lineNumber":127,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":128,"author":{"gitId":"kohkaijie"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-10-01"},{"lineNumber":129,"author":{"gitId":"kohkaijie"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-01"},{"lineNumber":130,"author":{"gitId":"kohkaijie"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-10-01"},{"lineNumber":131,"author":{"gitId":"kohkaijie"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":132,"author":{"gitId":"kohkaijie"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-01"},{"lineNumber":133,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":134,"author":{"gitId":"kohkaijie"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-10-01"},{"lineNumber":135,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":136,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"cmHuang777"},"content":"     * Parses a {@code String bloodtype} into a {@code BloodType}.","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"cmHuang777"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"cmHuang777"},"content":"     * @throws ParseException if the given {@code bloodtype} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"cmHuang777"},"content":"    public static BloodType parseBloodType(String bloodType) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"cmHuang777"},"content":"        String trimmedTag \u003d bloodType.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"cmHuang777"},"content":"        if (!BloodType.isValidBloodType(trimmedTag)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"cmHuang777"},"content":"            throw new ParseException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"cmHuang777"},"content":"        return new BloodType(trimmedTag);","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"cmHuang777"},"content":"     * Parses a {@code String condition} into a {@code Condition}.","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"cmHuang777"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"cmHuang777"},"content":"     * @throws ParseException if the given {@code condition} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"cmHuang777"},"content":"    public static Condition parseCondition(String condition) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(condition);","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"tanveersingh10"},"content":"        String trimmedCondition \u003d condition.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"tanveersingh10"},"content":"        if (!Condition.isValidCondition(trimmedCondition)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"cmHuang777"},"content":"            throw new ParseException(Condition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"tanveersingh10"},"content":"        return new Condition(trimmedCondition);","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"tanveersingh10"},"content":"     * Parses {@code String remark} into a {@code Remark}.","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"cmHuang777"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"cmHuang777"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"tanveersingh10"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"tanveersingh10"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"tanveersingh10"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanveersingh10":16,"kohkaijie":29,"cmHuang777":33,"Mohammed-Faizzzz":2,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * The DeleteCommandParser class is responsible for parsing user input and creating a DeleteCommand object","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * to represent the user\u0027s request to delete a record. It interprets the provided input arguments and converts them","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * into a valid DeleteCommand.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @param args The user input string containing the details for deleting a record.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @return A DeleteCommand object representing the user\u0027s request to delete a record.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @throws ParseException If the user input does not conform to the expected format.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"                PREFIX_REMARK);","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"        Index index;","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"        String remarkString \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"        Remark remark \u003d new Remark(remarkString);","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"kohkaijie":29,"Mohammed-Faizzzz":16}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.UniqueDoctorList;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.UniquePatientList;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final UniqueDoctorList doctors;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctors \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"     * Replaces the contents of the patient list with {@code patients}.","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Replaces the contents of the doctors list with {@code doctors}.","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * {@code doctors} must not contain duplicate persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setDoctors(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.doctors.setDoctors(doctors);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        setDoctors(newData.getDoctorList());","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"        // return in patients list or in doctor list","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns true if a doctor with the same identity as {@code doctor} exists in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return doctors.contains(doctor);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"     * The patient must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"        patients.add(p);","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Adds a doctor to the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * The doctor must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void addDoctor(Doctor d) {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctors.add(d);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"     * Replaces the given patients {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"    public void setPatient(Patient target, Patient editedPerson) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"        patients.setPatient(target, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireNonNull(editedDoctor);","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctors.setDoctor(target, editedDoctor);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"cmHuang777"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cmHuang777"},"content":"        if (patients.contains(key)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"cmHuang777"},"content":"            patients.remove(key);","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void removeDoctor(Doctor key) {","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (doctors.contains(key)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            doctors.remove(key);","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String toString() { //not sure how to modify this","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"cmHuang777"},"content":"                .add(\"patients\", patients)","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"tanveersingh10"},"content":"                .add(\"doctors\", doctors)","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"cmHuang777"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"cmHuang777"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":165,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return doctors.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return patients.equals(otherAddressBook.patients)","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u0026\u0026 doctors.equals((otherAddressBook.doctors));","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"cmHuang777"},"content":"        return patients.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanveersingh10":1,"cmHuang777":31,"Mohammed-Faizzzz":43,"-":116}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    Predicate\u003cDoctor\u003e PREDICATE_SHOW_ALL_DOCTORS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns an unmodifiable view of the filtered doctor list","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cmHuang777":2,"Mohammed-Faizzzz":8,"-":88}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final FilteredList\u003cDoctor\u003e filteredDoctors;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        filteredDoctors \u003d new FilteredList\u003c\u003e(this.addressBook.getDoctorList());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPatientList());","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"cmHuang777"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"            return addressBook.hasPatient((Patient) person);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } else if (person instanceof Doctor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return addressBook.hasDoctor((Doctor) person);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"cmHuang777"},"content":"        if (target instanceof Patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"            addressBook.removePatient((Patient) target);","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } else if (target instanceof Doctor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            addressBook.removeDoctor((Doctor) target);","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"cmHuang777"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"            addressBook.addPatient((Patient) person);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } else if (person instanceof Doctor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            addressBook.addDoctor((Doctor) person);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":128,"author":{"gitId":"cmHuang777"},"content":"        if (target instanceof Patient \u0026\u0026 editedPerson instanceof Patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"cmHuang777"},"content":"            addressBook.setPatient((Patient) target, (Patient) editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } else if (target instanceof Doctor \u0026\u0026 editedPerson instanceof Doctor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            addressBook.setDoctor((Doctor) target, (Doctor) editedPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return null;","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"cmHuang777"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"cmHuang777"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"cmHuang777"},"content":"        return filteredPatients;","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns an unmodifiable view of the filtered doctor list","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return filteredDoctors;","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"cmHuang777"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        filteredDoctors.setPredicate(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u0026\u0026 filteredDoctors.equals(otherModelManager.filteredDoctors)","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"cmHuang777"},"content":"            \u0026\u0026 filteredPatients.equals(otherModelManager.filteredPatients);","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cmHuang777":21,"Mohammed-Faizzzz":25,"-":140}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns an unmodifiable view of the doctors list.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    ObservableList\u003cDoctor\u003e getDoctorList();","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cmHuang777":2,"Mohammed-Faizzzz":3,"-":12}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kohkaijie":1,"-":64}},{"path":"src/main/java/seedu/address/model/person/BloodType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":" * Represents a Person\u0027s blood type in the address book.","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBloodType(String)}","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"public class BloodType {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"            \"A blood type should only be of the following valid types: A+, A-, B+, B-, AB+, AB-, O+, and O-.\";","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"    /*","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(A\\\\+|A\\\\-|B\\\\+|B\\\\-|AB\\\\+|AB\\\\-|O\\\\+|O\\\\-)$\";","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"    public final String value;","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"     * Constructs a {@code BloodType}.","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"     * @param bloodType A valid blood type.","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"    public BloodType(String bloodType) {","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"        checkArgument(isValidBloodType(bloodType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"        value \u003d bloodType;","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"     * Returns true if a given string is a valid blood type.","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"    public static boolean isValidBloodType(String test) {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"    public String toString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"        return value;","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"kohkaijie"},"content":"        if (!(other instanceof BloodType)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"kohkaijie"},"content":"        BloodType otherBloodType \u003d (BloodType) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"        return value.equals(otherBloodType.value);","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"kohkaijie"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"kohkaijie":67}},{"path":"src/main/java/seedu/address/model/person/Condition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":" * Represents a Person\u0027s condition in the condition book.","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCondition(String)}","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"public class Condition {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"A condition can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":"    /*","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"     * The first character of the condition must not be a whitespace,","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"    public final String value;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"     * Constructs an {@code Condition}.","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"     * @param condition A valid condition.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    public Condition(String condition) {","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"        requireNonNull(condition);","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"        checkArgument(isValidCondition(condition), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"        value \u003d condition;","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"     * Returns true if a given string is a valid condition.","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"    public static boolean isValidCondition(String test) {","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"    public String toString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"        return value;","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"        if (!(other instanceof Condition)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"        Condition otherCondition \u003d (Condition) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"        return value.equals(otherCondition.value);","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"kohkaijie":66}},{"path":"src/main/java/seedu/address/model/person/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * Represents a Doctor in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class Doctor extends Person {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003cPatient\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Doctor(Name name, Phone phone, Email email, Address address, Remark remark, Gender gender,","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                  Ic ic, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        super(name, phone, email, address, remark, gender, ic, tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Retrieves the list of patients stored in this medical facility.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @return An ArrayList containing the patients currently registered in the facility.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public ArrayList\u003cPatient\u003e getPatients() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return patients;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Adds a new patient to the medical facility\u0027s list of patients.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @param patient The Patient object representing the individual to be added.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.patients.add(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor otherDoctor \u003d (Doctor) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return name.equals(otherDoctor.name)","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u0026\u0026 phone.equals(otherDoctor.phone)","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u0026\u0026 email.equals(otherDoctor.email)","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u0026\u0026 address.equals(otherDoctor.address)","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u0026\u0026 gender.equals(otherDoctor.gender)","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u0026\u0026 ic.equals(otherDoctor.ic)","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u0026\u0026 tags.equals(otherDoctor.tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u0026\u0026 patients.equals(otherDoctor.patients);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return Objects.hash(name, phone, email, address, gender, ic, tags, patients);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"address\", address)","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"gender\", gender)","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"nric\", ic)","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"patients\", patients)","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Mohammed-Faizzzz":89}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":" * Represents a Person\u0027s gender in the address book.","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"public class Gender {","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender should only be M for Male or F for Female\";","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(M|F)$\";","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"    public final String value;","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"        value \u003d gender;","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    public String toString() {","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"        return value;","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"            return true;","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"        if (!(other instanceof Gender)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"            return false;","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"        Gender otherGender \u003d (Gender) other;","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"        return value.equals(otherGender.value);","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"kohkaijie"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"tanveersingh10":1,"kohkaijie":58}},{"path":"src/main/java/seedu/address/model/person/GenderPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" * Tests that a {@code Person}\u0027s {@code Gender} matches either male or female.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"public class GenderPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"    private final String keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    public GenderPredicate(String keywords) {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"        return keywords.equalsIgnoreCase(person.getGender().toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!(other instanceof GenderPredicate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"        GenderPredicate otherGenderPredicate \u003d (GenderPredicate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        return keywords.equals(otherGenderPredicate.keywords);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"chonguschonguschongus":41}},{"path":"src/main/java/seedu/address/model/person/Ic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":" * Represents a Person\u0027s nric in the address book.","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidIc(String)}","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"public class Ic {","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \"Ic should start with S or T, followed by 7 numbers, and ends with a letter. \"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    + \"Letters must be in all caps. Empty strings are not allowed\\n\";","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[TS]\\\\d{7}[A-Z]$\";","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"    public final String value;","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"     * Constructs a {@code Ic}.","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"     *","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"     * @param ic A valid ic.","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"    public Ic(String ic) {","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"        requireNonNull(ic);","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"        checkArgument(isValidIc(ic), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"        value \u003d ic;","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"     * Returns true if a given string is a valid nric.","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"    public static boolean isValidIc(String test) {","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"    public String toString() {","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"        return value;","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"            return true;","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"        if (!(other instanceof Ic)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"            return false;","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"        Ic otherIc \u003d (Ic) other;","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"kohkaijie"},"content":"        return value.equals(otherIc.value);","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"kohkaijie"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"kohkaijie":61,"Mohammed-Faizzzz":2}},{"path":"src/main/java/seedu/address/model/person/IcContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" * Tests that a {@code Person}\u0027s {@code Ic} matches any of the keywords given.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"public class IcContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"    private final String keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    public IcContainsKeywordsPredicate(String keywords) {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"        return keywords.equalsIgnoreCase(person.getIc().toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!(other instanceof IcContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate otherIcContainsKeywordsPredicate \u003d (IcContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        return keywords.equals(otherIcContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":33,"chonguschonguschongus":8}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":" * Tests that a {@code Person}\u0027s {@code Ic} matches any of the keywords given.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().toString(), keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"-":42,"chonguschonguschongus":2}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"    // Patient specific fields","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"    private final Condition condition;","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"    private final BloodType bloodType;","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"    //private final Doctor doctor;    to be implemented after Doctor class created","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    private Phone emergencyContact;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    public Patient(Name name, Phone phone, Phone emergencyContact, Email email, Address address, Remark remark,","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"                   Gender gender, Ic ic, Condition condition, BloodType bloodType, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"        super(name, phone, email, address, remark, gender, ic, tags);","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"        requireAllNonNull(condition, bloodType);","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"        this.condition \u003d condition;","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"        this.emergencyContact \u003d emergencyContact;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"    public Condition getCondition() {","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"        return condition;","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"    public BloodType getBloodType() {","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"        return bloodType;","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"    public Phone getEmergencyContact() {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"        return emergencyContact;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"kohkaijie"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"        return name.equals(otherPatient.name)","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 phone.equals(otherPatient.phone)","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"                \u0026\u0026 emergencyContact.equals(otherPatient.emergencyContact)","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 email.equals(otherPatient.email)","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 address.equals(otherPatient.address)","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 gender.equals(otherPatient.gender)","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 ic.equals(otherPatient.ic)","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 tags.equals(otherPatient.tags)","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 condition.equals(otherPatient.condition)","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 bloodType.equals(otherPatient.bloodType);","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"kohkaijie"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"kohkaijie"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"kohkaijie"},"content":"        return Objects.hash(name, phone, email, address, gender, ic, condition, bloodType, tags);","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"kohkaijie"},"content":"    public String toString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"kohkaijie"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"kohkaijie"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"kohkaijie"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"                .add(\"emergency contact\", emergencyContact)","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kohkaijie"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"kohkaijie"},"content":"                .add(\"address\", address)","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"kohkaijie"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"kohkaijie"},"content":"                .add(\"gender\", gender)","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"kohkaijie"},"content":"                .add(\"nric\", ic)","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"kohkaijie"},"content":"                .add(\"condition\", condition)","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"kohkaijie"},"content":"                .add(\"bloodType\", bloodType)","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"kohkaijie"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"kohkaijie"},"content":"                .toString();","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"kohkaijie":88,"cmHuang777":11}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"    protected final Name name;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"    protected final Phone phone;","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"    protected final Email email;","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"    protected final Gender gender;","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"    protected final Ic ic;","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    protected final Address address;","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"    protected final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"    protected final Remark remark;","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Gender gender, Ic ic,","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"                  Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"        requireAllNonNull(name, phone, email, address, gender, ic, tags);","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"        this.ic \u003d ic;","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"kohkaijie"},"content":"        return remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"kohkaijie"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-10-01"},{"lineNumber":68,"author":{"gitId":"kohkaijie"},"content":"        return gender;","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"kohkaijie"},"content":"    public Ic getIc() {","lastModifiedDate":"2023-10-01"},{"lineNumber":72,"author":{"gitId":"kohkaijie"},"content":"        return ic;","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":74,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"     * Returns true if both persons have the same IC.","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 otherPerson.getIc().equals(getIc());","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 gender.equals(otherPerson.gender)","lastModifiedDate":"2023-10-01"},{"lineNumber":117,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 ic.equals(otherPerson.ic)","lastModifiedDate":"2023-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"kohkaijie"},"content":"        return Objects.hash(name, phone, email, address, gender, ic, tags);","lastModifiedDate":"2023-10-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"kohkaijie"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-01"},{"lineNumber":135,"author":{"gitId":"kohkaijie"},"content":"                .add(\"gender\", gender)","lastModifiedDate":"2023-10-01"},{"lineNumber":136,"author":{"gitId":"kohkaijie"},"content":"                .add(\"nric\", ic)","lastModifiedDate":"2023-10-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kohkaijie":33,"cmHuang777":1,"-":107}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"public class Remark {","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remark should be non-empty\";","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"    public final String value;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Creates a Remark object with the specified remark value.","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @param remark The remark string to be associated with the person.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @throws NullPointerException if the provided remark is null.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"        value \u003d remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"    public String toString() {","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"        return value;","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"    @Override","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"        return value.hashCode();","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"tanveersingh10":2,"kohkaijie":33,"Mohammed-Faizzzz":6}},{"path":"src/main/java/seedu/address/model/person/UniqueDoctorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":" *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":" *","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class UniqueDoctorList implements Iterable\u003cDoctor\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final ObservableList\u003cDoctor\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final ObservableList\u003cDoctor\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean contains(Doctor toCheck) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void add(Doctor toAdd) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Replaces the doctor {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setDoctor(Doctor target, Doctor editedPerson) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void remove(Doctor toRemove) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setDoctors(UniqueDoctorList replacement) {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setDoctors(List\u003cDoctor\u003e persons) {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public ObservableList\u003cDoctor\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Iterator\u003cDoctor\u003e iterator() {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"        if (!(other instanceof UniqueDoctorList)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"tanveersingh10"},"content":"        UniqueDoctorList otherUniqueDoctorList \u003d (UniqueDoctorList) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"        // Check if both lists are of the same size","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"        if (this.internalList.size() !\u003d otherUniqueDoctorList.internalList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"tanveersingh10"},"content":"        // Compare individual doctors in the lists","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"tanveersingh10"},"content":"        for (int i \u003d 0; i \u003c this.internalList.size(); i++) {","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"            if (!this.internalList.get(i).equals(otherUniqueDoctorList.internalList.get(i))) {","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"tanveersingh10"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"tanveersingh10"},"content":"        return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private boolean personsAreUnique(List\u003cDoctor\u003e persons) {","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"tanveersingh10":17,"Mohammed-Faizzzz":146}},{"path":"src/main/java/seedu/address/model/person/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":" *","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    protected final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"    protected final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"    public void setPatient(Patient target, Patient editedPerson) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"    public void setPatients(List\u003cPatient\u003e persons) {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"cmHuang777"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"cmHuang777"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"cmHuang777"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"cmHuang777"},"content":"        if (!(other instanceof UniquePatientList)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"cmHuang777"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"cmHuang777"},"content":"        UniquePatientList otherUniquePatientList \u003d (UniquePatientList) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"        if (this.internalList.size() !\u003d otherUniquePatientList.internalList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"tanveersingh10"},"content":"        // Compare individual patients in the lists","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"tanveersingh10"},"content":"        for (int i \u003d 0; i \u003c this.internalList.size(); i++) {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"tanveersingh10"},"content":"            if (!this.internalList.get(i).equals(otherUniquePatientList.internalList.get(i))) {","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"tanveersingh10"},"content":"        return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"cmHuang777"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"cmHuang777"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"cmHuang777"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"cmHuang777"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"cmHuang777"},"content":"    protected boolean personsAreUnique(List\u003cPatient\u003e persons) {","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"cmHuang777"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"cmHuang777"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"cmHuang777"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"cmHuang777"},"content":"                    return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"cmHuang777"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"cmHuang777"},"content":"        return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"tanveersingh10":12,"cmHuang777":149}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    protected final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"    protected final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"cmHuang777"},"content":"    protected boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cmHuang777":4,"-":146}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    // persons should not be used anymore","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"        return new Patient[] {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"            new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"                    new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"                    EMPTY_REMARK, new Gender(\"M\"), new Ic(\"S1111111Z\"), new Condition(\"Unknown\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"                    new BloodType(\"O+\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"            new Patient(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"                    new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"                    EMPTY_REMARK, new Gender(\"F\"), new Ic(\"S1111112Z\"), new Condition(\"Unknown\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"                    new BloodType(\"O+\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"                    new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"                    EMPTY_REMARK, new Gender(\"F\"), new Ic(\"S1111113Z\"), new Condition(\"Unknown\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"                    new BloodType(\"O+\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"            new Patient(new Name(\"David Li\"), new Phone(\"91031282\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"                    new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"                    EMPTY_REMARK, new Gender(\"M\"), new Ic(\"S1111114Z\"), new Condition(\"Unknown\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"                    new BloodType(\"O+\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"                    new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"                    new Gender(\"M\"), new Ic(\"S1111115Z\"), new Condition(\"Unknown\"), new BloodType(\"O+\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"                    new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"                    new Gender(\"M\"), new Ic(\"S1111116Z\"), new Condition(\"Unknown\"), new BloodType(\"O+\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static Doctor[] getSampleDoctors() {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return new Doctor[] {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            new Doctor(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK, new Gender(\"M\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    new Ic(\"S1111111Z\"), getTagSet(\"friends\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            new Doctor(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK, new Gender(\"F\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        new Ic(\"S1111112Z\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            new Doctor(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK, new Gender(\"F\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    new Ic(\"S1111113Z\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            new Doctor(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK, new Gender(\"M\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        new Ic(\"S1111114Z\"), getTagSet(\"family\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            new Doctor(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK, new Gender(\"M\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    new Ic(\"S1111115Z\"), getTagSet(\"classmates\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            new Doctor(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK, new Gender(\"M\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    new Ic(\"S1111116Z\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"        for (Patient samplePatient : getSamplePatients()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"            sampleAb.addPatient(samplePatient);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static ReadOnlyAddressBook getSampleDoctorsAddressBook() {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        for (Doctor sampleDoctor : getSampleDoctors()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            sampleAb.addDoctor(sampleDoctor);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kohkaijie":7,"cmHuang777":32,"Mohammed-Faizzzz":28,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDoctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * Jackson-friendly version of {@link Doctor}.","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class JsonAdaptedDoctor {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final String name;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final String phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final String email;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final String address;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final String remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final String gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final String ic;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public JsonAdaptedDoctor(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                             @JsonProperty(\"remark\") String remark, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                             @JsonProperty(\"nric\") String ic, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.ic \u003d ic;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public JsonAdaptedDoctor(Person source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ic \u003d source.getIc().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Doctor toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final List\u003cTag\u003e doctorTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            doctorTags.add(tag.toModelType());","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (ic \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Ic.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (!Ic.isValidIc(ic)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new IllegalValueException(Ic.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final Ic modelIc \u003d new Ic(ic);","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(doctorTags);","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return new Doctor(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelGender, modelIc,","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                modelTags);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Mohammed-Faizzzz":145}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"class JsonAdaptedPatient extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"    private final String emergencyContact;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    private final String condition;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    private final String bloodType;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given person details.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"                              @JsonProperty(\"remark\") String remark, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"                              @JsonProperty(\"ic\") String ic, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"                              @JsonProperty(\"condition\") String condition, @JsonProperty(\"bloodType\") String bloodType,","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"                              @JsonProperty(\"emergencyContact\") String emergencyContact) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"        super(name, phone, email, address, remark, gender, ic, tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"        this.condition \u003d condition;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"        this.emergencyContact \u003d emergencyContact;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"        super(source);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"        this.emergencyContact \u003d source.getEmergencyContact().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"        this.bloodType \u003d source.getBloodType().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"        this.condition \u003d source.getCondition().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"        Person p \u003d super.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        final Phone modelEmergencyContact \u003d checkEmergencyContact();","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        final Condition modelCondition \u003d checkCondition();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"        final BloodType modelBloodType \u003d checkBloodType();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"        return new Patient(p.getName(), p.getPhone(), modelEmergencyContact, p.getEmail(), p.getAddress(),","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"                p.getRemark(), p.getGender(), p.getIc(), modelCondition, modelBloodType, p.getTags());","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"     * Checks the emergency contact given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid Phone object.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if emergency contact is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"    private Phone checkEmergencyContact() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"        if (emergencyContact \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"        if (!Phone.isValidPhone(emergencyContact)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"        return new Phone(emergencyContact);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"     * Checks the condition given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid Condition object.","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if condition is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"    private Condition checkCondition() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"        if (condition \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Condition.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"        if (!Condition.isValidCondition(condition)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"cmHuang777"},"content":"            throw new IllegalValueException(Condition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"        return new Condition(condition);","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"     * Checks the bloodType given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid bloodType object.","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if bloodType is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"cmHuang777"},"content":"    private BloodType checkBloodType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"        if (bloodType \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, BloodType.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"        if (!BloodType.isValidBloodType(bloodType)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"cmHuang777"},"content":"            throw new IllegalValueException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"        return new BloodType(bloodType);","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cmHuang777":118}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    private final String remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"    private final String gender;","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"    private final String ic;","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"                             @JsonProperty(\"remark\") String remark, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"                             @JsonProperty(\"ic\") String ic, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"        this.ic \u003d ic;","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"kohkaijie"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"kohkaijie"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"kohkaijie"},"content":"        ic \u003d source.getIc().value;","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"        final Name modelName \u003d checkName();","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"        final Phone modelPhone \u003d checkPhone();","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"        final Email modelEmail \u003d checkEmail();","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"        final Address modelAddress \u003d checkAddress();","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"        final Remark modelRemark \u003d checkRemark();","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"        final Gender modelGender \u003d checkGender();","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"        final Ic modelIc \u003d checkIc();","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelGender, modelIc,","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"                modelTags);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"     * Checks the name given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid name object.","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if name is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"    private Name checkName() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"        return new Name(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"cmHuang777"},"content":"     * Checks the phone given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid phone object.","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if phone is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"cmHuang777"},"content":"    private Phone checkPhone() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"cmHuang777"},"content":"        return new Phone(phone);","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"cmHuang777"},"content":"     * Checks the email given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid email object.","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if email is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"cmHuang777"},"content":"    private Email checkEmail() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"cmHuang777"},"content":"        return new Email(email);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"cmHuang777"},"content":"     * Checks the address given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid address","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if address is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"cmHuang777"},"content":"    private Address checkAddress() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"cmHuang777"},"content":"        return new Address(address);","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"cmHuang777"},"content":"     * Checks the remark given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid remark","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if remark is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"cmHuang777"},"content":"    private Remark checkRemark() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"kohkaijie"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-09-26"},{"lineNumber":169,"author":{"gitId":"kohkaijie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-09-26"},{"lineNumber":170,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":171,"author":{"gitId":"cmHuang777"},"content":"        return new Remark(remark);","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":174,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"cmHuang777"},"content":"     * Checks the gender given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid gender","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if gender is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"cmHuang777"},"content":"    private Gender checkGender() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"kohkaijie"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"kohkaijie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-05"},{"lineNumber":183,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":184,"author":{"gitId":"kohkaijie"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"kohkaijie"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":187,"author":{"gitId":"cmHuang777"},"content":"        return new Gender(gender);","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"cmHuang777"},"content":"     * Checks the ic given by storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"cmHuang777"},"content":"     * @return a valid ic","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"cmHuang777"},"content":"     * @throws IllegalValueException if ic is not valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"cmHuang777"},"content":"    private Ic checkIc() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"kohkaijie"},"content":"        if (ic \u003d\u003d null) {","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"kohkaijie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Ic.class.getSimpleName()));","lastModifiedDate":"2023-10-05"},{"lineNumber":199,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"kohkaijie"},"content":"        if (!Ic.isValidIc(ic)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"kohkaijie"},"content":"            throw new IllegalValueException(Ic.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"cmHuang777"},"content":"        return new Ic(ic);","lastModifiedDate":"2023-10-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":206,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kohkaijie":26,"cmHuang777":76,"Mohammed-Faizzzz":3,"-":103}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"Doctors list contains duplicate doctor(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patients list contains duplicate patient(s).\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final List\u003cJsonAdaptedDoctor\u003e doctors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients,","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                                       @JsonProperty(\"doctors\") List\u003cJsonAdaptedDoctor\u003e doctors) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.doctors.addAll(doctors);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctors.addAll(source.getDoctorList().stream().map(JsonAdaptedDoctor::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : patients) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"            if (addressBook.hasPatient(patient)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"            addressBook.addPatient(patient);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        for (JsonAdaptedDoctor jsonAdaptedDoctor : doctors) {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            Doctor doctor \u003d jsonAdaptedDoctor.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            if (addressBook.hasDoctor(doctor)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            addressBook.addDoctor(doctor);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cmHuang777":8,"Mohammed-Faizzzz":14,"-":50}},{"path":"src/main/java/seedu/address/ui/DoctorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * An UI component that displays information of a {@code Doctor}.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class DoctorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private static final String FXML \u003d \"DoctorListCard.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public final Doctor doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Label name;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Label id;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Label phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Label address;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Label email;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Label remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Label gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Label nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Creates a {@code DoctorCode} with the given {@code Doctor} and index to display.","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorCard(Doctor doctor, int displayedIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"        name.setText(doctor.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        phone.setText(\"Phone Number: \" + doctor.getPhone().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        address.setText(\"Address: \" + doctor.getAddress().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        email.setText(\"Email: \" + doctor.getEmail().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        remark.setText(\"Remarks: \" + doctor.getRemark().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        gender.setText(\"Gender: \" + doctor.getGender().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        nric.setText(\"NRIC: \" + doctor.getIc().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctor.getTags().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kohkaijie":1,"Mohammed-Faizzzz":67}},{"path":"src/main/java/seedu/address/ui/DoctorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * Panel containing the list of doctors.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class DoctorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private static final String FXML \u003d \"DoctorListPanel.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DoctorListPanel.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private ListView\u003cDoctor\u003e doctorListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorListPanel(ObservableList\u003cDoctor\u003e doctorList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctorListView.setItems(doctorList);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctorListView.setCellFactory(listView -\u003e new DoctorListPanel.DoctorListViewCell());","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    class DoctorListViewCell extends ListCell\u003cDoctor\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        protected void updateItem(Doctor doctor, boolean empty) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            super.updateItem(doctor, empty);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            if (empty || doctor \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                setText(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                setGraphic(new DoctorCard(doctor, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Mohammed-Faizzzz":48}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private DoctorListPanel doctorListPanel;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private StackPane doctorListPanelPlaceholder;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"cmHuang777"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList());","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctorListPanel \u003d new DoctorListPanel(logic.getFilteredDoctorList());","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        doctorListPanelPlaceholder.getChildren().add(doctorListPanel.getRoot());","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"cmHuang777"},"content":"    public PatientListPanel getPatientListPanel() {","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"cmHuang777"},"content":"        return patientListPanel;","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorListPanel getDoctorListPanel() {","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return doctorListPanel;","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cmHuang777":7,"Mohammed-Faizzzz":7,"-":193}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    public final Patient person;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"    private Label name;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"    private Label id;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"    private Label phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    private Label address;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"    private Label email;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"    private Label remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"    private Label gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"    private Label nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"    private Label emergencyContact;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"    private Label condition;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"    private Label bloodType;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"    public PatientCard(Patient person, int displayedIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"        phone.setText(\"Phone Number: \" + person.getPhone().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"        remark.setText(\"Remarks: \" + person.getRemark().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"        gender.setText(\"Gender: \" + person.getGender().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"        nric.setText(\"NRIC: \" + person.getIc().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"        condition.setText(\"Condition: \" + person.getCondition().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"        bloodType.setText(\"Blood Type: \" + person.getBloodType().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"kohkaijie"},"content":"        emergencyContact.setText(\"Emergency Contact: \" + person.getEmergencyContact().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kohkaijie":2,"cmHuang777":76}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"        super(FXML);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"                setText(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cmHuang777":49}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"    @FXML","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"    private Label remark;","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"    @FXML","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"    private Label gender;","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"    @FXML","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"    private Label nric;","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"        gender.setText(person.getGender().value);","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"        nric.setText(person.getIc().value);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kohkaijie":9,"-":59}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":".label-list-header {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"    -fx-font-size: 24pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"kohkaijie"},"content":".pane-with-white-border {","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"kohkaijie"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"kohkaijie"},"content":"     -fx-border-color: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"kohkaijie"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"kohkaijie":13,"-":352}},{"path":"src/main/resources/view/DoctorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Mohammed-Faizzzz":39}},{"path":"src/main/resources/view/DoctorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"    \u003cStackPane styleClass\u003d\"pane-with-white-border\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"        \u003cLabel text\u003d\"Doctor\" styleClass\u003d\"label-list-header\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    \u003cListView fx:id\u003d\"doctorListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kohkaijie":5,"Mohammed-Faizzzz":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"                \u003cHBox styleClass\u003d\"pane-with-border\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    \u003cVBox fx:id\u003d\"patientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"                        \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    \u003cVBox fx:id\u003d\"doctorList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        \u003cStackPane fx:id\u003d\"doctorListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kohkaijie":1,"cmHuang777":1,"Mohammed-Faizzzz":10,"-":56}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"emergencyContact\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$emergencyContact\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"bloodType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$bloodType\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"condition\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$condition\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cmHuang777":42}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"    \u003cStackPane styleClass\u003d\"pane-with-white-border\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"        \u003cLabel text\u003d\"Patient\" styleClass\u003d\"label-list-header\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"    \u003c/StackPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"    \u003cListView fx:id\u003d\"patientListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"kohkaijie":5,"cmHuang777":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kohkaijie":3,"-":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSON_NOT_FOUND;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONDITION_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMERGENCY_CONTACT_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_FEMALE;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"kohkaijie"},"content":"        String deleteCommand \u003d \"delete S9999993Z\";","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"kohkaijie"},"content":"        assertCommandException(deleteCommand, MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPatientList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"kohkaijie"},"content":"        // Triggers the saveAddressBook method by executing an add patient command","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"kohkaijie"},"content":"        String addCommand \u003d AddPatientCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + CONDITION_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"kohkaijie"},"content":"                + EMERGENCY_CONTACT_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NRIC_DESC_AMY + GENDER_DESC_FEMALE","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"kohkaijie"},"content":"                + BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"kohkaijie"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"kohkaijie"},"content":"        expectedModel.addPerson(expectedPatient);","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kohkaijie":15,"cmHuang777":8,"Mohammed-Faizzzz":2,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Person validPerson \u003d new PersonBuilder().withName(\"Barry Allen\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"        Person personInList \u003d model.getAddressBook().getPatientList().get(0);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"cmHuang777":2,"Mohammed-Faizzzz":1,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.TypicalDoctor.WAYNE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class AddDoctorCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void constructor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void execute_doctorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        CommandResult commandResult \u003d new AddCommand(validDoctor).execute(modelStub);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validDoctor)),","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(Arrays.asList(validDoctor), modelStub.personsAdded);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void execute_duplicateDoctor_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddCommand addCommand \u003d new AddCommand(validDoctor);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ModelStub modelStub \u003d new ModelStubWithDoctor(validDoctor);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor bruce \u003d new DoctorBuilder().withName(\"Bruce\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor barry \u003d new DoctorBuilder().withName(\"Barry\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddCommand addBruceCommand \u003d new AddCommand(bruce);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddCommand addBarryCommand \u003d new AddCommand(barry);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertTrue(addBruceCommand.equals(addBruceCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddCommand addBruceCommandCopy \u003d new AddCommand(bruce);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertTrue(addBruceCommand.equals(addBruceCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(addBruceCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(addBruceCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(addBruceCommand.equals(addBarryCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddCommand addCommand \u003d new AddCommand(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + WAYNE + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return null; // not sure abt this method","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         * Returns an unmodifiable view of the filtered doctor list","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private class ModelStubWithDoctor extends ModelStub {","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        private final Doctor doctor;","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ModelStubWithDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public boolean hasPerson(Person doctor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return this.doctor.isSamePerson(doctor);","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            personsAdded.add(person);","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Mohammed-Faizzzz":222}},{"path":"src/test/java/seedu/address/logic/commands/AddPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"public class AddPatientCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"        CommandResult commandResult \u003d new AddCommand(validPatient).execute(modelStub);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPatient)),","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.personsAdded);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"        AddCommand addCommand \u003d new AddCommand(validPatient);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatient(validPatient);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return null; // not sure abt this method","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"cmHuang777"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         * Returns an unmodifiable view of the filtered doctor list","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return null;","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"cmHuang777"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"cmHuang777"},"content":"    private class ModelStubWithPatient extends ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"cmHuang777"},"content":"        private final Patient patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"cmHuang777"},"content":"        ModelStubWithPatient(Patient patient) {","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"cmHuang777"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"cmHuang777"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"cmHuang777"},"content":"        public boolean hasPerson(Person patient) {","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"cmHuang777"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"cmHuang777"},"content":"            return this.patient.isSamePerson(patient);","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"cmHuang777"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"cmHuang777":28,"Mohammed-Faizzzz":15,"-":179}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"cmHuang777":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_NAME_CHERYL \u003d \"Cheryl Tan\";","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_NAME_DEREK \u003d \"Derek Shepherd\";","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91234567\";","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"    public static final String VALID_PHONE_BOB \u003d \"81234567\";","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_PHONE_CHERYL \u003d \"92874563\";","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_PHONE_DEREK \u003d \"97463128\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"    public static final String VALID_EMERGENCY_CONTACT_AMY \u003d \"81234567\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"    public static final String VALID_EMERGENCY_CONTACT_BOB \u003d \"91234567\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_EMAIL_CHERYL \u003d \"cheryberry@medilink.com\";","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_EMAIL_DEREK \u003d \"mcdreamy@medilink.com\";","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_ADDRESS_CHERYL \u003d \"123 Main Street, Anytown, USA\";","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_ADDRESS_DEREK \u003d \"456 Elm Avenue, Somewhereville, Canada\";","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_GENDER_MALE \u003d \"M\";","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_GENDER_FEMALE \u003d \"F\";","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S8643226I\";","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_NRIC_BOB \u003d \"S8192320E\";","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_NRIC_CHERYL \u003d \"S9812345A\";","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_NRIC_DEREK \u003d \"S9712346B\";","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"kohkaijie"},"content":"    public static final String VALID_NRIC_ALICE \u003d \"T0131267K\";","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_REMARK_AMY \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String VALID_REMARK_BOB \u003d \"He likes football.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"    public static final String VALID_CONDITION_BOB \u003d \"Pneumothorax\";","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"    public static final String VALID_BLOODTYPE_BOB \u003d \"A+\";","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"    public static final String VALID_BLOODTYPE_AMY \u003d \"A+\";","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"    public static final String VALID_CONDITION_AMY \u003d \"Diabetes\";","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String NAME_DESC_CHERYL \u003d \" \" + PREFIX_NAME + VALID_NAME_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String NAME_DESC_DEREK \u003d \" \" + PREFIX_NAME + VALID_NAME_DEREK;","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String PHONE_DESC_CHERYL \u003d \" \" + PREFIX_NAME + VALID_PHONE_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String PHONE_DESC_DEREK \u003d \" \" + PREFIX_NAME + VALID_PHONE_DEREK;","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"    public static final String EMERGENCY_CONTACT_DESC_AMY \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"            \" \" + PREFIX_EMERGENCY_CONTACT + VALID_EMERGENCY_CONTACT_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"    public static final String EMERGENCY_CONTACT_DESC_BOB \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"            \" \" + PREFIX_EMERGENCY_CONTACT + VALID_EMERGENCY_CONTACT_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String EMAIL_DESC_CHERYL \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String EMAIL_DESC_DEREK \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_DEREK;","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String ADDRESS_DESC_CHERYL \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String ADDRESS_DESC_DEREK \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_DEREK;","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String GENDER_DESC_MALE \u003d \" \" + PREFIX_GENDER + VALID_GENDER_MALE;","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String GENDER_DESC_FEMALE \u003d \" \" + PREFIX_GENDER + VALID_GENDER_FEMALE;","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String NRIC_DESC_CHERYL \u003d \" \" + PREFIX_NRIC + VALID_NRIC_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String NRIC_DESC_DEREK \u003d \" \" + PREFIX_NRIC + VALID_NRIC_DEREK;","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"    public static final String CONDITION_DESC_AMY \u003d \" \" + PREFIX_CONDITION + VALID_CONDITION_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"    public static final String CONDITION_DESC_BOB \u003d \" \" + PREFIX_CONDITION + VALID_CONDITION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"    public static final String BLOODTYPE_DESC_AMY \u003d \" \" + PREFIX_BLOODTYPE + VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"    public static final String BLOODTYPE_DESC_BOB \u003d \" \" + PREFIX_BLOODTYPE + VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"    public static final String INVALID_BLOODTYPE_DESC \u003d \" \" + PREFIX_BLOODTYPE + \"Z+\";","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"    public static final String INVALID_CONDITION_DESC \u003d \" \" + PREFIX_CONDITION + \" \";","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"    public static final String INVALID_NRIC \u003d \"A1234567G\";","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"Alien\";","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private static final EditCommand.EditPersonDescriptor DESC_DEREK;","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"                .withBloodType(VALID_BLOODTYPE_AMY).withCondition(VALID_CONDITION_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"                .withGender(VALID_GENDER_FEMALE).withIc(VALID_NRIC_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"                .withTags(VALID_TAG_FRIEND).withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"tanveersingh10"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":132,"author":{"gitId":"kohkaijie"},"content":"                .withGender(VALID_GENDER_MALE).withIc(VALID_NRIC_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":134,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        DESC_CHERYL \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_CHERYL)","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .withPhone(VALID_PHONE_CHERYL).withEmail(VALID_EMAIL_CHERYL).withAddress(VALID_ADDRESS_CHERYL)","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .withGender(VALID_GENDER_FEMALE).withIc(VALID_NRIC_CHERYL).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        DESC_DEREK \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_DEREK)","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .withPhone(VALID_PHONE_DEREK).withEmail(VALID_EMAIL_DEREK).withAddress(VALID_ADDRESS_DEREK)","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .withGender(VALID_GENDER_MALE).withIc(VALID_NRIC_DEREK).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"cmHuang777"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPatientList());","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":184,"author":{"gitId":"tanveersingh10"},"content":"        //assertEquals(expectedFilteredList, actualModel.getFilteredPatientList());","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":192,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":194,"author":{"gitId":"cmHuang777"},"content":"        Person person \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":196,"author":{"gitId":"chonguschonguschongus"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":198,"author":{"gitId":"cmHuang777"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tanveersingh10":11,"kohkaijie":2,"cmHuang777":22,"Mohammed-Faizzzz":49,"-":115,"chonguschonguschongus":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.testutil.TypicalIcs.FIRST_NRIC;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.testutil.TypicalIcs.SECOND_NRIC;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"    public void execute_validNricUnfilteredList_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        Person personToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"        Ic personToDeleteIc \u003d personToDelete.getIc();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDeleteIc);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"    public void execute_invalidNricUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(FIRST_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"    public void execute_validNricFilteredList_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"        Person personToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"        Ic personToDeleteIc \u003d personToDelete.getIc();","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDeleteIc);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"kohkaijie"},"content":"    public void execute_invalidNricFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"        Person personToDelete \u003d model.getFilteredPatientList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"kohkaijie"},"content":"        Ic personToDeleteIc \u003d personToDelete.getIc();","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"kohkaijie"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"kohkaijie"},"content":"        // delete person at index 2 of whole address book but filtered list is only up to index 1","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"kohkaijie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDeleteIc);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"kohkaijie"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"kohkaijie"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(FIRST_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"kohkaijie"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(SECOND_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"kohkaijie"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(FIRST_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"kohkaijie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(FIRST_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"kohkaijie"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIc\u003d\" + FIRST_NRIC + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kohkaijie":23,"cmHuang777":5,"-":94}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"        Person editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"        Ic nricOfFirstPatient \u003d model.getFilteredPatientList().get(0).getIc();","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand editCommand \u003d new EditCommand(nricOfFirstPatient, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPatient));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"        expectedModel.setPerson(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"        Ic nricLastPerson \u003d lastPatient.getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand editCommand \u003d new EditCommand(nricLastPerson, descriptor);","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPatient));","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"        expectedModel.setPerson(lastPatient, editedPatient);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(0);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"        Ic nricFirstPerson \u003d firstPatient.getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand editCommand \u003d new EditCommand(nricFirstPerson, new EditPersonDescriptor());","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"        Person editedPerson \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"        Ic nricOfFirstPerson \u003d model.getFilteredPatientList().get(0).getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"        Patient personInFilteredList \u003d model.getFilteredPatientList().stream().filter(p -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"                p.getIc().equals(nricOfFirstPerson)).findFirst().orElse(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"        Patient editedPerson \u003d new PatientBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand editCommand \u003d new EditCommand(nricOfFirstPerson,","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"        expectedModel.setPerson(personInFilteredList, editedPerson);","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"        Ic nricOfFirstPerson \u003d model.getFilteredPatientList().get(0).getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"        Person firstPerson \u003d model.getFilteredPatientList().stream().filter(p -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"                p.getIc().equals(nricOfFirstPerson)).findFirst().orElse(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"        Ic nricOfSecondPerson \u003d model.getFilteredPatientList().get(1).getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand editCommand \u003d new EditCommand(nricOfSecondPerson, descriptor);","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"cmHuang777"},"content":"        Patient patientInList \u003d model.getAddressBook().getPatientList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"cmHuang777"},"content":"        Ic nricOfFirstPerson \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased()).getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"cmHuang777"},"content":"        EditCommand editCommand \u003d new EditCommand(nricOfFirstPerson,","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"cmHuang777"},"content":"                new EditPersonDescriptorBuilder(patientInList).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"tanveersingh10"},"content":"    public void execute_invalidPersonNricUnfilteredList_failure() {","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"tanveersingh10"},"content":"        Ic invalidNric \u003d new Ic(\"S9999999A\"); // doesn\u0027t exist","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand editCommand \u003d new EditCommand(invalidNric, descriptor);","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"tanveersingh10"},"content":"        assertCommandFailure(editCommand, model, \"This person hasn\u0027t been saved\");","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"cmHuang777"},"content":"        final Ic nricOfFirstPerson \u003d model.getFilteredPatientList().get(0).getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"tanveersingh10"},"content":"        final EditCommand standardCommand \u003d new EditCommand(nricOfFirstPerson, DESC_AMY);","lastModifiedDate":"2023-10-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(nricOfFirstPerson, copyDescriptor);","lastModifiedDate":"2023-10-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"cmHuang777"},"content":"        final Ic nricOfSecondPerson \u003d model.getFilteredPatientList().get(1).getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"tanveersingh10"},"content":"        assertFalse(standardCommand.equals(new EditCommand(nricOfSecondPerson, DESC_AMY)));","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"tanveersingh10"},"content":"        assertFalse(standardCommand.equals(new EditCommand(nricOfFirstPerson, DESC_BOB)));","lastModifiedDate":"2023-10-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"cmHuang777"},"content":"        Ic nric \u003d model.getFilteredPatientList().get(0).getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand editCommand \u003d new EditCommand(nric, editPersonDescriptor);","lastModifiedDate":"2023-10-08"},{"lineNumber":175,"author":{"gitId":"tanveersingh10"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{nric\u003d\" + nric + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"tanveersingh10":26,"cmHuang777":24,"-":130}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", gender\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"                + editPersonDescriptor.getGender().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"                + editPersonDescriptor.getIc().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", condition\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"                + editPersonDescriptor.getCondition().orElse(null) + \", blood type\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"                + editPersonDescriptor.getBloodType().orElse(null) + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tanveersingh10":7,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.CARL;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.ELLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.FIONA;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.logic.parser.KeywordParser;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.GenderPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.IcContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"        GenderPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"                new GenderPredicate(\"female\");","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"                new IcContainsKeywordsPredicate(\"T1234567J\");","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"        Predicate\u003cPerson\u003e predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPatientList());","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate predicate \u003d new IcContainsKeywordsPredicate(\"keyword\");","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"chonguschonguschongus"},"content":"     * Parses {@code userInput} into a {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"chonguschonguschongus"},"content":"    private Predicate\u003cPerson\u003e preparePredicate(String userInput) {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"chonguschonguschongus"},"content":"        return KeywordParser.parseInput(userInput.split(\"\\\\s\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cmHuang777":5,"-":65,"chonguschonguschongus":14}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        //showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cmHuang777":2,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_FEMALE;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_MALE;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_MALE + NRIC_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        + GENDER_DESC_MALE + NRIC_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_MALE + NRIC_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_NRIC, PREFIX_GENDER, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":146,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-08"},{"lineNumber":147,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        + NRIC_DESC_AMY + GENDER_DESC_FEMALE,","lastModifiedDate":"2023-10-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + NRIC_DESC_BOB + GENDER_DESC_MALE","lastModifiedDate":"2023-10-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND , Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + NRIC_DESC_BOB + GENDER_DESC_MALE","lastModifiedDate":"2023-10-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + NRIC_DESC_BOB + GENDER_DESC_MALE","lastModifiedDate":"2023-10-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + NRIC_DESC_BOB + GENDER_DESC_MALE","lastModifiedDate":"2023-10-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + NRIC_DESC_BOB + GENDER_DESC_MALE","lastModifiedDate":"2023-10-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-08"},{"lineNumber":205,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        + INVALID_ADDRESS_DESC + NRIC_DESC_BOB + GENDER_DESC_MALE,","lastModifiedDate":"2023-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":210,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + ADDRESS_DESC_BOB + NRIC_DESC_BOB + GENDER_DESC_MALE + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"cmHuang777":2,"Mohammed-Faizzzz":24,"-":187}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.testutil.TypicalIcs.FIRST_NRIC;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.testutil.PatientUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"    public void parseCommand_add_patient() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"        AddPatientCommand command \u003d (AddPatientCommand) parser.parseCommand(PatientUtil.getAddPatientCommand(patient));","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"        assertEquals(new AddPatientCommand(patient), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + FIRST_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        assertEquals(new DeleteCommand(FIRST_NRIC), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"                + person.getIc() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(new EditCommand(person.getIc(), descriptor), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"    public void parseCommand_findName() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] keywords \u003d {\"foo\", \"bar\", \"baz\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"                FindCommand.COMMAND_WORD + \" foo bar baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"chonguschonguschongus"},"content":"        assertEquals(new FindCommand(KeywordParser.parseInput(keywords)), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"chonguschonguschongus"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"chonguschonguschongus"},"content":"    public void parseCommand_findIc() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] keywords \u003d {\"T1234567Q\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"chonguschonguschongus"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"chonguschonguschongus"},"content":"                FindCommand.COMMAND_WORD + \" T1234567Q\");","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"chonguschonguschongus"},"content":"        assertEquals(new FindCommand(KeywordParser.parseInput(keywords)), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"chonguschonguschongus"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"chonguschonguschongus"},"content":"    public void parseCommand_findGender() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] keywords \u003d {\"M\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"chonguschonguschongus"},"content":"                FindCommand.COMMAND_WORD + \" M\");","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"chonguschonguschongus"},"content":"        assertEquals(new FindCommand(KeywordParser.parseInput(keywords)), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tanveersingh10":2,"kohkaijie":11,"-":82,"chonguschonguschongus":20}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.testutil.TypicalIcs.FIRST_NRIC;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"        assertParseSuccess(parser, \"S1111111Z\", new DeleteCommand(FIRST_NRIC));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kohkaijie":4,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONDITION_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_FEMALE;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BLOODTYPE_DESC;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CONDITION_DESC;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONDITION_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_FEMALE;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"        // no ic specified","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"        // no ic and no field specified","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"        // invalid nric","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, INVALID_NRIC + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, \"T0123456H some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_BLOODTYPE_DESC, BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_CONDITION_DESC, Condition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_GENDER_DESC, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"tanveersingh10"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"        String userInput \u003d VALID_NRIC_AMY + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + BLOODTYPE_DESC_AMY","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"                + CONDITION_DESC_AMY + GENDER_DESC_FEMALE + REMARK_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"tanveersingh10"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withCondition(VALID_CONDITION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"                .withBloodType(VALID_BLOODTYPE_AMY).withGender(VALID_GENDER_FEMALE).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"tanveersingh10"},"content":"                .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"tanveersingh10"},"content":"        String userInput \u003d VALID_NRIC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"tanveersingh10"},"content":"        String userInput \u003d VALID_NRIC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"tanveersingh10"},"content":"        expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"tanveersingh10"},"content":"        expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"tanveersingh10"},"content":"        expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"tanveersingh10"},"content":"        expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"tanveersingh10"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"tanveersingh10"},"content":"        // gender","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + GENDER_DESC_FEMALE;","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"tanveersingh10"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGender(VALID_GENDER_FEMALE).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"tanveersingh10"},"content":"        expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"tanveersingh10"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"tanveersingh10"},"content":"        // blood type","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"tanveersingh10"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withBloodType(VALID_BLOODTYPE_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"tanveersingh10"},"content":"        expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"tanveersingh10"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"tanveersingh10"},"content":"        // condition","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + CONDITION_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"tanveersingh10"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withCondition(VALID_CONDITION_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"tanveersingh10"},"content":"        expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"tanveersingh10"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"tanveersingh10"},"content":"        // remark","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"tanveersingh10"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"tanveersingh10"},"content":"        expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":214,"author":{"gitId":"tanveersingh10"},"content":"        String userInput \u003d VALID_NRIC_AMY + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":219,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":224,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":232,"author":{"gitId":"tanveersingh10"},"content":"        userInput \u003d VALID_NRIC_AMY + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":241,"author":{"gitId":"tanveersingh10"},"content":"        String userInput \u003d VALID_NRIC_AMY + TAG_EMPTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"tanveersingh10"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Ic(VALID_NRIC_AMY), descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"tanveersingh10":90,"-":158}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    private String[] testInput \u003d {\"Alice\", \"Bob\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"                new FindCommand(KeywordParser.parseInput(testInput));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":30,"chonguschonguschongus":2}},{"path":"src/test/java/seedu/address/logic/parser/KeywordParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.GenderPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.IcContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"public class KeywordParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    public void test_userInput_returnsCorrectFindCommand() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] testIcInput \u003d {\"T1234567G\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] testGenderInput \u003d {\"M\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] testNameInput \u003d {\"Alice\", \"Bob\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"        Predicate\u003cPerson\u003e testPredicate1 \u003d new IcContainsKeywordsPredicate(\"T1234567G\");","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"        assertTrue(KeywordParser.parseInput(testIcInput).equals(testPredicate1));","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        Predicate\u003cPerson\u003e testPredicate2 \u003d new GenderPredicate(\"M\");","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"        assertTrue(KeywordParser.parseInput(testGenderInput).equals(testPredicate2));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        Predicate\u003cPerson\u003e testPredicate3 \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"        assertTrue(KeywordParser.parseInput(testNameInput).equals(testPredicate3));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"chonguschonguschongus":32}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPatientList());","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"    public void resetData_withDuplicatePatient_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"        List\u003cPerson\u003e newPatients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPatients);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"    public void hasPerson_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPatient(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"    public void hasPatient_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(addressBook.hasPatient(ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"    public void hasPatient_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(addressBook.hasPatient(ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"    public void hasPatient_patientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(addressBook.hasPatient(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"    public void getPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPatientList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{patients\u003d\" + addressBook.getPatientList()","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + \", doctors\u003d\" + addressBook.getDoctorList() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList(); // I think this is wrong","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        private final ObservableList\u003cDoctor\u003e doctors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"            for (Person p : persons) {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"cmHuang777"},"content":"                if (p instanceof Patient) {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"cmHuang777"},"content":"                    patients.add((Patient) p);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                } else if (p instanceof Doctor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    doctors.add((Doctor) p);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         * Returns an unmodifiable view of the doctors list.","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         * This list will not contain any duplicate persons.","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Mohammed-Faizzzz"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            return doctors;","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"cmHuang777"},"content":"        public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"cmHuang777"},"content":"            return patients;","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"cmHuang777":29,"Mohammed-Faizzzz":15,"-":83}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.BENSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.logic.parser.KeywordParser;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatientList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":120,"author":{"gitId":"chonguschonguschongus"},"content":"        modelManager.updateFilteredPersonList(KeywordParser.parseInput(keywords));","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"cmHuang777":4,"-":125,"chonguschonguschongus":2}},{"path":"src/test/java/seedu/address/model/person/BloodTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"public class BloodTypeTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BloodType(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    public void constructor_invalidBloodType_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"        String invalidBloodType1 \u003d \"\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BloodType(invalidBloodType1));","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    public void isValidBloodType() {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"        // null BloodType","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(NullPointerException.class, () -\u003e BloodType.isValidBloodType(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"        // invalid BloodType","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(BloodType.isValidBloodType(\"\")); // empty string","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(BloodType.isValidBloodType(\" \")); // spaces only","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(BloodType.isValidBloodType(\"91\")); // anything other than A/B/AB/O","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(BloodType.isValidBloodType(\"D+\")); // anything other than A/B/AB/O","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(BloodType.isValidBloodType(\"A\")); // no +/- after blood type","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        // valid BloodTyp","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(BloodType.isValidBloodType(\"A+\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(BloodType.isValidBloodType(\"AB-\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(BloodType.isValidBloodType(\"O+\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(BloodType.isValidBloodType(\"B-\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"        BloodType bloodType \u003d new BloodType(\"A+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(bloodType.equals(new BloodType(\"A+\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(bloodType.equals(bloodType));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(bloodType.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(bloodType.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(bloodType.equals(new BloodType(\"AB+\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"cmHuang777":60}},{"path":"src/test/java/seedu/address/model/person/ConditionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"public class ConditionTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Condition(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    public void constructor_invalidCondition_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"        String invalidCondition1 \u003d \"\"; // empty string","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"        String invalidCondition2 \u003d \" something\"; // string with whitespace in front","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Condition(invalidCondition1));","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Condition(invalidCondition2));","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"    public void isValidCondition() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"        // null Condition","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(NullPointerException.class, () -\u003e Condition.isValidCondition(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"        // invalid Condition","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(Condition.isValidCondition(\"\")); // empty string","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(Condition.isValidCondition(\" \")); // spaces only","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(Condition.isValidCondition(\" Condition\")); // string with whitespace in front","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        // valid Condition","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(Condition.isValidCondition(\"something\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"        Condition condition \u003d new Condition(\"something\");","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(condition.equals(new Condition(\"something\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(condition.equals(condition));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(condition.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(condition.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(condition.equals(new Condition(\"something else\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"cmHuang777":57}},{"path":"src/test/java/seedu/address/model/person/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_FEMALE;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.TypicalDoctor.ALICE;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.TypicalDoctor.CHERYL;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.TypicalDoctor.WAYNE;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"//@Disabled(\"Disabled since we will be moving Person class to abstract in the future\")","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class DoctorTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e doctor.getTags().remove(0));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor editedCheryl \u003d new DoctorBuilder(CHERYL).withPhone(VALID_PHONE_CHERYL).withEmail(VALID_EMAIL_CHERYL)","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .withAddress(VALID_ADDRESS_CHERYL).withGender(VALID_GENDER_FEMALE).withIc(VALID_NRIC_CHERYL).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertTrue(CHERYL.isSamePerson(editedCheryl));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        editedCheryl \u003d new DoctorBuilder(CHERYL).withIc(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(CHERYL.isSamePerson(editedCheryl));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor aliceCopy \u003d new DoctorBuilder(ALICE).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.equals(WAYNE));","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Person editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String expected \u003d Doctor.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", remark\u003d\" + ALICE.getRemark()","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + \", gender\u003d\" + ALICE.getGender() + \", nric\u003d\" + ALICE.getIc() + \", patients\u003d\" + ALICE.getPatients() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Mohammed-Faizzzz":101}},{"path":"src/test/java/seedu/address/model/person/GenderPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"public class GenderPredicateTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    public void testGenderPredicate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"        GenderPredicate malePredicate \u003d new GenderPredicate(\"M\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"        GenderPredicate femalePredicate \u003d new GenderPredicate(\"F\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"        // Test with a person having MALE gender","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"        assertTrue(malePredicate.test(new PersonBuilder().withGender(\"M\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"        // Test with a person having FEMALE gender","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        assertTrue(femalePredicate.test(new PersonBuilder().withGender(\"F\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"        // Test with a person having a different gender","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"        assertFalse(malePredicate.test(new PersonBuilder().withGender(\"F\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"chonguschonguschongus":27}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"public class GenderTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"    public void constructor_invalidGender1_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"        String invalidGender1 \u003d \"Male\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender1));","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"    public void constructor_invalidGender2_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"        String invalidGender2 \u003d \"B\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender2));","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"    public void isValidGender() {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"        // null gender","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"        // invalid gender","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(Gender.isValidGender(\"Female\")); // Female gender spelt out instead of F","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(Gender.isValidGender(\"B\")); // gender not M or F","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"        // valid gender","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"        assertTrue(Gender.isValidGender(\"M\")); // gender M for male","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"        assertTrue(Gender.isValidGender(\"F\")); // gender F for female","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"        Gender gender \u003d new Gender(\"M\");","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"        assertTrue(gender.equals(new Gender(\"M\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        assertTrue(gender.equals(gender));","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(gender.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(gender.equals(5.0f));","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(gender.equals(new Gender(\"F\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"kohkaijie":63}},{"path":"src/test/java/seedu/address/model/person/IcContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"public class IcContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"        String firstPredicateKeyword \u003d \"T1234567Q\";","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"        String secondPredicateKeyword \u003d \"S1234567Q\";","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate firstPredicate \u003d new IcContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate secondPredicate \u003d new IcContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate firstPredicateCopy \u003d new IcContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"    public void test_icContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"        // Test with a person having matching IC","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate icPredicate \u003d new IcContainsKeywordsPredicate(\"T1234567G\");","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"        assertTrue(icPredicate.test(new PersonBuilder().withIc(\"T1234567G\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"    public void test_icDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate predicate \u003d new IcContainsKeywordsPredicate(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"        assertFalse(predicate.test(new PersonBuilder().withIc(\"T1234567Q\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"        predicate \u003d new IcContainsKeywordsPredicate(\"S0001004Q\");","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"        assertFalse(predicate.test(new PersonBuilder().withIc(\"T1123876Q\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"        IcContainsKeywordsPredicate predicate \u003d new IcContainsKeywordsPredicate(keyword);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"        String expected \u003d IcContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keyword + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"chonguschonguschongus":64}},{"path":"src/test/java/seedu/address/model/person/IcTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"public class IcTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Ic(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"    public void constructor_invalidIc1_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"        String invalidIc1 \u003d \"S458Z\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Ic(invalidIc1));","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"    public void constructor_invalidIc2_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":"        String invalidIc2 \u003d \"W1234567Z\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Ic(invalidIc2));","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"    public void isValidIc() {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"        // null nric","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(NullPointerException.class, () -\u003e Ic.isValidIc(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"        // invalid nric","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(Ic.isValidIc(\"\")); // empty string","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(Ic.isValidIc(\" \")); // spaces only","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(Ic.isValidIc(\"S333444Z\")); // only 6 numbers included","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(Ic.isValidIc(\"G2223331H\")); // starting alphabet not S or T","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"        // valid nric","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"        assertTrue(Ic.isValidIc(\"S0345999H\")); // starting alphabet S","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"        assertTrue(Ic.isValidIc(\"T0345999H\")); // starting alphabet T","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"        Ic ic \u003d new Ic(\"T1111222H\");","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"        assertTrue(ic.equals(new Ic(\"T1111222H\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        assertTrue(ic.equals(ic));","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(ic.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(ic.equals(5.0f));","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"        assertFalse(ic.equals(new Name(\"T1111222H\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"kohkaijie":62}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONDITION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMERGENCY_CONTACT_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_MALE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"public class PatientTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getTags().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"        // same ic, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"                .withGender(VALID_GENDER_MALE).withCondition(VALID_CONDITION_BOB).withBloodType(VALID_BLOODTYPE_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"                .withEmergencyContact(VALID_EMERGENCY_CONTACT_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"        // different ic, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withIc(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"        // different emergency contact -\u003e return false","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmergencyContact(VALID_EMERGENCY_CONTACT_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"        // different condition -\u003e return false","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withCondition(VALID_CONDITION_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"        // different blood type -\u003e return false","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withBloodType(VALID_BLOODTYPE_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"cmHuang777"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"cmHuang777"},"content":"        String expected \u003d Patient.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"cmHuang777"},"content":"                + \", emergency contact\u003d\" + ALICE.getEmergencyContact() + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"cmHuang777"},"content":"                + ALICE.getAddress() + \", remark\u003d\" + ALICE.getRemark() + \", gender\u003d\" + ALICE.getGender() + \", nric\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"                + ALICE.getIc() + \", condition\u003d\" + ALICE.getCondition() + \", bloodType\u003d\" + ALICE.getBloodType()","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"cmHuang777":112}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_MALE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"@Disabled(\"Disabled since we will be moving Person class to abstract in the future\")","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"        Person editedAlice \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"                .withAddress(VALID_ADDRESS_BOB).withGender(VALID_GENDER_MALE).withIc(VALID_NRIC_ALICE)","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withIc(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"kohkaijie"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", remark\u003d\" + ALICE.getRemark()","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"kohkaijie"},"content":"                + \", gender\u003d\" + ALICE.getGender() + \", nric\u003d\" + ALICE.getIc() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kohkaijie":9,"cmHuang777":6,"-":82}},{"path":"src/test/java/seedu/address/model/person/UniqueDoctorListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.TypicalDoctor.ALLEN;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.testutil.TypicalDoctor.WAYNE;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class UniqueDoctorListTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final UniqueDoctorList uniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void contains_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.contains(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertFalse(uniqueDoctorList.contains(WAYNE));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertTrue(uniqueDoctorList.contains(WAYNE));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor editedWayne \u003d new DoctorBuilder(WAYNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertTrue(uniqueDoctorList.contains(editedWayne));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.add(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.add(WAYNE));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctor(null, WAYNE));","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctor(WAYNE, null));","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueDoctorList.setDoctor(WAYNE, WAYNE));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.setDoctor(WAYNE, WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        expectedUniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Doctor editedWayne \u003d new DoctorBuilder(WAYNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.setDoctor(WAYNE, editedWayne);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        expectedUniqueDoctorList.add(editedWayne);","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.setDoctor(WAYNE, ALLEN);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        UniqueDoctorList expectedUniqueDpctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        expectedUniqueDpctorList.add(ALLEN);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(expectedUniqueDpctorList, uniqueDoctorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(ALLEN);","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.setDoctor(WAYNE, ALLEN));","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.remove(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueDoctorList.remove(WAYNE));","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.remove(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctors((UniqueDoctorList) null));","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        expectedUniqueDoctorList.add(ALLEN);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.setDoctors(expectedUniqueDoctorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctors((List\u003cDoctor\u003e) null));","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.add(WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        List\u003cDoctor\u003e doctorList \u003d Collections.singletonList(ALLEN);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        uniqueDoctorList.setDoctors(doctorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        expectedUniqueDoctorList.add(ALLEN);","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        List\u003cDoctor\u003e listWithDuplicateDoctors \u003d Arrays.asList(WAYNE, WAYNE);","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.setDoctors(listWithDuplicateDoctors));","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                -\u003e uniqueDoctorList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(uniqueDoctorList.asUnmodifiableObservableList().toString(), uniqueDoctorList.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Mohammed-Faizzzz":175}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"cmHuang777":2,"-":173}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.BENSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    private static final String INVALID_GENDER \u003d \"G\";","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"    private static final String INVALID_NRIC \u003d \"T33340K\";","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"    private static final String VALID_NRIC \u003d BENSON.getIc().toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"        JsonAdaptedPatient person \u003d new JsonAdaptedPatient(BENSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"kohkaijie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"kohkaijie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-01"},{"lineNumber":96,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"kohkaijie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-01"},{"lineNumber":114,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"kohkaijie"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"kohkaijie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"kohkaijie"},"content":"                        INVALID_GENDER, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"kohkaijie"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"kohkaijie"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"kohkaijie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"kohkaijie"},"content":"                        null, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"kohkaijie"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"kohkaijie"},"content":"    public void toModelType_invalidIc_throwsIllegalValueException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":140,"author":{"gitId":"kohkaijie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, INVALID_NRIC, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"kohkaijie"},"content":"        String expectedMessage \u003d Ic.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":145,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"kohkaijie"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"kohkaijie"},"content":"    public void toModelType_nullIc_throwsIllegalValueException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"kohkaijie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":150,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":151,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, null, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"kohkaijie"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Ic.class.getSimpleName());","lastModifiedDate":"2023-10-05"},{"lineNumber":153,"author":{"gitId":"kohkaijie"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"kohkaijie"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"kohkaijie"},"content":"                        VALID_GENDER, VALID_NRIC, invalidTags);","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kohkaijie":65,"cmHuang777":2,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.ALICE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.HOON;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.IDA;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"        original.addPatient(HOON);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"        original.removePatient(ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"        original.addPatient(IDA);","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cmHuang777":7,"-":103}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.testutil.TypicalDoctor;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.testutil.TypicalPatient;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private static final Path TYPICAL_DOCTORS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalDoctorsAddressBook.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private static final Path DUPLICATE_DOCTOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateDoctorAddressBook.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    private static final Path TYPICAL_PATIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatientsAddressBook.json\");","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    private static final Path DUPLICATE_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatientAddressBook.json\");","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    public void toModelType_typicalPatientsFile_success() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PATIENTS_FILE,","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPatient.getTypicalAddressBook();","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void toModelType_typicalDoctorsFile_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_DOCTORS_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddressBook typicalDoctorsAddressBook \u003d TypicalDoctor.getTypicalAddressBook();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertEquals(addressBookFromFile, typicalDoctorsAddressBook);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void toModelType_invalidDoctorFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void toModelType_duplicateDoctors_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_DOCTOR_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_DOCTOR,","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"    public void toModelType_duplicatePatients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PATIENT_FILE,","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PATIENT,","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cmHuang777":9,"Mohammed-Faizzzz":24,"-":39}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.testutil.TypicalPatient.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cmHuang777":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"     * Adds a new {@code Patient} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            addressBook.addPatient((Patient) person);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } else if (person instanceof Doctor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            addressBook.addDoctor((Doctor) person);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cmHuang777":2,"Mohammed-Faizzzz":6,"-":32}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class DoctorBuilder {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355256\";","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String DEFAULT_EMAIL \u003d \"alicepauline@gmail.com\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #09-111\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String DEFAULT_REMARK \u003d \"She hated Medical School.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String DEFAULT_NRIC \u003d \"T1111111Z\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Name name;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Email email;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Address address;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Ic ic;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Constructor for the PersonBuilder class that initialises","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * a PersonBuilder instance populated with default values.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ic \u003d new Ic(DEFAULT_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder(Doctor doctorToCopy) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        name \u003d doctorToCopy.getName();","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        phone \u003d doctorToCopy.getPhone();","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        email \u003d doctorToCopy.getEmail();","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        address \u003d doctorToCopy.getAddress();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        remark \u003d doctorToCopy.getRemark();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        gender \u003d doctorToCopy.getGender();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ic \u003d doctorToCopy.getIc();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        tags \u003d new HashSet\u003c\u003e(doctorToCopy.getTags());","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder withGender(String gender) {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Sets the {@code Ic} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DoctorBuilder withIc(String ic) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.ic \u003d new Ic(ic);","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Doctor build() {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return new Doctor(name, phone, email, address, remark, gender, ic, tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Mohammed-Faizzzz":130}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"        descriptor.setIc(person.getIc());","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"        if (person instanceof Patient) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"            Patient patient \u003d (Patient) person;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"            descriptor.setBloodType(patient.getBloodType());","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"            descriptor.setCondition(patient.getCondition());","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"            descriptor.setEmergencyContact(patient.getEmergencyContact());","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"kohkaijie"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"kohkaijie"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"kohkaijie"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"kohkaijie"},"content":"        return this;","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"kohkaijie"},"content":"     * Sets the {@code Ic} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"kohkaijie"},"content":"    public EditPersonDescriptorBuilder withIc(String ic) {","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"kohkaijie"},"content":"        descriptor.setIc(new Ic(ic));","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"kohkaijie"},"content":"        return this;","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"     * Sets the {@code BloodType} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"    public EditPersonDescriptorBuilder withBloodType(String bloodType) {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"        descriptor.setBloodType(new BloodType(bloodType));","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"     * Sets the {@code Condition} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"tanveersingh10"},"content":"    public EditPersonDescriptorBuilder withCondition(String condition) {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"tanveersingh10"},"content":"        descriptor.setCondition(new Condition(condition));","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"tanveersingh10"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tanveersingh10":32,"kohkaijie":20,"-":87}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Condition;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_EMERGENCY_CONTACT \u003d \"91234567\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0000000Z\";","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_CONDITION \u003d \"Default condition\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"    public static final String DEFAULT_BLOODTYPE \u003d \"O+\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"    private Name name;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"    private Phone emergencyContact;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"    private Email email;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    private Address address;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"    private Ic ic;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"    private Condition condition;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"    private BloodType bloodType;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"     * Constructor for the PatientBuilder class that initialises","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"     * a PatientBuilder instance populated with default values.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"        emergencyContact \u003d new Phone(DEFAULT_EMERGENCY_CONTACT);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"        ic \u003d new Ic(DEFAULT_NRIC);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"        condition \u003d new Condition(DEFAULT_CONDITION);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        bloodType \u003d new BloodType(DEFAULT_BLOODTYPE);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"        emergencyContact \u003d patientToCopy.getEmergencyContact();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"        remark \u003d patientToCopy.getRemark();","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"        gender \u003d patientToCopy.getGender();","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"        ic \u003d patientToCopy.getIc();","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"        condition \u003d patientToCopy.getCondition();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"        bloodType \u003d patientToCopy.getBloodType();","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code Address} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withAddress(String address) {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code emergencyContact} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withEmergencyContact(String emergencyContact) {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"cmHuang777"},"content":"        this.emergencyContact \u003d new Phone(emergencyContact);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"cmHuang777"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code Remark} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"cmHuang777"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code Gender} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withGender(String gender) {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"cmHuang777"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code Ic} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withIc(String ic) {","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"cmHuang777"},"content":"        this.ic \u003d new Ic(ic);","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code condition} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withCondition(String condition) {","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"cmHuang777"},"content":"        this.condition \u003d new Condition(condition);","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"cmHuang777"},"content":"     * Sets the {@code bloodType} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"cmHuang777"},"content":"    public PatientBuilder withBloodType(String bloodType) {","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"cmHuang777"},"content":"        this.bloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"cmHuang777"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"cmHuang777"},"content":"     * Creates the {@Code Patient} object with the values stored.","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"cmHuang777"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"cmHuang777"},"content":"     * @return a Patient object.","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"cmHuang777"},"content":"    public Patient build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"cmHuang777"},"content":"        return new Patient(name, phone, emergencyContact, email, address, remark, gender, ic, condition, bloodType,","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"cmHuang777"},"content":"                tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cmHuang777":179}},{"path":"src/test/java/seedu/address/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONDITION;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"kohkaijie"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"kohkaijie"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"public class PatientUtil {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"kohkaijie"},"content":"     * Returns an add-patient command string for adding the {@code patient}.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"kohkaijie"},"content":"    public static String getAddPatientCommand(Patient patient) {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"kohkaijie"},"content":"        return AddPatientCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"kohkaijie"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_GENDER + patient.getGender().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_NRIC + patient.getIc().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_ADDRESS + patient.getAddress().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_REMARK + patient.getRemark().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"        );","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_CONDITION + patient.getCondition().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_BLOODTYPE + patient.getBloodType().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_EMERGENCY_CONTACT + patient.getEmergencyContact().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"kohkaijie"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"kohkaijie"},"content":"    public static String getEditPatientDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"kohkaijie"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getIc().ifPresent(ic -\u003e sb.append(PREFIX_NRIC).append(ic.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"kohkaijie"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"kohkaijie"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"kohkaijie"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"kohkaijie"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"kohkaijie"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"kohkaijie"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"kohkaijie"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"kohkaijie"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getCondition().ifPresent(condition -\u003e sb.append(PREFIX_CONDITION)","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"kohkaijie"},"content":"                .append(condition.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getBloodType().ifPresent(bloodType -\u003e sb.append(PREFIX_BLOODTYPE)","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"kohkaijie"},"content":"                .append(bloodType.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getEmergencyContact().ifPresent(emergencyContact -\u003e sb.append(PREFIX_EMERGENCY_CONTACT)","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"kohkaijie"},"content":"                .append(emergencyContact.value).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"kohkaijie"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"kohkaijie":84}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"kohkaijie"},"content":"    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"kohkaijie"},"content":"    public static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"kohkaijie"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"kohkaijie"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"kohkaijie"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0000000Z\";","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"kohkaijie"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"kohkaijie"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"kohkaijie"},"content":"    private Ic ic;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Constructor for the PersonBuilder class that initialises","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * a PersonBuilder instance populated with default values.","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"kohkaijie"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"kohkaijie"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"kohkaijie"},"content":"        ic \u003d new Ic(DEFAULT_NRIC);","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"kohkaijie"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"kohkaijie"},"content":"        ic \u003d personToCopy.getIc();","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-01"},{"lineNumber":103,"author":{"gitId":"kohkaijie"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-01"},{"lineNumber":104,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"kohkaijie"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-01"},{"lineNumber":106,"author":{"gitId":"kohkaijie"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-01"},{"lineNumber":107,"author":{"gitId":"kohkaijie"},"content":"        return this;","lastModifiedDate":"2023-10-01"},{"lineNumber":108,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":109,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"kohkaijie"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"kohkaijie"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"kohkaijie"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"kohkaijie"},"content":"        return this;","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"kohkaijie"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"kohkaijie"},"content":"     * Sets the {@code Ic} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"kohkaijie"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"kohkaijie"},"content":"    public PersonBuilder withIc(String ic) {","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"kohkaijie"},"content":"        this.ic \u003d new Ic(ic);","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"kohkaijie"},"content":"        return this;","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"kohkaijie"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":127,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":129,"author":{"gitId":"kohkaijie"},"content":"        return new Person(name, phone, email, address, remark, gender, ic, tags);","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kohkaijie":44,"Mohammed-Faizzzz":2,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_GENDER + person.getGender().value + \" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_NRIC + person.getIc().value + \" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"kohkaijie"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value).append(\" \"));","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getIc().ifPresent(ic -\u003e sb.append(PREFIX_NRIC).append(ic.value).append(\" \"));","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"kohkaijie"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kohkaijie":9,"-":62}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"     * Returns the middle index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    public static Index getPatientMidIndex(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size() / 2);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"     * Returns the last index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"    public static Index getPatientLastIndex(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"     * Returns the patient in the {@code model}\u0027s patient list at {@code index}.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"    public static Person getPatient(Model model, Index index) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"        return model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanveersingh10":1,"cmHuang777":9,"-":46}},{"path":"src/test/java/seedu/address/testutil/TypicalDoctor.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class TypicalDoctor {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor ALICE \u003d new DoctorBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withPhone(\"94351253\").withRemark(\"She wants to become a Surgeon.\").withGender(\"F\").withIc(\"S9631267K\")","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor BOYD \u003d new DoctorBuilder().withName(\"Boyd Anders\")","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"His weakness is being a Perfectionist\")","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(\"boyda@example.com\").withPhone(\"98765432\").withGender(\"M\").withIc(\"S9331268K\")","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor CARLOS \u003d new DoctorBuilder().withName(\"Carlos Sainz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(\"smoothoperator@example.com\").withAddress(\"wall street\").withGender(\"M\")","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withIc(\"S9831269K\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor DAVID \u003d new DoctorBuilder().withName(\"David Beckham\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withGender(\"M\").withIc(\"S7531260K\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor EDITH \u003d new DoctorBuilder().withName(\"Edith Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withGender(\"F\").withIc(\"S7231261K\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor FELICIA \u003d new DoctorBuilder().withName(\"Felicia Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(\"felbel@example.com\").withAddress(\"little tokyo\").withGender(\"F\").withIc(\"S9431262K\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor GREG \u003d new DoctorBuilder().withName(\"Greg Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withGender(\"M\").withIc(\"S9531263K\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    // Manually added","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor ALLEN \u003d new DoctorBuilder().withName(\"Barry Allen\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(\"flash@example.com\").withAddress(\"Central City\").withGender(\"M\")","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withIc(\"S9831263J\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor WAYNE \u003d new DoctorBuilder().withName(\"Bruce Wayne\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(\"bats@example.com\").withAddress(\"Gotham City\").withGender(\"F\").withIc(\"S8931263P\")","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor CHERYL \u003d new DoctorBuilder().withName(VALID_NAME_CHERYL).withPhone(VALID_PHONE_CHERYL)","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(VALID_EMAIL_CHERYL)","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withAddress(VALID_ADDRESS_CHERYL).withIc(VALID_NRIC_CHERYL).withGender(VALID_GENDER_FEMALE).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final Doctor DEREK \u003d new DoctorBuilder().withName(VALID_NAME_DEREK).withPhone(VALID_PHONE_DEREK)","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withEmail(VALID_EMAIL_DEREK)","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            .withAddress(VALID_ADDRESS_DEREK).withIc(VALID_NRIC_DEREK).withGender(VALID_GENDER_MALE).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static final String KEYWORD_MATCHING_DAVID \u003d \"Beckham\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private TypicalDoctor() {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        for (Doctor doctor : getTypicalDoctors()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            ab.addDoctor(doctor);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return ab;","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static List\u003cDoctor\u003e getTypicalDoctors() {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BOYD, CARLOS, DAVID, EDITH, FELICIA, GREG, ALLEN, WAYNE));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Mohammed-Faizzzz":72}},{"path":"src/test/java/seedu/address/testutil/TypicalIcs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kohkaijie"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kohkaijie"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"kohkaijie"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"kohkaijie"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"kohkaijie"},"content":" * A utility class containing a list of {@code Ic} nrics to be used in tests.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"kohkaijie"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"kohkaijie"},"content":"public class TypicalIcs {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"kohkaijie"},"content":"    public static final Ic FIRST_NRIC \u003d new Ic(\"S1111111Z\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kohkaijie"},"content":"    public static final Ic SECOND_NRIC \u003d new Ic(\"S1111111K\");","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"kohkaijie"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"kohkaijie":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPatient.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONDITION_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONDITION_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMERGENCY_CONTACT_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMERGENCY_CONTACT_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_FEMALE;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_MALE;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"public class TypicalPatient {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient ALICE \u003d new PatientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\").withGender(\"F\").withIc(\"T0131267K\")","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"            .withTags(\"friends\").withCondition(\"NA\").withBloodType(\"O+\").withEmergencyContact(\"90234567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient BENSON \u003d new PatientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withGender(\"M\").withIc(\"T0131268K\")","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"            .withTags(\"owesMoney\", \"friends\").withCondition(\"Type 1 Diabetes\").withBloodType(\"O-\")","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"            .withEmergencyContact(\"92234567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient CARL \u003d new PatientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withGender(\"M\").withIc(\"T0131269K\")","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"            .withCondition(\"Type 2 Diabetes\").withBloodType(\"AB+\").withEmergencyContact(\"91334567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"            .withGender(\"M\").withIc(\"T0131260K\").withCondition(\"Kidney Failure\").withBloodType(\"A+\")","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"            .withEmergencyContact(\"91234567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient ELLE \u003d new PatientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withGender(\"F\").withIc(\"T0131261K\")","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"            .withCondition(\"Brain Tumour\").withBloodType(\"B+\").withEmergencyContact(\"91434567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient FIONA \u003d new PatientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withGender(\"F\").withIc(\"T0131262K\")","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"            .withCondition(\"Lung Cancer\").withBloodType(\"A-\").withEmergencyContact(\"95234567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withGender(\"M\").withIc(\"T0131263K\")","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"            .withCondition(\"Unknown\").withBloodType(\"B-\").withEmergencyContact(\"91634567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"    // Manually added","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient HOON \u003d new PatientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withGender(\"M\")","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"            .withIc(\"T0131263J\").withCondition(\"NA\").withBloodType(\"O+\").withEmergencyContact(\"97234567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient IDA \u003d new PatientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withGender(\"F\").withIc(\"T0131263P\")","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"            .withCondition(\"NA\").withBloodType(\"O+\").withEmergencyContact(\"98234567\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient AMY \u003d new PatientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"            .withEmergencyContact(VALID_EMERGENCY_CONTACT_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"            .withAddress(VALID_ADDRESS_AMY).withIc(VALID_NRIC_AMY).withGender(VALID_GENDER_FEMALE)","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"            .withRemark(VALID_REMARK_AMY).withCondition(VALID_CONDITION_AMY).withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"            .withEmergencyContact(VALID_EMERGENCY_CONTACT_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"            .withAddress(VALID_ADDRESS_BOB).withIc(VALID_NRIC_BOB).withGender(VALID_GENDER_MALE)","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"            .withRemark(VALID_REMARK_BOB).withCondition(VALID_CONDITION_BOB).withBloodType(VALID_BLOODTYPE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"    private TypicalPatient() {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"            ab.addPatient(patient);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"        return ab;","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"cmHuang777":103}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-W12-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W12-2/tp/graph/badge.svg?token\u003dD5073R19SO)](https://codecov.io/gh/AY2324S1-CS2103T-W12-2/tp)","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"* The project simulates an ongoing software project for a desktop application (called _ManaGease_) used for managing full-time employees\u0027 information.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"* It is named `ManaGease` because it aims to help HR managers, the target users, to easily manage the information of their full-time employees.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"* For the detailed documentation of this project, see the **[ManaGease Project Website](https://ay2324s1-cs2103t-w12-2.github.io/tp/)**.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"**Acknowledgement**","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jibtaf":9,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"run {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    // https://mvnrepository.com/artifact/com.itextpdf/kernel","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    implementation group: \u0027com.itextpdf\u0027, name: \u0027kernel\u0027, version: \u00277.2.5\u0027","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    // https://mvnrepository.com/artifact/com.itextpdf/forms","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"    implementation group: \u0027com.itextpdf\u0027, name: \u0027forms\u0027, version: \u00277.2.5\u0027","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    // https://central.sonatype.com/artifact/me.xdrop/fuzzywuzzy/overview","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    implementation group: \u0027me.xdrop\u0027, name: \u0027fuzzywuzzy\u0027, version: \u00271.4.0\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jibtaf":10,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"### Joey Lee","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"\u003cimg src\u003d\"images/applepiofmyeye.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"[[github](https://github.com/applepiofmyeye)]","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"[[portfolio](team/applepiofmyeye.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"* Role: Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"* Responsibilities: Scheduling and tracking tasks","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"### Wee Ming Qing","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"\u003cimg src\u003d\"images/weemingqing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"[[github](https://github.com/WeeMingQing)]","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"[[portfolio](team/weemingqing.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"* Role: Documentation","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"* Responsibilities: Logic","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"### He Yifan","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"\u003cimg src\u003d\"images/jibtaf.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"[[github](http://github.com/jibtaf)] [[portfolio](team/jibtaf.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"* Responsibilities: Data Management","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"### Shixin Liu","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"\u003cimg src\u003d\"images/kevin-liusx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"[[github](https://github.com/Kevin-Liusx)]","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"[[portfolio](team/kevin-liusx.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"* Responsibilities: Development and Operations","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"### Jin Hao","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"\u003cimg src\u003d\"images/leb14.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"[[github](http://github.com/Leb14)]","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"[[portfolio](team/leb14.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"* Responsibilities: Logic","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Kevin-Liusx":4,"WeeMingQing":6,"jibtaf":5,"applepiofmyeye":6,"-":35,"Leb14":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"jibtaf"},"content":"### Deductions and Benefits","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"jibtaf"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"jibtaf"},"content":"The proposed deductions and benefits feature is facilitated by `Deduction` and `Benefit` classes. They represent payment deducted from and paid to an employee respectively.","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"jibtaf"},"content":"A `Deduction` object contains the following information:","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"jibtaf"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"jibtaf"},"content":"A `Benefit` object contains the following information:","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"jibtaf"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"jibtaf"},"content":"Both `Deduction` and `Benefit` classes extend the `Payment` class, which contains the following information:","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"jibtaf"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"jibtaf"},"content":"Adding deductions and benefits to an employee is done by the `DeductCommand` and `DeductCommandParser` classes and `BenefitCommand` and `BenefitCommandParser` classes respectively.","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `deduct`/`benefit` operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"jibtaf"},"content":"(Sequence diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"jibtaf"},"content":"After `DeductCommandParser` and `BenefitCommandParser` classes parse the user input, the `DeductCommand` and `BenefitCommand` classes will be called to execute the command. The `DeductCommand` and `BenefitCommand` classes will then call the `Model` component to add the deduction/benefit to the employee.","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"jibtaf"},"content":"`DeductCommand::execute(Model)` and `BenefitCommand::execute(Model)` will decide to call `DeductCommand::executeByIndex(Model)`/`BenefitCommand::executeByIndex(Model)` or `DeductCommand::executeByName(Model)`/`BenefitCommand::executeByName(Model)` based on whether an index has been specified in the user input.","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"jibtaf"},"content":"The following activity diagram summarises the process of adding a deduction/benefit to an employee:","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"jibtaf"},"content":"(Activity diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"jibtaf"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"jibtaf"},"content":"{what are the design considerations?}","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"jibtaf"},"content":"### Payslip generation","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"jibtaf"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"jibtaf"},"content":"The proposed payslip generation feature is facilitated by `PayslipGenerator`, `PayslipCommand` and `PayslipCommandParser` classes.","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"jibtaf"},"content":"The `PayslipGenerator` class is responsible for generating the payslip for a specific employee. It contains the following methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"jibtaf"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"jibtaf"},"content":"The `PayslipCommand` class is responsible for executing the `payslip` command. It contains the following methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"jibtaf"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"jibtaf"},"content":"The `PayslipCommandParser` class is responsible for parsing the user input for the `payslip` command. It contains the following methods:","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"jibtaf"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `payslip` operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"jibtaf"},"content":"(Sequence diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"jibtaf"},"content":"After `PayslipCommandParser` class parses the user input, the `PayslipCommand` class will be called to execute the command. The `PayslipCommand` class will then call the `Model` component to generate the payslip for the employee, and store the payslip as a PDF file at `payslips/`.","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"jibtaf"},"content":"The following activity diagram summarises the process of generating a payslip for an employee:","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"jibtaf"},"content":"(Activity diagram to be added)","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"Kevin-Liusx"},"content":"### Payroll calculation feature","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"Kevin-Liusx"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"Kevin-Liusx"},"content":"The feature is facilitated by the four classes below:","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"Kevin-Liusx"},"content":"1.\tPayrollCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"Kevin-Liusx"},"content":"2.\tPayrollCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"Kevin-Liusx"},"content":"3.\tPayroll","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"Kevin-Liusx"},"content":"4.\tSalary","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"Kevin-Liusx"},"content":"\u003cu\u003ePayrollCommandParser\u003c/u\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"Kevin-Liusx"},"content":"This class extends the Parser interface, it implements the following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"Kevin-Liusx"},"content":"- PayrollCommandParser#parse() – Parses the user input and returns a PayrollCommand object.","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"Kevin-Liusx"},"content":"\u003cu\u003ePayrollCommand\u003c/u\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"Kevin-Liusx"},"content":"This class extends the Command abstract class, it implements the following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"Kevin-Liusx"},"content":"- PayrollCommand#execute() – Determines whether the user used employee name as reference or the index number. Once it confirms, it will calculate the payroll of the employee.","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"jibtaf"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"jibtaf"},"content":"{what are the design considerations?}","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"WeeMingQing"},"content":"### Leave Tracking","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"WeeMingQing"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"WeeMingQing"},"content":"The proposed leave tracking feature is facilitated by `AnnualLeave`, `AddLeaveCommand` and `AddLeaveCommandParser` classes.","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"WeeMingQing"},"content":"The `AnnualLeave` class is responsible for storing the leave data for a specific employee. It contains the following methods:","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"WeeMingQing"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"WeeMingQing"},"content":"The `AddLeaveCommand` class is responsible for executing the `addleave` command. It contains the following methods:","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"WeeMingQing"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"WeeMingQing"},"content":"The `AddLeaveCommandParser` class is responsible for parsing the user input for the `addleave` command. It contains the following methods:","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"WeeMingQing"},"content":"(Class diagram to be added)","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"WeeMingQing"},"content":"The following sequence diagram shows how the `addleave` operation works:","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"WeeMingQing"},"content":"(Sequence diagram to be added)","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"WeeMingQing"},"content":"After `AddLeaveCommandParser` class parses the user input, the `AddLeaveCommand` class will be called to execute the command. The `AddLeaveCommand` class will then call the `Model` component to add leave for the employee, and store the leave as an arraylist in `AnnualLeave`.","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"WeeMingQing"},"content":"The following activity diagram summarises the process of adding leave for an employee:","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"WeeMingQing"},"content":"(Activity diagram to be added)","lastModifiedDate":"2023-10-27"},{"lineNumber":341,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"WeeMingQing"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":343,"author":{"gitId":"WeeMingQing"},"content":" ","lastModifiedDate":"2023-10-27"},{"lineNumber":344,"author":{"gitId":"WeeMingQing"},"content":"**Aspect: How addleave executes:**","lastModifiedDate":"2023-10-27"},{"lineNumber":345,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"WeeMingQing"},"content":"* **Alternative 1 (current choice):** Saves the dates of the leave added.","lastModifiedDate":"2023-10-27"},{"lineNumber":347,"author":{"gitId":"WeeMingQing"},"content":"  * Pros: Easy to trace and track when the leaves are applied, and whether employee is working on specific day.","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"WeeMingQing"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-27"},{"lineNumber":349,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":350,"author":{"gitId":"WeeMingQing"},"content":"* **Alternative 2:** Saves only the total number of days of leave added.","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"WeeMingQing"},"content":"  * Pros: will use less memory (e.g. each employee will only need to store an integer for the total number of days of leave per annul)","lastModifiedDate":"2023-10-27"},{"lineNumber":352,"author":{"gitId":"WeeMingQing"},"content":"  * Cons: Not much useful information that can be used (e.g. we do not know the working status of each employee for each day)","lastModifiedDate":"2023-10-27"},{"lineNumber":353,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":354,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"Leb14"},"content":"* Human Resource Managers ","lastModifiedDate":"2023-10-02"},{"lineNumber":374,"author":{"gitId":"Leb14"},"content":"* has a need to manage a significant number of employees\u0027 information","lastModifiedDate":"2023-10-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":378,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"Leb14"},"content":"**Value proposition**: Contact management app to simplify and centralize information for full-time employees. It offers easy access to essential details such as name, email, phone number, address, bank accounts, salary, joining date, and annual leave. With all the information, the app can help to track employees’ annual leave and also generate their payroll automatically. This helps to reduce errors and enhance overall operational efficiency. This results in time and cost savings, improved organization, and a smoother workflow for your business.","lastModifiedDate":"2023-10-02"},{"lineNumber":381,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"| Priority | As a …​                                     | I want to …​                                            | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------                         | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"Leb14"},"content":"| `* * *`  | user                                       | add new full-time staff members                        | maintain an up-to-date database of employees.                          |","lastModifiedDate":"2023-10-02"},{"lineNumber":391,"author":{"gitId":"Leb14"},"content":"| `* * *`  | user                                       | delete an employee\u0027s information                       |keep the system clean and organized by removing unused data when employees resign |","lastModifiedDate":"2023-10-02"},{"lineNumber":392,"author":{"gitId":"Leb14"},"content":"| `* * *`  | user                                       | edit employee information (contacts, addresses, bank account, etc.) | keep the system clean and organized by removing unused data when employees resign.|","lastModifiedDate":"2023-10-02"},{"lineNumber":393,"author":{"gitId":"Leb14"},"content":"| `* * *`  | new user                                   | easily access the user guide within the app or platform| quickly learn how to use the application\u0027s features and functionalities effectively |","lastModifiedDate":"2023-10-02"},{"lineNumber":394,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | receive concise and informative error messages         | quickly identify my mistake and take corrective actions promptly      |","lastModifiedDate":"2023-10-02"},{"lineNumber":395,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | generate a report that shows the total payroll amount received by a specific employee| track the employee\u0027s overall compensation. |","lastModifiedDate":"2023-10-02"},{"lineNumber":396,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | effectively manage employees\u0027 annual leave balances    | make sure the employees do not exceed their allocated limits |","lastModifiedDate":"2023-10-02"},{"lineNumber":397,"author":{"gitId":"Leb14"},"content":"| `* * `   | user                                       | read specific information about a particular employee  | don’t need to manually scroll through multiple pages to find the required information|","lastModifiedDate":"2023-10-02"},{"lineNumber":398,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | close the application using a command       | i can expedite the process without relying on the mouse                                        |","lastModifiedDate":"2023-10-02"},{"lineNumber":399,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | calculate payroll for employees to be automatically based on their join dates and proposed salaries | ensure there are no discrepancies in compensation|","lastModifiedDate":"2023-10-02"},{"lineNumber":400,"author":{"gitId":"Leb14"},"content":"| `*`      | user                                       | have a user-friendly application          | I can quickly learn how to use it in a short time                                               |","lastModifiedDate":"2023-10-02"},{"lineNumber":401,"author":{"gitId":"Leb14"},"content":"| `*`      | user                                       | have the ability to sort employees by their join date/salary | make informed decisions and efficiently manage the workforce based on the sorted list.|","lastModifiedDate":"2023-10-02"},{"lineNumber":402,"author":{"gitId":"Leb14"},"content":"| `*`      | user                                       | have an application capable of detecting and preventing the input of duplicate employee information| locate a person easily | ensure the system does not mix up or duplicate payroll data and also helps to prevent errors.|","lastModifiedDate":"2023-10-02"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"Leb14"},"content":"(For all use cases below, the **System** is the `ManaGease` and the **User** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-02"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"Leb14"},"content":"**Use case: Add new full-time staff members**","lastModifiedDate":"2023-10-02"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"Leb14"},"content":"1. User requests to add a new staff member.","lastModifiedDate":"2023-10-02"},{"lineNumber":415,"author":{"gitId":"Leb14"},"content":"2. ManaGease adds members to the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":416,"author":{"gitId":"Leb14"},"content":"3. ManaGease displays a confirmation message that a member has been added.","lastModifiedDate":"2023-10-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"Leb14"},"content":"* 1a. Invalid tags are included in the command.","lastModifiedDate":"2023-10-02"},{"lineNumber":423,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":424,"author":{"gitId":"Leb14"},"content":"\t * 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":425,"author":{"gitId":"Leb14"},"content":"\t","lastModifiedDate":"2023-10-02"},{"lineNumber":426,"author":{"gitId":"Leb14"},"content":"         Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":427,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":428,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":430,"author":{"gitId":"Leb14"},"content":"**Use case: Edit information of existing full-time staff members**","lastModifiedDate":"2023-10-02"},{"lineNumber":431,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":432,"author":{"gitId":"Leb14"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":433,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":434,"author":{"gitId":"Leb14"},"content":"1. User requests to edit an existing staff member.","lastModifiedDate":"2023-10-02"},{"lineNumber":435,"author":{"gitId":"Leb14"},"content":"2. ManaGease edits the information of members.","lastModifiedDate":"2023-10-02"},{"lineNumber":436,"author":{"gitId":"Leb14"},"content":"3. ManaGease displays a confirmation message that information for members is updated.","lastModifiedDate":"2023-10-02"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"Leb14"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":441,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":442,"author":{"gitId":"Leb14"},"content":"* 1a. Invalid command parameters are given.","lastModifiedDate":"2023-10-02"},{"lineNumber":443,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":444,"author":{"gitId":"Leb14"},"content":" \t* 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":445,"author":{"gitId":"Leb14"},"content":"\t","lastModifiedDate":"2023-10-02"},{"lineNumber":446,"author":{"gitId":"Leb14"},"content":"   \t     Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":447,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":448,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":449,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":450,"author":{"gitId":"Leb14"},"content":"**Use case: Read information on existing full-time staff members**","lastModifiedDate":"2023-10-02"},{"lineNumber":451,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":452,"author":{"gitId":"Leb14"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":453,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":454,"author":{"gitId":"Leb14"},"content":"1. User requests to read information about existing staff members.","lastModifiedDate":"2023-10-02"},{"lineNumber":455,"author":{"gitId":"Leb14"},"content":"2. ManaGease displays the information for a member.","lastModifiedDate":"2023-10-02"},{"lineNumber":456,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":457,"author":{"gitId":"Leb14"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":458,"author":{"gitId":"Leb14"},"content":"   ","lastModifiedDate":"2023-10-02"},{"lineNumber":459,"author":{"gitId":"Leb14"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"Leb14"},"content":"* 1a. Invalid command parameters are given.","lastModifiedDate":"2023-10-02"},{"lineNumber":462,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"Leb14"},"content":"\t* 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":464,"author":{"gitId":"Leb14"},"content":"\t","lastModifiedDate":"2023-10-02"},{"lineNumber":465,"author":{"gitId":"Leb14"},"content":"        Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":466,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":467,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":468,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":469,"author":{"gitId":"Leb14"},"content":"**Use case: Delete existing full-time staff members**","lastModifiedDate":"2023-10-02"},{"lineNumber":470,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":471,"author":{"gitId":"Leb14"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":472,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":473,"author":{"gitId":"Leb14"},"content":"1. User requests to delete an existing staff member.","lastModifiedDate":"2023-10-02"},{"lineNumber":474,"author":{"gitId":"Leb14"},"content":"2. ManaGease deletes existing members.","lastModifiedDate":"2023-10-02"},{"lineNumber":475,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":476,"author":{"gitId":"Leb14"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":477,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":478,"author":{"gitId":"Leb14"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":479,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":480,"author":{"gitId":"Leb14"},"content":"* 1a. Invalid command parameters are given.","lastModifiedDate":"2023-10-02"},{"lineNumber":481,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":482,"author":{"gitId":"Leb14"},"content":"    * 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":483,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":484,"author":{"gitId":"Leb14"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":485,"author":{"gitId":"Leb14"},"content":" ","lastModifiedDate":"2023-10-02"},{"lineNumber":486,"author":{"gitId":"Leb14"},"content":"* 1b. User requests to delete existing member via name.","lastModifiedDate":"2023-10-02"},{"lineNumber":487,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":488,"author":{"gitId":"Leb14"},"content":"\t * 1b1. ManaGease will display a list of members with the same name.","lastModifiedDate":"2023-10-02"},{"lineNumber":489,"author":{"gitId":"Leb14"},"content":" ","lastModifiedDate":"2023-10-02"},{"lineNumber":490,"author":{"gitId":"Leb14"},"content":"         Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":493,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":494,"author":{"gitId":"jibtaf"},"content":"**Use case: Add deductions/benefits to the monthly salary of an employee**","lastModifiedDate":"2023-10-26"},{"lineNumber":495,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":496,"author":{"gitId":"jibtaf"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":497,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":498,"author":{"gitId":"jibtaf"},"content":"1. User requests to add deductions/benefits to the monthly salary of an employee.","lastModifiedDate":"2023-10-26"},{"lineNumber":499,"author":{"gitId":"jibtaf"},"content":"2. ManaGease adds deductions/benefits to the monthly salary of an employee.","lastModifiedDate":"2023-10-26"},{"lineNumber":500,"author":{"gitId":"jibtaf"},"content":"3. ManaGease displays a confirmation message that deductions/benefits have been added.","lastModifiedDate":"2023-10-26"},{"lineNumber":501,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":502,"author":{"gitId":"jibtaf"},"content":"   Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":503,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":504,"author":{"gitId":"jibtaf"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":505,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":506,"author":{"gitId":"jibtaf"},"content":"* 1a. Invalid command parameters are given.","lastModifiedDate":"2023-10-26"},{"lineNumber":507,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":508,"author":{"gitId":"jibtaf"},"content":"    * 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":509,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":510,"author":{"gitId":"jibtaf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":511,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":512,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":513,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":514,"author":{"gitId":"jibtaf"},"content":"**Use case: Generate a PDF payslip for a specific employee**","lastModifiedDate":"2023-10-25"},{"lineNumber":515,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":516,"author":{"gitId":"jibtaf"},"content":"**MSS**","lastModifiedDate":"2023-10-25"},{"lineNumber":517,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":518,"author":{"gitId":"jibtaf"},"content":"1. User requests to generate a payslip for a specific employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":519,"author":{"gitId":"jibtaf"},"content":"2. ManaGease generates a PDF payslip for the employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":520,"author":{"gitId":"jibtaf"},"content":"3. ManaGease displays a confirmation message that a payslip has been generated.","lastModifiedDate":"2023-10-25"},{"lineNumber":521,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":522,"author":{"gitId":"jibtaf"},"content":"   Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":524,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-25"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":526,"author":{"gitId":"jibtaf"},"content":"* 1a. Invalid command parameters are given.","lastModifiedDate":"2023-10-25"},{"lineNumber":527,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":528,"author":{"gitId":"jibtaf"},"content":"    * 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":529,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":530,"author":{"gitId":"jibtaf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":531,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":532,"author":{"gitId":"jibtaf"},"content":"* 2a. Template file for the payslip is not found.","lastModifiedDate":"2023-10-25"},{"lineNumber":533,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":534,"author":{"gitId":"jibtaf"},"content":"    * 2a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":535,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":536,"author":{"gitId":"jibtaf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":537,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":538,"author":{"gitId":"WeeMingQing"},"content":"**Use case: Add leave for a specific employee**","lastModifiedDate":"2023-10-27"},{"lineNumber":539,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":540,"author":{"gitId":"WeeMingQing"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":541,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":542,"author":{"gitId":"WeeMingQing"},"content":"1. User requests to add leave for a specific employee.","lastModifiedDate":"2023-10-27"},{"lineNumber":543,"author":{"gitId":"WeeMingQing"},"content":"2. ManaGease adds leave for the employee.","lastModifiedDate":"2023-10-27"},{"lineNumber":544,"author":{"gitId":"WeeMingQing"},"content":"3. ManaGease displays a confirmation message that the leave has been added.","lastModifiedDate":"2023-10-27"},{"lineNumber":545,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":546,"author":{"gitId":"WeeMingQing"},"content":"   Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":547,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":548,"author":{"gitId":"WeeMingQing"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":549,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":550,"author":{"gitId":"WeeMingQing"},"content":"* 1a. Invalid command parameters are given.","lastModifiedDate":"2023-10-27"},{"lineNumber":551,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":552,"author":{"gitId":"WeeMingQing"},"content":"    * 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-27"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":554,"author":{"gitId":"WeeMingQing"},"content":"      Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":556,"author":{"gitId":"WeeMingQing"},"content":"* 1b. Invalid date(s) are given.","lastModifiedDate":"2023-10-27"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":558,"author":{"gitId":"WeeMingQing"},"content":"    * 1b1. ManaGease shows an error message.","lastModifiedDate":"2023-10-27"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":560,"author":{"gitId":"WeeMingQing"},"content":"      Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":562,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"Leb14"},"content":"4.  The application should be designed with an intuitive and user-friendly interface to cater to HR managers who have not previously used such software.","lastModifiedDate":"2023-10-02"},{"lineNumber":569,"author":{"gitId":"Leb14"},"content":"5.  The application is designed and available exclusively in the English language.","lastModifiedDate":"2023-10-02"},{"lineNumber":570,"author":{"gitId":"Leb14"},"content":"6.  The application is not required to handle the printing of the reports.","lastModifiedDate":"2023-10-02"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"Leb14"},"content":"* **Employee**: A staff in the company","lastModifiedDate":"2023-10-02"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kevin-Liusx":21,"jibtaf":105,"WeeMingQing":54,"-":366,"Leb14":84}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"ManaGease is a **desktop app for managing full time staff in any workplace, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ManaGease can get your contact management tasks done faster than traditional apps.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"## Quick Start","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer. ","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"2. Download the latest `ManaGease.jar` from [here](https://github.com/AY2324S1-CS2103T-W12-2/tp/releases)","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your ManaGease. ","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in(i.e. `cd DIRECTORY_PATH`), and enter the `java -jar ManaGease.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"   * `add /n Jane Smith /e jane@email.com /p 12345678 /a 123 Main St /b 123456789 /jd 2023-09-12 /s 1000 /al 10`: Adds an employee named `John Doe` to ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"   * `delete 3` : Deletes the 3rd employee shown in the current list.","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"   * `read 3 /b` : Reads the bank account of the 3rd employee shown in the current list.","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"   ","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"   * `edit 2 /n Betsy Crower` : Edits the name of the 2nd employee to be `Betsy Crower`.","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"   * `clear` : Deletes all employees.","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"  e.g. in `edit INDEX /n NAME`, `INDEX` and `NAME` are parameters which can be used as `edit 3 /n John Doe`.","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"  e.g `/n NAME [/t TAG]` can be used as `/n John Doe /t friend` or as `/n John Doe`.","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"  e.g. `[/t TAG]…​` can be used as ` ` (i.e. 0 times), `/t friend`, `/t friend /t family` etc.","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"  e.g. if the command specifies `/n NAME /p PHONE_NUMBER`, `/p PHONE_NUMBER /n NAME` is also acceptable.","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"### Viewing help : `help` [Coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"**What it does:**","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"`help`","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"This feature allows users to add a new employee to the ManaGease app, creating a profile with essential details.","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"**Command format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"add /n NAME [/e EMAIL] [/p PHONE] [/a ADDRESS] [/b BANK_ACCOUNT] [/jd JOIN_DATE] [/s SALARY] [/l ANNUAL_LEAVE]","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"A person must have at least the NAME parameter, but can have any number of parameters.","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"Example:","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"* `add /n Jane Smith /e jane@email.com /p 12345678 /a 123 Main St /b 123456789","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"  /jd 12/09/2023 /s 1000.00 /l 10`","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"Output:","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"* The ScheduleEase app should display a confirmation message indicating that the employee has been successfully added to the database. (e.g. `Employee \"Jane Smith\" successfully added!`)","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"* The employee\u0027s profile should be updated with the provided information.","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"* If prefix used is not defined, an error message will appear and say `Prefix not found, please use any of the following prefixes: /n, /e, /p, /a, /b, /jd, /s, /l`","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"![result for adding employee](images/addSuccess.png)","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"![failed result for adding employee](images/addFailed.png)","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"`edit INDEX [/n NAME] [/e EMAIL] [/p PHONE] [/a ADDRESS] [/b BANK_ACCOUNT] [/jd JOIN_DATE] [/s SALARY] [/l ANNUAL_LEAVE] `","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"*  `edit 1 /p 91234567 /e johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"*  `edit 2 /n Betsy Crower ` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"Output:","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"* The ScheduleEase app should display a confirmation message indicating that the employee information has been successfully updated, specifying the part that has been updated.","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"* The employee\u0027s profile should be updated with the provided information.","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"* `Employee 3’s information successfully updated!`","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"applepiofmyeye"},"content":"![result for editing employee](images/editSuccess.png)","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"applepiofmyeye"},"content":"This feature allows users to delete an employee based on index or name.","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format**","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"applepiofmyeye"},"content":"`delete INDEX` or `delete /n NAME`","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"applepiofmyeye"},"content":"* Deletes the person at the specified `INDEX` or with the name `NAME`.","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"applepiofmyeye"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"applepiofmyeye"},"content":"* The index **must be a positive integer**.","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"applepiofmyeye"},"content":"* `list` followed by `delete 2` deletes the 2nd employee in the employee directory.","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"applepiofmyeye"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st employee in the results of the `find` command.","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"applepiofmyeye"},"content":"Output:","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"applepiofmyeye"},"content":"* If there are multiple employees with the same name, we just list down the employees for them to view, return “Here is the list of the matching employees:”","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"applepiofmyeye"},"content":"* Otherwise, the ScheduleEase app should display a confirmation message indicating that the employee information has been successfully deleted. ","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"applepiofmyeye"},"content":"  * Specifying the part that has been updated","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"applepiofmyeye"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"  * `Employee “Jane Smith” has been removed`","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"applepiofmyeye"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"applepiofmyeye"},"content":"* The employee\u0027s list should be updated by removing the employee.","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"applepiofmyeye"},"content":"![result for deleting employee](images/deleteSuccess.png)","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"applepiofmyeye"},"content":"![result for deleting employee](images/deleteMultiple.png)","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"applepiofmyeye"},"content":"### Reading a person\u0027s information : `read`","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"applepiofmyeye"},"content":"This feature allows users to view specific information about an employee.","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format**","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"`read INDEX PREFIX`","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"* Reads the person\u0027s information specified by the `PREFIX` at the specified `INDEX`.","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"applepiofmyeye"},"content":"* The index **must be a positive integer**.","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"applepiofmyeye"},"content":"* `read 3 /e` reads the email of the third person in the most recently displayed list.","lastModifiedDate":"2023-10-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":181,"author":{"gitId":"applepiofmyeye"},"content":"Output:","lastModifiedDate":"2023-10-02"},{"lineNumber":182,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":183,"author":{"gitId":"jibtaf"},"content":"* If the index is not within the numbers in the list, the app should display `Please enter a valid index number`.","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"jibtaf"},"content":"* If the command is incorrect, the app should display `Please use the following format to read information : read INDEX INFORMATION`.","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":187,"author":{"gitId":"jibtaf"},"content":"* If the `PREFIX` provided is not in the list, the app should display `Please provide a valid information prefix to read`.","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":189,"author":{"gitId":"jibtaf"},"content":"* If the `PREFIX` has not been stored in the list, the app should display `There isn’t any information on this employee’s specified PREFIX`.","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":191,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":192,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":193,"author":{"gitId":"applepiofmyeye"},"content":"![result for deleting employee](images/readSuccess.png)","lastModifiedDate":"2023-10-02"},{"lineNumber":194,"author":{"gitId":"applepiofmyeye"},"content":"![result for deleting employee](images/readFailed.png)","lastModifiedDate":"2023-10-02"},{"lineNumber":195,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":196,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":197,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":198,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":199,"author":{"gitId":"applepiofmyeye"},"content":"### Listing all persons : `list` [Coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":200,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":201,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":202,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":203,"author":{"gitId":"applepiofmyeye"},"content":"Shows a list of all employees in the workplace.","lastModifiedDate":"2023-10-02"},{"lineNumber":204,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":205,"author":{"gitId":"applepiofmyeye"},"content":"**Command format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"applepiofmyeye"},"content":"`list`","lastModifiedDate":"2023-10-02"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"applepiofmyeye"},"content":"### Clearing all entries : `clear` [Coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":215,"author":{"gitId":"applepiofmyeye"},"content":"**Command format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":216,"author":{"gitId":"applepiofmyeye"},"content":"`clear`","lastModifiedDate":"2023-10-02"},{"lineNumber":217,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":218,"author":{"gitId":"applepiofmyeye"},"content":"### Locating employees by name: `find` [Coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":219,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":220,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":221,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":222,"author":{"gitId":"applepiofmyeye"},"content":"Finds employees whose names contain any of the given keywords.","lastModifiedDate":"2023-10-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":224,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format**","lastModifiedDate":"2023-10-02"},{"lineNumber":225,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":226,"author":{"gitId":"applepiofmyeye"},"content":"`find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"### Exiting the program : `exit` ","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"applepiofmyeye"},"content":"**Command format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":248,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":249,"author":{"gitId":"applepiofmyeye"},"content":"`exit`","lastModifiedDate":"2023-10-02"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":257,"author":{"gitId":"applepiofmyeye"},"content":"ManaGease data are saved automatically as a JSON file `[JAR file location]/data/managease.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"applepiofmyeye"},"content":"If your changes to the data file makes its format invalid, Managease will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"applepiofmyeye"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ManaGease home folder.","lastModifiedDate":"2023-10-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"applepiofmyeye"},"content":"| Action     | Format, Examples                                                                                                                                                                                                                   |","lastModifiedDate":"2023-10-02"},{"lineNumber":285,"author":{"gitId":"jibtaf"},"content":"|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"jibtaf"},"content":"| **Add**    | `add /n NAME [/e EMAIL] [/p PHONE] [/a ADDRESS] [/b BANK_ACCOUNT] [/jd JOIN_DATE] [/s SALARY] [/l ANNUAL_LEAVE]`     \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"applepiofmyeye"},"content":"| **Clear**  | `clear`                                                                                                                                                                                                                            |","lastModifiedDate":"2023-10-02"},{"lineNumber":288,"author":{"gitId":"applepiofmyeye"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":289,"author":{"gitId":"jibtaf"},"content":"| **Edit**   | `edit INDEX [/n NAME] [/e EMAIL] [/p PHONE] [/a ADDRESS] [/b BANK_ACCOUNT] [/jd JOIN_DATE] [/s SALARY] [/l ANNUAL_LEAVE]`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                     |","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"jibtaf"},"content":"| **Read**   | `read INDEX PREFIX`\u003cbr\u003e e.g., `read 3 /n`                                                                                                                                                                                          |","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"applepiofmyeye"},"content":"| **List**   | `list`                                                                                                                                                                                                                             |","lastModifiedDate":"2023-10-02"},{"lineNumber":292,"author":{"gitId":"applepiofmyeye"},"content":"| **Help**   | `help`                                                                                                                                                                                                                             |","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jibtaf":30,"applepiofmyeye":118,"-":144}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jibtaf"},"content":"    content: \"ManaGease\";","lastModifiedDate":"2023-10-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jibtaf":1,"-":294}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"ecp -\u003e ec ++: index, editEmployeeDescriptor","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"jibtaf":1,"-":21}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"title: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-W12-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W12-2/tp/graph/badge.svg?token\u003dD5073R19SO)](https://codecov.io/gh/AY2324S1-CS2103T-W12-2/tp)","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"**ManaGease is a contact management application to simplify and centralize information for full-time employees.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"* If you are interested in using ManaGease, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"* If you are interested about developing ManaGease, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"* This project uses the [iText 7](https://itextpdf.com/en/products/itext-7/itext-7-core) library to generate PDFs.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [iText 7](https://itextpdf.com/en/products/itext-7/itext-7-core)","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":9,"-":12}},{"path":"docs/team/applepiofmyeye.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"title: Joey\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"ManaGease is a desktop Human Resource (HR) management system used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"* **Code contributed**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"       ","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"    * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"    * Contributed to forum discussions (examples: )","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    * Reported bugs and suggestions for other teams in the class (examples:)","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"    * Some parts of the x feature I added was adopted by several other class mates ()","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"applepiofmyeye":36}},{"path":"docs/team/jibtaf.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"title: He Yifan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"ManaGease - Contact management app to simplify and centralize information for full-time employees.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"It offers easy access to essential details such as name, email, phone number, address, bank accounts, salary, joining date, and annual leaves. With all the information, the app can help to track employees’ annual leave and also generate their payroll automatically. This helps to reduce errors and enhance overall operational efficiency. This results in time and cost savings, improved organization, and a smoother workflow for your business.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djibtaf\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jibtaf":24}},{"path":"docs/team/kevin-liusx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"title: Shixin Liu\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"ManaGease is a employee management Apps to manage full-timers.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Kevin-Liusx":20}},{"path":"docs/team/leb14.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"title: Jin Hao\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"  * What it does: ","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"  * Justification: ","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"  * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Leb14":33}},{"path":"docs/team/weemingqing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"title: Wee Ming Qing\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"ManaGease - Contact management app to simplify and centralize information for full-time employees.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"WeeMingQing":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"jibtaf"},"content":"        Person employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":345,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d new Person(","lastModifiedDate":"2023-10-16"},{"lineNumber":346,"author":{"gitId":"jibtaf"},"content":"                employeeToEdit.getName(), employeeToEdit.getPhone(), employeeToEdit.getEmail(),","lastModifiedDate":"2023-10-16"},{"lineNumber":347,"author":{"gitId":"jibtaf"},"content":"                employeeToEdit.getAddress(), remark, employeeToEdit.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"jibtaf"},"content":"        model.setPerson(employeeToEdit, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(generateSuccessMessage(editedEmployee));","lastModifiedDate":"2023-10-16"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"jibtaf"},"content":"     * {@code employeeToEdit}.","lastModifiedDate":"2023-10-16"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"jibtaf"},"content":"    private String generateSuccessMessage(Person employeeToEdit) {","lastModifiedDate":"2023-10-16"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"jibtaf"},"content":"        return String.format(message, employeeToEdit);","lastModifiedDate":"2023-10-16"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"jibtaf":9,"-":390}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditEmployeeDescriptor` may require more careful inspection.","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"Let’s try removing references to `Address` in `EditEmployeeDescriptor`.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"1. Safe delete the field `address` in `EditEmployeeDescriptor`.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jibtaf":3,"-":109}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditEmployeeDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"jibtaf"},"content":"       Person employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"       Person editedEmployee \u003d createeditedEmployee(employeeToEdit, EditEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"jibtaf"},"content":"       if (!employeeToEdit.isSamePerson(editedEmployee) \u0026\u0026 model.hasPerson(editedEmployee)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"jibtaf"},"content":"       model.setPerson(employeeToEdit, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedEmployee));","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jibtaf":6,"-":295}},{"path":"src/main/java/seedu/address/commons/util/PaySlipGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.forms.PdfAcroForm;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.font.PdfFont;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.font.PdfFontFactory;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.pdf.PdfDocument;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.pdf.PdfReader;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.pdf.PdfWriter;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" * Generates a PDF payslip for an employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"public class PaySlipGenerator {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    private static final String TEMPLATE_PATH \u003d \"payslips/template.pdf\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    private static final String OUTPUT_DIRECTORY_PATH \u003d \"payslips/\";","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"     * Generates a PDF payslip for an employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"     * @param employee The employee to generate the payslip for.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"     * @throws IOException If the template file cannot be found.","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    public static void generateReport(Person employee) throws IOException {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        PdfDocument pdfDocument \u003d new PdfDocument(new PdfReader(TEMPLATE_PATH),","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"            new PdfWriter(OUTPUT_DIRECTORY_PATH + getFileName(employee)));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        PdfAcroForm form \u003d PdfAcroForm.getAcroForm(pdfDocument, false);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        PdfFont font \u003d PdfFontFactory.createFont();","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        fillTextFields(form, getFieldMap(employee), font);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        form.flattenFields();","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        pdfDocument.close();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"     * Generates the file name.","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"     * @param employee The employee to generate the payslip for.","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    public static String getFileName(Person employee) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        String employeeName \u003d employee.getName().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        ArrayList\u003cString\u003e employeeNameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        String[] employeeNameArray \u003d employeeName.toLowerCase().split(\" \");","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        Collections.addAll(employeeNameList, employeeNameArray);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        return String.join(\"_\", employeeNameList) + \".pdf\";","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     * Fills the text fields in the PDF payslip.","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"     * @param form The PDF form.","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"     * @param fieldMap The map of field names to values.","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"     * @param font The font to use.","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"    public static void fillTextFields(PdfAcroForm form, Map\u003cString, String\u003e fieldMap, PdfFont font) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        for (Map.Entry\u003cString, String\u003e entry : fieldMap.entrySet()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            form.getFormFields().get(entry.getKey()).setValue(entry.getValue())","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"                .setFontSize(12).setFont(font);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"     * Returns the map of field names to values.","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"     * @param employee The employee to generate the payslip for.","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"     * @return The map of field names to values.","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    public static Map\u003cString, String\u003e getFieldMap(Person employee) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        Map\u003cString, String\u003e fieldMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"employerName\", \"XXX Limited\");","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"employeeName\", employee.getName().toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"basicPay\", employee.getSalary().toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"totalDeductions\", df.format(employee.getSalary().getTotalDeductions()));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"netPay\", df.format(employee.getSalary().getNetSalary()));","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        return fieldMap;","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":82}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"     * Returns true if {@code s} represents an integer","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"     * e.g. empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"    public static boolean isInteger(String s) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WeeMingQing":17,"-":68}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The employee index provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_NAME \u003d \"The employee name provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d employees listed!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_INVALID_FIELD_TO_READ \u003d \"The field to read provided is invalid\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_DELETE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"            \"%1$d employees found! Refer to their indexes for deletion\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Invalid command format! Date should be in format: \u0027dd/MM/yyyy\u0027\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"            + \"and date should be valid!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_PAYROLL \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"            \"%1$d employees found! Refer to their indexes for payroll calculation\";","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_DEDUCT \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"            \"%1$d employees found! Refer to their indexes for deduction\";","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_BENEFIT \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"            \"%1$d employees found! Refer to their indexes for benefit\";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Bank Account: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"                .append(person.getBankAccount())","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Join Date: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"                .append(person.getJoinDate())","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Salary: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"                .append(person.getSalary())","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Annual Leave: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"                .append(person.getAnnualLeave().value);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kevin-Liusx":2,"WeeMingQing":8,"jibtaf":5,"applepiofmyeye":7,"-":48,"Leb14":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_BANK_ACCOUNT + \"BANK ACCOUNT \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_JOIN_DATE + \"JOIN DATE \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"            + PREFIX_SALARY + \"SALARY \"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_ANNUAL_LEAVE + \"ANNUAL LEAVE\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_BANK_ACCOUNT + \"12345678 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_JOIN_DATE + \"12-02-2023 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"            + PREFIX_SALARY + \"2000 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_ANNUAL_LEAVE + \"14\";","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jibtaf":9,"applepiofmyeye":3,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddLeaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_FROM;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_TO;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":" * Adds leave to an existing employee in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"public class AddLeaveCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    public static final String COMMAND_WORD \u003d \"addleave\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds leave to an employee.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_ON + \" DATE     \"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            + \"OR     \"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_FROM + \" DATE \"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_TO + \" DATE \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_ON + \" 01/01/2023     \"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"            + \"OR     \"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_FROM + \" 01/01/2023 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_TO + \" 05/01/2023 \\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Leave has been added for employee: %1$s!\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"     * Creates an AddLeaveCommand to add leave to the specified employee at {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The date of leave to add to the specified employee at {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand(Index index, LocalDate startDate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"     * Creates an AddLeaveCommand to add a range of leave to the employee at specified {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"     * from the startDate to the endDate.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The starting date of leave to add to the specified employee at {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate The ending date of leave to add to the specified employee at {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand(Index index, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"        Person employeeToAddLeave \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        if (startDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(String.format(AnnualLeave.MESSAGE_EXPIRED_LEAVE));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        if (employeeToAddLeave.getAnnualLeave().containsDuplicateLeave(startDate, endDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(AnnualLeave.MESSAGE_DUPLICATE_LEAVE);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"            if (employeeToAddLeave.getAnnualLeave().isValidAddLeave(startDate, startDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"                employeeToAddLeave.getAnnualLeave().addLeave(startDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(AnnualLeave.MESSAGE_LEAVE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"            if (!endDate.isAfter(startDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(AnnualLeave.MESSAGE_INVALID_LEAVE);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"            if (employeeToAddLeave.getAnnualLeave().isValidAddLeave(startDate, endDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"                employeeToAddLeave.getAnnualLeave().addLeave(startDate, endDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(AnnualLeave.MESSAGE_LEAVE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS + this.getLeaveStatusMessage(employeeToAddLeave),","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"                Messages.format(employeeToAddLeave)));","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"        if (!(other instanceof AddLeaveCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand otherAddLeaveCommand \u003d (AddLeaveCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"        return this.equals(otherAddLeaveCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"                .add(\"toAddLeave\", index)","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"     * Returns a string of message to indicate the number of days of leave left for an employee for the current year.","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"     * @param employee The employee that has their leave added.","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"     * @return The message that shows remaining days of leave for an employee for the current year.","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"    public String getLeaveStatusMessage(Person employee) {","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(employee);","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"        return \"Number of leaves left for this year: \" + employee.getAnnualLeave().numOfLeaveLeftForCurrYear()","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"                + \" / \"","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().value + \"\\nNumber of leaves left for next year: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().numOfLeaveLeftForNextYear()","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"                + \" / \"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().value;","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"WeeMingQing":138}},{"path":"src/main/java/seedu/address/logic/commands/BenefitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_DEDUCT;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" * Adds a benefit to the salary of the person identified using it\u0027s","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":" * displayed index or name from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"public class BenefitCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public static final String COMMAND_WORD \u003d \"benefit\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        + \": add benefits to the salary of the person identified \"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        + \"by the index number or name used in the last person listing.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        + \"Parameters: INDEX (must be a positive integer) or NAME, AMOUNT, REASON\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        + \"Example 1 (index): \" + COMMAND_WORD + \" 1, 3000.00, bonus\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        + \"Example 2 (name): \" + COMMAND_WORD + \" /n john, 150.00, transport\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"The benefits for the specified person is as below\\n%s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    private final Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    private final Benefit benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"     * Creates a BenefitCommand to add benefits","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"     * to the salary of the person specified by the index.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"     * @param index The index of the employee to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"     * @param benefit The benefit.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    public BenefitCommand(Index index, Benefit benefit) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        this.benefit \u003d benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * Creates a BenefitCommand to add benefits","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     * to the salary of the person specified by the name.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"     * @param name The name of the employee to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"     * @param benefit The benefit.","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    public BenefitCommand(NameContainsKeywordsPredicate name, Benefit benefit) {","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        this.benefit \u003d benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"            return executeByIndex(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"            return executeByName(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by index.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"     * @return The command result in string format.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        Salary salary \u003d employeeToCalculate.getSalary();","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"        salary.addBenefit(benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(person -\u003e person.equals(employeeToCalculate));","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS, salary.getBenefitsString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by name.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"     * @return The command result in string format.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"            Person employeeToCalculate \u003d lastShownList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"            Salary salary \u003d employeeToCalculate.getSalary();","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"            salary.addBenefit(benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"            model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS, salary.getBenefitsString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_DEDUCT,","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"            lastShownList.size()), indexes);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof BenefitCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand otherDeductCommand \u003d (BenefitCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null \u0026\u0026 otherDeductCommand.index !\u003d null \u0026\u0026 benefit !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"            \u0026\u0026 otherDeductCommand.benefit !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"            return index.equals(otherDeductCommand.index)","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 benefit.equals(otherDeductCommand.benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"        if (name !\u003d null \u0026\u0026 otherDeductCommand.name !\u003d null \u0026\u0026 benefit !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"            \u0026\u0026 otherDeductCommand.benefit !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"            return name.equals(otherDeductCommand.name)","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 benefit.equals(otherDeductCommand.benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"        return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"                .add(\"benefit\", benefit)","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"            assert name !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"                .add(\"benefit\", benefit)","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":166}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    private final List\u003cInteger\u003e indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    /** The application should read a specific field of a particular employee. */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    private final boolean read;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    private final String fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        this.read \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        this.read \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"     * To store read field and set read to true to display a different person card.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"    public CommandResult(String feedbackToUser, boolean read, String fieldToRead) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        this.read \u003d read;","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult(String feedbackToUser, List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"        this.read \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"        this.fieldToRead \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"    public String getFieldToRead() {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"        return fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"    public boolean isRead() {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"        return read;","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"    public List\u003cInteger\u003e getIndexes() {","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        return this.indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"WeeMingQing":21,"-":83,"Leb14":28}},{"path":"src/main/java/seedu/address/logic/commands/DeductCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_DEDUCT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":" * Adds a deduction to the salary of the person identified using it\u0027s","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" * displayed index or name from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"public class DeductCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    public static final String COMMAND_WORD \u003d \"deduct\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"            + \": add deductions to the salary of the person identified \"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"            + \"by the index number or name used in the last person listing.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"            + \"Parameters: INDEX (must be a positive integer) or NAME, AMOUNT, REASON\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"            + \"Example 1 (index): \" + COMMAND_WORD + \" 1, 200.00, cpf\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"            + \"Example 2 (name): \" + COMMAND_WORD + \" /n john, 150.00, absence\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"The deductions for the specified person is as below\\n%s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    private final Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"     * Creates a DeductCommand to add deductions","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"     * to the salary of the person specified by the index.","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"     * @param index The index of the employee to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"     * @param deduction The deduction.","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"    public DeductCommand(Index index, Deduction deduction) {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        this.deduction \u003d deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"     * Creates a DeductCommand to add deductions","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * to the salary of the person specified by the name.","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     * @param name The name of the employee to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"     * @param deduction The deduction.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"    public DeductCommand(NameContainsKeywordsPredicate name, Deduction deduction) {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        this.deduction \u003d deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"            return executeByIndex(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"            return executeByName(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by index.","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"     * @return A command result in which the deductions of the person is shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        Salary salary \u003d employeeToCalculate.getSalary();","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        salary.addDeduction(deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(person -\u003e person.equals(employeeToCalculate));","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS, salary.getDeductionsString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by name.","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"     * @return A command result in which the deductions of the person is shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"            Person employeeToCalculate \u003d lastShownList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"            Salary salary \u003d employeeToCalculate.getSalary();","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"            salary.addDeduction(deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"            model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS, deduction.toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_DEDUCT,","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"            lastShownList.size()), indexes);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof DeductCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"        DeductCommand otherDeductCommand \u003d (DeductCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null \u0026\u0026 otherDeductCommand.index !\u003d null \u0026\u0026 deduction !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherDeductCommand.deduction !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"            return index.equals(otherDeductCommand.index)","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 deduction.equals(otherDeductCommand.deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"        if (name !\u003d null \u0026\u0026 otherDeductCommand.name !\u003d null \u0026\u0026 deduction !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherDeductCommand.deduction !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"            return name.equals(otherDeductCommand.name)","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 deduction.equals(otherDeductCommand.deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"        return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"                .add(\"deduction\", deduction)","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"            assert name !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"                .add(\"deduction\", deduction)","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":164}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_DELETE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"            + \": Deletes the employee identified by the index number used in the displayed employee list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_USAGE_FOR_NAME \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            + \": Deletes the employee identified by the name used in the displayed employee list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            + \"Parameters: n/NAME (must be present)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/John\";","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Employee: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    /* The name of the employee to be deleted*/","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"     * The constructor for DeleteCommand to take in index","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"     * @param targetIndex The index of the employee to be deleted","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for DeleteCommand to take in name instead of index","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"     * @param name The name of the employee to be deleted","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"    public DeleteCommand(NameContainsKeywordsPredicate name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"        if (targetIndex \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"            return this.deleteByName(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"        return this.deleteByIndex(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        if ((this.targetIndex \u003d\u003d null \u0026\u0026 otherDeleteCommand.targetIndex !\u003d null)","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"                || (this.targetIndex !\u003d null \u0026\u0026 otherDeleteCommand.targetIndex \u003d\u003d null)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"        if ((this.name \u003d\u003d null \u0026\u0026 otherDeleteCommand.name !\u003d null)","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"                || (this.name !\u003d null \u0026\u0026 otherDeleteCommand.name \u003d\u003d null)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"        if (this.targetIndex !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"        return this.name.equals(otherDeleteCommand.name);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"                    .add(\"targetName\", name)","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"                    .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"     * Deletes the employee identified by the index number used in the displayed employee list.","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"     * @return A command result that contains the message to be displayed to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult deleteByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"        Person employeeToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"        model.deletePerson(employeeToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(employeeToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"     * Deletes the employee identified by the name used in the displayed employee list.","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"     * @return A command result that contains the message to be displayed to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult deleteByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cPerson\u003e fullList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"            Person employeeToDelete \u003d fullList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"            model.deletePerson(employeeToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(employeeToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_DELETE,","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"                model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"WeeMingQing":71,"jibtaf":16,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":" * Edits the details of an existing employee in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the employee identified \"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            + \"by the index number used in the displayed employee list. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"            + \"[\" + PREFIX_BANK_ACCOUNT + \" BANK_ACCOUNT] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            + \"[\" + PREFIX_JOIN_DATE + \" JOIN_DATE] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            + \"[\" + PREFIX_SALARY + \" SALARY] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"            + \"[\" + PREFIX_ANNUAL_LEAVE + \" ANNUAL_LEAVE]\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_PHONE + \" 91234568 \"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Employee: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This employee already exists in the list.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_EDIT_LEAVE_ERROR \u003d \"The total number of days of leave you are trying to\"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"            + \" change to cannot be lesser than the number of days of leave \"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"            + \"that has already been added to the employee.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    private final EditEmployeeDescriptor editEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"     * Creates an EditCommand to edit the specified employee at {@code index}.","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"     * @param editEmployeeDescriptor details to edit the employee with","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    public EditCommand(Index index, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(editEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        this.editEmployeeDescriptor \u003d new EditEmployeeDescriptor(editEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        Person employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d createEditedEmployee(employeeToEdit, editEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        if (!employeeToEdit.isSamePerson(editedEmployee) \u0026\u0026 model.hasPerson(editedEmployee)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"        if (employeeToEdit.getAnnualLeave().numOfLeaveUsedForCurrYear()","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"                \u003e editedEmployee.getAnnualLeave().getTotalNumOfLeave()","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"                || employeeToEdit.getAnnualLeave().numOfLeaveUsedForNextYear()","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"                \u003e editedEmployee.getAnnualLeave().getTotalNumOfLeave()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(MESSAGE_EDIT_LEAVE_ERROR);","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        model.setPerson(employeeToEdit, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedEmployee)));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"     * Creates and returns an {@code Employee} with the details of {@code employeeToEdit}","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"     * edited with {@code editEmployeeDescriptor}.","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"    private static Person createEditedEmployee(Person employeeToEdit, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"        assert employeeToEdit !\u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"        Name updatedName \u003d editEmployeeDescriptor.getName().orElse(employeeToEdit.getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"        Phone updatedPhone \u003d editEmployeeDescriptor.getPhone().orElse(employeeToEdit.getPhone());","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        Email updatedEmail \u003d editEmployeeDescriptor.getEmail().orElse(employeeToEdit.getEmail());","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        Address updatedAddress \u003d editEmployeeDescriptor.getAddress().orElse(employeeToEdit.getAddress());","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        BankAccount updatedBankAccount \u003d editEmployeeDescriptor.getBankAccount()","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"            .orElse(employeeToEdit.getBankAccount());","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"        JoinDate updatedJoinDate \u003d editEmployeeDescriptor.getJoinDate()","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"            .orElse(employeeToEdit.getJoinDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"        Salary updatedSalary \u003d editEmployeeDescriptor.getSalary()","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"            .orElse(employeeToEdit.getSalary());","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"        AnnualLeave updatedAnnualLeave \u003d editEmployeeDescriptor.getAnnualLeave()","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"            .orElse(employeeToEdit.getAnnualLeave());","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBankAccount, updatedJoinDate,","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"            updatedSalary, updatedAnnualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 editEmployeeDescriptor.equals(otherEditCommand.editEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"                .add(\"editEmployeeDescriptor\", editEmployeeDescriptor)","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"     * Stores the details to edit the employee with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"     * corresponding field value of the employee.","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"    public static class EditEmployeeDescriptor {","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"        private AnnualLeave annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"        private BankAccount bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"        private JoinDate joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"        private Salary salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"jibtaf"},"content":"        public EditEmployeeDescriptor() {}","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"jibtaf"},"content":"        public EditEmployeeDescriptor(EditEmployeeDescriptor toCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":180,"author":{"gitId":"jibtaf"},"content":"            setAnnualLeave(toCopy.annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"jibtaf"},"content":"            setBankAccount(toCopy.bankAccount);","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"            setJoinDate(toCopy.joinDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"jibtaf"},"content":"            setSalary(toCopy.salary);","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"jibtaf"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, annualLeave, bankAccount, joinDate, salary);","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"jibtaf"},"content":"        public void setBankAccount(BankAccount bankAccount) {","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"jibtaf"},"content":"            this.bankAccount \u003d bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"jibtaf"},"content":"        public Optional\u003cBankAccount\u003e getBankAccount() {","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"jibtaf"},"content":"            return Optional.ofNullable(bankAccount);","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"jibtaf"},"content":"        public void setJoinDate(JoinDate joinDate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":234,"author":{"gitId":"jibtaf"},"content":"            this.joinDate \u003d joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":235,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":236,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":237,"author":{"gitId":"jibtaf"},"content":"        public Optional\u003cJoinDate\u003e getJoinDate() {","lastModifiedDate":"2023-10-16"},{"lineNumber":238,"author":{"gitId":"jibtaf"},"content":"            return Optional.ofNullable(joinDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":239,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":240,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"jibtaf"},"content":"        public void setSalary(Salary salary) {","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"jibtaf"},"content":"            this.salary \u003d salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":245,"author":{"gitId":"jibtaf"},"content":"        public Optional\u003cSalary\u003e getSalary() {","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"jibtaf"},"content":"            return Optional.ofNullable(salary);","lastModifiedDate":"2023-10-16"},{"lineNumber":247,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"jibtaf"},"content":"        public void setAnnualLeave(AnnualLeave annualLeave) {","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"jibtaf"},"content":"            this.annualLeave \u003d annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"jibtaf"},"content":"        public Optional\u003cAnnualLeave\u003e getAnnualLeave() {","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"jibtaf"},"content":"            return Optional.ofNullable(annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"jibtaf"},"content":"            if (!(other instanceof EditEmployeeDescriptor)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"jibtaf"},"content":"            EditEmployeeDescriptor otherEditEmployeeDescriptor \u003d (EditEmployeeDescriptor) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"jibtaf"},"content":"            return Objects.equals(name, otherEditEmployeeDescriptor.name)","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditEmployeeDescriptor.phone)","lastModifiedDate":"2023-10-16"},{"lineNumber":271,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditEmployeeDescriptor.email)","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditEmployeeDescriptor.address)","lastModifiedDate":"2023-10-16"},{"lineNumber":273,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(bankAccount, otherEditEmployeeDescriptor.bankAccount)","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(joinDate, otherEditEmployeeDescriptor.joinDate)","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(salary, otherEditEmployeeDescriptor.salary)","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(annualLeave, otherEditEmployeeDescriptor.annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":286,"author":{"gitId":"jibtaf"},"content":"                    .add(\"bankAccount\", bankAccount)","lastModifiedDate":"2023-10-16"},{"lineNumber":287,"author":{"gitId":"jibtaf"},"content":"                    .add(\"joinDate\", joinDate)","lastModifiedDate":"2023-10-16"},{"lineNumber":288,"author":{"gitId":"jibtaf"},"content":"                    .add(\"salary\", salary)","lastModifiedDate":"2023-10-16"},{"lineNumber":289,"author":{"gitId":"jibtaf"},"content":"                    .add(\"annualLeave\", annualLeave)","lastModifiedDate":"2023-10-16"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jibtaf":104,"WeeMingQing":10,"applepiofmyeye":4,"-":175}},{"path":"src/main/java/seedu/address/logic/commands/PayrollCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_PAYROLL;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":" * Calculates the payroll of the person identified using it\u0027s","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":" * displayed index or name from the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"public class PayrollCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String COMMAND_WORD \u003d \"payroll\";","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"            + \": calculates the payroll of the person identified \"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"            + \"by the index number or name used in the last person listing.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"            + \"Parameter: INDEX (must be a positive integer) or NAME\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"            + \"Example 1 (index): \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"            + \"Example 2 (name): \" + COMMAND_WORD + \" /n john\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"The payroll detail for the specified person is as below\\n%s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"     * Creates a PayrollCommand to calculate the payroll","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"     * of the person specified by the index.","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param index The index of the employee to be deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollCommand(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"     * Creates a PayrollCommand to calculate the payroll","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"     * of the person specified by the name.","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param name The name of the employee to be deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollCommand(NameContainsKeywordsPredicate name) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Kevin-Liusx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Kevin-Liusx"},"content":"            return executeByIndex(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Kevin-Liusx"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Kevin-Liusx"},"content":"            return executeByName(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Kevin-Liusx"},"content":"     * Calculate the payroll of the employee identified by the index number used in the displayed employee list.","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"Kevin-Liusx"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"    public CommandResult executeByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"Kevin-Liusx"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll monthPayroll \u003d new Payroll(employeeToCalculate.getSalary());","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"        employeeToCalculate.addPayroll(monthPayroll);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"        model.updateFilteredPersonList(person -\u003e person.equals(employeeToCalculate));","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Kevin-Liusx"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"                monthPayroll.calculatePayrollString()), List.of(index.getOneBased()));","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"Kevin-Liusx"},"content":"     * Calculate the payroll of the employee identified by the name used in the displayed employee list.","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"Kevin-Liusx"},"content":"    public CommandResult executeByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"Kevin-Liusx"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"Kevin-Liusx"},"content":"            Person employeeToCalculate \u003d lastShownList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"Kevin-Liusx"},"content":"            Payroll monthPayroll \u003d new Payroll(employeeToCalculate.getSalary());","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"Kevin-Liusx"},"content":"            model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"Kevin-Liusx"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"                    monthPayroll.calculatePayrollString()), indexes);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_PAYROLL,","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"                lastShownList.size()), indexes);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"Kevin-Liusx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"Kevin-Liusx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"Kevin-Liusx"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"Kevin-Liusx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"Kevin-Liusx"},"content":"        if (!(other instanceof PayrollCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"Kevin-Liusx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand otherPayrollCommand \u003d (PayrollCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"Kevin-Liusx"},"content":"        if ((this.index !\u003d null \u0026\u0026 otherPayrollCommand.index \u003d\u003d null)","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"Kevin-Liusx"},"content":"                || (this.index \u003d\u003d null \u0026\u0026 otherPayrollCommand.index !\u003d null)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"Kevin-Liusx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"Kevin-Liusx"},"content":"        if ((this.name !\u003d null \u0026\u0026 otherPayrollCommand.name \u003d\u003d null)","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"Kevin-Liusx"},"content":"                || (this.name \u003d\u003d null \u0026\u0026 otherPayrollCommand.name !\u003d null)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"Kevin-Liusx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"Kevin-Liusx"},"content":"        if (this.index !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"Kevin-Liusx"},"content":"            return index.equals(otherPayrollCommand.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Kevin-Liusx"},"content":"        assert this.name !\u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.name.equals(otherPayrollCommand.name);","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kevin-Liusx":147}},{"path":"src/main/java/seedu/address/logic/commands/PayslipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.PaySlipGenerator;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":" * Generates a payslip for an employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"public class PayslipCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    public static final String COMMAND_WORD \u003d \"payslip\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Generates a payslip in PDF format for the employee \"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"            + \"identified by the index number used in the displayed employee list. \"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_PAYSLIP_SUCCESS \u003d \"Payslip generated for Employee: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"     * Creates a PayslipCommand to generate a payslip for the specified employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"     * @param index of the person in the filtered person list to generate a payslip for.","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    public PayslipCommand(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        Person personToGenerate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            PaySlipGenerator.generateReport(personToGenerate);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(\"Template file for the payslip is not found\");","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_PAYSLIP_SUCCESS, personToGenerate.getName().toString()));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof PayslipCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        PayslipCommand otherPayslipCommand \u003d (PayslipCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        return index.equals(otherPayslipCommand.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"            .add(\"index\", index)","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"            .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":78}},{"path":"src/main/java/seedu/address/logic/commands/ReadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":" * Reads a specific piece of information of a particular employee","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":" * and display it.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"public class ReadCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    public static final String COMMAND_WORD \u003d \"read\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"            + \": Read a specific information of a particular employee \"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"            + \"by the index number used in the last person listing and the specific field name. \"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"            + \"The app will then display the information accordingly.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 b\";","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_READ_PERSON_SUCCESS \u003d \"Read %s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    private final String field;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a ReadCommand to read the information of the specified field from","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"     * a person at the given index.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the person in the last displayed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"     * @param field The field to read (e.g., \"p\" for phone, \"a\" for address, \"e\" for","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"     *              email).","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    public ReadCommand(Index index, String field) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        requireNonNull(index, field);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        this.field \u003d field;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    public String getField() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        return this.field;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        Person personToRead \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        String fieldStr \u003d fieldValueToString(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"        model.setSpecificPersonToDisplay(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        return new CommandResult(String.format(MESSAGE_READ_PERSON_SUCCESS, field), true, fieldStr);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"     * Returns a string representation of the specific field of a person.","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     * @param person The person to retrieve the field from.","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     * @return The information specified by the field.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     * @throws CommandException if the field is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"    public String fieldValueToString(Person person) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        switch (field) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        case \"phone\":","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"            return person.getPhone().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        case \"address\":","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"            return person.getAddress().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        case \"email\":","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"            return person.getEmail().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        case \"bank account\":","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"            return person.getBankAccount().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        case \"join date\":","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"            return person.getJoinDate().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        case \"salary\":","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"            return person.getSalary().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        case \"annual leave\":","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"            return \"Total Annual Leave: \" + person.getAnnualLeave().value + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"                    + person.getAnnualLeave().printListLeaveTaken();","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FIELD_TO_READ);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"        if (!(other instanceof ReadCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"        ReadCommand otherReadCommand \u003d (ReadCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"        return targetIndex.equals(otherReadCommand.targetIndex) \u0026\u0026 field.equals(otherReadCommand.getField());","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"WeeMingQing":2,"applepiofmyeye":4,"Leb14":107}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"                PREFIX_ADDRESS, PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_SALARY, PREFIX_ANNUAL_LEAVE);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"                PREFIX_ADDRESS, PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_SALARY, PREFIX_ANNUAL_LEAVE)","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"                PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_ANNUAL_LEAVE, PREFIX_SALARY);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        BankAccount bankAccount \u003d ParserUtil.parseBankAccount(argMultimap.getValue(PREFIX_BANK_ACCOUNT).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        JoinDate joinDate \u003d ParserUtil.parseJoinDate(argMultimap.getValue(PREFIX_JOIN_DATE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        Salary salary \u003d ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        AnnualLeave annualLeave \u003d ParserUtil.parseAnnualLeave(argMultimap.getValue(PREFIX_ANNUAL_LEAVE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        Person person \u003d new Person(name, phone, email, address, bankAccount, joinDate, salary, annualLeave);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"     * in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Kevin-Liusx":4,"jibtaf":7,"applepiofmyeye":10,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddLeaveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_FROM;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_TO;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.AddLeaveCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":" * Parses input arguments and creates a new AddLeaveCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"public class AddLeaveCommandParser implements Parser\u003cAddLeaveCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLeaveCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"     * and returns an AddLeaveCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForAll \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_ON,","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"                PREFIX_ADD_ANNUAL_LEAVE_FROM, PREFIX_ADD_ANNUAL_LEAVE_TO);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isPresent()","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 (argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).isPresent()","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"                || argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).isPresent())) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForOn \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_ON);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForFromAndTo \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_FROM, PREFIX_ADD_ANNUAL_LEAVE_TO);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForOn.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"            return singleDayLeaveHandler(argMultimapForOn);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        } else if (argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).isPresent()","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"            return multipleDaysLeaveHandler(argMultimapForFromAndTo);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"     * Handles the command based on user input if user wish to add in a single day of leave for employee.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"     * @param argMultimapForOn The ArgumentMultimap consisting of the user input","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"     * @return AddLeaveCommand object for execution","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand singleDayLeaveHandler(ArgumentMultimap argMultimapForOn) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForOn.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimapForOn.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate date \u003d ParserUtil.stringToDate(argMultimapForOn.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"            return new AddLeaveCommand(index, date);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"            if (StringUtil.isInteger(argMultimapForOn.getPreamble())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DateTimeParseException de) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(Messages.MESSAGE_INVALID_DATE));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"     * Handles the command based on user input if user wish to add in multiple days of leave for employee.","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"     * @param argMultimapForFromAndTo The ArgumentMultimap consisting of the user input","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"     * @return AddLeaveCommand object for execution","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand multipleDaysLeaveHandler(ArgumentMultimap argMultimapForFromAndTo) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForFromAndTo.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimapForFromAndTo.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate startDate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"                    ParserUtil.stringToDate(argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate endDate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"                    ParserUtil.stringToDate(argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"            return new AddLeaveCommand(index, startDate, endDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"            if (StringUtil.isInteger(argMultimapForFromAndTo.getPreamble())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DateTimeParseException de) {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(Messages.MESSAGE_INVALID_DATE));","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"WeeMingQing":114}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.AddLeaveCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.BenefitCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.DeductCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.PayrollCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayslipCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"        case PayrollCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Kevin-Liusx"},"content":"            return new PayrollCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        case ReadCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"            return new ReadCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"        case AddLeaveCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"            return new AddLeaveCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        case PayslipCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"            return new PayslipCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"        case DeductCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"            return new DeductCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"        case BenefitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"            return new BenefitCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kevin-Liusx":4,"WeeMingQing":4,"jibtaf":12,"-":86,"Leb14":4}},{"path":"src/main/java/seedu/address/logic/parser/BenefitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REASON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.BenefitCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":" * Parses input arguments and creates a new BenefitCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"public class BenefitCommandParser implements Parser\u003cBenefitCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    public BenefitCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_VALUE, PREFIX_REASON);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        Reason reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        Benefit benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_VALUE, PREFIX_REASON);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_REASON).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            reason \u003d ParserUtil.parseReason(argMultimap.getValue(PREFIX_REASON).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Reason.MISSING_ALERT));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_VALUE).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"            benefit \u003d ParserUtil.parseBenefit(argMultimap.getValue(PREFIX_VALUE).get(), reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"            return new BenefitCommand(index, benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"                    BenefitCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"            return new BenefitCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)), benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":67}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/p\");","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/e\");","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"/a\");","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_BANK_ACCOUNT \u003d new Prefix(\"/b\");","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_JOIN_DATE \u003d new Prefix(\"/jd\");","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_SALARY \u003d new Prefix(\"/s\");","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_ANNUAL_LEAVE \u003d new Prefix(\"/l\");","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    public static final Prefix PREFIX_ADD_ANNUAL_LEAVE_ON \u003d new Prefix(\"/on\");","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    public static final Prefix PREFIX_ADD_ANNUAL_LEAVE_FROM \u003d new Prefix(\"/from\");","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    public static final Prefix PREFIX_ADD_ANNUAL_LEAVE_TO \u003d new Prefix(\"/to\");","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_VALUE \u003d new Prefix(\"/v\");","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_REASON \u003d new Prefix(\"/r\");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jibtaf":10,"WeeMingQing":3,"-":9}},{"path":"src/main/java/seedu/address/logic/parser/DeductCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REASON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.DeductCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":" * Parses input arguments and creates a new DeductCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"public class DeductCommandParser implements Parser\u003cDeductCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    public DeductCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_VALUE, PREFIX_REASON);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        Reason reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        Deduction deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_VALUE, PREFIX_REASON);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_REASON).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            reason \u003d ParserUtil.parseReason(argMultimap.getValue(PREFIX_REASON).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Reason.MISSING_ALERT));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_VALUE).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"            deduction \u003d ParserUtil.parseDeduction(argMultimap.getValue(PREFIX_VALUE).get(), reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"            return new DeductCommand(index, deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"                    DeductCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"            return new DeductCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)), deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":67}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"            if (StringUtil.isInteger(trimmedArgs)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent() \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"                String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"                String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"                return new DeleteCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE_FOR_NAME));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"WeeMingQing":24,"jibtaf":1,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"     * EditCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"                    PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_SALARY, PREFIX_ANNUAL_LEAVE);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"            PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_SALARY, PREFIX_ANNUAL_LEAVE);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_BANK_ACCOUNT).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setBankAccount(","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"                ParserUtil.parseBankAccount(argMultimap.getValue(PREFIX_BANK_ACCOUNT).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_JOIN_DATE).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setJoinDate(ParserUtil.parseJoinDate(argMultimap.getValue(PREFIX_JOIN_DATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_SALARY).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setSalary(ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_ANNUAL_LEAVE).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setAnnualLeave(","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"                ParserUtil.parseAnnualLeave(argMultimap.getValue(PREFIX_ANNUAL_LEAVE).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        if (!editEmployeeDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        return new EditCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jibtaf":26,"applepiofmyeye":3,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import me.xdrop.fuzzywuzzy.FuzzySearch;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":" * classes.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String bankAccount} into an {@code BankAccount}.","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code bankAccount} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"    public static BankAccount parseBankAccount(String bankAccount) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(bankAccount);","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"        String trimmedBankAccount \u003d bankAccount.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        if (!BankAccount.isValidBankAccount(trimmedBankAccount)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(BankAccount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"        return new BankAccount(trimmedBankAccount);","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String joinDate} into an {@code JoinDate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code joinDate} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"    public static JoinDate parseJoinDate(String joinDate) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(joinDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"        String trimmedJoinDate \u003d joinDate.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"        if (!JoinDate.isValidJoinDate(trimmedJoinDate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(JoinDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"        return new JoinDate(trimmedJoinDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String salary} into an {@code Salary}.","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code salary} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"    public static Salary parseSalary(String salary) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(salary);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"        String trimmedSalary \u003d salary.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"        if (!Salary.isValid(trimmedSalary)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"        return new Salary(trimmedSalary);","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String annualLeave} into an {@code AnnualLeave}.","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code annualLeave} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"    public static AnnualLeave parseAnnualLeave(String annualLeave) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"        String trimmedAnnualLeave \u003d annualLeave.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"        if (!AnnualLeave.isValidAnnualLeave(trimmedAnnualLeave)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(AnnualLeave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"        return new AnnualLeave(trimmedAnnualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"     * Returns LocalDate object from String","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"     * @param date The String containing date from user input","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"WeeMingQing"},"content":"     * @return LocalDate","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"WeeMingQing"},"content":"     * @throws DateTimeParseException if the format of String is wrong","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"    public static LocalDate stringToDate(String date) throws DateTimeParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"WeeMingQing"},"content":"        String dateFormat \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"WeeMingQing"},"content":"        return localDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"WeeMingQing"},"content":"     * Returns String from LocalDate object.","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"WeeMingQing"},"content":"     * @param date The LocalDate object","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"WeeMingQing"},"content":"     * @return String format of LocalDate object","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"WeeMingQing"},"content":"    public static String dateToString(LocalDate date) {","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"WeeMingQing"},"content":"        String dateFormat \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"WeeMingQing"},"content":"        String localDate \u003d date.format(formatter);","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"WeeMingQing"},"content":"        return localDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String reason} into an {@code Reason}.","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code reason} is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"    public static Reason parseReason(String reason) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"jibtaf"},"content":"        String trimmedReason \u003d reason.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"jibtaf"},"content":"        for (Reason r : Reason.values()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"jibtaf"},"content":"            String expected \u003d String.join(\" \", r.toString().split(\"_\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"jibtaf"},"content":"            if (FuzzySearch.tokenSetRatio(trimmedReason.toLowerCase(), expected.toLowerCase()) \u003e 50) {","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"jibtaf"},"content":"                return r;","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"jibtaf"},"content":"        throw new ParseException(Reason.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String deduction} into an {@code Deduction}.","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code deduction} is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"jibtaf"},"content":"    public static Deduction parseDeduction(String value, Reason reason) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"jibtaf"},"content":"        String trimmedDeduction \u003d value.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"jibtaf"},"content":"        if (!Deduction.isValid(trimmedDeduction)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Deduction.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"jibtaf"},"content":"        return new Deduction(trimmedDeduction, reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String benefit} into an {@code Benefit}.","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code benefit} is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"jibtaf"},"content":"    public static Benefit parseBenefit(String value, Reason reason) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"jibtaf"},"content":"        String trimmedBenefit \u003d value.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"jibtaf"},"content":"        if (!Benefit.isValid(trimmedBenefit)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Benefit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"jibtaf"},"content":"        return new Benefit(trimmedBenefit, reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"WeeMingQing":29,"jibtaf":99,"applepiofmyeye":10,"-":105}},{"path":"src/main/java/seedu/address/logic/parser/PayrollCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.PayrollCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":" * Parses input arguments and creates a new PayrollCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"public class PayrollCommandParser implements Parser\u003cPayrollCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"     * Parses the given {@code String} of arguments in the context of the PayrollCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"     * and returns a PayrollCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayrollCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"            return new PayrollCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"                String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"                String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"                return new PayrollCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayrollCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kevin-Liusx":48}},{"path":"src/main/java/seedu/address/logic/parser/PayslipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayslipCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" * Parses input arguments and creates a new PayslipCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"public class PayslipCommandParser implements Parser\u003cPayslipCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"     * Parses the given {@code String} of arguments in the context of the PayslipCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"     * and returns an PayslipCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    public PayslipCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayslipCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        return new PayslipCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":32}},{"path":"src/main/java/seedu/address/logic/parser/ReadCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" * Parses input arguments and creates a new ReadCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"public class ReadCommandParser implements Parser\u003cReadCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    private static final String p_field_name \u003d \"phone\";","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private static final String e_field_name \u003d \"email\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    private static final String j_field_name \u003d \"join date\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    private static final String a_field_name \u003d \"address\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    private static final String s_field_name \u003d \"salary\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    private static final String l_field_name \u003d \"annual leave\";","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    private static final String b_field_name \u003d \"bank account\";","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * Parses the given {@code String} of arguments in the context of the ReadCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * and returns a ReadCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    public ReadCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        String[] fields \u003d trimmedArgs.split(\"/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        if (fields.length \u003c 2) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        Index index \u003d ParserUtil.parseIndex(fields[0].trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        String fieldName \u003d fieldNameToString(fields[1]);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        return new ReadCommand(index, fieldName);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"     * Returns a string representation of the specific field name of a person.","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"     * @param fieldToRead The field name.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"     * @return The information specified by the field.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"     * @throws CommandException if the field is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"    public String fieldNameToString(String fieldToRead) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        switch (fieldToRead) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        case \"p\":","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"            return p_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        case \"a\":","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"            return a_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        case \"e\":","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"            return e_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"        case \"b\":","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"            return b_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        case \"l\":","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"            return l_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        case \"j\":","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"            return j_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"        case \"s\":","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"            return s_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_FIELD_TO_READ);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jibtaf":1,"Leb14":77}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"     * Replaces the given person {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"     * The person identity of {@code editedEmployee} must not be the same as","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"     * another existing person in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    public void setPerson(Person target, Person editedEmployee) {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        persons.setPerson(target, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jibtaf":6,"-":125}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"     * Replaces the given person {@code target} with {@code editedEmployee}.","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"     * The person identity of {@code editedEmployee} must not be the same as","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * another existing person in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    void setPerson(Person target, Person editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"     * Returns an array of index corresponding to the entries in the filtered person list","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"    List\u003cInteger\u003e getIndexOfFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"     * Sets a specific person to be displayed.","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"     * @param targetPerson The person that you want to set as the specific person to be displayed.","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"    void setSpecificPersonToDisplay(Person targetPerson);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"WeeMingQing":7,"jibtaf":4,"-":84,"Leb14":7}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"    public void setPerson(Person target, Person editedEmployee) {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"        addressBook.setPerson(target, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"     * internal list of","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"    public void setSpecificPersonToDisplay(Person targetPerson) {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"        requireNonNull(targetPerson);","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"        Predicate\u003cPerson\u003e indexEqualToTargetIndex \u003d person -\u003e person.equals(targetPerson);","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"        filteredPersons.setPredicate(indexEqualToTargetIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"    public List\u003cInteger\u003e getIndexOfFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c filteredPersons.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"WeeMingQing"},"content":"            if (predicate.test(filteredPersons.get(i))) {","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"WeeMingQing"},"content":"                indexes.add(i + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"        return indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WeeMingQing":13,"jibtaf":3,"applepiofmyeye":8,"-":140,"Leb14":7}},{"path":"src/main/java/seedu/address/model/person/AnnualLeave.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s annual leave in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAnnualLeave(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"public class AnnualLeave {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"            \"Number of days of annual leave remaining should only contain numerical digits. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"                + \"It should not contain dashes or spaces.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_LEAVE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"            \"The leave that you are trying to add is invalid.\\nCheck that \"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"            + \"the number of days of annual leave taken should not exceed the total limit and \\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"                    + \"you can only add leave for this year and next year.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_EXPIRED_LEAVE \u003d \"Date of the leave that you are trying to add is already over.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_DUPLICATE_LEAVE \u003d \"Some or all the leave(s) that you \"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            + \"are trying to add has already been added. Please check again.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_INVALID_LEAVE \u003d \"The end date of the leave must be after the start date.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"     * The first character of the annual leave must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    private List\u003cLocalDate\u003e leaveList;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a {@code AnnualLeave}.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"     * @param annualLeave A valid annual leave.","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"    public AnnualLeave(String annualLeave) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(annualLeave);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"        checkArgument(isValidAnnualLeave(annualLeave), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        value \u003d annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"        this.leaveList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns true if a given string is a valid number of days.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"    public static boolean isValidAnnualLeave(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d value;","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date : this.leaveList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"            String formattedDate \u003d date.format(formatter);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"            result +\u003d \" | \" + formattedDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof AnnualLeave)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"        AnnualLeave otherAnnualLeave \u003d (AnnualLeave) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"        return value.equals(otherAnnualLeave.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"     * Adds in a single day of leave.","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"    public void addLeave(LocalDate startDate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        this.leaveList.add(startDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"     * Adds in multiple days of leave.","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"    public void addLeave(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"        long numOfDays \u003d ChronoUnit.DAYS.between(startDate, endDate) + 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c numOfDays; i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"            this.leaveList.add(startDate.plusDays(i));","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"     * Returns true if the number of days of leave to be added does not exceed the remaining days of leave","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"     * that the emplyee has, else false.","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"     * @return true or false depending on whether the total number of days of leave is exceeded","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isValidAddLeave(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"        if (endDate.getYear() \u003e currentDate.getYear() + 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"        long numOfDays \u003d ChronoUnit.DAYS.between(startDate, endDate) + 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"        int numOfLeaveForCurrYear \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        int numOfLeaveForNextYear \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c numOfDays; i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"            if (startDate.plusDays(i).getYear() \u003d\u003d currentDate.getYear()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"                numOfLeaveForCurrYear +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"            } else if (startDate.plusDays(i).getYear() \u003d\u003d currentDate.getYear() + 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"                numOfLeaveForNextYear +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        if (numOfLeaveForCurrYear + this.numOfLeaveUsedForCurrYear() \u003c\u003d this.getTotalNumOfLeave()","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 numOfLeaveForNextYear + this.numOfLeaveUsedForNextYear() \u003c\u003d this.getTotalNumOfLeave()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"     * To get the number of days of leave remaining for the current year.","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"     * @return the number of days of leave left for the current year","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"    public int numOfLeaveLeftForCurrYear() {","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"        return this.getTotalNumOfLeave() - this.numOfLeaveUsedForCurrYear();","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"WeeMingQing"},"content":"     * To get the number of days of leave remaining for the next year.","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"WeeMingQing"},"content":"     * @return the number of days of leave left for the next year","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"WeeMingQing"},"content":"    public int numOfLeaveLeftForNextYear() {","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"WeeMingQing"},"content":"        return this.getTotalNumOfLeave() - this.numOfLeaveUsedForNextYear();","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"     * To get the number of days of leave used for the current year.","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"     * @return the number of days of leave used for the current year","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"WeeMingQing"},"content":"    public int numOfLeaveUsedForCurrYear() {","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"WeeMingQing"},"content":"        int numOfDays \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"            if (date.getYear() \u003d\u003d currentDate.getYear()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"                numOfDays +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"WeeMingQing"},"content":"        return numOfDays;","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"WeeMingQing"},"content":"     * To get the number of days of leave used for the next year.","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"WeeMingQing"},"content":"     * @return the number of days of leave used for the next year","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"WeeMingQing"},"content":"    public int numOfLeaveUsedForNextYear() {","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"WeeMingQing"},"content":"        int numOfDays \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"WeeMingQing"},"content":"            if (date.getYear() \u003d\u003d currentDate.getYear() + 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"WeeMingQing"},"content":"                numOfDays +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"WeeMingQing"},"content":"        return numOfDays;","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"WeeMingQing"},"content":"     * To get the total number of days of leave.","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"WeeMingQing"},"content":"     * @return the total number of days of leave","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"WeeMingQing"},"content":"    public int getTotalNumOfLeave() {","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"WeeMingQing"},"content":"        return parseInt(this.value);","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"WeeMingQing"},"content":"     * Returns true if the leave to be added has already been added before, else false.","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"WeeMingQing"},"content":"     * @return true or false depending on whether there are duplicate leave","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"WeeMingQing"},"content":"    public boolean containsDuplicateLeave(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate tempEndDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"WeeMingQing"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"WeeMingQing"},"content":"            tempEndDate \u003d startDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"WeeMingQing"},"content":"            tempEndDate \u003d endDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"WeeMingQing"},"content":"            if (!date.isBefore(startDate) \u0026\u0026 !date.isAfter(tempEndDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"WeeMingQing"},"content":"                return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"WeeMingQing"},"content":"        return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"WeeMingQing"},"content":"     * To get whether the employee is working or on leave on the current day.","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"WeeMingQing"},"content":"     * @return \"Working\" if the employee is not one leave, else return \"On Leave\"","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"WeeMingQing"},"content":"    public String getWorkingStatus() {","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"WeeMingQing"},"content":"            if (currentDate.equals(date)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"WeeMingQing"},"content":"                return \"On Leave\";","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"WeeMingQing"},"content":"        return \"Working\";","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"WeeMingQing"},"content":"     * Return the string for the dates of the leave for current year and next year.","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"WeeMingQing"},"content":"     * @return string for the dates of the leave for current year and next year","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"WeeMingQing"},"content":"    public String printListLeaveTaken() {","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"WeeMingQing"},"content":"        String datesForCurrYear \u003d \"Leave taken for current year: [ \";","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"WeeMingQing"},"content":"        String datesForNextYear \u003d \"Leave taken for next year: [ \";","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"WeeMingQing"},"content":"            if (date.getYear() \u003d\u003d currentDate.getYear()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"WeeMingQing"},"content":"                datesForCurrYear +\u003d \" \" + ParserUtil.dateToString(date) + \", \";","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"WeeMingQing"},"content":"            } else if (date.getYear() \u003d\u003d currentDate.getYear() + 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"WeeMingQing"},"content":"                datesForNextYear +\u003d \" \" + ParserUtil.dateToString(date) + \", \";","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"WeeMingQing"},"content":"        datesForCurrYear +\u003d \" ]\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"WeeMingQing"},"content":"        datesForNextYear +\u003d \" ]\";","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"WeeMingQing"},"content":"        return datesForCurrYear + datesForNextYear;","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"WeeMingQing"},"content":"    public void setLeaveList(List\u003cLocalDate\u003e list) {","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"WeeMingQing"},"content":"        this.leaveList \u003d list;","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"WeeMingQing":194,"jibtaf":6,"applepiofmyeye":58}},{"path":"src/main/java/seedu/address/model/person/BankAccount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s banAccount in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBankAccount(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"public class BankAccount {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"            \"Bank account should only contain numerical digits. It should not contain dashes or spaces.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{5,17}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a {@code BankAccount}.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"     * @param bankAccount A valid bank account.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"    public BankAccount(String bankAccount) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(bankAccount);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"        checkArgument(isValidBankAccount(bankAccount), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"        value \u003d bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns true if a given string is a valid bank account.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"    public static boolean isValidBankAccount(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof BankAccount)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        BankAccount otherBankAccount \u003d (BankAccount) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        return value.equals(otherBankAccount.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jibtaf":4,"applepiofmyeye":61}},{"path":"src/main/java/seedu/address/model/person/Benefit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s benefit of salary in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"public class Benefit extends Payment {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS_INVALID_REASON \u003d \"The reason for a benefit \"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"        + \"should only be one of the following:\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        + \"1. Transport Allowance\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        + \"2. Annual Bonus\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    private static final ArrayList\u003cReason\u003e REASONS_FOR_BENEFITS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        List.of(","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"            Reason.TRANSPORT_ALLOWANCE,","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"            Reason.ANNUAL_BONUS","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"        )","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    );","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    private final Reason reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Benefit}.","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"     * @param benefit A valid benefit.","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    public Benefit(String benefit, Reason reason) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        super(benefit);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        checkArgument(isValidReason(reason), MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"     * Returns true if a given reason is a valid reason for benefits.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    public boolean isValidReason(Reason test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        return REASONS_FOR_BENEFITS.contains(test);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"     * Returns true if the object is a valid benefit.","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        return Payment.isValid(value) \u0026\u0026 isValidReason(reason);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof Benefit)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        Benefit otherBenefit \u003d (Benefit) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        return value.equals(otherBenefit.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 reason.equals(otherBenefit.reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        return \"Benefit: $\" + value + \" (\" + reason + \")\";","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jibtaf":74}},{"path":"src/main/java/seedu/address/model/person/Deduction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s deduction of salary in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"public class Deduction extends Payment {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS_INVALID_REASON \u003d \"The reason for a deduction \"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"        + \"should only be one of the following:\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        + \"1. No Pay Leave\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        + \"2. Absence\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        + \"3. Employee CPF Deduction\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    private static final ArrayList\u003cReason\u003e REASONS_FOR_DEDUCTIONS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        List.of(","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"            Reason.NO_PAY_LEAVE,","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"            Reason.ABSENCE,","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"            Reason.EMPLOYEE_CPF_DEDUCTION","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"        )","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    );","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    private final Reason reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Deduction}.","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"     * @param value A valid deduction.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"     * @param reason A valid reason.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    public Deduction(String value, Reason reason) {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        super(value);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        checkArgument(isValidReason(reason), MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"     * Returns true if a given reason is a valid reason for deductions.","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    public boolean isValidReason(Reason test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        return REASONS_FOR_DEDUCTIONS.contains(test);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"     * Returns true if the object is a valid deduction.","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        return Payment.isValid(value) \u0026\u0026 isValidReason(reason);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof Deduction)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        Deduction otherDeduction \u003d (Deduction) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        return value.equals(otherDeduction.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 reason.equals(otherDeduction.reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        return \"Deduction: $\" + value + \" (\" + reason + \")\";","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jibtaf":77}},{"path":"src/main/java/seedu/address/model/person/JoinDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s join date in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJoinDate(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"public class JoinDate {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Join date should be in the form of DD/MM/YYYY. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"        + \"Eg. 12/02/2023 represents 12th Feb 2023\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a {@code JoinDate}.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"     * @param joinDate A valid join date in dd/mm/yyyy form.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"    public JoinDate(String joinDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(joinDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"        checkArgument(isValidJoinDate(joinDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"        value \u003d joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns true if a given string is a valid join date in dd/mm/yyyy form.","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    public static boolean isValidJoinDate(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\").parse(test);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof JoinDate)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        JoinDate otherJoinDate \u003d (JoinDate) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        return value.equals(otherJoinDate.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jibtaf":9,"applepiofmyeye":57}},{"path":"src/main/java/seedu/address/model/person/Payment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s payment in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"public class Payment {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"        \"Payment should only contain numerical digits. It should not contain dashes or spaces.\"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"            + \"It should be in the format of XXXXX.XX, i.e. 2 decimal places\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    /*","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"     * The first character of the salary must not be a whitespace,","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\\\\.\\\\d{2}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    public final String value;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Payment}.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"     * @param value A valid payment.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    public Payment(String value) {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"     * Returns true if a given string is a valid payment.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    public static boolean isValid(String test) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        return value;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof Payment)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        Payment otherPayment \u003d (Payment) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        return value.equals(otherPayment.value);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jibtaf":65}},{"path":"src/main/java/seedu/address/model/person/Payroll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":" * Represents an employee\u0027s payroll of the month.","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"public class Payroll {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"    private Salary salary;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"     * Constructs a {@code Payroll}.","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param salary This contains the details of the person\u0027s salary.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"     *               E.g. basic salary, deductions and bonuses.","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"    public Payroll(Salary salary) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"     * Calculates the net salary of a person.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return net salary.","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"    public double calculatePayroll() {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.salary.getNetSalary();","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"     * Returns the string representation of the net salary.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return string net salary.","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    public String calculatePayrollString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.salary.getNetSalaryString();","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"        if (!(other instanceof Payroll)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll otherDeduction \u003d (Payroll) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.salary.equals(otherDeduction.salary);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kevin-Liusx":49}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":" * immutable.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    private final Email email;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    private final AnnualLeave annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    private final BankAccount bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    private final JoinDate joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    private final Salary salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    private final ArrayList\u003cPayroll\u003e payrolls;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    public Person(Name name, Phone phone, Email email, Address address, BankAccount bankAccount, JoinDate joinDate,","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"            Salary salary, AnnualLeave annualLeave) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(name, phone, email, address, bankAccount, joinDate, salary, annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        this.bankAccount \u003d bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        this.joinDate \u003d joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        this.annualLeave \u003d annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrolls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    public BankAccount getBankAccount() {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        return bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    public JoinDate getJoinDate() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        return joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    public Salary getSalary() {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        return salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"    public AnnualLeave getAnnualLeave() {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        return annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"     * Adds a payroll to the payroll list of this person.","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param payroll Payroll to be added.","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"    public void addPayroll(Payroll payroll) {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrolls.add(payroll);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 bankAccount.equals(otherPerson.bankAccount)","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 joinDate.equals(otherPerson.joinDate)","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 salary.equals(otherPerson.salary)","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 annualLeave.equals(otherPerson.annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"        return Objects.hash(name, phone, email, address, bankAccount, joinDate, salary, annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"                .add(\"bankAccount\", bankAccount)","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"                .add(\"joinDate\", joinDate)","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"                .add(\"salary\", salary)","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"                .add(\"annualLeave\", annualLeave.value)","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kevin-Liusx":7,"jibtaf":32,"WeeMingQing":1,"applepiofmyeye":4,"-":101}},{"path":"src/main/java/seedu/address/model/person/Reason.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":" * Represents reasons for deductions or benefits.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"public enum Reason {","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"    ABSENCE,","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"    TRANSPORT_ALLOWANCE,","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"    NO_PAY_LEAVE,","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"    ANNUAL_BONUS,","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    EMPLOYEE_CPF_DEDUCTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    public static final String MISSING_ALERT \u003d \"Please specify your reason with /r prefix.\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        \"Reasons should only be one of the following:\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        + \"1. \" + ABSENCE.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        + \"2. \" + TRANSPORT_ALLOWANCE.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        + \"3. \" + NO_PAY_LEAVE.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        + \"4. \" + ANNUAL_BONUS.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        + \"5. \" + EMPLOYEE_CPF_DEDUCTION.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        + \"Please specify your reason.\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jibtaf":23}},{"path":"src/main/java/seedu/address/model/person/Salary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s salary in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"public class Salary extends Payment {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    private ArrayList\u003cDeduction\u003e deductions;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    private ArrayList\u003cBenefit\u003e benefits;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Salary}.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     * @param salary A valid basic salary.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    public Salary(String salary) {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        super(salary);","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a {@code Salary}.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"     * @param salary A valid basic salary.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"     * @param deductions A list of valid deductions.","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"     * @param benefits A list of valid benefits.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    public Salary(String salary, ArrayList\u003cDeduction\u003e deductions, ArrayList\u003cBenefit\u003e benefits) {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        super(salary);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        this.deductions \u003d deductions;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        this.benefits \u003d benefits;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"     * Calculates the total deductions of a person.","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"     * @return total deductions.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    public double getTotalDeductions() {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        for (Deduction deduction : deductions) {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"            total +\u003d Double.parseDouble(deduction.value);","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"     * Calculates the total benefits of a person.","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * @return total benefits.","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    public double getTotalBenefits() {","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        for (Benefit benefit : benefits) {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            total +\u003d Double.parseDouble(benefit.value);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"     * Calculates the net salary of a person.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"     * @return net salary.","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    public double getNetSalary() {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        double total \u003d Double.parseDouble(value);","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        total -\u003d getTotalDeductions();","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        total +\u003d getTotalBenefits();","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the net salary.","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"     * @return net salary string.","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"    public String getNetSalaryString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        String basicSalary \u003d \"Basic Pay: $\" + super.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"        String deductions \u003d \"Total Deductions: $\" + df.format(getTotalDeductions());","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Kevin-Liusx"},"content":"        String benefits \u003d \"Total Benefits: $\" + df.format(getTotalBenefits());","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"        String netSalary \u003d \"Net Salary: $\" + df.format(getNetSalary());","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"        return String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\", netSalary, basicSalary, deductions, benefits);","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"     * Adds a deduction to this salary.","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"     * @param d The deduction to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"    public void addDeduction(Deduction d) {","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"            deductions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"        deductions.add(d);","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the deductions.","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"     * @return deductions string.","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"    public String getDeductionsString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"            return \"NIL\";","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"        String deductionsString \u003d \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"        for (Deduction deduction : deductions) {","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"            deductionsString +\u003d i + \". \" + deduction.toString() + \"\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"            i++;","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        return deductionsString;","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"     * Adds a benefit to this salary.","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"     * @param b The benefit to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"    public void addBenefit(Benefit b) {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"            benefits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"        benefits.add(b);","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the benefits.","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"     * @return benefits string.","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"    public String getBenefitsString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"            return \"NIL\";","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"        String benefitsString \u003d \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"        for (Benefit benefit : benefits) {","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"            benefitsString +\u003d i + \". \" + benefit.toString() + \"\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"            i++;","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"        return benefitsString;","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof Salary)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"        Salary otherSalary \u003d (Salary) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"        // degenerates to Payment if deductions and benefits are null","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null \u0026\u0026 benefits \u003d\u003d null \u0026\u0026 otherSalary.deductions \u003d\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherSalary.benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"            return super.equals(other);","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"jibtaf"},"content":"        if (deductions !\u003d null \u0026\u0026 benefits !\u003d null \u0026\u0026 otherSalary.deductions !\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherSalary.benefits !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"jibtaf"},"content":"            return value.equals(otherSalary.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 deductions.equals(otherSalary.deductions)","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 benefits.equals(otherSalary.benefits);","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"jibtaf"},"content":"        if (deductions !\u003d null \u0026\u0026 benefits \u003d\u003d null \u0026\u0026 otherSalary.deductions !\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherSalary.benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"jibtaf"},"content":"            return value.equals(otherSalary.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 deductions.equals(otherSalary.deductions);","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null \u0026\u0026 benefits !\u003d null \u0026\u0026 otherSalary.deductions \u003d\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherSalary.benefits !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"jibtaf"},"content":"            return value.equals(otherSalary.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 benefits.equals(otherSalary.benefits);","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"jibtaf"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Kevin-Liusx":5,"jibtaf":151,"applepiofmyeye":34}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"     * Replaces the person {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * The person identity of {@code editedEmployee} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    public void setPerson(Person target, Person editedEmployee) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        if (!target.isSamePerson(editedEmployee) \u0026\u0026 contains(editedEmployee)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        internalList.set(index, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jibtaf":6,"-":144}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new BankAccount(\"1234567\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"                    new JoinDate(\"12/02/2023\"), new Salary(\"1000.00\"), new AnnualLeave(\"20\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new BankAccount(\"293737\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"                    new JoinDate(\"10/02/2003\"), new Salary(\"200.00\"), new AnnualLeave(\"10\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new BankAccount(\"129313\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"                    new JoinDate(\"20/03/2013\"), new Salary(\"3400.00\"), new AnnualLeave(\"3\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new BankAccount(\"34276382\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"                    new JoinDate(\"30/01/2020\"), new Salary(\"1300.00\"), new AnnualLeave(\"0\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new BankAccount(\"19382737\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"                    new JoinDate(\"13/09/2023\"), new Salary(\"2010.00\"), new AnnualLeave(\"2\")),","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new BankAccount(\"10239871\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"                    new JoinDate(\"03/12/2012\"), new Salary(\"3000.00\"), new AnnualLeave(\"1\"))","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jibtaf":6,"applepiofmyeye":10,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    private final String bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"    private final String joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"    private final String salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"    private final String annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"            @JsonProperty(\"bankAccount\") String bankAccount, @JsonProperty(\"joinDate\") String joinDate,","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"            @JsonProperty(\"salary\") String salary, @JsonProperty(\"annualLeave\") String annualLeave) {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"        this.bankAccount \u003d bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"        this.joinDate \u003d joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        this.annualLeave \u003d annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"        bankAccount \u003d source.getBankAccount().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"        joinDate \u003d source.getJoinDate().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"        salary \u003d source.getSalary().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"        annualLeave \u003d source.getAnnualLeave().toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"     * {@code Person} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"     *                               the adapted person.","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"        if (!BankAccount.isValidBankAccount(bankAccount)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"            throw new IllegalValueException(BankAccount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"        final BankAccount modelBankAccount \u003d new BankAccount(bankAccount);","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"        if (!JoinDate.isValidJoinDate(joinDate)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"            throw new IllegalValueException(JoinDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"        final JoinDate modelJoinDate \u003d new JoinDate(joinDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"        if (!Salary.isValid(salary)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"            throw new IllegalValueException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"applepiofmyeye"},"content":"        final Salary modelSalary \u003d new Salary(salary);","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"        if (!AnnualLeave.isValidAnnualLeave(getTotalNumOfLeaves(annualLeave))) {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"applepiofmyeye"},"content":"            throw new IllegalValueException(AnnualLeave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        final AnnualLeave modelAnnualLeave \u003d new AnnualLeave(getTotalNumOfLeaves(annualLeave));","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"        modelAnnualLeave.setLeaveList(stringToLeaveListConverter(annualLeave));","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"applepiofmyeye"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelBankAccount, modelJoinDate, modelSalary,","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"applepiofmyeye"},"content":"                modelAnnualLeave);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"    public List\u003cLocalDate\u003e stringToLeaveListConverter(String annualLeave) {","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cLocalDate\u003e leaveList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"        String args \u003d annualLeave.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"        String[] dates \u003d args.split(\" \\\\| \");","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 1; i \u003c dates.length; i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"            System.out.println(ParserUtil.stringToDate(dates[i]));","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"            leaveList.add(ParserUtil.stringToDate(dates[i]));","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"        return leaveList;","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"    public String getTotalNumOfLeaves(String annualLeave) {","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"        String args \u003d annualLeave.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"        String[] dates \u003d args.split(\" \\\\| \");","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"        return dates[0];","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"WeeMingQing":22,"jibtaf":4,"applepiofmyeye":37,"-":91}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    private boolean isRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    private List\u003cInteger\u003e indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this.indexes);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"    private void handleRead(String fieldToRead) {","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"Leb14"},"content":"        personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), fieldToRead);","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"Leb14"},"content":"     * Reset the MainWindow after displaying PersonCardWithSpecificField","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"Leb14"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"Leb14"},"content":"    private void resetMainWindow() {","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"Leb14"},"content":"        personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"Leb14"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"Leb14"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"Leb14"},"content":"            resetMainWindow();","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"WeeMingQing"},"content":"            this.indexes \u003d commandResult.getIndexes();","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"WeeMingQing"},"content":"            this.personListPanel.indexesSetter(this.indexes);","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"Leb14"},"content":"            if (commandResult.isRead()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"Leb14"},"content":"                handleRead(commandResult.getFieldToRead());","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"WeeMingQing":5,"-":196,"Leb14":23}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"    private Label bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"    private Label joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"    private Label salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"    private Label annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"    private Label workingStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"     * display.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"        bankAccount.setText(person.getBankAccount().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"        joinDate.setText(person.getJoinDate().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"        salary.setText(person.getSalary().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"        annualLeave.setText(person.getAnnualLeave().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        setWorkingStatus(person.getAnnualLeave().getWorkingStatus());","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"     * Creates a {@code PersonCode} with the given {@code Person}, index to","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"     * display and list of indexes.","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"    public PersonCard(Person person, int displayedIndex, List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        super(FXML);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        id.setText(indexes.get(displayedIndex - 1) + \". \");","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"        bankAccount.setText(person.getBankAccount().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"        joinDate.setText(person.getJoinDate().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"        salary.setText(person.getSalary().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"        annualLeave.setText(person.getAnnualLeave().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        setWorkingStatus(person.getAnnualLeave().getWorkingStatus());","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"     * Set the style of the workingStatus label based on test","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"     * @param statusText of the employee on whether they are On Leave or Working","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"    public void setWorkingStatus(String statusText) {","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        if (\"Working\".equals(statusText)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"            workingStatus.setStyle(\"-fx-background-color: green; -fx-padding: 2;\"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"                    + \"-fx-font-family: \u0027Arial Black\u0027; -fx-font-size:13; -fx-background-radius: 3\");","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"            workingStatus.setStyle(\"-fx-background-color: #A50000; -fx-padding: 2;\"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"                    + \"-fx-font-family: \u0027Arial Black\u0027; -fx-font-size:13; -fx-background-radius: 3\");","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"        workingStatus.setText(statusText);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"WeeMingQing":34,"jibtaf":4,"applepiofmyeye":17,"-":51}},{"path":"src/main/java/seedu/address/ui/PersonCardWithSpecificField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" * An UI component that displays specific information of a {@code Person}.","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"public class PersonCardWithSpecificField extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    private static final String FXML \u003d \"SpecificPersonListCard.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    public final Person person;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    private Label name;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    private Label id;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    private Label fieldLabel;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"     * Creates a {@code PersonCode} with the given {@code Person},index and specific","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"     * field to display.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public PersonCardWithSpecificField(Person person, int displayedIndex, String fieldToRead) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        fieldLabel.setText(fieldToRead);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"applepiofmyeye":7,"Leb14":42}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    private final String fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    private List\u003cInteger\u003e indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList} and list of indexes.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        if (indexes !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell(indexes));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"        this.fieldToRead \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, String fieldToRead) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        personListView.setCellFactory(listView -\u003e new SpecifyPersonListViewCell());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        private List\u003cInteger\u003e indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        public PersonListViewCell() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"            this.indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        public PersonListViewCell(List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"            this.indexes \u003d indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"                if (indexes !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"                    setGraphic(new PersonCard(person, getIndex() + 1, this.indexes).getRoot());","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"     * Sets the list of indexes to be displayed.","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"    public void indexesSetter(List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"        if (indexes !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell(indexes));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        personListView.requestLayout();","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"     * Custom {@code ListCell} that displays the graphics of","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"     * a {@code Person} using a {@code PersonCardWithSpecificField}.","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    class SpecifyPersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"                setText(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"                setGraphic(new PersonCardWithSpecificField(person, getIndex() + 1, fieldToRead).getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"WeeMingQing":30,"jibtaf":3,"-":58,"Leb14":29}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"jibtaf":1,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jibtaf":2,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"      \u003cLabel fx:id\u003d\"workingStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$workingStatus\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"      \u003cLabel fx:id\u003d\"bankAccount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$bankAccount\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"      \u003cLabel fx:id\u003d\"salary\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$salary\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"      \u003cLabel fx:id\u003d\"annualLeave\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$annualLeave\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"      \u003cLabel fx:id\u003d\"joinDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$joinDate\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WeeMingQing":9,"jibtaf":4,"-":30}},{"path":"src/main/resources/view/SpecificPersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"      \u003cLabel fx:id\u003d\"fieldLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$fieldToRead\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Leb14":33}},{"path":"src/test/java/seedu/address/commons/util/PaySlipGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"class PaySlipGeneratorTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    void getFileName() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        assertTrue(\"alice_pauline.pdf\".equals(PaySlipGenerator.getFileName(ALICE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        assertTrue(\"benson_meier.pdf\".equals(PaySlipGenerator.getFileName(BENSON)));","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        assertFalse(\"Alice-Pauline.pdf\".equals(PaySlipGenerator.getFileName(ALICE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        assertFalse(\"BensonMeier.pdf\".equals(PaySlipGenerator.getFileName(BENSON)));","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    void getFieldMap() {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"        Map\u003cString, String\u003e fieldMap \u003d PaySlipGenerator.getFieldMap(ALICE);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"employerName\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"employeeName\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"basicPay\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"totalDeductions\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"netPay\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"employerName\").equals(\"XXX Limited\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"employeeName\").equals(\"Alice Pauline\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"basicPay\").equals(\"1500.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"totalDeductions\").equals(\"0.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"netPay\").equals(\"1500.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":39}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKACCOUNT_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOINDATE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"            + ADDRESS_DESC_AMY + BANKACCOUNT_DESC_AMY + JOINDATE_DESC_AMY + SALARY_DESC_AMY + ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"applepiofmyeye"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jibtaf":6,"applepiofmyeye":1,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"        public void setPerson(Person target, Person editedEmployee) {","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"        public List\u003cInteger\u003e getIndexOfFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"        public void setSpecificPersonToDisplay(Person targetPerson) {","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jibtaf":7,"-":203,"Leb14":5}},{"path":"src/test/java/seedu/address/logic/commands/AddLeaveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"public class AddLeaveCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"WeeMingQing":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_BANKACCOUNT_AMY \u003d \"1234567890234\";","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_BANKACCOUNT_BOB \u003d \"01823819\";","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    public static final String VALID_JOINDATE_AMY \u003d \"10/05/2003\";","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    public static final String VALID_JOINDATE_BOB \u003d \"20/08/2012\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    public static final String VALID_SALARY_AMY \u003d \"4000.00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    public static final String VALID_SALARY_BOB \u003d \"2500.00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_ANNUALLEAVE_AMY \u003d \"4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_ANNUALLEAVE_BOB \u003d \"2\";","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"    public static final String BANKACCOUNT_DESC_AMY \u003d \" \" + PREFIX_BANK_ACCOUNT + \" \" + VALID_BANKACCOUNT_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    public static final String BANKACCOUNT_DESC_BOB \u003d \" \" + PREFIX_BANK_ACCOUNT + \" \" + VALID_BANKACCOUNT_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"    public static final String JOINDATE_DESC_AMY \u003d \" \" + PREFIX_JOIN_DATE + \" \" + VALID_JOINDATE_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    public static final String JOINDATE_DESC_BOB \u003d \" \" + PREFIX_JOIN_DATE + \" \" + VALID_JOINDATE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    public static final String SALARY_DESC_AMY \u003d \" \" + PREFIX_SALARY + \" \" + VALID_SALARY_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    public static final String SALARY_DESC_BOB \u003d \" \" + PREFIX_SALARY + \" \" + VALID_SALARY_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    public static final String ANNUALLEAVE_DESC_AMY \u003d \" \" + PREFIX_ANNUAL_LEAVE + \" \" + VALID_ANNUALLEAVE_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    public static final String ANNUALLEAVE_DESC_BOB \u003d \" \" + PREFIX_ANNUAL_LEAVE + \" \" + VALID_ANNUALLEAVE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \" James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \" 911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \" bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    public static final String INVALID_BANKACCOUNT_DESC \u003d \" \" + PREFIX_BANK_ACCOUNT","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        + \" a91721\"; // \u0027a\u0027 not allowed in bankAccount","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"    public static final String INVALID_JOINDATE_DESC \u003d \" \" + PREFIX_JOIN_DATE + \" 10-923-10\"; // wrong date format","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"    public static final String INVALID_SALARY_DESC \u003d \" \" + PREFIX_SALARY","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        + \" a291\"; // \u0027a\u0027 not allowed in salary","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"    public static final String INVALID_ANNUALLEAVE_DESC \u003d \" \" + PREFIX_ANNUAL_LEAVE","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        + \" a19\"; // \u0027a\u0027 not allowed in annual leave","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        DESC_AMY \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"                .withBankAccount(VALID_BANKACCOUNT_AMY).withJoinDate(VALID_JOINDATE_AMY).withSalary(VALID_SALARY_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"                .withAnnualLeave(VALID_ANNUALLEAVE_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        DESC_BOB \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"                .withBankAccount(VALID_BANKACCOUNT_BOB).withJoinDate(VALID_JOINDATE_BOB).withSalary(VALID_SALARY_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"                .withAnnualLeave(VALID_ANNUALLEAVE_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jibtaf":26,"applepiofmyeye":10,"-":108,"Leb14":9}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"    public void equalsForIndex() {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"    public void equalsForName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        NameContainsKeywordsPredicate firstPersonName \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"                        new String[] {firstPersonToDelete.getName().toString()}));","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"        NameContainsKeywordsPredicate secondPersonName \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"                        new String[] {secondPersonToDelete.getName().toString()}));","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(firstPersonName);","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(secondPersonName);","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(firstPersonName);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"    public void toStringMethodForIndex() {","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"    public void toStringMethodForName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"        NameContainsKeywordsPredicate targetName \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(new String[] {\"James\"}));","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetName);","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetName\u003d\" + targetName.toString() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jibtaf":2,"WeeMingQing":41,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(editedEmployee).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"            Messages.format(editedEmployee));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"                .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"            Messages.format(editedEmployee));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        expectedModel.setPerson(lastPerson, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditEmployeeDescriptor());","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"            Messages.format(editedEmployee));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"            Messages.format(editedEmployee));","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"                new EditEmployeeDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor copyDescriptor \u003d new EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"jibtaf"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"jibtaf"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editEmployeeDescriptor\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"jibtaf"},"content":"                + editEmployeeDescriptor + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jibtaf":31,"applepiofmyeye":2,"-":156}},{"path":"src/test/java/seedu/address/logic/commands/EditEmployeeDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"public class EditEmployeeDescriptorTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptorWithSameValues \u003d new EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        // different bank account -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withBankAccount(VALID_BANKACCOUNT_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        EditEmployeeDescriptor editPersonDescriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        String expected \u003d EditEmployeeDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", bankAccount\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getBankAccount().orElse(null) + \", joinDate\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getJoinDate().orElse(null) + \", salary\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getSalary().orElse(null) + \", annualLeave\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getAnnualLeave().orElse(null) + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jibtaf":8,"applepiofmyeye":7,"-":56,"Leb14":3}},{"path":"src/test/java/seedu/address/logic/commands/PayslipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.io.File;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.PaySlipGenerator;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"class PayslipCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    private PayslipCommand payslipCommand \u003d new PayslipCommand(Index.fromZeroBased(2));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    private PayslipCommand payslipCommand2 \u003d new PayslipCommand(Index.fromZeroBased(1000));","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PayslipCommand(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    public void execute() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        // success","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        Person employeeToGenerate \u003d model.getFilteredPersonList().get(2);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        CommandResult commandResult \u003d payslipCommand.execute(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        assertEquals(String.format(PayslipCommand.MESSAGE_PAYSLIP_SUCCESS, employeeToGenerate.getName().toString()),","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        File payslip \u003d new File(\"payslips/\" + PaySlipGenerator.getFileName(employeeToGenerate));","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payslip.exists());","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        payslip.delete();","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        // fail","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        assertThrows(CommandException.class, () -\u003e payslipCommand2.execute(model)); // index out of bounds","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payslipCommand.equals(payslipCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        PayslipCommand payslipCommandCopy \u003d new PayslipCommand(Index.fromZeroBased(2));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payslipCommand.equals(payslipCommandCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payslipCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payslipCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payslipCommand.equals(payslipCommand2));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        String expected \u003d PayslipCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"            + \"{index\u003d\" + Index.fromZeroBased(2) + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        assertEquals(expected, payslipCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":73}},{"path":"src/test/java/seedu/address/logic/commands/ReadCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalFields.EMAIL_FIELD;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalFields.PHONE_FIELD;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"class ReadCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public void execute_validIndexAndFieldToRead_success() throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommand \u003d new ReadCommand(INDEX_FIRST_PERSON, PHONE_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        String expectedMessage \u003d String.format(readCommand.MESSAGE_READ_PERSON_SUCCESS, PHONE_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        Person personToRead \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        expectedModel.setSpecificPersonToDisplay(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        assertCommandSuccess(readCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommand \u003d new ReadCommand(outOfBoundIndex, PHONE_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        assertCommandFailure(readCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    public void execute_invalidField_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        String invalidField \u003d \"invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommand \u003d new ReadCommand(INDEX_FIRST_PERSON, invalidField);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        assertCommandFailure(readCommand, model, Messages.MESSAGE_INVALID_FIELD_TO_READ);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        ReadCommand readFirstCommand \u003d new ReadCommand(INDEX_FIRST_PERSON, EMAIL_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        ReadCommand readSecondCommand \u003d new ReadCommand(INDEX_SECOND_PERSON, EMAIL_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        assertTrue(readFirstCommand.equals(readFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"        ReadCommand readFirstCommandCopy \u003d new ReadCommand(INDEX_FIRST_PERSON, EMAIL_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        assertTrue(readFirstCommand.equals(readFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        assertFalse(readFirstCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        assertFalse(readFirstCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"        assertFalse(readFirstCommand.equals(readSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    public void fieldValueToString_validFields_success() throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        // Create a sample Person object with valid fields","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        Person personToRead \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommandPhoneTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"phone\");","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommandEmailTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"email\");","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommandAddressTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"address\");","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        ReadCommand readCommandBankAccountTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"bank account\");","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        ReadCommand readCommandJoinDateTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"join date\");","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        ReadCommand readCommandSalaryTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"salary\");","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        ReadCommand readCommandAnnualLeaveTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"annual leave\");","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        String phoneValue \u003d readCommandPhoneTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        String emailValue \u003d readCommandEmailTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        String addressValue \u003d readCommandAddressTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        String bankAccountValue \u003d readCommandBankAccountTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        String joinDateValue \u003d readCommandJoinDateTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"        String salaryValue \u003d readCommandSalaryTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        String annualLeaveValue \u003d readCommandAnnualLeaveTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"        assertEquals(\"94351253\", phoneValue);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"        assertEquals(\"alice@example.com\", emailValue);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        assertEquals(\"123, Jurong West Ave 6, #08-111\", addressValue);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        assertEquals(\"123123123123\", bankAccountValue);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        assertEquals(\"04/05/2021\", joinDateValue);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"        assertEquals(\"1500.00\", salaryValue);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(\"Total Annual Leave: \" + personToRead.getAnnualLeave().value + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"                + personToRead.getAnnualLeave().printListLeaveTaken(), annualLeaveValue);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jibtaf":15,"WeeMingQing":2,"Leb14":92}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ANNUALLEAVE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKACCOUNT_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKACCOUNT_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ANNUALLEAVE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BANKACCOUNT_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOINDATE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOINDATE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOINDATE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANNUALLEAVE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOINDATE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"                + ADDRESS_DESC_BOB + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"                + ANNUALLEAVE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"                + ADDRESS_DESC_BOB + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"                + ANNUALLEAVE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"        // multiple bank account","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, BANKACCOUNT_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BANK_ACCOUNT));","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Kevin-Liusx"},"content":"        // multiple join date","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, JOINDATE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOIN_DATE));","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"        // multiple salary","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, SALARY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SALARY));","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"        // multiple annual leave","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, ANNUALLEAVE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ANNUAL_LEAVE));","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"Kevin-Liusx"},"content":"                        + BANKACCOUNT_DESC_AMY + ANNUALLEAVE_DESC_AMY + SALARY_DESC_AMY + JOINDATE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Kevin-Liusx"},"content":"                        PREFIX_BANK_ACCOUNT, PREFIX_ANNUAL_LEAVE, PREFIX_JOIN_DATE, PREFIX_SALARY));","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid bank account","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_BANKACCOUNT_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BANK_ACCOUNT));","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid join date","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_JOINDATE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOIN_DATE));","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid salary","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_SALARY_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SALARY));","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid annual leave","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_ANNUALLEAVE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ANNUAL_LEAVE));","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid bank account","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_BANKACCOUNT_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BANK_ACCOUNT));","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid join date","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_JOINDATE_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOIN_DATE));","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid salary","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_SALARY_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SALARY));","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid annual leave","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ANNUALLEAVE_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ANNUAL_LEAVE));","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"Kevin-Liusx"},"content":"    // This test case can be either deleted or kept. Keep this if we have any other fields that are optional.","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"applepiofmyeye"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"jibtaf"},"content":"            + BANKACCOUNT_DESC_AMY + JOINDATE_DESC_AMY + SALARY_DESC_AMY + ANNUALLEAVE_DESC_AMY,","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"Kevin-Liusx"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"Kevin-Liusx"},"content":"        // missing bank prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"Kevin-Liusx"},"content":"                + VALID_BANKACCOUNT_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"Kevin-Liusx"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"Kevin-Liusx"},"content":"        // missing join date prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + VALID_JOINDATE_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"Kevin-Liusx"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"Kevin-Liusx"},"content":"        // missing salary prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + VALID_SALARY_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"Kevin-Liusx"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"Kevin-Liusx"},"content":"        // missing annual leave prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + VALID_ANNUALLEAVE_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":249,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"Kevin-Liusx"},"content":"                + VALID_BANKACCOUNT_BOB + VALID_JOINDATE_BOB + VALID_SALARY_BOB + VALID_ANNUALLEAVE_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"applepiofmyeye"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"applepiofmyeye"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"jibtaf"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-18"},{"lineNumber":273,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":274,"author":{"gitId":"jibtaf"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":276,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid bank account","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"Kevin-Liusx"},"content":"                + INVALID_BANKACCOUNT_DESC + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"Kevin-Liusx"},"content":"                BankAccount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":280,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid join date","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + INVALID_JOINDATE_DESC + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"Kevin-Liusx"},"content":"                JoinDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid salary","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + INVALID_SALARY_DESC + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"Kevin-Liusx"},"content":"                Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid annual leave","lastModifiedDate":"2023-10-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":293,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + INVALID_ANNUALLEAVE_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":294,"author":{"gitId":"Kevin-Liusx"},"content":"                AnnualLeave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":297,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":303,"author":{"gitId":"Kevin-Liusx"},"content":"                + ADDRESS_DESC_BOB + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Kevin-Liusx":135,"jibtaf":4,"applepiofmyeye":4,"-":163}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayslipCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditEmployeeDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"    public void parseCommand_read() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        ReadCommand command \u003d (ReadCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"            ReadCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + \"/p\");","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new ReadCommand(INDEX_FIRST_PERSON, \"phone\"), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"    public void parseCommand_payslip() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        PayslipCommand command \u003d (PayslipCommand) parser.parseCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"            PayslipCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new PayslipCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jibtaf":20,"-":97}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE_FOR_NAME));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jibtaf":2,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKACCOUNT_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ANNUALLEAVE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BANKACCOUNT_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOINDATE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOINDATE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANNUALLEAVE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOINDATE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BANKACCOUNT_DESC, BankAccount.MESSAGE_CONSTRAINTS); // invalid","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"        // tag","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \"1\" + INVALID_JOINDATE_DESC, JoinDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SALARY_DESC, Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ANNUALLEAVE_DESC, AnnualLeave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"            \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"applepiofmyeye"},"content":"        // bank account","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"applepiofmyeye"},"content":"        userInput \u003d targetIndex.getOneBased() + BANKACCOUNT_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withBankAccount(VALID_BANKACCOUNT_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"applepiofmyeye"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"applepiofmyeye"},"content":"        // join date","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"applepiofmyeye"},"content":"        userInput \u003d targetIndex.getOneBased() + JOINDATE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withJoinDate(VALID_JOINDATE_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"applepiofmyeye"},"content":"        // salary","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"applepiofmyeye"},"content":"        userInput \u003d targetIndex.getOneBased() + SALARY_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withSalary(VALID_SALARY_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"applepiofmyeye"},"content":"        // address","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"applepiofmyeye"},"content":"        userInput \u003d targetIndex.getOneBased() + ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withAnnualLeave(VALID_ANNUALLEAVE_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"applepiofmyeye"},"content":"            + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"applepiofmyeye"},"content":"            + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":212,"author":{"gitId":"applepiofmyeye"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"applepiofmyeye"},"content":"                PREFIX_ADDRESS));","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":220,"author":{"gitId":"applepiofmyeye"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"applepiofmyeye"},"content":"                PREFIX_ADDRESS));","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jibtaf":3,"applepiofmyeye":43,"-":165,"Leb14":12}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e ParserUtil.parseIndex(","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"            Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jibtaf":2,"-":138}},{"path":"src/test/java/seedu/address/logic/parser/PayslipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayslipCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"class PayslipCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    private PayslipCommandParser parser \u003d new PayslipCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    public void parse() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e throws NullPointerException","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        // invalid input -\u003e throws ParseException","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a\")); // non-numeric","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1.1\")); // non-integer","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-1\")); // negative integer","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0\")); // zero","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 1\")); // multiple arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 a\")); // non-numeric argument","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\")); // empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \")); // whitespace","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        // valid input -\u003e returns PayslipCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new PayslipCommand(Index.fromZeroBased(0)), parser.parse(\"1\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":34}},{"path":"src/test/java/seedu/address/logic/parser/ReadCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"class ReadCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    private ReadCommandParser parser \u003d new ReadCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    public void parse_validArgs_returnsReadCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        assertParseSuccess(parser, \"1 /a\", new ReadCommand(INDEX_FIRST_PERSON, \"address\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    public void parse_missingField_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    public void parse_invalidField_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \"1 /invalid\",","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"                Messages.MESSAGE_INVALID_FIELD_TO_READ);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    public void fieldNameToString_validFieldIdentifiers_returnsFieldNames() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"p\"), \"phone\");","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"a\"), \"address\");","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"e\"), \"email\");","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"b\"), \"bank account\");","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"l\"), \"annual leave\");","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"j\"), \"join date\");","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"s\"), \"salary\");","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Leb14":54}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"applepiofmyeye":2,"-":105}},{"path":"src/test/java/seedu/address/model/person/BenefitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"class BenefitTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    private final Benefit benefit \u003d new Benefit(\"5000.00\", Reason.ANNUAL_BONUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    private final Benefit benefit2 \u003d new Benefit(\"500.00\", Reason.TRANSPORT_ALLOWANCE);","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Benefit(null, null));","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Benefit(null, Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Benefit(\"5000.00\", null));","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidReason_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Benefit(\"1500.00\", Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Benefit(\"1500.00\", Reason.ABSENCE));","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Benefit(\"1500.00\", Reason.EMPLOYEE_CPF_DEDUCTION));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidBenefit_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        String invalidBenefit \u003d \"5000\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Benefit(invalidBenefit, Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    public void isValidBenefit() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        // null benefit","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e Benefit.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        // valid benefit","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit2.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        // invalid benefit","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"\", Reason.ANNUAL_BONUS).isValid()); // empty value","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\" \", Reason.ANNUAL_BONUS).isValid()); // space only","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"*\", Reason.ANNUAL_BONUS).isValid()); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"8+1500.00\", Reason.ANNUAL_BONUS).isValid()); // contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000\", Reason.ANNUAL_BONUS).isValid()); // no decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.0\", Reason.ANNUAL_BONUS).isValid()); // one decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.000\", Reason.ANNUAL_BONUS).isValid()); // three decimal points","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.00\", Reason.NO_PAY_LEAVE).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.00\", Reason.ABSENCE).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.00\", Reason.EMPLOYEE_CPF_DEDUCTION).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit.equals(new Benefit(\"5000.00\", Reason.ANNUAL_BONUS)));","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit2.equals(new Benefit(\"500.00\", Reason.TRANSPORT_ALLOWANCE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit.equals(benefit));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit2.equals(benefit2));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        assertFalse(benefit.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        assertFalse(benefit.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        assertFalse(benefit.equals(new Benefit(\"5000.01\", Reason.ANNUAL_BONUS)));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        // different reasons -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        assertFalse(benefit.equals(new Benefit(\"5000.00\", Reason.TRANSPORT_ALLOWANCE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":88}},{"path":"src/test/java/seedu/address/model/person/DeductionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"class DeductionTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction \u003d new Deduction(\"1500.00\", Reason.NO_PAY_LEAVE);","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction2 \u003d new Deduction(\"1500.00\", Reason.ABSENCE);","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction3 \u003d new Deduction(\"1500.00\", Reason.EMPLOYEE_CPF_DEDUCTION);","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deduction(null, null));","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deduction(null, Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deduction(\"1500.00\", null));","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidReason_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deduction(\"1500.00\", Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deduction(\"1500.00\", Reason.TRANSPORT_ALLOWANCE));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidDeduction_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        String invalidDeduction \u003d \"1500\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deduction(invalidDeduction, Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    public void isValidDeduction() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        // null deduction","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deduction.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        // valid deduction","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction2.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction3.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        // invalid deduction","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"\", Reason.ABSENCE).isValid()); // empty value","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\" \", Reason.ABSENCE).isValid()); // space only","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"*\", Reason.ABSENCE).isValid()); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"8+1500.00\", Reason.ABSENCE).isValid()); // contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500\", Reason.ABSENCE).isValid()); // no decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500.0\", Reason.ABSENCE).isValid()); // one decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500.000\", Reason.ABSENCE).isValid()); // three decimal points","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500.00\", Reason.ANNUAL_BONUS).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500.00\", Reason.TRANSPORT_ALLOWANCE).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction.equals(new Deduction(\"1500.00\", Reason.NO_PAY_LEAVE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction2.equals(new Deduction(\"1500.00\", Reason.ABSENCE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction3.equals(new Deduction(\"1500.00\", Reason.EMPLOYEE_CPF_DEDUCTION)));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction.equals(deduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction2.equals(deduction2));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction3.equals(deduction3));","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        assertFalse(deduction.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        assertFalse(deduction.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"        assertFalse(deduction.equals(new Deduction(\"1500.01\", Reason.NO_PAY_LEAVE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        // different reasons -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        assertFalse(deduction.equals(new Deduction(\"1500.00\", Reason.ABSENCE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":89}},{"path":"src/test/java/seedu/address/model/person/PaymentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"class PaymentTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    private final Payment payment \u003d new Payment(\"1500.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Payment(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidPayment_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        String invalidPayment \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Payment(invalidPayment));","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public void isValidPayment() {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        // null payment","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e Payment.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        // valid payment","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"0.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"10.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"100.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"10000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"100000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        // invalid payment","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"\")); // empty value","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\" \")); // space only","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"*\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"8+1500.00\")); // contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"1500\")); // no decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"1500.0\")); // one decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"1500.000\")); // three decimal points","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payment.equals(new Payment(\"1500.00\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payment.equals(payment));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payment.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payment.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payment.equals(new Payment(\"1500.01\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":63}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"                + \", bankAccount\u003d\" + ALICE.getBankAccount()","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"                + \", joinDate\u003d\" + ALICE.getJoinDate() + \", salary\u003d\" + ALICE.getSalary()","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"                + \", annualLeave\u003d\" + ALICE.getAnnualLeave()","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"                + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jibtaf":4,"applepiofmyeye":4,"-":88}},{"path":"src/test/java/seedu/address/model/person/SalaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"class SalaryTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    private final Salary salary \u003d new Salary(\"1500.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    private final ArrayList\u003cBenefit\u003e benefits \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        List.of(","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.00\", Reason.ANNUAL_BONUS),","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"500.00\", Reason.TRANSPORT_ALLOWANCE)","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        )","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    );","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    private final ArrayList\u003cDeduction\u003e deductions \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        List.of(","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"100.00\", Reason.NO_PAY_LEAVE),","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"120.00\", Reason.ABSENCE)","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        )","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    );","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    private final Salary salaryWithBenefit \u003d new Salary(\"1500.00\", null, benefits);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    private final Salary salaryWithDeduction \u003d new Salary(\"1500.00\", deductions, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    private final Salary salaryWithBenefitAndDeduction \u003d new Salary(\"1500.00\", deductions, benefits);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Salary(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        String invalidSalary \u003d \"1500\";","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Salary(invalidSalary));","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    public void isValidSalary() {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        // null salary","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        assertThrows(NullPointerException.class, () -\u003e Salary.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        //valid salary","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"0.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"10.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"100.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"10000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"100000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        //invalid salary","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        assertFalse(Salary.isValid(\"\")); //empty value","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        assertFalse(Salary.isValid(\" \")); //space only","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        assertFalse(Salary.isValid(\"*\")); //only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        assertFalse(Salary.isValid(\"8+1500.00\")); //contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Salary.isValid(\"8000\")); //no decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Salary.isValid(\"1500.0\")); //1 decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Salary.isValid(\"1500.000\")); //3 decimal points","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    public void getTotalDeductions() {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        // null deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.getTotalDeductions() \u003d\u003d 0.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getTotalDeductions() \u003d\u003d 0.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        // with deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getTotalDeductions() \u003d\u003d 220.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getTotalDeductions() \u003d\u003d 220.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    public void getTotalBenefits() {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        // null benefits","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.getTotalBenefits() \u003d\u003d 0.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getTotalBenefits() \u003d\u003d 0.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"        // with benefits","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getTotalBenefits() \u003d\u003d 5500.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getTotalBenefits() \u003d\u003d 5500.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"    public void getNetSalary() {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"        // null benefits and deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.getNetSalary() \u003d\u003d 1500.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        // with benefits","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getNetSalary() \u003d\u003d 7000.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        // with deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getNetSalary() \u003d\u003d 1280.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"        // with benefits and deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getNetSalary() \u003d\u003d 6780.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"    public void getNetSalaryString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"        // null benefits and deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.getNetSalaryString().equals(String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"            \"Net Salary: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"            \"Basic Pay: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"            \"Total Deductions: $\" + df.format(0.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"            \"Total Benefits: $\" + df.format(0.0))));","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"        // with benefits","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getNetSalaryString().equals(String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"            \"Net Salary: $\" + df.format(7000.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"            \"Basic Pay: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"            \"Total Deductions: $\" + df.format(0.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"            \"Total Benefits: $\" + df.format(5500.0))));","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"        // with deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getNetSalaryString().equals(String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"            \"Net Salary: $\" + df.format(1280.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"            \"Basic Pay: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"            \"Total Deductions: $\" + df.format(220.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"            \"Total Benefits: $\" + df.format(0.0))));","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        // with benefits and deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getNetSalaryString().equals(","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"            String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"            \"Net Salary: $\" + df.format(6780.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"            \"Basic Pay: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"            \"Total Deductions: $\" + df.format(220.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"            \"Total Benefits: $\" + df.format(5500.0))));","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"        assertTrue(salary.equals(new Salary(\"1500.00\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"        assertTrue(salary.equals(salary));","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.equals(salaryWithBenefit));","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.equals(salaryWithDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.equals(salaryWithBenefitAndDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"        // null deductions and benefits -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.equals(new Salary(\"1500.00\", null, null)));","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"        assertFalse(salary.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"        assertFalse(salary.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"Leb14"},"content":"        assertFalse(salary.equals(new Salary(\"1500.01\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salary.equals(salaryWithBenefit));","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salary.equals(salaryWithDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salary.equals(salaryWithBenefitAndDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salaryWithBenefit.equals(salaryWithDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salaryWithBenefit.equals(salaryWithBenefitAndDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salaryWithDeduction.equals(salaryWithBenefitAndDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":109,"Leb14":57}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_nulleditedEmployee_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_editedEmployeeIsSamePerson_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_editedEmployeeHasSameIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_editedEmployeeHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_editedEmployeeHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jibtaf":5,"applepiofmyeye":2,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String INVALID_BANKACCOUNT \u003d \"bankaccount\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String INVALID_JOINDATE \u003d \"12th june\";","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String INVALID_SALARY \u003d \"salary\";","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String INVALID_ANNUALLEAVE \u003d \"annualleave\";","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String VALID_BANKACCOUNT \u003d BENSON.getBankAccount().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String VALID_JOINDATE \u003d BENSON.getJoinDate().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String VALID_SALARY \u003d BENSON.getSalary().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String VALID_ANNUALLEAVE \u003d BENSON.getAnnualLeave().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT, VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidBankAccount_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"                INVALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d BankAccount.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidJoinDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"                INVALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d JoinDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidSalary_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_JOINDATE, INVALID_SALARY, VALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d Salary.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidAnnualLeave_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_JOINDATE, VALID_SALARY, INVALID_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d AnnualLeave.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"applepiofmyeye":51,"-":74}},{"path":"src/test/java/seedu/address/testutil/EditEmployeeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":" * A utility class to help with building EditEmployeeDescriptor objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"public class EditEmployeeDescriptorBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    private EditEmployeeDescriptor descriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        this.descriptor \u003d new EditEmployeeDescriptor(descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"     * Returns an {@code EditEmployeeDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder(Person person) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setBankAccount(person.getBankAccount());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setJoinDate(person.getJoinDate());","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setSalary(person.getSalary());","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setAnnualLeave(person.getAnnualLeave());","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Name} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Phone} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Email} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Address} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code BankAccount} of the {@code EditEmployeeDescriptor} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"     * building.","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withBankAccount(String bankAccount) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setBankAccount(new BankAccount(bankAccount));","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code JoinDate} of the {@code EditEmployeeDescriptor} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"     * building.","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withJoinDate(String joinDate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setJoinDate(new JoinDate(joinDate));","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Salary} of the {@code EditEmployeeDescriptor} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"     * building.","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withSalary(String salary) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setSalary(new Salary(salary));","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code AnnualLeave} of the {@code EditEmployeeDescriptor} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"     * building.","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withAnnualLeave(String annualLeave) {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setAnnualLeave(new AnnualLeave(annualLeave));","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptor build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jibtaf":28,"applepiofmyeye":27,"-":60}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String DEFAULT_BANKACCOUNT \u003d \"12345678\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    public static final String DEFAULT_JOINDATE \u003d \"12/02/2023\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    public static final String DEFAULT_SALARY \u003d \"2000.00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String DEFAULT_ANNUALLEAVE \u003d \"14\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    private BankAccount bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"    private JoinDate joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    private Salary salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"    private AnnualLeave annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"        bankAccount \u003d new BankAccount(DEFAULT_BANKACCOUNT);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"        joinDate \u003d new JoinDate(DEFAULT_JOINDATE);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"        salary \u003d new Salary(DEFAULT_SALARY);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"        annualLeave \u003d new AnnualLeave(DEFAULT_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        bankAccount \u003d personToCopy.getBankAccount();","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        joinDate \u003d personToCopy.getJoinDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        salary \u003d personToCopy.getSalary();","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"        annualLeave \u003d personToCopy.getAnnualLeave();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code BankAccount} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withBankAccount(String bankAccount) {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        this.bankAccount \u003d new BankAccount(bankAccount);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code JoinDate} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withJoinDate(String joinDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"        this.joinDate \u003d new JoinDate(joinDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code Salary} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withSalary(String salary) {","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"        this.salary \u003d new Salary(salary);","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code AnnualLeave} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withAnnualLeave(String annualLeave) {","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"applepiofmyeye"},"content":"        this.annualLeave \u003d new AnnualLeave(annualLeave);","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":129,"author":{"gitId":"applepiofmyeye"},"content":"        return new Person(name, phone, email, address, bankAccount, joinDate, salary, annualLeave);","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"applepiofmyeye":51,"-":79,"Leb14":2}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_NAME + \" \" + person.getName().fullName + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_PHONE + \" \" + person.getPhone().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_EMAIL + \" \" + person.getEmail().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_ADDRESS + \" \" + person.getAddress().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_ANNUAL_LEAVE + \" \" + person.getAnnualLeave().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_BANK_ACCOUNT + \" \" + person.getBankAccount().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_JOIN_DATE + \" \" + person.getJoinDate().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_SALARY + \" \" + person.getSalary().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"     * Returns the part of command string for the given {@code EditEmployeeDescriptor}\u0027s details.","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"    public static String getEditEmployeeDescriptorDetails(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.getBankAccount()","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"                .ifPresent(bankAccount -\u003e sb.append(PREFIX_BANK_ACCOUNT).append(bankAccount.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        descriptor.getJoinDate().ifPresent(joinDate -\u003e sb.append(PREFIX_JOIN_DATE).append(joinDate.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.getSalary().ifPresent(salary -\u003e sb.append(PREFIX_SALARY).append(salary.value).append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.getAnnualLeave()","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"                .ifPresent(annualLeave -\u003e sb.append(PREFIX_ANNUAL_LEAVE).append(annualLeave.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Kevin-Liusx":9,"jibtaf":9,"applepiofmyeye":6,"-":40}},{"path":"src/test/java/seedu/address/testutil/TypicalFields.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":" * A utility class containing a list of {@code String} objects to be used in tests.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"public class TypicalFields {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"    public static final String PHONE_FIELD \u003d \"phone\";","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"    public static final String EMAIL_FIELD \u003d \"email\";","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"    public static final String ADDRESS_FIELD \u003d \"address\";","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Leb14":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANNUALLEAVE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANNUALLEAVE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOINDATE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOINDATE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"            .withPhone(\"94351253\").withBankAccount(\"123123123123\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            .withPhone(\"98765432\").withBankAccount(\"0123457\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withBankAccount(VALID_BANKACCOUNT_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"            .withJoinDate(VALID_JOINDATE_AMY).withSalary(VALID_SALARY_AMY).withAnnualLeave(VALID_ANNUALLEAVE_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBankAccount(VALID_BANKACCOUNT_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"            .withJoinDate(VALID_JOINDATE_BOB).withSalary(VALID_SALARY_BOB).withAnnualLeave(VALID_ANNUALLEAVE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jibtaf":16,"applepiofmyeye":2,"-":62,"Leb14":10}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jibtaf":1,"-":6}}]

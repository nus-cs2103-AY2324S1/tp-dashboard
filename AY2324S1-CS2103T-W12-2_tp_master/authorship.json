[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-W12-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W12-2/tp/graph/badge.svg?token\u003dD5073R19SO)](https://codecov.io/gh/AY2324S1-CS2103T-W12-2/tp)","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"* The project simulates an ongoing software project for a desktop application (called _ManaGease_) used for managing full-time employees\u0027 information.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"* It is named `ManaGease` because it aims to help HR managers, the target users, to easily manage the information of their full-time employees.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"* For the detailed documentation of this project, see the **[ManaGease Project Website](https://ay2324s1-cs2103t-w12-2.github.io/tp/)**.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"**Acknowledgement**","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jibtaf":9,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"run {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    // https://mvnrepository.com/artifact/com.itextpdf/kernel","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    implementation group: \u0027com.itextpdf\u0027, name: \u0027kernel\u0027, version: \u00277.2.5\u0027","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    // https://mvnrepository.com/artifact/com.itextpdf/forms","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"    implementation group: \u0027com.itextpdf\u0027, name: \u0027forms\u0027, version: \u00277.2.5\u0027","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    // https://central.sonatype.com/artifact/me.xdrop/fuzzywuzzy/overview","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    implementation group: \u0027me.xdrop\u0027, name: \u0027fuzzywuzzy\u0027, version: \u00271.4.0\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    archiveFileName \u003d \u0027ManaGease.jar\u0027","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jibtaf":11,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"### Joey Lee","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"\u003cimg src\u003d\"images/applepiofmyeye.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"[[github](https://github.com/applepiofmyeye)]","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"[[portfolio](team/applepiofmyeye.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"* Role: Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"* Responsibilities: Scheduling and tracking tasks","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"### Wee Ming Qing","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"\u003cimg src\u003d\"images/weemingqing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"[[github](https://github.com/WeeMingQing)]","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"[[portfolio](team/weemingqing.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"* Role: Documentation","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"* Responsibilities: Logic","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"### He Yifan","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"\u003cimg src\u003d\"images/jibtaf.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"[[github](http://github.com/jibtaf)] [[portfolio](team/jibtaf.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"* Responsibilities: Data Management","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"### Shixin Liu","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"\u003cimg src\u003d\"images/kevin-liusx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"[[github](https://github.com/Kevin-Liusx)]","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"[[portfolio](team/kevin-liusx.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"* Responsibilities: Development and Operations","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"### Jin Hao","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"\u003cimg src\u003d\"images/leb14.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"[[github](http://github.com/Leb14)]","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"[[portfolio](team/leb14.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"* Responsibilities: Logic","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Kevin-Liusx":4,"WeeMingQing":6,"jibtaf":5,"applepiofmyeye":6,"-":35,"Leb14":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"* This project uses a third-party library called [itext7](https://github.com/itext/itext7), which can help the target user of our app, HR managers, to easily generate payslips as PDF files. `itext7` is released under the [AGPL license](https://github.com/itext/itext7/blob/develop/LICENSE.md).","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"* This project also uses a third-party library called [JavaWuzzy](https://github.com/xdrop/fuzzywuzzy#javawuzzy). It is released under the [GNU General Public License v2.0](https://github.com/xdrop/fuzzywuzzy/blob/master/LICENSE).","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"  * Our user needs to type the reason for a deduction or benefit added. With this library used, they do not need to type the exact wording of the reasons in order to match the Reason enum. ","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"### \\[Proposed\\] Read feature","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"Leb14"},"content":"The proposed implementation involves the ReadCommand and some associated classes:","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Leb14"},"content":"* `ReadCommand` — This class is responsible for executing the \"Read\" command. It parses the user input, retrieves information from the model, and passes the results to the UI for display.","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"Leb14"},"content":"* `ReadCommandParser` — Responsible for parsing user input and creating a ReadCommand object. It extracts the index of the employee in the last shown list and the requested field.","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"Leb14"},"content":"* `PersonCardWithSpecificField` - Since we have to display only one specific field, we created another person card with just one field. This class is responsible for displaying the name of the person and a specific field requested by the user in the UI. It receives the necessary information from the command result and formats it for display.","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":"Displaying a specific field with the new PersonCardWithSpecificField class.","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"1. Before we execute a command, the MainWindow will display a list of person with all their fields as shown below.","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"![ReadCommandBeforeExecute](images/ReadCommandBeforeExecute.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"2. After we execute the command, and it is a ReadCommand, the ReadCommand will set CommandResult::isRead to true. The MainWindow of UI will then remove all the existing PersonCard with a PersonCardWithSpecificField as shown below.","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"Leb14"},"content":"![ReadCommandAfterExecute](images/ReadCommandAfterExecute.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Leb14"},"content":"The following class diagram shows how the different classes interact with one another in the read Feature:","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"Leb14"},"content":"![ReadCommandClassDiagram](images/ReadClassDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"Leb14"},"content":"The following activity diagram summarises the process of reading specific field for a particular employee:","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":182,"author":{"gitId":"Leb14"},"content":"![ReadCommandActivityDiagram](images/ReadActivityDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Leb14"},"content":"This is the sequence diagram to show how the read operation works.","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"Leb14"},"content":"![ReadSequenceDiagram3](images/ReadSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Leb14"},"content":":information_source: **Note:** The lifeline for `ReadCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Leb14"},"content":"The user enters the command \"read 1 /a\" and executes it. The command is then parsed by AddressBookParser. The AddressBookParser parsed the input and created ReadCommandParser and ReadCommandParser parsed the remaining input(exclude the command word). If it parses successfully, it will eventually create a ReadCommand. The ReadCommand is then executed. If the index is not out of bounds, it will call Model#setSpecificPersonToDisplay() to filter the list to only the specific person. Then it will also call the respective getter to get the specific field from the Person. After getting the specific field, it will then create a CommandResult for the UI to display.","lastModifiedDate":"2023-11-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":192,"author":{"gitId":"Leb14"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Leb14"},"content":"**Aspect: Data Retrieval:**","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"Leb14"},"content":"* **Alternative 1 (current choice):** Retrieve only the specific field of the person being read.","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"Leb14"},"content":"  * Pros: Reduces memory usage and may improve performance.","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"Leb14"},"content":"  * Cons: Requires more complex implementation and handling of different data retrieval scenarios.","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"Leb14"},"content":"* **Alternative 2:** Retrieve the entire person\u0027s data when executing the \"Read\" command.","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"Leb14"},"content":"  * Pros: Simple and consistent with other command implementations.","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"Leb14"},"content":"  * Cons: May have performance issues if the person\u0027s data is extensive.","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Leb14"},"content":"**Aspect: Using Index:**","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Leb14"},"content":"* **Alternative 1 (current choice):** Use an index to identify the target person for the \"Read\" command.","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"Leb14"},"content":"  * Pros: Faster and more efficient execution when working with a large number of people.","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"Leb14"},"content":"  * Cons: This may require users to remember or find the index of the person.","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Leb14"},"content":"* **Alternative 2:** Use the person\u0027s name to identify the target person for the \"Read\" command.","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"Leb14"},"content":"  * Pros: User-friendly, especially when users are more likely to identify persons by name.","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"Leb14"},"content":"  * Cons: This may result in slower execution when many persons exist in the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"jibtaf"},"content":"### Deductions and Benefits","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"jibtaf"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"jibtaf"},"content":"The proposed deductions and benefits feature comprises 2 sub-features:","lastModifiedDate":"2023-11-10"},{"lineNumber":225,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"jibtaf"},"content":"1. Add Deduction Feature","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"jibtaf"},"content":"2. Add Benefit Feature","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"jibtaf"},"content":"#### 1. Add Deduction Feature","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"jibtaf"},"content":"The proposed Add Deduction feature is facilitated by `Deduction`, `DeductCommand`, `DeductCommandParser`, `Person`, `PayrollStorage`, `Payroll` and `Salary` classes.","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"jibtaf"},"content":"The `Deduction` class is responsible for storing the deduction data for a specific employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"jibtaf"},"content":"The `DeductCommand` class is responsible for executing the `deduct` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":235,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"jibtaf"},"content":"The `DeductCommandParser` class is responsible for parsing the user input for the `deduct` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":237,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"jibtaf"},"content":"The `Person` class is responsible for updating the list of deductions.","lastModifiedDate":"2023-11-10"},{"lineNumber":239,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"jibtaf"},"content":"The `PayrollStorage` class is responsible for storing all payroll data for an employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":241,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"jibtaf"},"content":"The `Payroll` class is responsible for storing the monthly payroll data for an employee, including the starting and ending date of the payroll period.","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"jibtaf"},"content":"The `Salary` class is responsible for storing the monthly salary data for an employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"jibtaf"},"content":"The following class diagram shows how the different classes interact with one another in the Add Deduction Feature:","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"jibtaf"},"content":"![AddDeductionClassDiagram](images/AddDeductionClassDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"jibtaf"},"content":"The user can choose to add a deduction for an employee by entering the index of the employee, or the name of the employee. The `DeductCommandParser` class is responsible for parsing the user input for the `deduct` command.","lastModifiedDate":"2023-11-11"},{"lineNumber":251,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":252,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `DeductCommandParser` class parses the user input:","lastModifiedDate":"2023-11-11"},{"lineNumber":253,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":254,"author":{"gitId":"jibtaf"},"content":"![ParseDeductionCommandSequenceDiagram](images/ParseDeductCommandSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":255,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":256,"author":{"gitId":"jibtaf"},"content":"When parsing the input, all relevant parameters are extracted according to their respective prefixes, and put into an `ArgumentMultimap`. ","lastModifiedDate":"2023-11-11"},{"lineNumber":257,"author":{"gitId":"jibtaf"},"content":"The `value` and `reason` are parsed by `ParserUtil` class first, and a `Deduction` object is created with the parsed `value` and `reason`.","lastModifiedDate":"2023-11-11"},{"lineNumber":258,"author":{"gitId":"jibtaf"},"content":"If the parameters are not in the correct format, a `ParseException` will be thrown.","lastModifiedDate":"2023-11-11"},{"lineNumber":259,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":260,"author":{"gitId":"jibtaf"},"content":"The following sequence diagrams show how the `ParserUtil` class parses the `value` and `reason`:","lastModifiedDate":"2023-11-11"},{"lineNumber":261,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":262,"author":{"gitId":"jibtaf"},"content":"![ParseDeductionValueSequenceDiagram](images/ParseDeductCommandValueSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":263,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":264,"author":{"gitId":"jibtaf"},"content":"![ParseDeductionReasonSequenceDiagram](images/ParseDeductCommandReasonSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":265,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":266,"author":{"gitId":"jibtaf"},"content":"After fetching the `Deduction` object, `DeductCommandParser` class will then try to parse the `index` first.","lastModifiedDate":"2023-11-11"},{"lineNumber":267,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `DeductCommandParser` class parses the `index`:","lastModifiedDate":"2023-11-11"},{"lineNumber":268,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":269,"author":{"gitId":"jibtaf"},"content":"![ParseDeductionIndexSequenceDiagram](images/ParseDeductCommandIndexSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":270,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":271,"author":{"gitId":"jibtaf"},"content":"If the `index` is provided and valid, i.e, is a non-zero unsigned integer, the `DeductCommandParser` class will create a `DeductCommand` object with the `index` and `deduction` object, and return it.","lastModifiedDate":"2023-11-11"},{"lineNumber":272,"author":{"gitId":"jibtaf"},"content":"However, if the `index` is not provided, a `ParseException` will be thrown by the `ParserUtil` class, and the `DeductCommandParser` class will try to parse the `name` of the employee.","lastModifiedDate":"2023-11-11"},{"lineNumber":273,"author":{"gitId":"jibtaf"},"content":"If the `name` parameter is also not provided, a `ParseException` will be thrown by the `DeductCommandParser` class. Otherwise, the `DeductCommandParser` class will create a `DeductCommand` object with the `name` and `deduction` object, and return it.","lastModifiedDate":"2023-11-11"},{"lineNumber":274,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":275,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `DeductCommandParser` class parses the `name`:","lastModifiedDate":"2023-11-11"},{"lineNumber":276,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":277,"author":{"gitId":"jibtaf"},"content":"![ParseDeductionNameSequenceDiagram](images/ParseDeductCommandNameSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":278,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":279,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `deduct` operation works when the user enters the command `deduct 1 /v 150.00 /r absence`, which means adding a deduction of $150.00 for the employee with index 1, with the reason of `absence`:","lastModifiedDate":"2023-11-11"},{"lineNumber":280,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"jibtaf"},"content":"![AddDeductionSequenceDiagram](images/AddDeductionSequenceDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":282,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"jibtaf"},"content":"After `DeductCommandParser` class parses the user input, the `DeductCommand` class will be called to execute the command. The `DeductCommand` class will then call the `Model` component to obtain the list of employees, and then obtain the `Person` object to add deduction for.","lastModifiedDate":"2023-11-11"},{"lineNumber":284,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":285,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows the referenced process of adding deduction for an employee:","lastModifiedDate":"2023-11-11"},{"lineNumber":286,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":287,"author":{"gitId":"jibtaf"},"content":"![AddDeductionSequenceDiagram2](images/AddDeductionSequenceDiagram2.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":288,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":289,"author":{"gitId":"jibtaf"},"content":"1. The `DeductCommand` calls the `getPayrollStorage()` method to obtain the `PayrollStorage` object, which stores all `Payroll` objects in an ArrayList.","lastModifiedDate":"2023-11-11"},{"lineNumber":290,"author":{"gitId":"jibtaf"},"content":"2. The `Person` object then calls the `getLatestPayroll()` method to get the `Payroll` object with the latest `startDate` in the ArrayList. ","lastModifiedDate":"2023-11-11"},{"lineNumber":291,"author":{"gitId":"jibtaf"},"content":"3. Then it calls the `addDeduction()` method of the `Payroll` object which calls the `addDeduction()` method of the `Salary` object within it. ","lastModifiedDate":"2023-11-11"},{"lineNumber":292,"author":{"gitId":"jibtaf"},"content":"4. This creates a new `Deduction` object with the given `value` and `reason`, then store it into the `deductions` field of the `Salary` object, which is an ArrayList of `Deduction` objects.","lastModifiedDate":"2023-11-11"},{"lineNumber":293,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"jibtaf"},"content":"The following activity diagram summarises the process of adding deduction for an employee:","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"jibtaf"},"content":"![AddDeductionActivityDiagram](images/AddDeductionActivityDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":297,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"jibtaf"},"content":"#### 2. Add Benefit Feature","lastModifiedDate":"2023-11-10"},{"lineNumber":299,"author":{"gitId":"jibtaf"},"content":"The proposed Add Benefit feature is facilitated by `Benefit`, `BenefitCommand`, `BenefitCommandParser`, `Person`, `PayrollStorage`, `Payroll` and `Salary` classes.","lastModifiedDate":"2023-11-10"},{"lineNumber":300,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"jibtaf"},"content":"The `Benefit` class is responsible for storing the benefit data for a specific employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":302,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":303,"author":{"gitId":"jibtaf"},"content":"The `BenefitCommand` class is responsible for executing the `benefit` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":304,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":305,"author":{"gitId":"jibtaf"},"content":"The `BenefitCommandParser` class is responsible for parsing the user input for the `benefit` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":306,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":307,"author":{"gitId":"jibtaf"},"content":"The `Person` class is responsible for updating the list of benefits.","lastModifiedDate":"2023-11-10"},{"lineNumber":308,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":309,"author":{"gitId":"jibtaf"},"content":"The `PayrollStorage` class is responsible for storing all payroll data for an employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":310,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":311,"author":{"gitId":"jibtaf"},"content":"The `Payroll` class is responsible for storing the monthly payroll data for an employee, including the starting and ending date of the payroll period.","lastModifiedDate":"2023-11-10"},{"lineNumber":312,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":313,"author":{"gitId":"jibtaf"},"content":"The `Salary` class is responsible for storing the monthly salary data for an employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":314,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":315,"author":{"gitId":"jibtaf"},"content":"The following class diagram shows how the different classes interact with one another in the Add Benefit Feature:","lastModifiedDate":"2023-11-10"},{"lineNumber":316,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":317,"author":{"gitId":"jibtaf"},"content":"![AddBenefitClassDiagram](images/AddBenefitClassDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":318,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":319,"author":{"gitId":"jibtaf"},"content":"The user can choose to add a benefit for an employee by entering the index of the employee, or the name of the employee. The `BenefitCommandParser` class is responsible for parsing the user input for the `benefit` command.","lastModifiedDate":"2023-11-11"},{"lineNumber":320,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":321,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `BenefitCommandParser` class parses the user input:","lastModifiedDate":"2023-11-11"},{"lineNumber":322,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":323,"author":{"gitId":"jibtaf"},"content":"![ParseBenefitCommandSequenceDiagram](images/ParseBenefitCommandSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":324,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":325,"author":{"gitId":"jibtaf"},"content":"When parsing the input, all relevant parameters are extracted according to their respective prefixes, and put into an `ArgumentMultimap`.","lastModifiedDate":"2023-11-11"},{"lineNumber":326,"author":{"gitId":"jibtaf"},"content":"The `value` and `reason` are parsed by `ParserUtil` class first, and a `Benefit` object is created with the parsed `value` and `reason`.","lastModifiedDate":"2023-11-11"},{"lineNumber":327,"author":{"gitId":"jibtaf"},"content":"If the parameters are not in the correct format, a `ParseException` will be thrown.","lastModifiedDate":"2023-11-11"},{"lineNumber":328,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":329,"author":{"gitId":"jibtaf"},"content":"The following sequence diagrams show how the `ParserUtil` class parses the `value` and `reason`:","lastModifiedDate":"2023-11-11"},{"lineNumber":330,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":331,"author":{"gitId":"jibtaf"},"content":"![ParseBenefitValueSequenceDiagram](images/ParseBenefitCommandValueSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":332,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":333,"author":{"gitId":"jibtaf"},"content":"![ParseBenefitReasonSequenceDiagram](images/ParseBenefitCommandReasonSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":334,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":335,"author":{"gitId":"jibtaf"},"content":"After fetching the `Benefit` object, `BenefitCommandParser` class will then try to parse the `index` first.","lastModifiedDate":"2023-11-11"},{"lineNumber":336,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `BenefitCommandParser` class parses the `index`:","lastModifiedDate":"2023-11-11"},{"lineNumber":337,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":338,"author":{"gitId":"jibtaf"},"content":"![ParseBenefitIndexSequenceDiagram](images/ParseBenefitCommandIndexSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":339,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":340,"author":{"gitId":"jibtaf"},"content":"If the `index` is provided and valid, i.e, is a non-zero unsigned integer, the `BenefitCommandParser` class will create a `BenefitCommand` object with the `index` and `benefit` object, and return it.","lastModifiedDate":"2023-11-11"},{"lineNumber":341,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":342,"author":{"gitId":"jibtaf"},"content":"However, if the `index` is not provided, a `ParseException` will be thrown by the `ParserUtil` class, and the `BenefitCommandParser` class will try to parse the `name` of the employee.","lastModifiedDate":"2023-11-11"},{"lineNumber":343,"author":{"gitId":"jibtaf"},"content":"If the `name` parameter is also not provided, a `ParseException` will be thrown by the `BenefitCommandParser` class. Otherwise, the `BenefitCommandParser` class will create a `BenefitCommand` object with the `name` and `benefit` object, and return it.","lastModifiedDate":"2023-11-11"},{"lineNumber":344,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":345,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `BenefitCommandParser` class parses the `name`:","lastModifiedDate":"2023-11-11"},{"lineNumber":346,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":347,"author":{"gitId":"jibtaf"},"content":"![ParseBenefitNameSequenceDiagram](images/ParseBenefitCommandNameSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":348,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":349,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `benefit` operation works when the user enters the command `benefit 1 /v 150.00 /r bonus`, which means adding a benefit of $150.00 for the employee with index 1, with the reason of `bonus`:","lastModifiedDate":"2023-11-11"},{"lineNumber":350,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":351,"author":{"gitId":"jibtaf"},"content":"![AddBenefitSequenceDiagram2](images/AddBenefitSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":352,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":353,"author":{"gitId":"jibtaf"},"content":"After `BenefitCommandParser` class parses the user input, the `BenefitCommand` class will be called to execute the command. The `BenefitCommand` class will then call the `Model` component to obtain the list of employees, and then obtain the `Person` object to add benefit for.","lastModifiedDate":"2023-11-11"},{"lineNumber":354,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":355,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows the referenced process of adding benefit for an employee:","lastModifiedDate":"2023-11-11"},{"lineNumber":356,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":357,"author":{"gitId":"jibtaf"},"content":"![AddBenefitSequenceDiagram3](images/AddBenefitSequenceDiagram2.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":358,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":359,"author":{"gitId":"jibtaf"},"content":"1. The `BenefitCommand` calls the `getPayrollStorage()` method to obtain the `PayrollStorage` object, which stores all `Payroll` objects in an ArrayList.","lastModifiedDate":"2023-11-11"},{"lineNumber":360,"author":{"gitId":"jibtaf"},"content":"2. The `Person` object then calls the `getLatestPayroll()` method to get the `Payroll` object with the latest `startDate` in the ArrayList.","lastModifiedDate":"2023-11-11"},{"lineNumber":361,"author":{"gitId":"jibtaf"},"content":"3. Then it calls the `addBenefit()` method of the `Payroll` object which calls the `addBenefit()` method of the `Salary` object within it.","lastModifiedDate":"2023-11-11"},{"lineNumber":362,"author":{"gitId":"jibtaf"},"content":"4. This creates a new `Benefit` object with the given `value` and `reason`, then store it into the `benefits` field of the `Salary` object, which is an ArrayList of `Benefit` objects.","lastModifiedDate":"2023-11-11"},{"lineNumber":363,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":364,"author":{"gitId":"jibtaf"},"content":"The following activity diagram summarises the process of adding benefit for an employee:","lastModifiedDate":"2023-11-10"},{"lineNumber":365,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":366,"author":{"gitId":"jibtaf"},"content":"![AddBenefitActivityDiagram](images/AddBenefitActivityDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"jibtaf"},"content":"### Payroll Calculation","lastModifiedDate":"2023-11-11"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":370,"author":{"gitId":"Kevin-Liusx"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"Kevin-Liusx"},"content":"The feature is facilitated by the four classes below:","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"Kevin-Liusx"},"content":"1.\tPayrollCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"Kevin-Liusx"},"content":"2.\tPayrollCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"Kevin-Liusx"},"content":"3.\tPayroll","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"Kevin-Liusx"},"content":"4.\tSalary","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"Kevin-Liusx"},"content":"\u003cu\u003ePayrollCommandParser\u003c/u\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"Kevin-Liusx"},"content":"This class extends the Parser interface, it implements the following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":382,"author":{"gitId":"Kevin-Liusx"},"content":"- PayrollCommandParser#parse() – Parses the user input and returns a PayrollCommand object.","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"Kevin-Liusx"},"content":"\u003cu\u003ePayrollCommand\u003c/u\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":386,"author":{"gitId":"Kevin-Liusx"},"content":"This class extends the Command abstract class, it implements the following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":387,"author":{"gitId":"Kevin-Liusx"},"content":"- PayrollCommand#execute() – Determines whether the user used employee name as reference or the index number. Once it confirms, it will calculate the payroll of the employee.","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":389,"author":{"gitId":"jibtaf"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"jibtaf"},"content":"{what are the design considerations?}","lastModifiedDate":"2023-10-26"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"jibtaf"},"content":"### Payslip Generation","lastModifiedDate":"2023-11-11"},{"lineNumber":394,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":395,"author":{"gitId":"jibtaf"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-11-10"},{"lineNumber":396,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":397,"author":{"gitId":"jibtaf"},"content":"The proposed payslip generation feature is facilitated by `PayslipGenerator`, `PayslipCommand` and `PayslipCommandParser` classes.","lastModifiedDate":"2023-11-10"},{"lineNumber":398,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":399,"author":{"gitId":"jibtaf"},"content":"The `PayslipGenerator` class is responsible for generating the payslip for a specific employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":400,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":401,"author":{"gitId":"jibtaf"},"content":"The `PayslipCommand` class is responsible for executing the `payslip` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":402,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":403,"author":{"gitId":"jibtaf"},"content":"The `PayslipCommandParser` class is responsible for parsing the user input for the `payslip` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":404,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":405,"author":{"gitId":"jibtaf"},"content":"The following class diagram shows how the different classes interact with one another in the payslip generation feature:","lastModifiedDate":"2023-11-10"},{"lineNumber":406,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":407,"author":{"gitId":"jibtaf"},"content":"![PayslipClassDiagram](images/PayslipClassDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":408,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":409,"author":{"gitId":"jibtaf"},"content":"The user can choose to generate a payslip for an employee by entering the index of the employee, or the name of the employee. The `PayslipCommandParser` class is responsible for parsing the user input for the `payslip` command.","lastModifiedDate":"2023-11-11"},{"lineNumber":410,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":411,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `PayslipCommandParser` class parses the user input:","lastModifiedDate":"2023-11-11"},{"lineNumber":412,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":413,"author":{"gitId":"jibtaf"},"content":"![ParsePayslipCommandSequenceDiagram](images/ParsePayslipCommandSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":414,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":415,"author":{"gitId":"jibtaf"},"content":"When parsing the input, all relevant parameters are extracted according to their respective prefixes, and put into an `ArgumentMultimap`.","lastModifiedDate":"2023-11-11"},{"lineNumber":416,"author":{"gitId":"jibtaf"},"content":"If the user provides a date in the form of `dd/mm/yyyy`, the date is parsed by `ParserUtil` class first, and a `LocalDate` object is created with the parsed date.","lastModifiedDate":"2023-11-11"},{"lineNumber":417,"author":{"gitId":"jibtaf"},"content":"If the date is not in the correct format, a `ParseException` will be thrown.","lastModifiedDate":"2023-11-11"},{"lineNumber":418,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":419,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `ParserUtil` class parses the date:","lastModifiedDate":"2023-11-11"},{"lineNumber":420,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":421,"author":{"gitId":"jibtaf"},"content":"![ParsePayslipDateSequenceDiagram](images/ParsePayslipCommandMonthYearSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":422,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":423,"author":{"gitId":"jibtaf"},"content":"After fetching the `LocalDate` object, if any, `PayslipCommandParser` class will then try to parse the `index` first.","lastModifiedDate":"2023-11-11"},{"lineNumber":424,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `PayslipCommandParser` class parses the `index`:","lastModifiedDate":"2023-11-11"},{"lineNumber":425,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":426,"author":{"gitId":"jibtaf"},"content":"![ParsePayslipIndexSequenceDiagram](images/ParsePayslipCommandIndexSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":427,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":428,"author":{"gitId":"jibtaf"},"content":"If the `index` is provided and valid, i.e, is a non-zero unsigned integer, the `PayslipCommandParser` class will create a `PayslipCommand` object with the `index` (and `monthYear` date, if any), and return it.","lastModifiedDate":"2023-11-11"},{"lineNumber":429,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":430,"author":{"gitId":"jibtaf"},"content":"However, if the `index` is not provided, a `ParseException` will be thrown by the `ParserUtil` class, and the `PayslipCommandParser` class will try to parse the `name` of the employee.","lastModifiedDate":"2023-11-11"},{"lineNumber":431,"author":{"gitId":"jibtaf"},"content":"If the `name` parameter is also not provided, a `ParseException` will be thrown by the `PayslipCommandParser` class. Otherwise, the `PayslipCommandParser` class will create a `PayslipCommand` object with the `name` (and `monthYear` date, if any), and return it.","lastModifiedDate":"2023-11-11"},{"lineNumber":432,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":433,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `PayslipCommandParser` class parses the `name`:","lastModifiedDate":"2023-11-11"},{"lineNumber":434,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":435,"author":{"gitId":"jibtaf"},"content":"![ParsePayslipNameSequenceDiagram](images/ParsePayslipCommandNameSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":436,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":437,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows how the `payslip` operation works when the user enters the command `payslip 1 /t 09/10/2023`, which means generating a payslip for the employee with index 1, for the month of October 2020:","lastModifiedDate":"2023-11-11"},{"lineNumber":438,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":439,"author":{"gitId":"jibtaf"},"content":"![PayslipSequenceDiagram](images/PayslipSequenceDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":440,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":441,"author":{"gitId":"jibtaf"},"content":"The following sequence diagram shows the referenced process of generating a payslip for an employee:","lastModifiedDate":"2023-11-11"},{"lineNumber":442,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":443,"author":{"gitId":"jibtaf"},"content":"![PayslipSequenceDiagram2](images/PayslipSequenceDiagram2.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":444,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":445,"author":{"gitId":"jibtaf"},"content":"1. The `PayslipCommand` calls the `generatePayslip()` method of the `PayslipGenerator` class, which calls the `getFieldMap()` method on itself.","lastModifiedDate":"2023-11-11"},{"lineNumber":446,"author":{"gitId":"jibtaf"},"content":"2. The `getFieldMap()` method then calls the `getPayrollWithStartDate()` method on the `Person` object to obtain the `Payroll` object with start date equal to the given one within its `PayrollStorage` object, which stores all `Payroll` objects in an ArrayList. If the user does not specify a `monthYear` date, the `getFieldMap()` method will call the `getLatestPayroll()` method to get the `Payroll` object with the latest `startDate` in the ArrayList.","lastModifiedDate":"2023-11-11"},{"lineNumber":447,"author":{"gitId":"jibtaf"},"content":"3. Then it calls various getter methods on the `Payroll` object to obtain the necessary information for the payslip.","lastModifiedDate":"2023-11-11"},{"lineNumber":448,"author":{"gitId":"jibtaf"},"content":"4. This `getFieldMap()` method then returns a `HashMap\u003cString, String\u003e` object with the necessary information for the payslip, and the information is written into a PDF file using the `itext7` library.","lastModifiedDate":"2023-11-11"},{"lineNumber":449,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":450,"author":{"gitId":"jibtaf"},"content":"The following activity diagram summarises the process of generating a payslip for an employee:","lastModifiedDate":"2023-11-10"},{"lineNumber":451,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":452,"author":{"gitId":"jibtaf"},"content":"![PayslipActivityDiagram](images/PayslipActivityDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":453,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":454,"author":{"gitId":"WeeMingQing"},"content":"### Leave Tracking","lastModifiedDate":"2023-10-27"},{"lineNumber":455,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":456,"author":{"gitId":"WeeMingQing"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":457,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":458,"author":{"gitId":"WeeMingQing"},"content":"The proposed leave tracking feature comprises 2 sub-features:","lastModifiedDate":"2023-11-09"},{"lineNumber":459,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":460,"author":{"gitId":"WeeMingQing"},"content":"1. Add Leave Feature","lastModifiedDate":"2023-11-09"},{"lineNumber":461,"author":{"gitId":"WeeMingQing"},"content":"2. Delete Leave Feature","lastModifiedDate":"2023-11-09"},{"lineNumber":462,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":463,"author":{"gitId":"WeeMingQing"},"content":"#### 1. Add Leave Feature","lastModifiedDate":"2023-11-09"},{"lineNumber":464,"author":{"gitId":"WeeMingQing"},"content":"The proposed Add Leave feature is facilitated by `AnnualLeave`, `AddLeaveCommand`, `AddLeaveCommandParser` and `Person` classes.","lastModifiedDate":"2023-11-09"},{"lineNumber":465,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":466,"author":{"gitId":"WeeMingQing"},"content":"The `AnnualLeave` class is responsible for storing the leave data for a specific employee.","lastModifiedDate":"2023-11-09"},{"lineNumber":467,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":468,"author":{"gitId":"WeeMingQing"},"content":"The `AddLeaveCommand` class is responsible for executing the `addleave` command.","lastModifiedDate":"2023-11-09"},{"lineNumber":469,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":470,"author":{"gitId":"WeeMingQing"},"content":"The `AddLeaveCommandParser` class is responsible for parsing the user input for the `addleave` command.","lastModifiedDate":"2023-11-09"},{"lineNumber":471,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":472,"author":{"gitId":"WeeMingQing"},"content":"The `Person` class is responsible for updating the list of leave.","lastModifiedDate":"2023-11-09"},{"lineNumber":473,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":474,"author":{"gitId":"WeeMingQing"},"content":"The following class diagram shows how the different classes interact with one another in the Add Leave Feature:","lastModifiedDate":"2023-11-09"},{"lineNumber":475,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":476,"author":{"gitId":"WeeMingQing"},"content":"![AddLeaveClassDiagram](images/AddLeaveClassDiagram.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":477,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":478,"author":{"gitId":"WeeMingQing"},"content":"The following sequence diagram shows how the `addleave` operation works:","lastModifiedDate":"2023-10-27"},{"lineNumber":479,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":480,"author":{"gitId":"WeeMingQing"},"content":"![AddLeaveSequenceDiagram](images/AddLeaveSequenceDiagram.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":481,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":482,"author":{"gitId":"WeeMingQing"},"content":"After `AddLeaveCommandParser` class parses the user input, the `AddLeaveCommand` class will be called to execute the command. The `AddLeaveCommand` class will then call the `Model` component to obtain the list of employees, and then obtain the Person object to add leave for this employee, and store the leave as an arraylist in `AnnualLeave`.","lastModifiedDate":"2023-11-09"},{"lineNumber":483,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":484,"author":{"gitId":"WeeMingQing"},"content":"The following activity diagram summarises the process of adding leave for an employee:","lastModifiedDate":"2023-10-27"},{"lineNumber":485,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":486,"author":{"gitId":"WeeMingQing"},"content":"![AddLeaveActivityDiagram](images/AddLeaveActivityDiagram.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":488,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":490,"author":{"gitId":"WeeMingQing"},"content":"**Aspect: How addleave executes:**","lastModifiedDate":"2023-10-27"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":492,"author":{"gitId":"WeeMingQing"},"content":"* **Alternative 1 (current choice):** Saves the dates of the leave added.","lastModifiedDate":"2023-10-27"},{"lineNumber":493,"author":{"gitId":"WeeMingQing"},"content":"  * Pros: Easy to trace and track when the leaves are applied, and whether employee is working on specific day.","lastModifiedDate":"2023-10-27"},{"lineNumber":494,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-27"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":496,"author":{"gitId":"WeeMingQing"},"content":"* **Alternative 2:** Saves only the total number of days of leave added.","lastModifiedDate":"2023-10-27"},{"lineNumber":497,"author":{"gitId":"WeeMingQing"},"content":"  * Pros: will use less memory (e.g. each employee will only need to store an integer for the total number of days of leave per annul)","lastModifiedDate":"2023-10-27"},{"lineNumber":498,"author":{"gitId":"WeeMingQing"},"content":"  * Cons: Not much useful information that can be used (e.g. we do not know the working status of each employee for each day)","lastModifiedDate":"2023-10-27"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":500,"author":{"gitId":"WeeMingQing"},"content":"#### 2. Delete Leave Feature","lastModifiedDate":"2023-11-09"},{"lineNumber":501,"author":{"gitId":"WeeMingQing"},"content":"The proposed Delete Leave feature is facilitated by `AnnualLeave`, `DeleteLeaveCommand`, `DeleteLeaveCommandParser` and `Person` classes.","lastModifiedDate":"2023-11-09"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":503,"author":{"gitId":"WeeMingQing"},"content":"The `AnnualLeave` class is responsible for storing the leave data for a specific employee.","lastModifiedDate":"2023-11-09"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":505,"author":{"gitId":"WeeMingQing"},"content":"The `DeleteLeaveCommand` class is responsible for executing the `deleteleave` command.","lastModifiedDate":"2023-11-09"},{"lineNumber":506,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":507,"author":{"gitId":"WeeMingQing"},"content":"The `DeleteLeaveCommandParser` class is responsible for parsing the user input for the `deleteleave` command.","lastModifiedDate":"2023-11-09"},{"lineNumber":508,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":509,"author":{"gitId":"WeeMingQing"},"content":"The `Person` class is responsible for updating the list of leave.","lastModifiedDate":"2023-11-09"},{"lineNumber":510,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":511,"author":{"gitId":"WeeMingQing"},"content":"The following class diagram shows how the different classes interact with one another in the Delete Leave Feature:","lastModifiedDate":"2023-11-09"},{"lineNumber":512,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":513,"author":{"gitId":"WeeMingQing"},"content":"![DeleteLeaveClassDiagram](images/DeleteLeaveClassDiagram.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":514,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":515,"author":{"gitId":"WeeMingQing"},"content":"The following sequence diagram shows how the `deleteleave` operation works:","lastModifiedDate":"2023-11-09"},{"lineNumber":516,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":517,"author":{"gitId":"WeeMingQing"},"content":"![DeleteLeaveSequenceDiagram](images/DeleteLeaveSequenceDiagram.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":518,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":519,"author":{"gitId":"WeeMingQing"},"content":"After `DeleteLeaveCommandParser` class parses the user input, the `DeleteLeaveCommand` class will be called to execute the command. The `DeleteLeaveCommand` class will then call the `Model` component to to obtain the list of employees, and then obtain the Person object to delete the leave from this employee, and update the arraylist of leave in `AnnualLeave`.","lastModifiedDate":"2023-11-09"},{"lineNumber":520,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":521,"author":{"gitId":"WeeMingQing"},"content":"The following activity diagram summarises the process of adding leave for an employee:","lastModifiedDate":"2023-11-09"},{"lineNumber":522,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":523,"author":{"gitId":"WeeMingQing"},"content":"![DeleteLeaveActivityDiagram](images/DeleteLeaveActivityDiagram.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":524,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":525,"author":{"gitId":"WeeMingQing"},"content":"#### Design considerations:","lastModifiedDate":"2023-11-09"},{"lineNumber":526,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":527,"author":{"gitId":"WeeMingQing"},"content":"**Aspect: How deleteleave executes:**","lastModifiedDate":"2023-11-09"},{"lineNumber":528,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":529,"author":{"gitId":"WeeMingQing"},"content":"* **Alternative 1 (current choice):** Deletes the dates of the leave only if all of them exist in the employee\u0027s list of leave.","lastModifiedDate":"2023-11-09"},{"lineNumber":530,"author":{"gitId":"WeeMingQing"},"content":"    * Pros: Ensures that the leave are always deleted correctly and easy to maintain.","lastModifiedDate":"2023-11-09"},{"lineNumber":531,"author":{"gitId":"WeeMingQing"},"content":"    * Cons: May cause inconvenience to users as they will have to know the exact dates to delete.","lastModifiedDate":"2023-11-09"},{"lineNumber":532,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":533,"author":{"gitId":"WeeMingQing"},"content":"* **Alternative 2:** Deletes all the matching dates of leave as long as they exist in employee\u0027s list of leave, ignoring those that do not exist.","lastModifiedDate":"2023-11-09"},{"lineNumber":534,"author":{"gitId":"WeeMingQing"},"content":"    * Pros: Users are able to delete the leave within the range of dates that they entered, provided that they exist.","lastModifiedDate":"2023-11-09"},{"lineNumber":535,"author":{"gitId":"WeeMingQing"},"content":"    * Cons: Can be confusing to users as to what have been deleted, and also harder to maintain.","lastModifiedDate":"2023-11-09"},{"lineNumber":536,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":537,"author":{"gitId":"Leb14"},"content":"#### 3. View Leave Feature","lastModifiedDate":"2023-11-10"},{"lineNumber":538,"author":{"gitId":"Leb14"},"content":"The proposed View Leave feature is facilitated by `ViewLeaveCommandParser`and `ViewLeaveCommand`","lastModifiedDate":"2023-11-10"},{"lineNumber":539,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":540,"author":{"gitId":"Leb14"},"content":"The `ViewLeaveCommand` class is responsible for executing the `viewleave` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":541,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":542,"author":{"gitId":"Leb14"},"content":"The `ViewLeaveCommandParser` class is responsible for parsing the user input for the `viewleave` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":543,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":544,"author":{"gitId":"Leb14"},"content":"The following class diagram shows how the different classes interact with one another in the View Leave Feature:","lastModifiedDate":"2023-11-10"},{"lineNumber":545,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":546,"author":{"gitId":"Leb14"},"content":"![ViewLeaveClassDiagram](images/ViewLeaveClassDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":547,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":548,"author":{"gitId":"Leb14"},"content":"The following sequence diagram shows how the `viewleave` operation works:","lastModifiedDate":"2023-11-10"},{"lineNumber":549,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":550,"author":{"gitId":"Leb14"},"content":"![ViewLeaveSequenceDiagram](images/ViewLeaveSequenceDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":551,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":552,"author":{"gitId":"Leb14"},"content":"After parsing user input, the `ViewLeaveCommandParser` creates a `ViewLeaveCommand` and executes it. This command then interacts with the `Model` to fetch the list of employees. Subsequently, it generates a hashmap where each local date corresponds to a list of employees on leave. By querying this hashmap for the specified date, the command identifies employees on leave. Finally, it creates a `CommandResult` containing the names of employees on leave for the given date.","lastModifiedDate":"2023-11-10"},{"lineNumber":553,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":554,"author":{"gitId":"Leb14"},"content":"The following activity diagram summarises the process of viewing leave for an employee:","lastModifiedDate":"2023-11-10"},{"lineNumber":555,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":556,"author":{"gitId":"Leb14"},"content":"![ViewLeaveActivityDiagram](images/ViewLeaveActivityDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":557,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":558,"author":{"gitId":"Leb14"},"content":"#### Design considerations:","lastModifiedDate":"2023-11-10"},{"lineNumber":559,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":560,"author":{"gitId":"Leb14"},"content":"**Aspect: How viewleave executes:**","lastModifiedDate":"2023-11-10"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":562,"author":{"gitId":"Leb14"},"content":"* **Alternative 1 (current choice):** View the employee who is on leave on the specific date","lastModifiedDate":"2023-11-10"},{"lineNumber":563,"author":{"gitId":"Leb14"},"content":"    * Pros: User gets to know which specific employee is on leave on that date","lastModifiedDate":"2023-11-10"},{"lineNumber":564,"author":{"gitId":"Leb14"},"content":"    * Cons: Scanning through a list of names could be less efficient","lastModifiedDate":"2023-11-10"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":566,"author":{"gitId":"Leb14"},"content":"* **Alternative 2:** View the number of employee who is on leave on the specific date","lastModifiedDate":"2023-11-10"},{"lineNumber":567,"author":{"gitId":"Leb14"},"content":"    * Pros: Simpler implementation, providing a quick count of employees on leave.","lastModifiedDate":"2023-11-10"},{"lineNumber":568,"author":{"gitId":"Leb14"},"content":"    * Cons: Users only obtain the number of employees on leave without individual details.","lastModifiedDate":"2023-11-10"},{"lineNumber":569,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":570,"author":{"gitId":"applepiofmyeye"},"content":"### Attendance ","lastModifiedDate":"2023-11-10"},{"lineNumber":571,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":572,"author":{"gitId":"applepiofmyeye"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":573,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":574,"author":{"gitId":"applepiofmyeye"},"content":"The proposed attendance marking feature comprises 2 sub-features:","lastModifiedDate":"2023-11-10"},{"lineNumber":575,"author":{"gitId":"applepiofmyeye"},"content":"1. Mark attendance feature","lastModifiedDate":"2023-11-10"},{"lineNumber":576,"author":{"gitId":"applepiofmyeye"},"content":"2. Attendance Report feature","lastModifiedDate":"2023-11-10"},{"lineNumber":577,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":578,"author":{"gitId":"applepiofmyeye"},"content":"These two features are dependent on the following classes:","lastModifiedDate":"2023-11-10"},{"lineNumber":579,"author":{"gitId":"applepiofmyeye"},"content":"* AttendanceStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":580,"author":{"gitId":"applepiofmyeye"},"content":"* Attendance","lastModifiedDate":"2023-11-10"},{"lineNumber":581,"author":{"gitId":"applepiofmyeye"},"content":"* AttendanceType","lastModifiedDate":"2023-11-10"},{"lineNumber":582,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":583,"author":{"gitId":"applepiofmyeye"},"content":"Below are the relationships between these classes:","lastModifiedDate":"2023-11-10"},{"lineNumber":584,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":585,"author":{"gitId":"applepiofmyeye"},"content":"![Attendance package classes](images/AttendanceStorageClassDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":586,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":587,"author":{"gitId":"applepiofmyeye"},"content":"#### 1. Mark attendance feature","lastModifiedDate":"2023-11-10"},{"lineNumber":588,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":589,"author":{"gitId":"applepiofmyeye"},"content":"The mark mechanism is dependent on the Attendance class. The Attendance class contains information on the date and AttendanceType of a Person.  It implements the following operations:","lastModifiedDate":"2023-10-27"},{"lineNumber":590,"author":{"gitId":"applepiofmyeye"},"content":"* `Attendance#markAbsent(LocalDate date)` -- marks the attendance of the employee on the provided date as absent.","lastModifiedDate":"2023-10-27"},{"lineNumber":591,"author":{"gitId":"applepiofmyeye"},"content":"* `Attendance#markLate(LocalDate date)` -- marks the attendance of the employee on the provided date as late.","lastModifiedDate":"2023-10-27"},{"lineNumber":592,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-09"},{"lineNumber":593,"author":{"gitId":"applepiofmyeye"},"content":"The AttendanceStorage stores all the Attendance objects of one Person, only storing Attendances that are late or absent. Dates that are not in the storage are assumed to be marked as present for that given Person.","lastModifiedDate":"2023-10-27"},{"lineNumber":594,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":595,"author":{"gitId":"applepiofmyeye"},"content":"Given below is an example usage scenario and how the mechanism behaves at each step.","lastModifiedDate":"2023-10-27"},{"lineNumber":596,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":597,"author":{"gitId":"applepiofmyeye"},"content":"Step 1. The user executes `mark 1 /at LATE` command to mark the 1st Person in the list as late.","lastModifiedDate":"2023-11-10"},{"lineNumber":598,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":599,"author":{"gitId":"applepiofmyeye"},"content":"Step 2. The `mark` command calls `MarkCommand#markByIndex()` of the given employee, which calls the `Attendance#markAbsent()` of the given Person.","lastModifiedDate":"2023-11-09"},{"lineNumber":600,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":601,"author":{"gitId":"applepiofmyeye"},"content":"This working status is then updated in the GUI as shown below:","lastModifiedDate":"2023-11-10"},{"lineNumber":602,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":603,"author":{"gitId":"applepiofmyeye"},"content":"![GUI before mark command](images/GUIBeforeMarkCommand.png) ![GUI after mark command](images/GUIAfterMarkCommand.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":604,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":605,"author":{"gitId":"applepiofmyeye"},"content":"Sequence diagram is as shown below:","lastModifiedDate":"2023-11-10"},{"lineNumber":606,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":607,"author":{"gitId":"applepiofmyeye"},"content":"![Mark Sequence Diagram](images/MarkSequenceDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":608,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":609,"author":{"gitId":"applepiofmyeye"},"content":"#### 2. Attendance Report feature","lastModifiedDate":"2023-11-10"},{"lineNumber":610,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":611,"author":{"gitId":"applepiofmyeye"},"content":"The attendance reporting mechanism is dependent on the AttendanceStorage class. The AttendanceStorage is a collection of the Attendances of a Person. It implements the following operations:","lastModifiedDate":"2023-11-10"},{"lineNumber":612,"author":{"gitId":"applepiofmyeye"},"content":"* `AttendanceStorage#getCount` -- counts the number of days the attendance of type `attendanceType` appears in the AttendanceStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":613,"author":{"gitId":"applepiofmyeye"},"content":"* `AttendanceStorage#getAttendanceReport` -- provides an `int[]` of the number of days of each attendance type in the following order: [leave, absent, late]","lastModifiedDate":"2023-11-10"},{"lineNumber":614,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":615,"author":{"gitId":"applepiofmyeye"},"content":"The AttendanceStorage stores all the Attendance objects of one Person, only storing Attendances that are late or absent. Dates that are not in the storage are assumed to be marked as present for that given Person.","lastModifiedDate":"2023-11-10"},{"lineNumber":616,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":617,"author":{"gitId":"applepiofmyeye"},"content":"Given below is an example usage scenario and how the mechanism behaves at each step.","lastModifiedDate":"2023-11-10"},{"lineNumber":618,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":619,"author":{"gitId":"applepiofmyeye"},"content":"Step 1. The user executes `attendance 1` command to retrieve the attendance of the first Person.","lastModifiedDate":"2023-11-10"},{"lineNumber":620,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":621,"author":{"gitId":"applepiofmyeye"},"content":"Step 2. The `attendance` command calls `AttendanceCommand#reportByIndex()` of the given employee, which calls the `AttendanceStorage#getAttendanceReport()` of the given Person.","lastModifiedDate":"2023-11-10"},{"lineNumber":622,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":623,"author":{"gitId":"applepiofmyeye"},"content":"Sequence diagram is as shown below:","lastModifiedDate":"2023-11-10"},{"lineNumber":624,"author":{"gitId":"applepiofmyeye"},"content":"![Mark Sequence Diagram](images/AttendanceSequenceDiagram.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":625,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":626,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":627,"author":{"gitId":"applepiofmyeye"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":628,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":629,"author":{"gitId":"applepiofmyeye"},"content":"**Aspect: How AttendanceStorage is assigned to each Person**","lastModifiedDate":"2023-10-27"},{"lineNumber":630,"author":{"gitId":"applepiofmyeye"},"content":"* **Alternative 1 (current choice):** As an attribute of a Person.","lastModifiedDate":"2023-10-27"},{"lineNumber":631,"author":{"gitId":"applepiofmyeye"},"content":"  * Pros: Easy to query for a Person\u0027s attendance status","lastModifiedDate":"2023-10-27"},{"lineNumber":632,"author":{"gitId":"applepiofmyeye"},"content":"  * Cons: May be sub-par performance as it would store identical Attendance objects for each Person.","lastModifiedDate":"2023-11-10"},{"lineNumber":633,"author":{"gitId":"applepiofmyeye"},"content":"    * (Person A could be absent on 24th Oct, Person B could also absent on 24th Oct, but the current software architecture design does not allow shared usage of the duplicates)","lastModifiedDate":"2023-11-10"},{"lineNumber":634,"author":{"gitId":"applepiofmyeye"},"content":"* **Alternative 2:** As a UniqueAttendanceList.","lastModifiedDate":"2023-10-27"},{"lineNumber":635,"author":{"gitId":"applepiofmyeye"},"content":"  * Pros: No copies of Attendance objects having the same attribute values","lastModifiedDate":"2023-10-27"},{"lineNumber":636,"author":{"gitId":"applepiofmyeye"},"content":"  * Cons: Difficult to reference a Person to each Attendance.","lastModifiedDate":"2023-10-27"},{"lineNumber":637,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":638,"author":{"gitId":"applepiofmyeye"},"content":"    ","lastModifiedDate":"2023-10-27"},{"lineNumber":639,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":644,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":645,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":646,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":647,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"Leb14"},"content":"* Human Resource Managers","lastModifiedDate":"2023-10-02"},{"lineNumber":657,"author":{"gitId":"Leb14"},"content":"* has a need to manage a significant number of employees\u0027 information","lastModifiedDate":"2023-10-02"},{"lineNumber":658,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":661,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"Leb14"},"content":"**Value proposition**: Contact management app to simplify and centralize information for full-time employees. It offers easy access to essential details such as name, email, phone number, address, bank accounts, salary, joining date, and annual leave. With all the information, the app can help to track employees’ annual leave and also generate their payroll automatically. This helps to reduce errors and enhance overall operational efficiency. This results in time and cost savings, improved organization, and a smoother workflow for your business.","lastModifiedDate":"2023-10-02"},{"lineNumber":664,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"| Priority | As a …​                                     | I want to …​                                                                                            | So that I can…​                                                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"applepiofmyeye"},"content":"| -------- | ------------------------------------------ |---------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-10"},{"lineNumber":673,"author":{"gitId":"Leb14"},"content":"| `* * *`  | user                                       | add new full-time staff members                                                                         | maintain an up-to-date database of employees.                                                 |","lastModifiedDate":"2023-10-02"},{"lineNumber":674,"author":{"gitId":"Leb14"},"content":"| `* * *`  | user                                       | delete an employee\u0027s information                                                                        | keep the system clean and organized by removing unused data when employees resign             |","lastModifiedDate":"2023-10-02"},{"lineNumber":675,"author":{"gitId":"Leb14"},"content":"| `* * *`  | user                                       | edit employee information (contacts, addresses, bank account, etc.)                                     | keep the system clean and organized by removing unused data when employees resign.            |","lastModifiedDate":"2023-10-02"},{"lineNumber":676,"author":{"gitId":"Leb14"},"content":"| `* * *`  | new user                                   | easily access the user guide within the app or platform                                                 | quickly learn how to use the application\u0027s features and functionalities effectively           |","lastModifiedDate":"2023-10-02"},{"lineNumber":677,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | receive concise and informative error messages                                                          | quickly identify my mistake and take corrective actions promptly                              |","lastModifiedDate":"2023-10-02"},{"lineNumber":678,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | generate a report that shows the total payroll amount received by a specific employee                   | track the employee\u0027s overall compensation.                                                    |","lastModifiedDate":"2023-10-02"},{"lineNumber":679,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | effectively manage employees\u0027 annual leave balances                                                     | make sure the employees do not exceed their allocated limits                                  |","lastModifiedDate":"2023-10-02"},{"lineNumber":680,"author":{"gitId":"Leb14"},"content":"| `* * `   | user                                       | read specific information about a particular employee                                                   | don’t need to manually scroll through multiple pages to find the required information         |","lastModifiedDate":"2023-10-02"},{"lineNumber":681,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | close the application using a command                                                                   | i can expedite the process without relying on the mouse                                       |","lastModifiedDate":"2023-10-02"},{"lineNumber":682,"author":{"gitId":"Leb14"},"content":"| `* *`    | user                                       | calculate payroll for employees to be automatically based on their join dates and proposed salaries     | ensure there are no discrepancies in compensation                                             |","lastModifiedDate":"2023-10-02"},{"lineNumber":683,"author":{"gitId":"Leb14"},"content":"| `*`      | user                                       | have a user-friendly application                                                                        | I can quickly learn how to use it in a short time                                             |","lastModifiedDate":"2023-10-02"},{"lineNumber":684,"author":{"gitId":"Leb14"},"content":"| `*`      | user                                       | have the ability to sort employees by their join date/salary                                            | make informed decisions and efficiently manage the workforce based on the sorted list.        |","lastModifiedDate":"2023-10-02"},{"lineNumber":685,"author":{"gitId":"applepiofmyeye"},"content":"| `*`      | user                                       | have an application capable of detecting and preventing the input of duplicate employee information     | ensure the system does not mix up or duplicate payroll data and also helps to prevent errors. |","lastModifiedDate":"2023-11-10"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"applepiofmyeye"},"content":"(For all use cases below, the **System** is the `ManaGease` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-11-10"},{"lineNumber":692,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":693,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC01 – Add a new full-time employee**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"applepiofmyeye"},"content":"**Guarantees:**","lastModifiedDate":"2023-11-10"},{"lineNumber":696,"author":{"gitId":"applepiofmyeye"},"content":"* Entered employee will be added.","lastModifiedDate":"2023-11-10"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"applepiofmyeye"},"content":"1. User requests to add a new employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":701,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease adds employee to the employee database.","lastModifiedDate":"2023-11-10"},{"lineNumber":702,"author":{"gitId":"applepiofmyeye"},"content":"3. ManaGease displays a confirmation message that an employee has been added.","lastModifiedDate":"2023-11-10"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"applepiofmyeye"},"content":"* 1a. Invalid parameters are included in the command.","lastModifiedDate":"2023-11-10"},{"lineNumber":709,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":710,"author":{"gitId":"Leb14"},"content":"\t * 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":711,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":712,"author":{"gitId":"applepiofmyeye"},"content":"     * Use case continues from Step 1.","lastModifiedDate":"2023-11-10"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":714,"author":{"gitId":"applepiofmyeye"},"content":"         Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":715,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":716,"author":{"gitId":"applepiofmyeye"},"content":"* 1b. User does not input a compulsory parameter.","lastModifiedDate":"2023-11-10"},{"lineNumber":717,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":718,"author":{"gitId":"applepiofmyeye"},"content":"  * 1b1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":719,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":720,"author":{"gitId":"applepiofmyeye"},"content":"  * 1b2. User requests to add a new employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":721,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":722,"author":{"gitId":"applepiofmyeye"},"content":"  * Steps 1b1 and 1b2 repeat until the user inputs a correct command. ","lastModifiedDate":"2023-11-10"},{"lineNumber":723,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":724,"author":{"gitId":"applepiofmyeye"},"content":"    Use case continues from Step 2.","lastModifiedDate":"2023-11-10"},{"lineNumber":725,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":726,"author":{"gitId":"applepiofmyeye"},"content":"* 1c. Identical employee is added to the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":727,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":728,"author":{"gitId":"applepiofmyeye"},"content":"  * 1c1. ManaGease shows an error message, identical employee cannot be added to the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":729,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":730,"author":{"gitId":"Leb14"},"content":"    Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":731,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":732,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":733,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":734,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC02 – List all employees**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":736,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":737,"author":{"gitId":"applepiofmyeye"},"content":"1. User requests to list all employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":738,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease displays all the employees in the employee database.","lastModifiedDate":"2023-11-10"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":740,"author":{"gitId":"applepiofmyeye"},"content":"**Extensions**","lastModifiedDate":"2023-11-10"},{"lineNumber":741,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":742,"author":{"gitId":"applepiofmyeye"},"content":"* 2a. Employee database is empty.","lastModifiedDate":"2023-11-10"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":744,"author":{"gitId":"applepiofmyeye"},"content":"  * 2a1. ManaGease shows an empty list of employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":745,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC03 – Edit information of existing full-time employee**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":749,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":750,"author":{"gitId":"applepiofmyeye"},"content":"**Pre-conditions:**","lastModifiedDate":"2023-11-10"},{"lineNumber":751,"author":{"gitId":"applepiofmyeye"},"content":"* Employee to edit should exist in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":752,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":753,"author":{"gitId":"applepiofmyeye"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":754,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":755,"author":{"gitId":"applepiofmyeye"},"content":"1. User \u003cu\u003elists the employees\u003c/u\u003e.(UC02)","lastModifiedDate":"2023-11-10"},{"lineNumber":756,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease displays a list of all the employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":757,"author":{"gitId":"applepiofmyeye"},"content":"3. User requests to edit an existing employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":758,"author":{"gitId":"applepiofmyeye"},"content":"4. ManaGease edits the information of the specified employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":759,"author":{"gitId":"applepiofmyeye"},"content":"5. ManaGease displays a confirmation message that information for employees have been updated.","lastModifiedDate":"2023-11-10"},{"lineNumber":760,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":761,"author":{"gitId":"Leb14"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":762,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":763,"author":{"gitId":"applepiofmyeye"},"content":"**Extensions**","lastModifiedDate":"2023-11-10"},{"lineNumber":764,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":765,"author":{"gitId":"applepiofmyeye"},"content":"* 3a. Invalid command parameters are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":766,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":767,"author":{"gitId":"applepiofmyeye"},"content":" \t* 3a1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":768,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":769,"author":{"gitId":"applepiofmyeye"},"content":"       Use case continues from step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":770,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":771,"author":{"gitId":"applepiofmyeye"},"content":"* 3b. Same information is given to edit the person to.","lastModifiedDate":"2023-11-10"},{"lineNumber":772,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":773,"author":{"gitId":"applepiofmyeye"},"content":"  * 3b1. ManaGease shows an error message, the field to change is the same as the existing one.","lastModifiedDate":"2023-11-10"},{"lineNumber":774,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":775,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":776,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":777,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC04 – View one piece of information on a full-time employee**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":778,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":779,"author":{"gitId":"applepiofmyeye"},"content":"**Guarantees:**","lastModifiedDate":"2023-11-10"},{"lineNumber":780,"author":{"gitId":"applepiofmyeye"},"content":"* Information required from the specified employee will be displayed for the user.","lastModifiedDate":"2023-11-10"},{"lineNumber":781,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":782,"author":{"gitId":"applepiofmyeye"},"content":"**Pre-conditions:**","lastModifiedDate":"2023-11-10"},{"lineNumber":783,"author":{"gitId":"applepiofmyeye"},"content":"* Employee to view from the list should exist in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":784,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":785,"author":{"gitId":"Leb14"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":786,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":787,"author":{"gitId":"applepiofmyeye"},"content":"1. User \u003cu\u003elists the employees\u003c/u\u003e.(UC02)","lastModifiedDate":"2023-11-10"},{"lineNumber":788,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease shows a list of all the employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":789,"author":{"gitId":"applepiofmyeye"},"content":"3. User requests to view one piece of information from an existing employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":790,"author":{"gitId":"applepiofmyeye"},"content":"4. ManaGease displays the information for an employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":791,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":792,"author":{"gitId":"Leb14"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":793,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":794,"author":{"gitId":"Leb14"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"applepiofmyeye"},"content":"* 3a. Invalid command parameters are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"applepiofmyeye"},"content":"\t* 3a1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":799,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":800,"author":{"gitId":"applepiofmyeye"},"content":"        Use case continues from Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":801,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":802,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":803,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":804,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC05 – Delete and existing employee**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":805,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":806,"author":{"gitId":"applepiofmyeye"},"content":"**Guarantees:**","lastModifiedDate":"2023-11-10"},{"lineNumber":807,"author":{"gitId":"applepiofmyeye"},"content":"* Entered employee will be deleted.","lastModifiedDate":"2023-11-10"},{"lineNumber":808,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":809,"author":{"gitId":"applepiofmyeye"},"content":"**Pre-conditions:**","lastModifiedDate":"2023-11-10"},{"lineNumber":810,"author":{"gitId":"applepiofmyeye"},"content":"* Employee to delete from the list should exist in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":811,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":812,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":813,"author":{"gitId":"Leb14"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":814,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":815,"author":{"gitId":"applepiofmyeye"},"content":"1. User \u003cu\u003elists the employees\u003c/u\u003e.(UC02)","lastModifiedDate":"2023-11-10"},{"lineNumber":816,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease shows a list of all the employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":817,"author":{"gitId":"applepiofmyeye"},"content":"3. User requests to delete an existing employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":818,"author":{"gitId":"applepiofmyeye"},"content":"4. ManaGease deletes existing employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":819,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":820,"author":{"gitId":"Leb14"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":821,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":822,"author":{"gitId":"Leb14"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":823,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":824,"author":{"gitId":"applepiofmyeye"},"content":"* 3a. Invalid command parameters are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":825,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":826,"author":{"gitId":"applepiofmyeye"},"content":"  * 3a1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":827,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":828,"author":{"gitId":"applepiofmyeye"},"content":"  Use case resumes from Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":829,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":830,"author":{"gitId":"applepiofmyeye"},"content":"* 3a. User requests to delete existing member via name.","lastModifiedDate":"2023-11-10"},{"lineNumber":831,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":832,"author":{"gitId":"applepiofmyeye"},"content":"\t * 3a1. ManaGease will display a list of members with the same name.","lastModifiedDate":"2023-11-10"},{"lineNumber":833,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":834,"author":{"gitId":"Leb14"},"content":"         Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":835,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"applepiofmyeye"},"content":"* 3b. User inputs an employee index or name that does not exist in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":837,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":838,"author":{"gitId":"applepiofmyeye"},"content":"  * 3b1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":839,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":840,"author":{"gitId":"applepiofmyeye"},"content":"    Use case resumes from Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":841,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":842,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":843,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":844,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC06 – Add deductions/benefits to the monthly salary of an employee**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":845,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":846,"author":{"gitId":"applepiofmyeye"},"content":"**Guarantees:**","lastModifiedDate":"2023-11-10"},{"lineNumber":847,"author":{"gitId":"applepiofmyeye"},"content":"* Specified employee\u0027s deductions/benefits for the month will be added.","lastModifiedDate":"2023-11-10"},{"lineNumber":848,"author":{"gitId":"applepiofmyeye"},"content":"* The specified employee\u0027s monthly salary will decrease based on the deductions for the month and increase based on the benefits for the month.","lastModifiedDate":"2023-11-10"},{"lineNumber":849,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":850,"author":{"gitId":"applepiofmyeye"},"content":"**Pre-conditions:**","lastModifiedDate":"2023-11-10"},{"lineNumber":851,"author":{"gitId":"applepiofmyeye"},"content":"* Employee to add deductions/benefits to should be in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":852,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":853,"author":{"gitId":"applepiofmyeye"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":854,"author":{"gitId":"applepiofmyeye"},"content":"1. User \u003cu\u003elists the employees\u003c/u\u003e.(UC02)","lastModifiedDate":"2023-11-10"},{"lineNumber":855,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease shows a list of all the employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":856,"author":{"gitId":"applepiofmyeye"},"content":"3. User requests to add deductions/benefits to the monthly salary of an employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":857,"author":{"gitId":"applepiofmyeye"},"content":"4. ManaGease adds deductions/benefits to the monthly salary of an employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":858,"author":{"gitId":"applepiofmyeye"},"content":"5. ManaGease displays a confirmation message that deductions/benefits have been added.","lastModifiedDate":"2023-11-10"},{"lineNumber":859,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":860,"author":{"gitId":"jibtaf"},"content":"   Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":861,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":862,"author":{"gitId":"jibtaf"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":863,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":864,"author":{"gitId":"applepiofmyeye"},"content":"* 3a. Invalid command parameters are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":865,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":866,"author":{"gitId":"applepiofmyeye"},"content":"    * 3a1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":867,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":868,"author":{"gitId":"applepiofmyeye"},"content":"      Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":869,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":870,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":871,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":872,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC07 – Generate a PDF payslip for a specific employee**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":873,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":874,"author":{"gitId":"applepiofmyeye"},"content":"**Pre-conditions:**","lastModifiedDate":"2023-11-10"},{"lineNumber":875,"author":{"gitId":"applepiofmyeye"},"content":"* Employee to generate payslip for to should be in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":876,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":877,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":878,"author":{"gitId":"jibtaf"},"content":"**MSS**","lastModifiedDate":"2023-10-25"},{"lineNumber":879,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":880,"author":{"gitId":"applepiofmyeye"},"content":"1. User \u003cu\u003elists the employees\u003c/u\u003e.(UC02)","lastModifiedDate":"2023-11-10"},{"lineNumber":881,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease shows a list of all the employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":882,"author":{"gitId":"applepiofmyeye"},"content":"3. User requests to generate a payslip for a specific employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":883,"author":{"gitId":"applepiofmyeye"},"content":"4. ManaGease generates a PDF payslip for the employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":884,"author":{"gitId":"applepiofmyeye"},"content":"5. ManaGease displays a confirmation message that a payslip has been generated.","lastModifiedDate":"2023-11-10"},{"lineNumber":885,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":886,"author":{"gitId":"jibtaf"},"content":"   Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":887,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":888,"author":{"gitId":"jibtaf"},"content":"**Extensions**","lastModifiedDate":"2023-10-25"},{"lineNumber":889,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":890,"author":{"gitId":"jibtaf"},"content":"* 1a. Invalid command parameters are given.","lastModifiedDate":"2023-10-25"},{"lineNumber":891,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":892,"author":{"gitId":"jibtaf"},"content":"    * 1a1. ManaGease shows an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":893,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":894,"author":{"gitId":"applepiofmyeye"},"content":"      Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":895,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":896,"author":{"gitId":"jibtaf"},"content":"* 2a. Template file for the payslip is not found.","lastModifiedDate":"2023-10-25"},{"lineNumber":897,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":898,"author":{"gitId":"applepiofmyeye"},"content":"    * 2a1. ManaGease shows an error message, requesting user to add a template file for payslip.","lastModifiedDate":"2023-11-10"},{"lineNumber":899,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":900,"author":{"gitId":"jibtaf"},"content":"      Use case ends.","lastModifiedDate":"2023-10-25"},{"lineNumber":901,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":902,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC08 – Add leave for a specific employee**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":903,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":904,"author":{"gitId":"applepiofmyeye"},"content":"**Guarantees:**","lastModifiedDate":"2023-11-10"},{"lineNumber":905,"author":{"gitId":"applepiofmyeye"},"content":"* Specified employee\u0027s days of leave will be added –– they will be considered taken.","lastModifiedDate":"2023-11-10"},{"lineNumber":906,"author":{"gitId":"applepiofmyeye"},"content":"* The employee\u0027s remaining days of leave will reduce by the number of leaves added.","lastModifiedDate":"2023-11-10"},{"lineNumber":907,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":908,"author":{"gitId":"applepiofmyeye"},"content":"**Pre-conditions:**","lastModifiedDate":"2023-11-10"},{"lineNumber":909,"author":{"gitId":"applepiofmyeye"},"content":"* Employee to add leave to should be in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":910,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":911,"author":{"gitId":"applepiofmyeye"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":912,"author":{"gitId":"applepiofmyeye"},"content":"1. User \u003cu\u003elists the employees\u003c/u\u003e.(UC02)","lastModifiedDate":"2023-11-10"},{"lineNumber":913,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease shows a list of all the employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":914,"author":{"gitId":"applepiofmyeye"},"content":"3. User requests to add leave for a specific employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":915,"author":{"gitId":"applepiofmyeye"},"content":"4. ManaGease adds leave for the employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":916,"author":{"gitId":"applepiofmyeye"},"content":"5. ManaGease displays a confirmation message that the leave has been added.","lastModifiedDate":"2023-11-10"},{"lineNumber":917,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":918,"author":{"gitId":"WeeMingQing"},"content":"   Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":919,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":920,"author":{"gitId":"WeeMingQing"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":921,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":922,"author":{"gitId":"applepiofmyeye"},"content":"* 3a. Invalid command parameters are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":923,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":924,"author":{"gitId":"applepiofmyeye"},"content":"    * 3a1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":925,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":926,"author":{"gitId":"applepiofmyeye"},"content":"      Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":927,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":928,"author":{"gitId":"applepiofmyeye"},"content":"* 3b. Invalid date(s) are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":929,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":930,"author":{"gitId":"applepiofmyeye"},"content":"    * 3b1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":931,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":932,"author":{"gitId":"applepiofmyeye"},"content":"      Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":933,"author":{"gitId":"jibtaf"},"content":"  ","lastModifiedDate":"2023-10-25"},{"lineNumber":934,"author":{"gitId":"applepiofmyeye"},"content":"* 3c. Non-existing index given.","lastModifiedDate":"2023-11-10"},{"lineNumber":935,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":936,"author":{"gitId":"applepiofmyeye"},"content":"  * 3c1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":937,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":938,"author":{"gitId":"applepiofmyeye"},"content":"    Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":939,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":940,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":941,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC09 – Delete leave from a specific employee**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":942,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":943,"author":{"gitId":"applepiofmyeye"},"content":"**Guarantees:**","lastModifiedDate":"2023-11-10"},{"lineNumber":944,"author":{"gitId":"applepiofmyeye"},"content":"* Specified employee\u0027s days of leave will be deleted –– they will no longer be considered taken.","lastModifiedDate":"2023-11-10"},{"lineNumber":945,"author":{"gitId":"applepiofmyeye"},"content":"* The employee\u0027s leave will revert back to the original value before the leave was taken.","lastModifiedDate":"2023-11-10"},{"lineNumber":946,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":947,"author":{"gitId":"applepiofmyeye"},"content":"**Pre-conditions:**","lastModifiedDate":"2023-11-10"},{"lineNumber":948,"author":{"gitId":"applepiofmyeye"},"content":"* Employee to delete leave from should be in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":949,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":950,"author":{"gitId":"applepiofmyeye"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":951,"author":{"gitId":"applepiofmyeye"},"content":"1. User \u003cu\u003elists the employees\u003c/u\u003e.(UC02)","lastModifiedDate":"2023-11-10"},{"lineNumber":952,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease shows a list of all the employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":953,"author":{"gitId":"applepiofmyeye"},"content":"3. User requests to delete leave from a specific employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":954,"author":{"gitId":"applepiofmyeye"},"content":"4. ManaGease deletes leave from the employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":955,"author":{"gitId":"applepiofmyeye"},"content":"5. ManaGease displays a confirmation message that the leave has been deleted.","lastModifiedDate":"2023-11-10"},{"lineNumber":956,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":957,"author":{"gitId":"WeeMingQing"},"content":"   Use case ends.","lastModifiedDate":"2023-11-09"},{"lineNumber":958,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":959,"author":{"gitId":"WeeMingQing"},"content":"**Extensions**","lastModifiedDate":"2023-11-09"},{"lineNumber":960,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":961,"author":{"gitId":"applepiofmyeye"},"content":"* 3a. Invalid command parameters are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":962,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":963,"author":{"gitId":"applepiofmyeye"},"content":"    * 3a1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":964,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":965,"author":{"gitId":"applepiofmyeye"},"content":"      Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":966,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":967,"author":{"gitId":"applepiofmyeye"},"content":"* 3b. Invalid/Non-existing date(s) are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":968,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":969,"author":{"gitId":"applepiofmyeye"},"content":"    * 3b1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":970,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":971,"author":{"gitId":"applepiofmyeye"},"content":"      Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":972,"author":{"gitId":"WeeMingQing"},"content":"  ","lastModifiedDate":"2023-11-09"},{"lineNumber":973,"author":{"gitId":"applepiofmyeye"},"content":"* 3c. Non-existing index given.","lastModifiedDate":"2023-11-10"},{"lineNumber":974,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":975,"author":{"gitId":"applepiofmyeye"},"content":"  * 3c1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":976,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":977,"author":{"gitId":"applepiofmyeye"},"content":"    Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":978,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":979,"author":{"gitId":"applepiofmyeye"},"content":"\u003cu\u003e**Use case: UC10 – Mark an employee\u0027s attendance**\u003c/u\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":980,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":981,"author":{"gitId":"applepiofmyeye"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":982,"author":{"gitId":"applepiofmyeye"},"content":"1. User \u003cu\u003elists the employees\u003c/u\u003e.(UC02)","lastModifiedDate":"2023-11-10"},{"lineNumber":983,"author":{"gitId":"applepiofmyeye"},"content":"2. ManaGease shows a list of all the employees.","lastModifiedDate":"2023-11-10"},{"lineNumber":984,"author":{"gitId":"applepiofmyeye"},"content":"3. User requests to mark an employee\u0027s attendance.","lastModifiedDate":"2023-11-10"},{"lineNumber":985,"author":{"gitId":"applepiofmyeye"},"content":"4. ManaGease changes the employee\u0027s attendance.","lastModifiedDate":"2023-11-10"},{"lineNumber":986,"author":{"gitId":"applepiofmyeye"},"content":"5. ManaGease displays a confirmation message that the attendance has been marked.","lastModifiedDate":"2023-11-10"},{"lineNumber":987,"author":{"gitId":"applepiofmyeye"},"content":"6. ManaGease changes the working status of the employee as the specified attendance type.","lastModifiedDate":"2023-11-10"},{"lineNumber":988,"author":{"gitId":"applepiofmyeye"},"content":"    ","lastModifiedDate":"2023-11-10"},{"lineNumber":989,"author":{"gitId":"applepiofmyeye"},"content":"    Use case ends","lastModifiedDate":"2023-11-10"},{"lineNumber":990,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":991,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-11-10"},{"lineNumber":992,"author":{"gitId":"applepiofmyeye"},"content":"* 3a. Invalid command parameters are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":993,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":994,"author":{"gitId":"applepiofmyeye"},"content":"  * 3a1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":995,"author":{"gitId":"applepiofmyeye"},"content":"    ","lastModifiedDate":"2023-11-10"},{"lineNumber":996,"author":{"gitId":"applepiofmyeye"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":997,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":998,"author":{"gitId":"applepiofmyeye"},"content":"* 3b. Invalid attendance type given","lastModifiedDate":"2023-11-10"},{"lineNumber":999,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1000,"author":{"gitId":"applepiofmyeye"},"content":"  * 3b1. ManaGease shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1002,"author":{"gitId":"applepiofmyeye"},"content":"    Use case resumes at Step 3.","lastModifiedDate":"2023-11-10"},{"lineNumber":1003,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":1004,"author":{"gitId":"applepiofmyeye"},"content":"* 3c. User requests to delete existing member via name.","lastModifiedDate":"2023-11-10"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1006,"author":{"gitId":"applepiofmyeye"},"content":"    * 3c1. ManaGease will display a list of members with the same name.","lastModifiedDate":"2023-11-10"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1008,"author":{"gitId":"applepiofmyeye"},"content":"      Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":1009,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":1010,"author":{"gitId":"applepiofmyeye"},"content":"* 4a. Employee is currently on leave","lastModifiedDate":"2023-11-10"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1012,"author":{"gitId":"applepiofmyeye"},"content":"  * 4a1. ManaGease will display an error message, users are not allowed to mark the attendance of an employee on leave.","lastModifiedDate":"2023-11-10"},{"lineNumber":1013,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1014,"author":{"gitId":"applepiofmyeye"},"content":"    Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2023-11-10"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"applepiofmyeye"},"content":"3. The application should be designed with an intuitive and user-friendly interface to cater to HR managers who have not previously used such software.","lastModifiedDate":"2023-11-10"},{"lineNumber":1024,"author":{"gitId":"applepiofmyeye"},"content":"4. The application is designed and available exclusively in the English language.","lastModifiedDate":"2023-11-10"},{"lineNumber":1025,"author":{"gitId":"applepiofmyeye"},"content":"5. The application is not required to handle the printing of the reports.","lastModifiedDate":"2023-11-10"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1032,"author":{"gitId":"applepiofmyeye"},"content":"* **HR manager**: Human Resource Manager in the company","lastModifiedDate":"2023-11-10"},{"lineNumber":1033,"author":{"gitId":"Leb14"},"content":"* **Employee**: A staff in the company","lastModifiedDate":"2023-10-02"},{"lineNumber":1034,"author":{"gitId":"applepiofmyeye"},"content":"* **Parameters**: ","lastModifiedDate":"2023-11-10"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1036,"author":{"gitId":"jibtaf"},"content":"### Future Enhancements","lastModifiedDate":"2023-11-10"},{"lineNumber":1037,"author":{"gitId":"jibtaf"},"content":"1. Modify the `add` feature to restrict the user from adding employees with the same name but in different cases (e.g. John Tan and john tan).","lastModifiedDate":"2023-11-10"},{"lineNumber":1038,"author":{"gitId":"jibtaf"},"content":"    This can be done by modifying the `equals()` method in the `Person` class to ignore the case of the name, i.e. changing `name.equals(other.name)` to `name.toLowerCase().equals(other.name.toLowerCase())`.","lastModifiedDate":"2023-11-10"},{"lineNumber":1039,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1056,"author":{"gitId":"applepiofmyeye"},"content":"   1a. Download the jar file and copy into an empty folder","lastModifiedDate":"2023-11-10"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1058,"author":{"gitId":"applepiofmyeye"},"content":"   1b. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-11-10"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1060,"author":{"gitId":"applepiofmyeye"},"content":"2. Saving window preferences","lastModifiedDate":"2023-11-10"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1062,"author":{"gitId":"applepiofmyeye"},"content":"   2a. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2023-11-10"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1064,"author":{"gitId":"applepiofmyeye"},"content":"   2b. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1067,"author":{"gitId":"applepiofmyeye"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2023-11-10"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1075,"author":{"gitId":"applepiofmyeye"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1078,"author":{"gitId":"applepiofmyeye"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1081,"author":{"gitId":"applepiofmyeye"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size, excluding negative, non-integer and extremely large integers)\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1084,"author":{"gitId":"applepiofmyeye"},"content":"2._{ more test cases …​ }_","lastModifiedDate":"2023-11-10"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1090,"author":{"gitId":"applepiofmyeye"},"content":"   1a. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2023-11-10"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kevin-Liusx":15,"jibtaf":265,"WeeMingQing":98,"applepiofmyeye":287,"-":312,"Leb14":114}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"ManaGease is a **desktop app for \u003cins\u003eHR managers\u003c/ins\u003e to manage full time staff in the workplace, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ManaGease can get your employee management tasks done faster than traditional apps.","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"Our app simplifies and accelerates your experiences of employee information management, payroll management and leave tracking. If this is the first time you are using ManaGease, we recommend that you read our user guide to familiarise with all commands we provide, and learn how to use them from our step-by-step tutorial. You may start with the [Quick Start](#quick-start) below. Otherwise, jump straight to the [Table of Contents](#table-of-contents) or [Command Summary](#command-summary) section for details of the command you are looking for.","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"To help you avoid detrimental errors in your experience with ManaGease, we have included some possible outputs and respective error messages for each command. Along the way, there will be some notes and cautions to help you use ManaGease more efficiently.","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"Please input the field parameters in the correct format. You can refer to the \u003ca href\u003d\"#parameter-formats\"\u003eparameter formats\u003c/a\u003e for more information.","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"You can refer to the [FAQ](#faq) section for more information if you encounter some problems while using ManaGease.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"If you still have any questions, feel free to contact us at E0968838@u.nus.edu.","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"We hope you enjoy using ManaGease as much as we enjoyed building it.","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"---","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"## Table of Contents","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"  * [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"  * [Quick Start](#quick-start)","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"  * [Features](#features)","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    * [Parameter formats](#parameter-formats)","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    * [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    * [Adding an employee: `add`](#adding-an-employee-add)","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    * [Editing an employee: `edit`](#editing-an-employee-edit)","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    * [Deleting an employee: `delete`](#deleting-an-employee-delete)","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    * [Reading an employee\u0027s information: `read`](#reading-an-employees-information-read)","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    * [Adding leave to an employee: `addleave`](#adding-leave-to-an-employee-addleave)","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    * [Deleting leave from an employee: `deleteleave`](#deleting-leave-from-an-employee-deleteleave)","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    * [View employee who is on leave: `viewleave`](#view-employee-who-is-on-leave-viewleave)","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    * [View the calendar of upcoming month: `nm`](#view-the-calendar-of-upcoming-month-nm)","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    * [View the calendar of previous month: `pm`](#view-the-calendar-of-previous-month-pm)","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"    * [View the calendar of current month: `cm`](#view-the-calendar-of-current-month-cm)","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    * [Adding a deduction to the payroll of an employee: `deduct`](#adding-a-deduction-to-the-payroll-of-an-employee-deduct)","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    * [Adding a benefit to the payroll of an employee: `benefit`](#adding-a-benefit-to-the-payroll-of-an-employee-benefit)","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"    * [Calculating an employee\u0027s payroll: `payroll`](#calculating-an-employees-payroll-payroll)","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"    * [Generating payslips for an employee: `payslip`](#generating-payslips-for-an-employee-payslip)","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"    * [Marking an employee\u0027s attendance: `mark`](#marking-an-employees-attendance-mark)","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"    * [View an employee\u0027s attendance report: `attendance`](#view-an-employees-attendance-report-attendance)","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"    * [Listing all employees: `list`](#listing-all-employees-list)","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"    * [Locating employees by name: `find`](#locating-employees-by-name-find)","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"    * [Clearing all entries: `clear`](#clearing-all-entries-clear)","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    * [Exiting the program: `exit`](#exiting-the-program-exit)","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    * [Saving the data](#saving-the-data)","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"    * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"  * [FAQ](#faq)","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"  * * [Glossary](#glossary)","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"  * [Command summary](#command-summary)","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"## Quick Start","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"1. Ensure you have Java `11` or above installed on your Computer. ","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"2. Download the latest `ManaGease.jar` from [here](https://github.com/AY2324S1-CS2103T-W12-2/tp/releases)","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"3. Copy the file to the folder you want to use as the **home folder** for your ManaGease. ","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in(i.e. `cd DIRECTORY_PATH`), and enter the `java -jar ManaGease.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"   A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"   \u003cimg src\u003d\"images/UiAnnotated.png\" width\u003d\"800\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"   The calendar and clock are generated based on the local date and time of your machine. Please verify your machine\u0027s date and time before starting the application!","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"   \u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    Employee information is displayed on the person card below:","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"    \u003cimg src\u003d\"images/PersonCardAnnotated.png\" width\u003d\"800\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"5. Type the command in the command box and press Enter on your keyboard to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"   * `list`: Lists all employees.","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"   * `add /n Jane Smith /e jane@email.com /p 12345678 /a 123 Main St /b 123456789 /jd 12/09/2023 /s 1000.00 /l 10`: Adds an employee named `Jane Smith` to ManaGease","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"   * `delete 3`: Deletes the 3rd employee shown in the current list.","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"   * `read 3 /b`: Reads the bank account of the 3rd employee shown in the current list.","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"   ","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"   * `edit 2 /n Betsy Crower`: Edits the name of the 2nd employee to be `Betsy Crower`.","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"   * `clear`: Deletes all employees.","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * `exit`: Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"Refer to [Command Summary](#command-summary) below for a summary of all commands, and the [Features](#features) below for details of each command.","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"* For a quick glance at all the commands and features, please refer to the [Command Summary](#command-summary).","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"  e.g. in `edit INDEX /n NAME`, `INDEX` and `NAME` are parameters that can be used as `edit 3 /n John Doe`.","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"* Commands, prefixes and most parameters are to be entered in lowercase. You can only enter capitalized letters for parameters of `NAME`, `EMAIL` and `ADDRESS`.\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"  e.g. `/n NAME [/p PHONE]` can be used as `/n John Doe /p 98988989` or as `/n John Doe`.","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"  e.g. if the command specifies `/n NAME /p PHONE`, `/p PHONE /n NAME` is also acceptable.","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"### Parameter formats","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"* All parameters provided must be in the correct format.\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"| Prefix  | Parameter         | Format| Example                     |","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"|---------|-------------------||-----------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"| `/n`    | `NAME`            | non-empty and non-blank alphanumeric string| `/n jibtaf`                 |","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"| `/p`    | `PHONE`           | string containing at least 3 integers| `/p 98988989`               |","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"| `/e`    | `EMAIL`           | local-part@domain\u003cbr/\u003e1. The local-part should only contain alphanumeric characters and `+`, `_`, `.`, `-`. It may not start or end with any special characters.\u003cbr/\u003e2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.\u003cbr/\u003eThe domain name must:\u003cbr/\u003e    - end with a domain label at least 2 characters long\u003cbr/\u003e    - have each domain label start and end with alphanumeric characters\u003cbr/\u003e    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any. | `/e john_doe@u.nus.edu`     |","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"| `/a`    | `ADDRESS`         | non-empty and non-blank alphanumeric string| `/a PGPR, Singapore 118420` |","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"| `/b`    | `BANK_ACCOUNT`    | string containing 5 to 17 integers, inclusive| `/b 1029384756`             |","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"| `/jd`   | `JOIN_DATE`       | date in the form of DD/MM/YYYY, and must be valid (e.g., 29/02/2023 and 31/09/2023 are not valid dates)                                                                                                                                                                                                                                                                                                                                                                                                                                                                | `/jd 20/04/2018`            |","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"| `/s`    | `SALARY`          | numeric digits in 2 decimal places, without any sign for currencies                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | `/s 2000.00`                |","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"| `/v`    | `VALUE`           | numeric digits in 2 decimal places, without any sign for currencies                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | `/v 150.00`                 |","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"| `/l`    | `ANNUAL_LEAVE`    | numeric digits| `/l 25`                     |","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"| `/from` | `FROM_DATE`       | date in the form of DD/MM/YYYY, and must be valid (e.g., 29/02/2023 and 31/09/2023 are not valid dates)                                                                                                                                                                                                                                                                                                                                                                                                                                                                | `/from 20/04/2018`          |","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"| `/to`   | `TO_DATE`         | date in the form of DD/MM/YYYY, and must be valid (e.g., 29/02/2023 and 31/09/2023 are not valid dates)                                                                                                                                                                                                                                                                                                                                                                                                                                                                | `/to 20/04/2018`            |","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"| `/on`   | `DATE`            | date in the form of DD/MM/YYYY, and must be valid (e.g., 29/02/2023 and 31/09/2023 are not valid dates)                                                                                                                                                                                                                                                                                                                                                                                                                                                                | `/on 20/04/2018`            |","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"| `/t`    | `MONTH_YEAR_DATE` | date in the form of DD/MM/YYYY, and must be valid (e.g., 29/02/2023 and 31/09/2023 are not valid dates)                                                                                                                                                                                                                                                                                                                                                                                                                                                                | `/t 20/04/2018`             |","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"| `/r`    | `REASON`          | case-insensitive words from the following list:\u003cbr/\u003e1. cpf (means `EMPLOYEE_CPF_DEDUCTION`)\u003cbr/\u003e2. absence (means `ABSENCE`)\u003cbr/\u003e3. no pay (means `NO_PAY_LEAVE`)\u003cbr/\u003e4. bonus (means `ANNUAL_BONUS`)\u003cbr/\u003e5. transport (means `TRANSPORT_ALLOWANCE`)                                                                                                                                                                                                                                                                                                                   | `/r no pay`                 |","lastModifiedDate":"2023-11-07"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"| `/at`   | `ATTENDANCE_TYPE` | case-insensitive words from the following list:\u003cbr/\u003e1. present (means `PRESENT`)\u003cbr/\u003e2. late (means `LATE`)\u003cbr/\u003e3. absent (means `ABSENT`)                                                                                                                                                                                                                                                                                                                                                                                                                             | `/at late`                  |","lastModifiedDate":"2023-11-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"applepiofmyeye"},"content":"**What it does:**","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"applepiofmyeye"},"content":"`help`","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"* A new window will pop up with the link to the help page.","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"  ![result for help command](images/helpSuccess.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"### Adding an employee: `add`","lastModifiedDate":"2023-11-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"applepiofmyeye"},"content":"This feature allows users to add a new employee to the ManaGease app, creating a profile with essential details.","lastModifiedDate":"2023-10-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"applepiofmyeye"},"content":"**Command format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":180,"author":{"gitId":"applepiofmyeye"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":181,"author":{"gitId":"jibtaf"},"content":"add /n NAME /e EMAIL /p PHONE /a ADDRESS /b BANK_ACCOUNT /jd JOIN_DATE ","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"    /s SALARY /l ANNUAL_LEAVE","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"applepiofmyeye"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"jibtaf"},"content":"An employee must have all parameters shown in the command format.","lastModifiedDate":"2023-11-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"jibtaf"},"content":"Please input the field parameters in the correct format. You can refer to the \u003ca href\u003d\"#parameter-formats\"\u003eparameter formats\u003c/a\u003e for more information.","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"jibtaf"},"content":"Please note that the \u003ccode\u003eNAME\u003c/code\u003e parameter is case-sensitive. E.g., If you have an employee named \u003ccode\u003eJohn Doe\u003c/code\u003e, you are advised not to add another employee named \u003ccode\u003ejohn doe\u003c/code\u003e. This will be fixed by the next update.","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"jibtaf"},"content":"**Example:**","lastModifiedDate":"2023-11-10"},{"lineNumber":198,"author":{"gitId":"applepiofmyeye"},"content":"* `add /n Jane Smith /e jane@email.com /p 12345678 /a 123 Main St /b 123456789","lastModifiedDate":"2023-10-02"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"  /jd 12/09/2023 /s 1000.00 /l 10` adds an employee named `Jane Smith` with given information to ManaGease.","lastModifiedDate":"2023-11-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":202,"author":{"gitId":"jibtaf"},"content":"* ManaGease should display a confirmation message indicating that the employee has been successfully added to the database.","lastModifiedDate":"2023-11-08"},{"lineNumber":203,"author":{"gitId":"applepiofmyeye"},"content":"* The employee\u0027s profile should be updated with the provided information.","lastModifiedDate":"2023-10-02"},{"lineNumber":204,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for adding employee](images/addSuccess1.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":205,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for adding employee person card](images/addSuccess2.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":208,"author":{"gitId":"jibtaf"},"content":"* If prefix used is not defined, an error message will appear.","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![failed result for adding employee](images/addFailed.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"applepiofmyeye"},"content":"* If a new employee is added with the same name, email, phone number, address, bank account, join date, salary and number of leaves as an existing employee, an error message will appear. ","lastModifiedDate":"2023-11-07"},{"lineNumber":212,"author":{"gitId":"applepiofmyeye"},"content":"  \u003cbr\u003e![failed result for adding duplicate employee](images/addFailedDuplicate.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":214,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":215,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":216,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"jibtaf"},"content":"### Editing an employee: `edit`","lastModifiedDate":"2023-11-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":221,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":222,"author":{"gitId":"jibtaf"},"content":"Edits an existing employee in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":225,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":226,"author":{"gitId":"jibtaf"},"content":"`edit INDEX [/n NAME] [/e EMAIL] [/p PHONE] [/a ADDRESS] [/b BANK_ACCOUNT] [/jd JOIN_DATE] [/s SALARY] [/l ANNUAL_LEAVE] `","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"jibtaf"},"content":"* Edits the employee at the specified `INDEX`.","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":232,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":233,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":235,"author":{"gitId":"jibtaf"},"content":"* **At least one** of the optional fields must be provided.","lastModifiedDate":"2023-11-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-09"},{"lineNumber":239,"author":{"gitId":"jibtaf"},"content":"Please input the field parameters in the correct format. You can refer to the \u003ca href\u003d\"#parameter-formats\"\u003eparameter formats\u003c/a\u003e for more information.","lastModifiedDate":"2023-11-09"},{"lineNumber":240,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":241,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":242,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"jibtaf"},"content":"*  `edit 1 /p 91234567 /e johndoe@example.com` edits the phone number and email address of the 1st employee to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-11-07"},{"lineNumber":244,"author":{"gitId":"jibtaf"},"content":"*  `edit 2 /n Betsy Crower ` edits the name of the 2nd employee to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-11-07"},{"lineNumber":245,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":246,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"jibtaf"},"content":"* ManaGease should display the information of the updated employee.","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"applepiofmyeye"},"content":"* The employee\u0027s profile should be updated with the provided information.","lastModifiedDate":"2023-10-02"},{"lineNumber":249,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for editing employee](images/editSuccess.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":250,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":251,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":252,"author":{"gitId":"jibtaf"},"content":"* If the index is not within the numbers in the list, the app should display `The employee index provided is invalid`.","lastModifiedDate":"2023-11-09"},{"lineNumber":253,"author":{"gitId":"jibtaf"},"content":"* If the command is incorrect, the app should display the following message.","lastModifiedDate":"2023-11-09"},{"lineNumber":254,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect edit command](images/incorrectEditCommand.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":255,"author":{"gitId":"jibtaf"},"content":"* If you did not specify any field to edit, the app should display the following message.","lastModifiedDate":"2023-11-09"},{"lineNumber":256,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for no field to edit](images/noFieldToEdit.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":257,"author":{"gitId":"jibtaf"},"content":"* If you try to edit the field without any change, i.e., the existing field is exactly the same as the one you want to change into, the app should display the following message.","lastModifiedDate":"2023-11-09"},{"lineNumber":258,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for no change in edit command](images/noChangeInEdit1.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":259,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for no change in edit person card](images/noChangeInEdit2.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":260,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":261,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":262,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":263,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":264,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":265,"author":{"gitId":"jibtaf"},"content":"### Deleting an employee: `delete`","lastModifiedDate":"2023-11-07"},{"lineNumber":266,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":267,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":268,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"applepiofmyeye"},"content":"This feature allows users to delete an employee based on index or name.","lastModifiedDate":"2023-10-02"},{"lineNumber":270,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":271,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format**","lastModifiedDate":"2023-10-02"},{"lineNumber":272,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":273,"author":{"gitId":"applepiofmyeye"},"content":"`delete INDEX` or `delete /n NAME`","lastModifiedDate":"2023-10-02"},{"lineNumber":274,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":275,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":276,"author":{"gitId":"jibtaf"},"content":"* Deletes the employee at the specified `INDEX` or with the name `NAME`.","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":279,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":280,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":281,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":282,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":283,"author":{"gitId":"jibtaf"},"content":"* The `NAME` must be in the correct [format](#parameter-formats).","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":285,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":286,"author":{"gitId":"applepiofmyeye"},"content":"* `list` followed by `delete 2` deletes the 2nd employee in the employee directory.","lastModifiedDate":"2023-10-02"},{"lineNumber":287,"author":{"gitId":"applepiofmyeye"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st employee in the results of the `find` command.","lastModifiedDate":"2023-10-02"},{"lineNumber":288,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":289,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":290,"author":{"gitId":"jibtaf"},"content":"* If the index is valid or there is only one employee in the list, whose name contains the keyword, ManaGease should display a confirmation message indicating that the employee information has been successfully deleted.","lastModifiedDate":"2023-11-09"},{"lineNumber":291,"author":{"gitId":"jibtaf"},"content":"* The employee\u0027s list should be updated by removing the employee.","lastModifiedDate":"2023-11-09"},{"lineNumber":292,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for deleting employee](images/deleteSuccess.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":293,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":294,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"WeeMingQing"},"content":"* If there are multiple employees with the same name, all the matching employees would be displayed. Hence, ManaGease will return “Here is the list of the matching employees:”","lastModifiedDate":"2023-11-07"},{"lineNumber":296,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/deleteSameName.png\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":297,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/deleteSameName1.png\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":298,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":300,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":301,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":302,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":303,"author":{"gitId":"jibtaf"},"content":"### Reading an employee\u0027s information: `read`","lastModifiedDate":"2023-11-07"},{"lineNumber":304,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":305,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":306,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"jibtaf"},"content":"This feature allows users to view specific information **\u003cins\u003e(except the name)\u003c/ins\u003e** about an employee.","lastModifiedDate":"2023-11-07"},{"lineNumber":308,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":309,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format**","lastModifiedDate":"2023-10-02"},{"lineNumber":310,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":311,"author":{"gitId":"jibtaf"},"content":"`read INDEX PREFIX`","lastModifiedDate":"2023-10-25"},{"lineNumber":312,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":313,"author":{"gitId":"jibtaf"},"content":"* Reads the employee\u0027s information specified by the `PREFIX` at the specified `INDEX`.","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-02"},{"lineNumber":315,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":316,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":317,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":318,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":319,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":320,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":321,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":322,"author":{"gitId":"applepiofmyeye"},"content":"* `read 1 /a` reads the address of the first employee in the most recently displayed list.","lastModifiedDate":"2023-11-07"},{"lineNumber":323,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":324,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":325,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":326,"author":{"gitId":"jibtaf"},"content":"* ManaGease should display the information of the employee specified by the `INDEX` and `PREFIX`, if the input is valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"jibtaf"},"content":"  ![result for reading employee](images/readSuccess.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":329,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":330,"author":{"gitId":"jibtaf"},"content":"* If the index is not within the numbers in the list, the app should display `The employee index provided is invalid`.","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"applepiofmyeye"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":332,"author":{"gitId":"jibtaf"},"content":"* If the command is incorrect, the app should display the following message.","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"jibtaf"},"content":"  ![incorrect read command](images/incorrectReadCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"jibtaf"},"content":"* If the `PREFIX` provided is not valid, the app should display `The field to read provided is invalid`. Please refer to the [parameter formats](#parameter-formats) for a list of all supported fields.","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":336,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":337,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":338,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":339,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":340,"author":{"gitId":"WeeMingQing"},"content":"### Adding leave to an employee: `addleave`","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"WeeMingQing"},"content":"**What it does**","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"WeeMingQing"},"content":"This feature allows users to add leave(s) to an employee.","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"WeeMingQing"},"content":"**Command Format**","lastModifiedDate":"2023-10-31"},{"lineNumber":347,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"WeeMingQing"},"content":"`addleave INDEX /on DATE` or `addleave INDEX /from DATE /to DATE`","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":350,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":351,"author":{"gitId":"WeeMingQing"},"content":"* Adds leave to the employee specified by the `INDEX`. ","lastModifiedDate":"2023-11-07"},{"lineNumber":352,"author":{"gitId":"WeeMingQing"},"content":"* You have the flexibility to add leave for a single day or multiple consecutive days. ","lastModifiedDate":"2023-11-07"},{"lineNumber":353,"author":{"gitId":"WeeMingQing"},"content":"* You can add leave for the current year and the upcoming year, but you won\u0027t be able to add leave for past dates.","lastModifiedDate":"2023-11-07"},{"lineNumber":354,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":355,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-09"},{"lineNumber":356,"author":{"gitId":"jibtaf"},"content":"Please note that the sum of:","lastModifiedDate":"2023-11-09"},{"lineNumber":357,"author":{"gitId":"jibtaf"},"content":"    (1)number of days of leave you are tyring to add, and","lastModifiedDate":"2023-11-09"},{"lineNumber":358,"author":{"gitId":"jibtaf"},"content":"    (2)number of days the employee has been on leave","lastModifiedDate":"2023-11-09"},{"lineNumber":359,"author":{"gitId":"jibtaf"},"content":"should not exceed the total number of days of leave allowed for an employee (displayed on the employee\u0027s person card).","lastModifiedDate":"2023-11-09"},{"lineNumber":360,"author":{"gitId":"jibtaf"},"content":"To check (2), you may use the \u003ca href\u003d\"#view-an-employees-attendance-report-attendance\"\u003e\u003ccode\u003eattendance\u003c/code\u003e\u003c/a\u003e command to see the number of days of leave the employee has been on.","lastModifiedDate":"2023-11-09"},{"lineNumber":361,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":362,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":363,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":365,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":366,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":367,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":368,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":369,"author":{"gitId":"jibtaf"},"content":"* The `DATE` must be in `DD/MM/YYYY` format, e.g. `01/01/2024`.","lastModifiedDate":"2023-11-07"},{"lineNumber":370,"author":{"gitId":"WeeMingQing"},"content":"* For adding in multiple days of leave, the second `DATE` must be after the first `DATE`.","lastModifiedDate":"2023-11-02"},{"lineNumber":371,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":372,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":373,"author":{"gitId":"jibtaf"},"content":"* `addleave 3 /on 01/01/2024` adds a single day of leave of `01/01/2024` to the third employee in the most recently displayed list.","lastModifiedDate":"2023-11-02"},{"lineNumber":374,"author":{"gitId":"jibtaf"},"content":"* `addleave 3 /from 01/01/2024 /to 04/01/2024` adds in multiple days of leave to the third employee in the most recently displayed list from `01/01/2024` to `04/01/2024`, inclusive.","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":376,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":377,"author":{"gitId":"jibtaf"},"content":"* If there are no errors, the app should display the following success message that the leave(s) has been added and display the number of leave left for the current year and the following year.","lastModifiedDate":"2023-11-09"},{"lineNumber":378,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for successful addleave command](images/addLeaveSuccessMsg.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":379,"author":{"gitId":"jibtaf"},"content":"* Note that the `ANNUAL_LEAVE` field displayed on the employee card remains unchanged, as it represents the promised number of annual leave.","lastModifiedDate":"2023-11-09"},{"lineNumber":380,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":381,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":382,"author":{"gitId":"WeeMingQing"},"content":"* If the index is not within the numbers in the list, or the format of the command is incorrect, the app should display the following error message.","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect addleave command](images/addLeaveInvalidIndexAndCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":384,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":385,"author":{"gitId":"WeeMingQing"},"content":"* If the `DATE` provided is not in the correct format, the app should display the following error message.","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect date format for addleave command](images/addLeaveInvalidDateFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"WeeMingQing"},"content":"* If the `DATE` has already been added to the employee, the app should display the following error message.","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for invalid leave for addleave command](images/addleaveInvalidLeave.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":391,"author":{"gitId":"WeeMingQing"},"content":"* If the second `DATE` is before the first `DATE` when adding in multiple days of leave, the app should display the following error message.","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for invalid leave range for addleave command](images/addLeaveStartEndDateError.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"Leb14"},"content":"* If any of the `DATE` is not in the current year or next year, or if the total number of days of leave added to an employee exceeds the total days of leave allowed for an employee, the app should display the following error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":395,"author":{"gitId":"applepiofmyeye"},"content":"  \u003cbr\u003e![result for invalid number of days of leave to add](images/addLeaveExceedLeavesOrNextYear.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":396,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":397,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":398,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":399,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":400,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":401,"author":{"gitId":"WeeMingQing"},"content":"### Deleting leave from an employee: `deleteleave`","lastModifiedDate":"2023-11-02"},{"lineNumber":402,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":403,"author":{"gitId":"WeeMingQing"},"content":"**What it does**","lastModifiedDate":"2023-11-02"},{"lineNumber":404,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":405,"author":{"gitId":"WeeMingQing"},"content":"This feature allows users to delete leave(s) from an employee.","lastModifiedDate":"2023-11-02"},{"lineNumber":406,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"WeeMingQing"},"content":"**Command Format**","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":409,"author":{"gitId":"WeeMingQing"},"content":"`deleteleave INDEX /on DATE` or `deleteleave INDEX /from DATE /to DATE`","lastModifiedDate":"2023-11-02"},{"lineNumber":410,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":411,"author":{"gitId":"WeeMingQing"},"content":"* Deletes leave from the employee specified by the `INDEX`.","lastModifiedDate":"2023-11-07"},{"lineNumber":412,"author":{"gitId":"WeeMingQing"},"content":"* You have the flexibility to delete leave for a single day or multiple consecutive days.","lastModifiedDate":"2023-11-07"},{"lineNumber":413,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-02"},{"lineNumber":414,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":415,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":416,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":417,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":418,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":419,"author":{"gitId":"jibtaf"},"content":"* The `DATE` must be in `DD/MM/YYYY` format, e.g. `01/01/2024`.","lastModifiedDate":"2023-11-07"},{"lineNumber":420,"author":{"gitId":"WeeMingQing"},"content":"* For deleting multiple days of leave, the second `DATE` must be after the first `DATE`.","lastModifiedDate":"2023-11-02"},{"lineNumber":421,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":422,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":423,"author":{"gitId":"jibtaf"},"content":"* `deleteleave 3 /on 01/01/2024` deletes a single day of leave of `01/01/2024` from the third employee in the most recently displayed list.","lastModifiedDate":"2023-11-02"},{"lineNumber":424,"author":{"gitId":"jibtaf"},"content":"* `deleteleave 3 /from 01/01/2024 /to 04/01/2024` deletes multiple days of leave from the third employee in the most recently displayed list from `01/01/2024` to `04/01/2024`, inclusive.","lastModifiedDate":"2023-11-02"},{"lineNumber":425,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":426,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":427,"author":{"gitId":"jibtaf"},"content":"* If there are no errors, the app should display the following success message that the leave(s) has been added and display the number of leave left for the current year and the following year.","lastModifiedDate":"2023-11-09"},{"lineNumber":428,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for successful deleteleave command](images/deleteLeaveSuccessMsg.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":429,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":430,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":431,"author":{"gitId":"WeeMingQing"},"content":"* If the index is not within the numbers in the list, or the format of the command is incorrect, the app should display the following error message.","lastModifiedDate":"2023-11-02"},{"lineNumber":432,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect deleteleave command](images/deleteLeaveInvalidIndexAndCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":433,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":434,"author":{"gitId":"WeeMingQing"},"content":"* If the `DATE` provided is not in the correct format, the app should display the following error message.","lastModifiedDate":"2023-11-02"},{"lineNumber":435,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect date format for deleteleave command](images/addLeaveInvalidDateFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":437,"author":{"gitId":"WeeMingQing"},"content":"* If the `DATE` has not been added to the employee, the app should display the following error message.","lastModifiedDate":"2023-11-02"},{"lineNumber":438,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for invalid leave for deleteleave command](images/deleteLeaveInvalidLeave.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":439,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":440,"author":{"gitId":"WeeMingQing"},"content":"* If the second `DATE` is before the first `DATE` when adding in multiple days of leave, the app should display the following error message.","lastModifiedDate":"2023-11-02"},{"lineNumber":441,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for invalid leave range for deleteleave command](images/addLeaveStartEndDateError.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":442,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":443,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":444,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":445,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":446,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":447,"author":{"gitId":"Leb14"},"content":"### View employee who is on leave: `viewleave`","lastModifiedDate":"2023-11-02"},{"lineNumber":448,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":449,"author":{"gitId":"Leb14"},"content":"**What it does**","lastModifiedDate":"2023-11-02"},{"lineNumber":450,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":451,"author":{"gitId":"jibtaf"},"content":"This feature allows users to view employees who are on leave on a specific date.","lastModifiedDate":"2023-11-07"},{"lineNumber":452,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":453,"author":{"gitId":"Leb14"},"content":"**Command Format**","lastModifiedDate":"2023-11-02"},{"lineNumber":454,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":455,"author":{"gitId":"Leb14"},"content":"`viewleave /on DATE`","lastModifiedDate":"2023-11-02"},{"lineNumber":456,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"jibtaf"},"content":"* Views employees who are on leave on a specific DATE **(must be a single date)**.","lastModifiedDate":"2023-11-07"},{"lineNumber":458,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":459,"author":{"gitId":"jibtaf"},"content":"* The `DATE` must be in `DD/MM/YYYY` format, e.g. `01/01/2024`.","lastModifiedDate":"2023-11-07"},{"lineNumber":460,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":461,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":462,"author":{"gitId":"Leb14"},"content":"* `viewleave /on 01/01/2024` view employee who is on leave on 01/01/2024.","lastModifiedDate":"2023-11-02"},{"lineNumber":463,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":464,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":465,"author":{"gitId":"jibtaf"},"content":"* If the command executes successfully, the app should display the employee who is on leave on the specific date.","lastModifiedDate":"2023-11-09"},{"lineNumber":466,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":467,"author":{"gitId":"jibtaf"},"content":"\u003cbr\u003e![result for correct viewleave command](images/view-leave-success.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":468,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":469,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":470,"author":{"gitId":"Leb14"},"content":"* If the command is incorrect, the app should display an error message indicating the command format is invalid followed by the command usage message.","lastModifiedDate":"2023-11-02"},{"lineNumber":471,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-11-02"},{"lineNumber":472,"author":{"gitId":"Leb14"},"content":"\u003cbr\u003e![result for incorrect viewleave command](images/view-leave-wrong-format.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":473,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":474,"author":{"gitId":"Leb14"},"content":"* If the `DATE` provided is not in the correct format, the app should display an error message indicating the date format is invalid and provide guidance on the correct date format.\u0027","lastModifiedDate":"2023-11-03"},{"lineNumber":475,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-11-03"},{"lineNumber":476,"author":{"gitId":"Leb14"},"content":"\u003cbr\u003e![result for incorrect date format](images/view-leave-wrong-date-format.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":477,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":478,"author":{"gitId":"Leb14"},"content":"* If there is no employee on leave on the specific date, the app should display an error message indicating there is no employee on leave on the specific date.","lastModifiedDate":"2023-11-03"},{"lineNumber":479,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-11-02"},{"lineNumber":480,"author":{"gitId":"Leb14"},"content":"\u003cbr\u003e![result for no employee on leave on the specific date](images/view-leave-no-employee-on-leave.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":481,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":482,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":483,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":484,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":485,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":486,"author":{"gitId":"Leb14"},"content":"### View the calendar of upcoming month: `nm`","lastModifiedDate":"2023-11-02"},{"lineNumber":487,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":488,"author":{"gitId":"Leb14"},"content":"**What it does**","lastModifiedDate":"2023-11-02"},{"lineNumber":489,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":490,"author":{"gitId":"Leb14"},"content":"This feature allows users to view the calendar of the upcoming month on the app.","lastModifiedDate":"2023-11-02"},{"lineNumber":491,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":492,"author":{"gitId":"Leb14"},"content":"**Command Format**","lastModifiedDate":"2023-11-02"},{"lineNumber":493,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":494,"author":{"gitId":"Leb14"},"content":"`nm`","lastModifiedDate":"2023-11-02"},{"lineNumber":495,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":496,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":497,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":498,"author":{"gitId":"Leb14"},"content":"### View the calendar of previous month: `pm`","lastModifiedDate":"2023-11-02"},{"lineNumber":499,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":500,"author":{"gitId":"Leb14"},"content":"**What it does**","lastModifiedDate":"2023-11-02"},{"lineNumber":501,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":502,"author":{"gitId":"Leb14"},"content":"This feature allows users to view the calendar of the previous month on the app.","lastModifiedDate":"2023-11-02"},{"lineNumber":503,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":504,"author":{"gitId":"Leb14"},"content":"**Command Format**","lastModifiedDate":"2023-11-02"},{"lineNumber":505,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":506,"author":{"gitId":"Leb14"},"content":"`pm`","lastModifiedDate":"2023-11-02"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":508,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":510,"author":{"gitId":"Leb14"},"content":"### View the calendar of current month: `cm`","lastModifiedDate":"2023-11-02"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":512,"author":{"gitId":"Leb14"},"content":"**What it does**","lastModifiedDate":"2023-11-02"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":514,"author":{"gitId":"Leb14"},"content":"This feature allows users to view the calendar of the current month on the app.","lastModifiedDate":"2023-11-02"},{"lineNumber":515,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":516,"author":{"gitId":"Leb14"},"content":"**Command Format**","lastModifiedDate":"2023-11-02"},{"lineNumber":517,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":518,"author":{"gitId":"Leb14"},"content":"`cm`","lastModifiedDate":"2023-11-02"},{"lineNumber":519,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":520,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":521,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":522,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":523,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":524,"author":{"gitId":"jibtaf"},"content":"### Adding a deduction to the payroll of an employee: `deduct`","lastModifiedDate":"2023-11-01"},{"lineNumber":525,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":526,"author":{"gitId":"jibtaf"},"content":"**What it does**","lastModifiedDate":"2023-11-01"},{"lineNumber":527,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":528,"author":{"gitId":"jibtaf"},"content":"This feature allows users to add a deduction to the payroll of an employee.","lastModifiedDate":"2023-11-01"},{"lineNumber":529,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":530,"author":{"gitId":"jibtaf"},"content":"**Command Format**","lastModifiedDate":"2023-11-01"},{"lineNumber":531,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":532,"author":{"gitId":"jibtaf"},"content":"`deduct INDEX /v VALUE /r REASON` or `deduct /n NAME /v VALUE /r REASON`","lastModifiedDate":"2023-11-01"},{"lineNumber":533,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":534,"author":{"gitId":"jibtaf"},"content":"* Adds a deduction with given `VALUE` and `REASON` to the employee specified by the `INDEX` or `NAME`.","lastModifiedDate":"2023-11-01"},{"lineNumber":535,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-02"},{"lineNumber":536,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":537,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":538,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":539,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":540,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":541,"author":{"gitId":"jibtaf"},"content":"* The `VALUE` must be a **positive number**, and **must be in the [format](#parameter-formats) of 2 decimal places**.","lastModifiedDate":"2023-11-02"},{"lineNumber":542,"author":{"gitId":"jibtaf"},"content":"* The `REASON` must be a **non-empty and non-blank string**. It must take one of the three values: `absence`, `cpf` or `no pay`, which stands for `Absence from work`, `Employee CPF deduction` and `No pay leave` respectively.","lastModifiedDate":"2023-11-02"},{"lineNumber":543,"author":{"gitId":"jibtaf"},"content":"* The `REASON` is **case-insensitive**.","lastModifiedDate":"2023-11-02"},{"lineNumber":544,"author":{"gitId":"jibtaf"},"content":"* The `NAME` must be in the correct [format](#parameter-formats).","lastModifiedDate":"2023-11-02"},{"lineNumber":545,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":546,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":547,"author":{"gitId":"jibtaf"},"content":"* `deduct 3 /v 100.00 /r absence` adds a deduction of $100.00 for being absent from work to the third employee in the most recently displayed list.","lastModifiedDate":"2023-11-01"},{"lineNumber":548,"author":{"gitId":"jibtaf"},"content":"* `deduct /n John Doe /v 100.00 /r cpf` adds a deduction of $100.00 for employee CPF deduction to the employee named John Doe.","lastModifiedDate":"2023-11-01"},{"lineNumber":549,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":550,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":551,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":552,"author":{"gitId":"jibtaf"},"content":"* ManaGease should display the deduction information of the employee specified, including the newly added deduction, if the input is valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":553,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for adding deduction](images/deductSuccess.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":554,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":555,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":556,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":557,"author":{"gitId":"jibtaf"},"content":"* If the index is not within the numbers in the list, the app should display `The employee index provided is invalid`.","lastModifiedDate":"2023-11-02"},{"lineNumber":558,"author":{"gitId":"jibtaf"},"content":"* If the command is incorrect, the app should display the following message.","lastModifiedDate":"2023-11-02"},{"lineNumber":559,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect deduct command](images/incorrectDeductCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":560,"author":{"gitId":"jibtaf"},"content":"* If the `VALUE` provided is not in the correct format, the app should display the following message.","lastModifiedDate":"2023-11-02"},{"lineNumber":561,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect deduct value format](images/incorrectDeductValueFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":562,"author":{"gitId":"jibtaf"},"content":"  Here it says that `Payment should only contain unmerical digits.`. This is because the `VALUE` field refers to the amount of money to be deducted from the employee\u0027s salary, which is a `Payment`. This also applies to the `VALUE` field in the [`benefit`](#adding-a-benefit-to-the-payroll-of-an-employee-benefit) command and the `SALARY` field in the [`add`](#adding-an-employee-add) and [`edit`](#editing-an-employee-edit) command.","lastModifiedDate":"2023-11-07"},{"lineNumber":563,"author":{"gitId":"jibtaf"},"content":"* If the `REASON` field is missing, the app should display the following message.","lastModifiedDate":"2023-11-07"},{"lineNumber":564,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for missing reason](images/missingReason.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":565,"author":{"gitId":"jibtaf"},"content":"* If the `REASON` provided is not supported (i.e. not one of the five reasons in the [parameter formats](#parameter-formats)), the app should display the following message.","lastModifiedDate":"2023-11-07"},{"lineNumber":566,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for unknown reason](images/unknownReason.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":567,"author":{"gitId":"jibtaf"},"content":"* If the `REASON` provided is not a valid one for a deduction, the app should display the following message.","lastModifiedDate":"2023-11-07"},{"lineNumber":568,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for invalid deduction reason](images/unknownDeductionReason.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":569,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":570,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":571,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":572,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":573,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":574,"author":{"gitId":"jibtaf"},"content":"### Adding a benefit to the payroll of an employee: `benefit`","lastModifiedDate":"2023-11-01"},{"lineNumber":575,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":576,"author":{"gitId":"jibtaf"},"content":"**What it does**","lastModifiedDate":"2023-11-01"},{"lineNumber":577,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":578,"author":{"gitId":"jibtaf"},"content":"This feature allows users to add a benefit to the payroll of an employee.","lastModifiedDate":"2023-11-01"},{"lineNumber":579,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":580,"author":{"gitId":"jibtaf"},"content":"**Command Format**","lastModifiedDate":"2023-11-01"},{"lineNumber":581,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":582,"author":{"gitId":"jibtaf"},"content":"`benefit INDEX /v VALUE /r REASON` or `benefit /n NAME /v VALUE /r REASON`","lastModifiedDate":"2023-11-01"},{"lineNumber":583,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":584,"author":{"gitId":"jibtaf"},"content":"* Adds a benefit with given `VALUE` and `REASON` to the employee specified by the `INDEX` or `NAME`.","lastModifiedDate":"2023-11-01"},{"lineNumber":585,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-02"},{"lineNumber":586,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":587,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":588,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":589,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":590,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":591,"author":{"gitId":"jibtaf"},"content":"* The `VALUE` must be a **positive number**, and **must be in the [format](#parameter-formats) of 2 decimal places**.","lastModifiedDate":"2023-11-02"},{"lineNumber":592,"author":{"gitId":"jibtaf"},"content":"* The `REASON` must be a **non-empty and non-blank string**. It must take one of the two values: `bonus` or `transport`, which stands for `Annual bonus` and `Transport allowance` respectively.","lastModifiedDate":"2023-11-02"},{"lineNumber":593,"author":{"gitId":"jibtaf"},"content":"* The `REASON` is **case-insensitive**.","lastModifiedDate":"2023-11-02"},{"lineNumber":594,"author":{"gitId":"jibtaf"},"content":"* The `NAME` must be in the correct [format](#parameter-formats).","lastModifiedDate":"2023-11-02"},{"lineNumber":595,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":596,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":597,"author":{"gitId":"jibtaf"},"content":"* `benefit 3 /v 1000.00 /r bonus` adds a benefit of $1000.00 for annual bonus to the third employee in the most recently displayed list.","lastModifiedDate":"2023-11-01"},{"lineNumber":598,"author":{"gitId":"jibtaf"},"content":"* `benefit /n John Doe /v 200.00 /r transport` adds a benefit of $200.00 for transport allowance to the employee named John Doe.","lastModifiedDate":"2023-11-01"},{"lineNumber":599,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":600,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":601,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":602,"author":{"gitId":"jibtaf"},"content":"* ManaGease should display the benefit information of the employee specified, including the newly added benefit, if the input is valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":603,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for adding benefit](images/benefitSuccess.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":604,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":605,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":606,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":607,"author":{"gitId":"jibtaf"},"content":"* If the index is not within the numbers in the list, the app should display `The employee index provided is invalid`.","lastModifiedDate":"2023-11-02"},{"lineNumber":608,"author":{"gitId":"jibtaf"},"content":"* If the command is incorrect, the app should display the following message.","lastModifiedDate":"2023-11-02"},{"lineNumber":609,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect benefit command](images/incorrectBenefitCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":610,"author":{"gitId":"jibtaf"},"content":"* If the `VALUE` provided is not in the correct format, the app should display the following message.","lastModifiedDate":"2023-11-02"},{"lineNumber":611,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect benefit value format](images/incorrectDeductValueFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":612,"author":{"gitId":"jibtaf"},"content":"  Here it says that `Payment should only contain unmerical digits.`. This is because the `VALUE` field refers to the amount of money to be added to the employee\u0027s salary, which is a `Payment`. This also applies to the `VALUE` field in the [`deduct`](#adding-a-deduction-to-the-payroll-of-an-employee-deduct) command and the `SALARY` field in the [`add`](#adding-an-employee-add) and [`edit`](#editing-an-employee-edit) command.","lastModifiedDate":"2023-11-07"},{"lineNumber":613,"author":{"gitId":"jibtaf"},"content":"* If the `REASON` field is missing, the app should display the following message.","lastModifiedDate":"2023-11-07"},{"lineNumber":614,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for missing reason](images/missingReason.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":615,"author":{"gitId":"jibtaf"},"content":"* If the `REASON` provided is not supported (i.e. not one of the five reasons in the [parameter formats](#parameter-formats)), the app should display the following message.","lastModifiedDate":"2023-11-07"},{"lineNumber":616,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for unknown reason](images/unknownReason.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":617,"author":{"gitId":"jibtaf"},"content":"* If the `REASON` provided is not a valid one for a benefit, the app should display the following message.","lastModifiedDate":"2023-11-07"},{"lineNumber":618,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for invalid benefit reason](images/unknownBenefitReason.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":619,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":620,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":621,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":622,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":623,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":624,"author":{"gitId":"Kevin-Liusx"},"content":"### Calculating an employee\u0027s payroll: `payroll`","lastModifiedDate":"2023-11-02"},{"lineNumber":625,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":626,"author":{"gitId":"jibtaf"},"content":"**What it does**","lastModifiedDate":"2023-11-01"},{"lineNumber":627,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":628,"author":{"gitId":"jibtaf"},"content":"This feature allows users to calculate the payroll of an employee.","lastModifiedDate":"2023-11-01"},{"lineNumber":629,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":630,"author":{"gitId":"jibtaf"},"content":"**Command Format**","lastModifiedDate":"2023-11-01"},{"lineNumber":631,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":632,"author":{"gitId":"jibtaf"},"content":"`payroll INDEX` or `payroll /n NAME`","lastModifiedDate":"2023-11-01"},{"lineNumber":633,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":634,"author":{"gitId":"jibtaf"},"content":"* Calculates the payroll of the employee specified by the `INDEX` or `NAME`, where the payroll period is the current month.","lastModifiedDate":"2023-11-07"},{"lineNumber":635,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-07"},{"lineNumber":636,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":637,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":638,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":639,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":640,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":641,"author":{"gitId":"jibtaf"},"content":"* The `NAME` must be in the correct [format](#parameter-formats).","lastModifiedDate":"2023-11-07"},{"lineNumber":642,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":643,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-08"},{"lineNumber":644,"author":{"gitId":"jibtaf"},"content":"Editing the basic salary component (i.e., \u003ccode\u003eSALARY\u003c/code\u003e) of an employee will only take effect from the next payroll period onwards,  and it will only apply to the calculation of next payroll onwards.","lastModifiedDate":"2023-11-09"},{"lineNumber":645,"author":{"gitId":"jibtaf"},"content":"E.g., If you edit the basic salary of an employee in January 2024, the basic salary will only be updated from the payroll period of February 2024 onwards.","lastModifiedDate":"2023-11-08"},{"lineNumber":646,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":647,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":648,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":649,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":650,"author":{"gitId":"jibtaf"},"content":"* `payroll 3` calculates the payroll of the third employee in the most recently displayed list.","lastModifiedDate":"2023-11-01"},{"lineNumber":651,"author":{"gitId":"jibtaf"},"content":"* `payroll /n John Doe` calculates the payroll of the employee named John Doe.","lastModifiedDate":"2023-11-01"},{"lineNumber":652,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":653,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":654,"author":{"gitId":"jibtaf"},"content":"* ManaGease should display the payroll of the employee specified by the `INDEX` or `NAME`, if the input is valid.","lastModifiedDate":"2023-11-01"},{"lineNumber":655,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/payrollSuccess.png\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":656,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":657,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":658,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":659,"author":{"gitId":"Kevin-Liusx"},"content":"* If the index is not within the numbers in the list, the app should display `The employee index provided is invalid`.","lastModifiedDate":"2023-11-02"},{"lineNumber":660,"author":{"gitId":"Kevin-Liusx"},"content":"* If there are more than one employee with the same name in the command, the app will display `x employees found! Refer to their indexes for payroll calculation` and will list down those employees for the user to view. The user should then use their index numbers to calculate the payroll.","lastModifiedDate":"2023-11-02"},{"lineNumber":661,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/payrollWithSameName.png\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":662,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/payrollWithSameName1.png\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":663,"author":{"gitId":"jibtaf"},"content":"* If the command is incorrect, the app should display the following message.","lastModifiedDate":"2023-11-07"},{"lineNumber":664,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect payroll command](images/incorrectPayrollCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":665,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":666,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":667,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":668,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":669,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":670,"author":{"gitId":"jibtaf"},"content":"### Generating payslips for an employee: `payslip`","lastModifiedDate":"2023-11-01"},{"lineNumber":671,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":672,"author":{"gitId":"jibtaf"},"content":"**What it does**","lastModifiedDate":"2023-11-01"},{"lineNumber":673,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":674,"author":{"gitId":"jibtaf"},"content":"This feature allows users to generate payslips for an employee.","lastModifiedDate":"2023-11-01"},{"lineNumber":675,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":676,"author":{"gitId":"jibtaf"},"content":"**Command Format**","lastModifiedDate":"2023-11-01"},{"lineNumber":677,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":678,"author":{"gitId":"jibtaf"},"content":"`payslip INDEX [/t DATE]` or `payslip /n NAME [/t DATE]`","lastModifiedDate":"2023-11-07"},{"lineNumber":679,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":680,"author":{"gitId":"jibtaf"},"content":"* Generates a payslip based on the latest payroll for the employee specified by the `INDEX` or `NAME`.","lastModifiedDate":"2023-11-07"},{"lineNumber":681,"author":{"gitId":"jibtaf"},"content":"* If the optional `/t DATE` is provided, the payslip will be generated for the month specified by the date.","lastModifiedDate":"2023-11-07"},{"lineNumber":682,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-02"},{"lineNumber":683,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":684,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":685,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":686,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":687,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":688,"author":{"gitId":"jibtaf"},"content":"* The `NAME` must be in the correct [format](#parameter-formats).","lastModifiedDate":"2023-11-02"},{"lineNumber":689,"author":{"gitId":"jibtaf"},"content":"* The optional `DATE` must be in `DD/MM/YYYY` format, e.g. `01/01/2024`.","lastModifiedDate":"2023-11-07"},{"lineNumber":690,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":691,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2023-11-08"},{"lineNumber":692,"author":{"gitId":"jibtaf"},"content":"Editing the basic salary component (i.e., \u003ccode\u003eSALARY\u003c/code\u003e) of an employee will only take effect from the next payslip period onwards, and it will only apply to the generation of next payslip onwards.","lastModifiedDate":"2023-11-09"},{"lineNumber":693,"author":{"gitId":"jibtaf"},"content":"E.g., If you edit the basic salary of an employee in January 2024, the basic salary will only be updated from the payslip period of February 2024 onwards.","lastModifiedDate":"2023-11-08"},{"lineNumber":694,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":695,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":696,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":697,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":698,"author":{"gitId":"jibtaf"},"content":"* `payslip 3` generates a payslip based on the latest payroll for the third employee in the most recently displayed list.","lastModifiedDate":"2023-11-07"},{"lineNumber":699,"author":{"gitId":"jibtaf"},"content":"* `payslip /n John Doe` generates a payslip based on the latest payroll for the employee named John Doe.","lastModifiedDate":"2023-11-07"},{"lineNumber":700,"author":{"gitId":"jibtaf"},"content":"* `payslip 3 /t 01/01/2024` generates a payslip for the third employee in the most recently displayed list for the month of January 2024.","lastModifiedDate":"2023-11-01"},{"lineNumber":701,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":702,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":703,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":704,"author":{"gitId":"jibtaf"},"content":"* ManaGease should display a success message saying that the payslip has been generated successfully, if the input is valid.","lastModifiedDate":"2023-11-01"},{"lineNumber":705,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for generating payslip](images/payslipSuccess.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":706,"author":{"gitId":"jibtaf"},"content":"* A payslip report in PDF format will be generated in the `payslips` folder in the ManaGease home directory.","lastModifiedDate":"2023-11-01"},{"lineNumber":707,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![location of payslip](images/payslipLocation.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":708,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![payslip content](images/payslipContent.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":709,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":710,"author":{"gitId":"jibtaf"},"content":"Please close any payslip PDF file before generating another payslip. Otherwise, the payslip PDF file will not be generated successfully.","lastModifiedDate":"2023-11-07"},{"lineNumber":711,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":712,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":713,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":714,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":715,"author":{"gitId":"jibtaf"},"content":"* If the index is not within the numbers in the list, the app should display `The employee index provided is invalid`.","lastModifiedDate":"2023-11-02"},{"lineNumber":716,"author":{"gitId":"jibtaf"},"content":"* If the command is incorrect, the app should display the following message.","lastModifiedDate":"2023-11-02"},{"lineNumber":717,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect payslip command](images/incorrectPayslipCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":718,"author":{"gitId":"jibtaf"},"content":"* If the date provided is not in the correct format, the app should display the following message.","lastModifiedDate":"2023-11-02"},{"lineNumber":719,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect payslip date format](images/incorrectDateFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":720,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":721,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":722,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":723,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":724,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":725,"author":{"gitId":"jibtaf"},"content":"### Marking an employee\u0027s attendance: `mark`","lastModifiedDate":"2023-11-07"},{"lineNumber":726,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":727,"author":{"gitId":"Kevin-Liusx"},"content":"**What it does**","lastModifiedDate":"2023-11-02"},{"lineNumber":728,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":729,"author":{"gitId":"Kevin-Liusx"},"content":"Marks the indicated employee as “Absent”, “Late”, or “Present”.","lastModifiedDate":"2023-11-02"},{"lineNumber":730,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":731,"author":{"gitId":"Kevin-Liusx"},"content":"**Command Format**","lastModifiedDate":"2023-11-02"},{"lineNumber":732,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":733,"author":{"gitId":"applepiofmyeye"},"content":"`mark INDEX /at Attendance_Type` or `mark /n NAME /at Attendance_Type`","lastModifiedDate":"2023-11-07"},{"lineNumber":734,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":735,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-07"},{"lineNumber":736,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":737,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":738,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":739,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":740,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":741,"author":{"gitId":"jibtaf"},"content":"* The `NAME` must be in the correct [format](#parameter-formats).","lastModifiedDate":"2023-11-07"},{"lineNumber":742,"author":{"gitId":"jibtaf"},"content":"* The `Attendance_Type` can only be: `ABSENT`, `LATE`, or `PRESENT`.","lastModifiedDate":"2023-11-07"},{"lineNumber":743,"author":{"gitId":"jibtaf"},"content":"* It is case-insensitive. e.g. you can either enter ABSENT or absent.","lastModifiedDate":"2023-11-07"},{"lineNumber":744,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":745,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":746,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":747,"author":{"gitId":"jibtaf"},"content":"* `mark /n John /at Absent` marks John as absent.","lastModifiedDate":"2023-11-09"},{"lineNumber":748,"author":{"gitId":"applepiofmyeye"},"content":"* `mark 1 /at Present` marks the first employee in the current list to be present.","lastModifiedDate":"2023-11-07"},{"lineNumber":749,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":750,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":751,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":752,"author":{"gitId":"jibtaf"},"content":"* If the command is successful, the app should display the following message. The employee’s attendance status should also be updated accordingly.","lastModifiedDate":"2023-11-09"},{"lineNumber":753,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for marking an employee to be absent](images/markSuccessMessage.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":754,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![person card](images/markSuccess1.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":755,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":756,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":757,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":758,"author":{"gitId":"Kevin-Liusx"},"content":"* If the index is not within the numbers in the list, the app should display `The employee index provided is invalid.`","lastModifiedDate":"2023-11-02"},{"lineNumber":759,"author":{"gitId":"applepiofmyeye"},"content":"* If the command is incorrect, the app should display the following message.","lastModifiedDate":"2023-11-11"},{"lineNumber":760,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect command](images/incorrectMarkCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":761,"author":{"gitId":"applepiofmyeye"},"content":"* If the ATTENDANCE_TYPE is not within the valid list, the app should display the following message.","lastModifiedDate":"2023-11-11"},{"lineNumber":762,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect attendance type](images/incorrectAttendanceType.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":763,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":764,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":765,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":766,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":767,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":768,"author":{"gitId":"jibtaf"},"content":"### View an employee\u0027s attendance report: `attendance`","lastModifiedDate":"2023-11-07"},{"lineNumber":769,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":770,"author":{"gitId":"Kevin-Liusx"},"content":"**What it does**","lastModifiedDate":"2023-11-02"},{"lineNumber":771,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":772,"author":{"gitId":"Kevin-Liusx"},"content":"View employee’s attendance report.","lastModifiedDate":"2023-11-02"},{"lineNumber":773,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":774,"author":{"gitId":"Kevin-Liusx"},"content":"**Command Format**","lastModifiedDate":"2023-11-02"},{"lineNumber":775,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":776,"author":{"gitId":"Kevin-Liusx"},"content":"`attendance INDEX` or `attendance /n NAME`","lastModifiedDate":"2023-11-02"},{"lineNumber":777,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":778,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` refers to the index number shown in the displayed employee list.","lastModifiedDate":"2023-11-07"},{"lineNumber":779,"author":{"gitId":"jibtaf"},"content":"* The `INDEX` **must be a positive integer**, and **must be within the range of the list (Total number of employees in the current list displayed)**.","lastModifiedDate":"2023-11-09"},{"lineNumber":780,"author":{"gitId":"jibtaf"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":781,"author":{"gitId":"jibtaf"},"content":"Please do not use negative integers, non-integers and extremely large integers(integers greater than 2147483647) for the \u003ccode\u003eINDEX\u003c/code\u003e.","lastModifiedDate":"2023-11-09"},{"lineNumber":782,"author":{"gitId":"jibtaf"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":783,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":784,"author":{"gitId":"jibtaf"},"content":"* The `NAME` must be in the correct [format](#parameter-formats).","lastModifiedDate":"2023-11-07"},{"lineNumber":785,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":786,"author":{"gitId":"jibtaf"},"content":"**Examples:**","lastModifiedDate":"2023-11-10"},{"lineNumber":787,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":788,"author":{"gitId":"Kevin-Liusx"},"content":"* `attendance /n John` views John’s attendance report for the year up till today.","lastModifiedDate":"2023-11-02"},{"lineNumber":789,"author":{"gitId":"applepiofmyeye"},"content":"* `attendance 1` views the first employee’s attendance report for the year up till today.","lastModifiedDate":"2023-11-07"},{"lineNumber":790,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":791,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":792,"author":{"gitId":"jibtaf"},"content":"* If the command is successful, the app should display the attendance. The address book’s display of the employee’s attendance status should also be updated accordingly.","lastModifiedDate":"2023-11-09"},{"lineNumber":793,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for attendance report](images/attendanceSuccess.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":794,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":795,"author":{"gitId":"jibtaf"},"content":"**Possible Error Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":796,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":797,"author":{"gitId":"Kevin-Liusx"},"content":"* If the index is not within the numbers in the list, the app should display `The employee index provided is invalid.`","lastModifiedDate":"2023-11-02"},{"lineNumber":798,"author":{"gitId":"Kevin-Liusx"},"content":"* If the command is incorrect, the app should display `Invalid command format!`","lastModifiedDate":"2023-11-02"},{"lineNumber":799,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e![result for incorrect command](images/incorrectAttendanceCommand.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":800,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":801,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":802,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":803,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":804,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":805,"author":{"gitId":"jibtaf"},"content":"### Listing all employees: `list`","lastModifiedDate":"2023-11-02"},{"lineNumber":806,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":807,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":808,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":809,"author":{"gitId":"applepiofmyeye"},"content":"Shows a list of all employees in the workplace.","lastModifiedDate":"2023-10-02"},{"lineNumber":810,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":811,"author":{"gitId":"applepiofmyeye"},"content":"**Command format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"applepiofmyeye"},"content":"`list`","lastModifiedDate":"2023-10-02"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"jibtaf"},"content":"**Output:**","lastModifiedDate":"2023-11-10"},{"lineNumber":816,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":817,"author":{"gitId":"jibtaf"},"content":"* ManaGease should display a list of all employees in the workplace.","lastModifiedDate":"2023-11-02"},{"lineNumber":818,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/listSuccess.png\" width\u003d\"570\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":819,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/findAlexDavidResult2.png\" width\u003d\"570\" height\u003d\"400\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":820,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":821,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":822,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":823,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":824,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":825,"author":{"gitId":"jibtaf"},"content":"### Locating employees by name: `find`","lastModifiedDate":"2023-11-01"},{"lineNumber":826,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":827,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":828,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":829,"author":{"gitId":"applepiofmyeye"},"content":"Finds employees whose names contain any of the given keywords.","lastModifiedDate":"2023-10-02"},{"lineNumber":830,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":831,"author":{"gitId":"applepiofmyeye"},"content":"**Command Format**","lastModifiedDate":"2023-10-02"},{"lineNumber":832,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":833,"author":{"gitId":"applepiofmyeye"},"content":"`find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-02"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"jibtaf"},"content":"* The search is case-insensitive. e.g. `alex` will match `Alex`","lastModifiedDate":"2023-11-02"},{"lineNumber":836,"author":{"gitId":"jibtaf"},"content":"* The order of the keywords does not matter. e.g. `Yeoh Alex` will match `Alex Yeoh`","lastModifiedDate":"2023-11-02"},{"lineNumber":837,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"jibtaf"},"content":"* Only full words will be matched e.g. `Ale` will not match `Alex`","lastModifiedDate":"2023-11-02"},{"lineNumber":839,"author":{"gitId":"jibtaf"},"content":"* Employees matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-11-02"},{"lineNumber":840,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"jibtaf"},"content":"**Example:**","lastModifiedDate":"2023-11-10"},{"lineNumber":843,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/findAlexDavidResult1.png\" width\u003d\"570\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":845,"author":{"gitId":"jibtaf"},"content":"  \u003cbr\u003e\u003cimg src\u003d\"images/findAlexDavidResult2.png\" width\u003d\"570\" height\u003d\"400\"\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":851,"author":{"gitId":"jibtaf"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2023-11-08"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":853,"author":{"gitId":"jibtaf"},"content":"**What it does**","lastModifiedDate":"2023-11-08"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":855,"author":{"gitId":"jibtaf"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-11-08"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":857,"author":{"gitId":"jibtaf"},"content":"**Command format:**","lastModifiedDate":"2023-11-08"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":859,"author":{"gitId":"jibtaf"},"content":"`clear`","lastModifiedDate":"2023-11-08"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":861,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-08"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":863,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"applepiofmyeye"},"content":"**What it does**","lastModifiedDate":"2023-10-02"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":867,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"applepiofmyeye"},"content":"**Command format:**","lastModifiedDate":"2023-10-02"},{"lineNumber":870,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":871,"author":{"gitId":"applepiofmyeye"},"content":"`exit`","lastModifiedDate":"2023-10-02"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":874,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":875,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":877,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"applepiofmyeye"},"content":"Employee data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-11-07"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":883,"author":{"gitId":"jibtaf"},"content":"ManaGease data are saved automatically as a JSON file `[JAR file location]/data/employees.json`. You are discouraged from editing the data file to make sure ManaGease works well to help you with your business.","lastModifiedDate":"2023-11-09"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":885,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":886,"author":{"gitId":"jibtaf"},"content":"If your changes to the data file makes its format invalid, ManaGease will not run. Hence, it is recommended not to edit the data file directly, and you can edit the data through our useful commands.","lastModifiedDate":"2023-11-07"},{"lineNumber":887,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":889,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":891,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"applepiofmyeye"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ManaGease home folder.","lastModifiedDate":"2023-10-02"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"jibtaf"},"content":"**Q**: I am using multiple screens. If I move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen.\u003cbr\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":897,"author":{"gitId":"jibtaf"},"content":"**A**: Delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-11-09"},{"lineNumber":898,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":899,"author":{"gitId":"Leb14"},"content":"**Q**: Is internet access necessary for the application? \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":900,"author":{"gitId":"Leb14"},"content":"**A**: ManaGease doesn\u0027t need internet access as the data are stored locally in your machine.","lastModifiedDate":"2023-11-10"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":902,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":904,"author":{"gitId":"jibtaf"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":906,"author":{"gitId":"Leb14"},"content":"## Glossary","lastModifiedDate":"2023-11-10"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":908,"author":{"gitId":"Leb14"},"content":"| Term                                                                | Description                                                                                        |","lastModifiedDate":"2023-11-10"},{"lineNumber":909,"author":{"gitId":"Leb14"},"content":"|------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-10"},{"lineNumber":910,"author":{"gitId":"Leb14"},"content":"| **Benefit**                                     | Benefit are additional financial rewards provided to employees.  |","lastModifiedDate":"2023-11-10"},{"lineNumber":911,"author":{"gitId":"Leb14"},"content":"| **Deduction**                                   | Deductions refer to the removal of a specified amount from an employee\u0027s salary. |","lastModifiedDate":"2023-11-10"},{"lineNumber":912,"author":{"gitId":"Leb14"},"content":"| **Payslip**                                     | An itemised payslip generated based on payroll in pdf format. The template payslip is retrieved from Ministry of Manpower (MOM) website|","lastModifiedDate":"2023-11-10"},{"lineNumber":913,"author":{"gitId":"Leb14"},"content":"| **Payroll**                                     | A report that show the net salary, basic pay, total deductions and total benefits in the result box.   |","lastModifiedDate":"2023-11-10"},{"lineNumber":914,"author":{"gitId":"Leb14"},"content":"| **Attendace report**                            | A report that show the number of days on leave, absent and late for an employee in the result box.   |","lastModifiedDate":"2023-11-10"},{"lineNumber":915,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":916,"author":{"gitId":"Leb14"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":918,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"jibtaf"},"content":"| Action                                                                 | Format and Examples                                                                                                                                                                                                          |","lastModifiedDate":"2023-11-02"},{"lineNumber":921,"author":{"gitId":"applepiofmyeye"},"content":"|------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":922,"author":{"gitId":"jibtaf"},"content":"| **[Add](#adding-an-employee-add)**                                     | `add /n NAME /e EMAIL /p PHONE /a ADDRESS /b BANK_ACCOUNT /jd JOIN_DATE /s SALARY /l ANNUAL_LEAVE`\u003cbr /\u003e e.g., `add /n Jane Smith /e jane@email.com /p 12345678 /a 123 Main St /b 123456789 /jd 12/09/2023 /s 1000.00 /l 10` |","lastModifiedDate":"2023-11-07"},{"lineNumber":923,"author":{"gitId":"jibtaf"},"content":"| **[Clear](#clearing-all-entries-clear)**                               | `clear`                                                                                                                                                                                                                      |","lastModifiedDate":"2023-11-02"},{"lineNumber":924,"author":{"gitId":"jibtaf"},"content":"| **[Delete](#deleting-an-employee-delete)**                             | `delete INDEX`\u003cbr /\u003e e.g., `delete 3`                                                                                                                                                                                        |","lastModifiedDate":"2023-11-07"},{"lineNumber":925,"author":{"gitId":"jibtaf"},"content":"| **[Edit](#editing-an-employee-edit)**                                  | `edit INDEX [/n NAME] [/e EMAIL] [/p PHONE] [/a ADDRESS] [/b BANK_ACCOUNT] [/jd JOIN_DATE] [/s SALARY] [/l ANNUAL_LEAVE]`\u003cbr /\u003e e.g.,`edit 2 /n James Lee e/jameslee@example.com`                                            |","lastModifiedDate":"2023-11-09"},{"lineNumber":926,"author":{"gitId":"jibtaf"},"content":"| **[Read](#reading-an-employees-information-read)**                     | `read INDEX PREFIX`\u003cbr /\u003e e.g., `read 3 /n`                                                                                                                                                                                  |","lastModifiedDate":"2023-11-07"},{"lineNumber":927,"author":{"gitId":"jibtaf"},"content":"| **[List](#listing-all-employees-list)**                                | `list`                                                                                                                                                                                                                       |","lastModifiedDate":"2023-11-02"},{"lineNumber":928,"author":{"gitId":"jibtaf"},"content":"| **[Find](#locating-employees-by-name-find)**                           | `find KEYWORD [MORE_KEYWORDS]`\u003cbr /\u003e e.g., `find alex`                                                                                                                                                                       |","lastModifiedDate":"2023-11-02"},{"lineNumber":929,"author":{"gitId":"jibtaf"},"content":"| **[Deduct](#adding-a-deduction-to-the-payroll-of-an-employee-deduct)** | `deduct INDEX /v VALUE /r REASON` or `deduct /n NAME /v VALUE /r REASON`\u003cbr /\u003e e.g., `deduct 3 /v 200.00 /r cpf`                                                                                                             |","lastModifiedDate":"2023-11-02"},{"lineNumber":930,"author":{"gitId":"jibtaf"},"content":"| **[Benefit](#adding-a-benefit-to-the-payroll-of-an-employee-benefit)** | `benefit INDEX /v VALUE /r REASON` or `benefit /n NAME /v VALUE /r REASON`\u003cbr /\u003e e.g., `benefit 3 /v 1000.00 /r bonus`                                                                                                       |","lastModifiedDate":"2023-11-02"},{"lineNumber":931,"author":{"gitId":"jibtaf"},"content":"| **[Payroll](#calculating-an-employees-payroll-payroll)**               | `payroll INDEX` or `payroll /n NAME`\u003cbr /\u003e e.g., `payroll 3`                                                                                                                                                                 |","lastModifiedDate":"2023-11-02"},{"lineNumber":932,"author":{"gitId":"jibtaf"},"content":"| **[Payslip](#generating-payslips-for-an-employee-payslip)**            | `payslip INDEX [/t DD/MM/YYYY]` or `payslip /n NAME [/t DD/MM/YYYY]`\u003cbr /\u003e e.g., `payslip 3`                                                                                                                                 |","lastModifiedDate":"2023-11-02"},{"lineNumber":933,"author":{"gitId":"jibtaf"},"content":"| **[Add Leave](#adding-leave-to-an-employee-addleave)**                 | `addleave INDEX /on DATE` or `addleave INDEX /from DATE /to DATE`\u003cbr /\u003e e.g., `addleave 3 /from 12/12/2024 /to 14/12/2024`                                                                                                   |","lastModifiedDate":"2023-11-02"},{"lineNumber":934,"author":{"gitId":"jibtaf"},"content":"| **[Delete Leave](#deleting-leave-from-an-employee-deleteleave)**       | `deleteleave INDEX /on DATE` or `deleteleave INDEX /from DATE /to DATE`\u003cbr /\u003e e.g., `deleteleave 3 /from 12/12/2024 /to 14/12/2024`                                                                                          |","lastModifiedDate":"2023-11-02"},{"lineNumber":935,"author":{"gitId":"jibtaf"},"content":"| **[View Leave](#view-employee-who-is-on-leave-viewleave)**             | `viewleave /on DATE`\u003cbr /\u003e e.g., `viewleave /on 12/12/2024`                                                                                                                                                                  |","lastModifiedDate":"2023-11-02"},{"lineNumber":936,"author":{"gitId":"jibtaf"},"content":"| **[View Previous Month](#view-the-calendar-of-previous-month-pm)**     | `pm`                                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":937,"author":{"gitId":"jibtaf"},"content":"| **[View Current Month](#view-the-calendar-of-current-month-cm)**       | `cm`                                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":938,"author":{"gitId":"jibtaf"},"content":"| **[View Next Month](#view-the-calendar-of-upcoming-month-nm)**         | `nm`                                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":939,"author":{"gitId":"jibtaf"},"content":"| **[Mark](#marking-an-employees-attendance-mark)**                      | `mark INDEX /at ATTENDANCE_TYPE` or `mark /n NAME /at ATTENDANCE_TYPE`\u003cbr /\u003e e.g, `mark 3 /at present`                                                                                                                       |","lastModifiedDate":"2023-11-07"},{"lineNumber":940,"author":{"gitId":"jibtaf"},"content":"| **[Attendance](#view-an-employees-attendance-report-attendance)**      | `attendance INDEX` or `attendance /n NAME`\u003cbr /\u003e e.g, `attendance 3`                                                                                                                                                         |","lastModifiedDate":"2023-11-07"},{"lineNumber":941,"author":{"gitId":"jibtaf"},"content":"| **[Help](#viewing-help-help)**                                         | `help`                                                                                                                                                                                                                       |","lastModifiedDate":"2023-11-02"},{"lineNumber":942,"author":{"gitId":"jibtaf"},"content":"| **[Exit](#exiting-the-program-exit)**                                  | `exit`                                                                                                                                                                                                                       |","lastModifiedDate":"2023-11-02"},{"lineNumber":943,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":944,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":945,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":946,"author":{"gitId":"jibtaf"},"content":"* Go back to [Features](#features)","lastModifiedDate":"2023-11-02"},{"lineNumber":947,"author":{"gitId":"jibtaf"},"content":"* Go back to [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-07"},{"lineNumber":948,"author":{"gitId":"jibtaf"},"content":"  ","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Kevin-Liusx":31,"jibtaf":581,"WeeMingQing":51,"applepiofmyeye":86,"-":123,"Leb14":76}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jibtaf"},"content":"    content: \"ManaGease\";","lastModifiedDate":"2023-10-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jibtaf":1,"-":294}},{"path":"docs/diagrams/AddBenefitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"skin rose","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"start","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":":User finds the index or name of employee of interest;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":":User enters benefit command;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":":ManaGease reads and parses command;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    if () then ([User specifies the index of employee])","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"        :ManaGease adds given benefit","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"        to the employee\u0027s salary;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    else ([User specifies the name of employee])","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        repeat","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        :ManaGease shows all employees","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        whose name contains the name keyword;","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        backward:User selects the employee of interest;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        repeat while () is ([More than one","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        matching employees])","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"            :ManaGease adds given benefit","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"            to the employee\u0027s salary;","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    endif","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":":Updated benefit is saved and stored in ManaGease;","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"stop","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":29}},{"path":"docs/diagrams/AddBenefitClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"hide circle","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"skinparam arrowColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"skinparam classBackgroundColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"show method","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"show attribute","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"Class BenefitCommandParser {","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    +parse(args: String): BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"Class BenefitCommand {","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    +execute(model: Model)","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"Class PayrollStorage {","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    +getPayrolls(): ArrayList\u003cPayroll\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"Class Payroll {","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    +addBenefit(benefit: Benefit)","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"Class Salary {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    -value: String","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"Class Benefit {","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    -value: String","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    -reason: Reason","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nReason\" as Reason {","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    +ANNUAL_BONUS","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    +TRANSPORT_ALLOWANCE","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"Parser \u003c|-- BenefitCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"Command \u003c|-- BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser --\u003e BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"BenefitCommand --\u003e Person","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"Person -right-\u003e \"1\" PayrollStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"PayrollStorage *--\u003e \"*\" Payroll","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"Payroll *--\u003e \"1\" Salary","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"Salary *--\u003e \"*\" Benefit","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"Benefit -\u003e Reason","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":47}},{"path":"docs/diagrams/AddBenefitSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \":BenefitCommandParser\" as BenefitCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"dc:BenefitCommand\" as BenefitCommand LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"[-\u003e LogicManager : execute(\"benefit 1 /v 1000.00 /r bonus\")","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"activate LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"benefit 1 /v 1000.00 /r bonus\")","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"create BenefitCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"AddressBookParser -\u003e BenefitCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"deactivate BenefitCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"AddressBookParser -\u003e BenefitCommandParser : parse(\"1 /v 1000.00 /r bonus\")","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"create BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser -\u003e BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"BenefitCommand --\u003e BenefitCommandParser : bc","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"deactivate BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser --\u003e AddressBookParser : bc","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"deactivate BenefitCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"destroy BenefitCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"AddressBookParser --\u003e LogicManager : bc","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"LogicManager -\u003e BenefitCommand : execute()","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"BenefitCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"activate Model","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"Model --\u003e BenefitCommand:","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"deactivate Model","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"BenefitCommand -\u003e Person : getPayrollStorage()","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"activate Person","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"ref over Person : **addDeduction()**","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"Person --\u003e BenefitCommand :","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"deactivate Person","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"create CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"BenefitCommand -\u003e CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"activate CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"CommandResult --\u003e BenefitCommand : result","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"BenefitCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"deactivate BenefitCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":83}},{"path":"docs/diagrams/AddBenefitSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe ref","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \":PayrollStorage\" as PayrollStorage PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \":Payroll\" as Payroll PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \":Salary\" as Salary PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"participant \":Benefit\" as Benefit PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"activate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"create PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"Person -\u003e PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"activate PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"Person -\u003e PayrollStorage : getLatestPayroll()","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"create Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"PayrollStorage -\u003e Payroll :","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"activate Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"PayrollStorage -\u003e Payroll : addBenefit()","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"create Salary","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"Payroll -\u003e Salary :","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"activate Salary","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"Payroll -\u003e Salary : addBenefit()","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"create Benefit","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"Salary -\u003e Benefit : new","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"activate Benefit","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"Benefit --\u003e Salary","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"deactivate Benefit","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"Salary --\u003e Payroll :","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"deactivate Salary","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"Payroll --\u003e PayrollStorage :","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"deactivate Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"PayrollStorage --\u003e Person :","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"deactivate PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"deactivate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":45}},{"path":"docs/diagrams/AddDeductionActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"skin rose","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"start","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":":User finds the index or name of employee of interest;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":":User enters deduct command;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":":ManaGease reads and parses command;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    if () then ([User specifies the index of employee])","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"        :ManaGease adds given deduction","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"        to the employee\u0027s salary;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    else ([User specifies the name of employee])","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        repeat","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        :ManaGease shows all employees","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        whose name contains the name keyword;","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        backward:User selects the employee of interest;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        repeat while () is ([More than one","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        matching employees])","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"            :ManaGease adds given deduction","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"            to the employee\u0027s salary;","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    endif","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":":Updated deduction is saved and stored in ManaGease;","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"stop","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":29}},{"path":"docs/diagrams/AddDeductionClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"hide circle","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"skinparam arrowColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"skinparam classBackgroundColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"show method","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"show attribute","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"Class DeductCommandParser {","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    +parse(args: String): DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"Class DeductCommand {","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    +execute(model: Model)","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"Class PayrollStorage {","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    +getPayrolls(): ArrayList\u003cPayroll\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"Class Payroll {","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    +addDeduction(deduction: Deduction)","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"Class Salary {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    -value: String","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"Class Deduction {","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    -value: String","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    -reason: Reason","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nReason\" as Reason {","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    +EMPLOYEE_CPF_DEDUCTION","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    +NO_PAY_LEAVE","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    +ABSENCE","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"Parser \u003c|-- DeductCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"Command \u003c|-- DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser --\u003e DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"DeductCommand --\u003e Person","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"Person -right-\u003e \"1\" PayrollStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"PayrollStorage *--\u003e \"*\" Payroll","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"Payroll *--\u003e \"1\" Salary","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"Salary *--\u003e \"*\" Deduction","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"Deduction -\u003e Reason","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":48}},{"path":"docs/diagrams/AddDeductionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \":DeductCommandParser\" as DeductCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"dc:DeductCommand\" as DeductCommand LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"[-\u003e LogicManager : execute(\"deduct 1 /v 150.00 /r absence\")","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"activate LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deduct 1 /v 150.00 /r absence\")","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"create DeductCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"AddressBookParser -\u003e DeductCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"activate DeductCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"deactivate DeductCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"AddressBookParser -\u003e DeductCommandParser : parse(\"1 /v 150.00 /r absence\")","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"activate DeductCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"create DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser -\u003e DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"activate DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"DeductCommand --\u003e DeductCommandParser : dc","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"deactivate DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser --\u003e AddressBookParser : dc","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"deactivate DeductCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"destroy DeductCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"AddressBookParser --\u003e LogicManager : dc","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"LogicManager -\u003e DeductCommand : execute()","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"activate DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"DeductCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"activate Model","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"Model --\u003e DeductCommand:","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"deactivate Model","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"DeductCommand -\u003e Person : getPayrollStorage()","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"activate Person","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"ref over Person : **addDeduction()**","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"Person --\u003e DeductCommand :","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"deactivate Person","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"create CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"DeductCommand -\u003e CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"activate CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"CommandResult --\u003e DeductCommand : result","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"DeductCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"deactivate DeductCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":83}},{"path":"docs/diagrams/AddDeductionSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe ref","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \":PayrollStorage\" as PayrollStorage PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \":Payroll\" as Payroll PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \":Salary\" as Salary PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"participant \":Deduction\" as Deduction PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"activate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"create PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"Person -\u003e PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"activate PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"Person -\u003e PayrollStorage : getLatestPayroll()","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"create Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"PayrollStorage -\u003e Payroll :","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"activate Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"PayrollStorage -\u003e Payroll : addDeduction()","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"create Salary","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"Payroll -\u003e Salary :","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"activate Salary","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"Payroll -\u003e Salary : addDeduction()","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"create Deduction","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"Salary -\u003e Deduction : new","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"activate Deduction","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"Deduction --\u003e Salary","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"deactivate Deduction","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"Salary --\u003e Payroll :","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"deactivate Salary","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"Payroll --\u003e PayrollStorage :","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"deactivate Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"PayrollStorage --\u003e Person :","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"deactivate PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"deactivate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":45}},{"path":"docs/diagrams/AddLeaveActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"@startuml","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"skin rose","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"start","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":":User finds the index of employee of interest;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":":User enters addleave command;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":":ManaGease reads and parses command;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"if () then ([1 day of leave to add])","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    :ManaGease adds in the date","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    provided by user as leave;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"else ([multiple days of leave to add])","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    :ManaGease adds in all the","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    dates in the date range","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    provided by user as leave;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"endif","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":":Updated leave is saved and stored in ManaGease;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"stop","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"@enduml","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"WeeMingQing":21}},{"path":"docs/diagrams/AddLeaveClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"@startuml","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"!include style.puml","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"hide circle","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"skinparam arrowColor PERSON_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"skinparam classBackgroundColor PERSON_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"show method","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"show attribute","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"Class AddLeaveCommandParser {","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    +parse(args: String): AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"Class AddLeaveCommand {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    +execute(model: Model)","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"Parser \u003c|-- AddLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"Command \u003c|-- AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommandParser --\u003e AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommand --\u003e Person","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"@enduml","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"WeeMingQing":25}},{"path":"docs/diagrams/AddLeaveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"@startuml","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"!include style.puml","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"participant \":AddLeaveCommandParser\" as AddLeaveCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"participant \"al:AddLeaveCommand\" as AddLeaveCommand LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"end box","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"end box","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"end box","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"[-\u003e LogicManager : execute(\"addleave 1 /on 28/02/2023\")","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"activate LogicManager","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addleave 1 /on 28/02/2023\")","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"create AddLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"AddressBookParser -\u003e AddLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"activate AddLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"deactivate AddLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"AddressBookParser -\u003e AddLeaveCommandParser : parse(\"1 /on 28/02/2023\")","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"activate AddLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"create AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommandParser -\u003e AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"activate AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommand --\u003e AddLeaveCommandParser : al","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"deactivate AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommandParser --\u003e AddressBookParser : al","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"deactivate AddLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"destroy AddLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"AddressBookParser --\u003e LogicManager : al","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"LogicManager -\u003e AddLeaveCommand : execute()","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"activate AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"activate Model","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"Model --\u003e AddLeaveCommand:","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"deactivate Model","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommand -\u003e Person : addLeave()","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"activate Person","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"Person --\u003e AddLeaveCommand :","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"deactivate Person","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"create CommandResult","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommand -\u003e CommandResult","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"activate CommandResult","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"CommandResult --\u003e AddLeaveCommand : result","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"AddLeaveCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"deactivate AddLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"@enduml","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"WeeMingQing":79}},{"path":"docs/diagrams/AttendanceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"@startuml","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"!include style.puml","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"participant \":AttendanceCommandParser\" as AttendanceCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"participant \"a:AttendanceCommand\" as AttendanceCommand LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"end box","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"end box","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"box Attendance ATTENDANCE_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"participant \":AttendanceStorage\" as AttendanceStorage ATTENDANCE_COLOR_T1","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"end box","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"[-\u003e LogicManager : execute(\"attendance 1\")","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"activate LogicManager","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"attendance 1\")","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"create AttendanceCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"AddressBookParser -\u003e AttendanceCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"activate AttendanceCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"deactivate AttendanceCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"AddressBookParser -\u003e AttendanceCommandParser : parse(\"1\")","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"activate AttendanceCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"create AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommandParser -\u003e AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"activate AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommand --\u003e AttendanceCommandParser : a","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"deactivate AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"deactivate AttendanceCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"destroy AttendanceCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"LogicManager -\u003e AttendanceCommand : execute()","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"activate AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommand -\u003e AttendanceCommand : reportByIndex()","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"activate AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"activate Model","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"Model --\u003e AttendanceCommand : fullList","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"deactivate Model","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommand -\u003e Person : getAttendanceStorage()","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"activate Person","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"Person --\u003e AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"deactivate Person","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommand -\u003e AttendanceStorage : getAttendanceReport()","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"activate AttendanceStorage","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceStorage --\u003e AttendanceCommand : attendanceReport","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"deactivate AttendanceStorage","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"create CommandResult","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommand -\u003e CommandResult","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"activate CommandResult","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"CommandResult --\u003e AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"deactivate AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"deactivate AttendanceCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"@enduml","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"applepiofmyeye":95}},{"path":"docs/diagrams/AttendanceStorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"hide circle","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"skinparam arrowColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"skinparam classBackgroundColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"show method","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"show attribute","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"Class \"Attendance\" as Attendance","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"Class AttendanceStorage {","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"    +markXYZ(): void","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"    +getAttendanceReport(): int[]","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"Class Attendance {","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"    - date","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    - attendanceType","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"Attendance \"*\" --left-- \"1\" AttendanceStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"AttendanceType \"1\" -down- \"1\" Attendance","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"applepiofmyeye":27}},{"path":"docs/diagrams/DeleteLeaveActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"@startuml","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"skin rose","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"start","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":":User finds the index of employee of interest;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":":User enters deleteleave command;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":":ManaGease reads and parses command;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"if () then ([1 day of leave to delete])","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    :ManaGease deletes the date","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    provided by user from leave;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"else ([multiple days of leave to delete])","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    :ManaGease deletes all the","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    dates in the date range","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    provided by user from leave;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"endif","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":":Updated leave is saved and stored in ManaGease;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"stop","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"@enduml","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"WeeMingQing":21}},{"path":"docs/diagrams/DeleteLeaveClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"@startuml","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"!include style.puml","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"hide circle","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"skinparam arrowColor PERSON_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"skinparam classBackgroundColor PERSON_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"show method","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"show attribute","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"Class DeleteLeaveCommandParser {","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    +parse(args: String): DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"Class DeleteLeaveCommand {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    +execute(model: Model)","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"Parser \u003c|-- DeleteLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"Command \u003c|-- DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommandParser --\u003e DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommand --\u003e Person","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"@enduml","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"WeeMingQing":25}},{"path":"docs/diagrams/DeleteLeaveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"@startuml","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"!include style.puml","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"participant \":DeleteLeaveCommandParser\" as DeleteLeaveCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"participant \"dl:DeleteLeaveCommand\" as DeleteLeaveCommand LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"end box","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"end box","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"end box","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"[-\u003e LogicManager : execute(\"deleteleave 1 /on 28/02/2023\")","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"activate LogicManager","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deleteleave 1 /on 28/02/2023\")","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"create DeleteLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"AddressBookParser -\u003e DeleteLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"activate DeleteLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"deactivate DeleteLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"AddressBookParser -\u003e DeleteLeaveCommandParser : parse(\"1 /on 28/02/2023\")","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"activate DeleteLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"create DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommandParser -\u003e DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"activate DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommand --\u003e DeleteLeaveCommandParser : dl","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"deactivate DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommandParser --\u003e AddressBookParser : dl","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"deactivate DeleteLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"destroy DeleteLeaveCommandParser","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"AddressBookParser --\u003e LogicManager : dl","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"LogicManager -\u003e DeleteLeaveCommand : execute()","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"activate DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"activate Model","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"Model --\u003e DeleteLeaveCommand:","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"deactivate Model","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommand -\u003e Person : deleteLeave()","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"activate Person","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"Person --\u003e DeleteLeaveCommand :","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"deactivate Person","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"create CommandResult","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommand -\u003e CommandResult","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"activate CommandResult","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"CommandResult --\u003e DeleteLeaveCommand : result","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"DeleteLeaveCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"deactivate DeleteLeaveCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"@enduml","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"WeeMingQing":79}},{"path":"docs/diagrams/MarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"@startuml","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"!include style.puml","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"participant \":MarkCommandParser\" as MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"participant \"m:MarkCommand\" as MarkCommand LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"end box","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"end box","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"[-\u003e LogicManager : execute(\"mark 1 /at LATE\")","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"activate LogicManager","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"mark 1 /at LATE\")","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"create MarkCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"AddressBookParser -\u003e MarkCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"activate MarkCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"AddressBookParser -\u003e MarkCommandParser : parse(\"1 /at LATE\")","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"activate MarkCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"create MarkCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommandParser -\u003e MarkCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"activate MarkCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommand --\u003e MarkCommandParser : m","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"deactivate MarkCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommandParser --\u003e AddressBookParser : m","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"destroy MarkCommandParser","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"AddressBookParser --\u003e LogicManager : m","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"LogicManager -\u003e MarkCommand : execute()","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"activate MarkCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommand -\u003e MarkCommand : markByIndex()","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"activate MarkCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommand -\u003e Model : setPerson()","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"activate Model","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"deactivate Model","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"create CommandResult","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommand -\u003e CommandResult","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"activate CommandResult","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"CommandResult --\u003e MarkCommand : result","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"deactivate MarkCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"MarkCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"deactivate MarkCommand","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"@enduml","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"applepiofmyeye":73}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"Class AnnualLeave","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"Class BankAccount","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"Class Salary","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"Class JoinDate","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"Class AttendanceStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"Class PayrollStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"Person *--\u003e AnnualLeave","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"Person *--\u003e BankAccount","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"Person *--\u003e Salary","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"Person *--\u003e JoinDate","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"Person *--\u003e AttendanceStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"Person *--\u003e PayrollStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jibtaf":12,"-":52}},{"path":"docs/diagrams/ParseBenefitCommandIndexSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Index","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":BenefitCommandParser\" as BenefitCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"bc:BenefitCommand\" as BenefitCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getPreamble().isNonZeroUnsignedInteger()","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e ArgMultimap : getPreamble()","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e BenefitCommandParser : \"1\"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e ParserUtil : parseIndex(\"1\")","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    ParserUtil --\u003e BenefitCommandParser : index","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    create BenefitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e BenefitCommand : new BenefitCommand(index, benefit)","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    activate BenefitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    BenefitCommand --\u003e BenefitCommandParser : bc","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    deactivate BenefitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"else else","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    alt argMultimap.getValue(PREFIX_NAME).isEmpty()","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    \u003c-- BenefitCommandParser : ParseException","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    note over BenefitCommandParser: Both index and name are empty","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    else else","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    group **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    end","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    note over BenefitCommandParser: Index is empty while name is present","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    end","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":40}},{"path":"docs/diagrams/ParseBenefitCommandNameSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":BenefitCommandParser\" as BenefitCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"NameContainsKeywordsPredicate\" as NameContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"participant \"bc:BenefitCommand\" as BenefitCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser -\u003e ArgMultimap : getValue(PREFIX_NAME).get()","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"ArgMultimap --\u003e BenefitCommandParser : \"Alex\"","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser -\u003e ParserUtil : parseName(\"Alex\").toString()","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"ParserUtil --\u003e BenefitCommandParser : name","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser -\u003e NameContainsKeywordsPredicate : new NameContainsKeywordsPredicate(Arrays.asList(name.split(\"\\\\s+\")))","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"NameContainsKeywordsPredicate --\u003e BenefitCommandParser : predicate","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"create BenefitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser -\u003e BenefitCommand : new BenefitCommand(predicate, benefit)","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"BenefitCommand --\u003e BenefitCommandParser : bc","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"deactivate BenefitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":38}},{"path":"docs/diagrams/ParseBenefitCommandReasonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Reason","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":BenefitCommandParser\" as BenefitCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getValue(PREFIX_REASON).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e ArgMultimap : getValue(PREFIX_REASON).get()","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e BenefitCommandParser : \"bonus\"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e ParserUtil : parseBenefitReason(\"bonus\")","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    ParserUtil --\u003e BenefitCommandParser : Reason.ANNUAL_BONUS","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"else !argMultimap.getValue(PREFIX_REASON).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e ArgMultimap : getValue(PREFIX_REASON).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e BenefitCommandParser : ParseException","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":30}},{"path":"docs/diagrams/ParseBenefitCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":BenefitCommandParser\" as BenefitCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"-\u003e BenefitCommandParser : parse(\"1 /v 150.00 /r bonus\") \\n or \\n parse(\"/n Alex /v 150.00 /r bonus\")","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser -\u003e ArgumentTokenizer : tokenize(\"1 /v 150.00 /r bonus\",\\nPREFIX_NAME, \\nPREFIX_VALUE, \\nPREFIX_REASON) \\n or \\n tokenize(\"/n Alex /v 150.00 /r bonus\",\\nPREFIX_NAME, \\nPREFIX_VALUE, \\nPREFIX_REASON)","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"create ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"ArgumentTokenizer -\u003e ArgMultimap : new","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"ArgumentTokenizer \u003c-- ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser \u003c-- ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Reason","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Value","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Index","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"\u003c-- BenefitCommandParser : dc","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"deactivate BenefitCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"BenefitCommandParser -[hidden]-\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"destroy BenefitCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":44}},{"path":"docs/diagrams/ParseBenefitCommandValueSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Value","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":BenefitCommandParser\" as BenefitCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \":Benefit\" as Benefit LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"activate BenefitCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getValue(PREFIX_VALUE).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e ArgMultimap : getValue(PREFIX_VALUE).get()","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e BenefitCommandParser : \"150.00\"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e ParserUtil : parseBenefit(\"150.00\", Reason.ANNUAL_BONUS)","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    create Benefit","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    ParserUtil -\u003e Benefit : new Benefit(\"150.00\", Reason.ANNUAL_BONUS)","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    activate Benefit","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    Benefit --\u003e ParserUtil : benefit","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    deactivate Benefit","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    ParserUtil --\u003e BenefitCommandParser : benefit","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"else !argMultimap.getValue(PREFIX_VALUE).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    BenefitCommandParser -\u003e ArgMultimap : getValue(PREFIX_VALUE).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e BenefitCommandParser : ParseException","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":36}},{"path":"docs/diagrams/ParseDeductCommandIndexSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Index","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":DeductCommandParser\" as DeductCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"dc:DeductCommand\" as DeductCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"activate DeductCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getPreamble().isNonZeroUnsignedInteger()","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e ArgMultimap : getPreamble()","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e DeductCommandParser : \"1\"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e ParserUtil : parseIndex(\"1\")","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    ParserUtil --\u003e DeductCommandParser : index","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    create DeductCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e DeductCommand : new DeductCommand(index, deduction)","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    activate DeductCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    DeductCommand --\u003e DeductCommandParser : dc","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    deactivate DeductCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"else else","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    alt argMultimap.getValue(PREFIX_NAME).isEmpty()","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    \u003c-- DeductCommandParser : ParseException","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    note over DeductCommandParser: Both index and name are empty","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    else else","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    group **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    end","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    note over DeductCommandParser: Index is empty while name is present","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    end","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":40}},{"path":"docs/diagrams/ParseDeductCommandNameSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":DeductCommandParser\" as DeductCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"NameContainsKeywordsPredicate\" as NameContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"participant \"dc:DeductCommand\" as DeductCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"activate DeductCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser -\u003e ArgMultimap : getValue(PREFIX_NAME).get()","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"ArgMultimap --\u003e DeductCommandParser : \"Alex\"","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser -\u003e ParserUtil : parseName(\"Alex\").toString()","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"ParserUtil --\u003e DeductCommandParser : name","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser -\u003e NameContainsKeywordsPredicate : new NameContainsKeywordsPredicate(Arrays.asList(name.split(\"\\\\s+\")))","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"NameContainsKeywordsPredicate --\u003e DeductCommandParser : predicate","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"create DeductCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser -\u003e DeductCommand : new DeductCommand(predicate, deduction)","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"activate DeductCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"DeductCommand --\u003e DeductCommandParser : dc","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"deactivate DeductCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":38}},{"path":"docs/diagrams/ParseDeductCommandReasonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Reason","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":DeductCommandParser\" as DeductCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"activate DeductCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getValue(PREFIX_REASON).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e ArgMultimap : getValue(PREFIX_REASON).get()","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e DeductCommandParser : \"absence\"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e ParserUtil : parseDeductionReason(\"absence\")","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    ParserUtil --\u003e DeductCommandParser : Reason.ABSENCE","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"else !argMultimap.getValue(PREFIX_REASON).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e ArgMultimap : getValue(PREFIX_REASON).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e DeductCommandParser : ParseException","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":30}},{"path":"docs/diagrams/ParseDeductCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":DeductCommandParser\" as DeductCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"-\u003e DeductCommandParser : parse(\"1 /v 150.00 /r absence\") \\n or \\n parse(\"/n Alex /v 150.00 /r absence\")","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"activate DeductCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser -\u003e ArgumentTokenizer : tokenize(\"1 /v 150.00 /r absence\",\\nPREFIX_NAME, \\nPREFIX_VALUE, \\nPREFIX_REASON) \\n or \\n tokenize(\"/n Alex /v 150.00 /r absence\",\\nPREFIX_NAME, \\nPREFIX_VALUE, \\nPREFIX_REASON)","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"create ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"ArgumentTokenizer -\u003e ArgMultimap : new","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"ArgumentTokenizer \u003c-- ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser \u003c-- ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Reason","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Value","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Index","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"\u003c-- DeductCommandParser : dc","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"deactivate DeductCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"DeductCommandParser -[hidden]-\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"destroy DeductCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":44}},{"path":"docs/diagrams/ParseDeductCommandValueSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Value","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":DeductCommandParser\" as DeductCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \":Deduction\" as Deduction LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"activate DeductCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getValue(PREFIX_VALUE).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e ArgMultimap : getValue(PREFIX_VALUE).get()","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e DeductCommandParser : \"150.00\"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e ParserUtil : parseDeduction(\"150.00\", Reason.ABSENCE)","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    create Deduction","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    ParserUtil -\u003e Deduction : new Deduction(\"150.00\", Reason.ABSENCE)","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    activate Deduction","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    Deduction --\u003e ParserUtil : deduction","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    deactivate Deduction","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    ParserUtil --\u003e DeductCommandParser : deduction","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"else !argMultimap.getValue(PREFIX_VALUE).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    DeductCommandParser -\u003e ArgMultimap : getValue(PREFIX_VALUE).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e DeductCommandParser : ParseException","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":36}},{"path":"docs/diagrams/ParsePayslipCommandIndexSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Index","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":PayslipCommandParser\" as PayslipCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"pc:PayslipCommand\" as PayslipCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"activate PayslipCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getPreamble().isNonZeroUnsignedInteger()","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    PayslipCommandParser -\u003e ArgMultimap : getPreamble()","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e PayslipCommandParser : \"1\"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    PayslipCommandParser -\u003e ParserUtil : parseIndex(\"1\")","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    ParserUtil --\u003e PayslipCommandParser : index","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    alt argMultimap.getValue(PREFIX_MONTH_YEAR).isEmpty()","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"        create PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        PayslipCommandParser -\u003e PayslipCommand : new PayslipCommand(index)","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        activate PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        PayslipCommand --\u003e PayslipCommandParser : pc","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        deactivate PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    else else","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        create PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        PayslipCommandParser -\u003e PayslipCommand : new PayslipCommand(index, monthYear.withDayOfMonth(1))","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        activate PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        PayslipCommand --\u003e PayslipCommandParser : pc","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        deactivate PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    end","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"else else","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    alt argMultimap.getValue(PREFIX_NAME).isEmpty()","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    \u003c-- PayslipCommandParser : ParseException","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    note over PayslipCommandParser: Both index and name are empty","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    else else","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    group **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    end","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"    note over PayslipCommandParser: Index is empty while name is present","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    end","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":50}},{"path":"docs/diagrams/ParsePayslipCommandMonthYearSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_MonthYear","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":PayslipCommandParser\" as PayslipCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"activate PayslipCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getValue(PREFIX_MONTH_YEAR).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    PayslipCommandParser -\u003e ArgMultimap : getValue(PREFIX_MONTH_YEAR).get()","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e PayslipCommandParser : \"09/10/2023\"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    PayslipCommandParser -\u003e ParserUtil : stringToDate(\"09/10/2023\")","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    ParserUtil --\u003e PayslipCommandParser : monthYear","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"else !argMultimap.getValue(PREFIX_MONTH_YEAR).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    PayslipCommandParser -\u003e ArgMultimap : getValue(PREFIX_MONTH_YEAR).isPresent()","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    ArgMultimap --\u003e PayslipCommandParser : ParseException","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":30}},{"path":"docs/diagrams/ParsePayslipCommandNameSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":PayslipCommandParser\" as PayslipCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"NameContainsKeywordsPredicate\" as NameContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"participant \"pc:PayslipCommand\" as PayslipCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"activate PayslipCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser -\u003e ArgMultimap : getValue(PREFIX_NAME).get()","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"ArgMultimap --\u003e PayslipCommandParser : \"Alex\"","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser -\u003e ParserUtil : parseName(\"Alex\").toString()","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"activate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"ParserUtil --\u003e PayslipCommandParser : name","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser -\u003e NameContainsKeywordsPredicate : new NameContainsKeywordsPredicate(Arrays.asList(name.split(\"\\\\s+\")))","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"NameContainsKeywordsPredicate --\u003e PayslipCommandParser : predicate","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"alt argMultimap.getValue(PREFIX_MONTH_YEAR).isEmpty()","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    create PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    PayslipCommandParser -\u003e PayslipCommand : new PayslipCommand(predicate)","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    activate PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    PayslipCommand --\u003e PayslipCommandParser : pc","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    deactivate PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"else else","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    create PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    PayslipCommandParser -\u003e PayslipCommand : new PayslipCommand(predicate, monthYear.withDayOfMonth(1))","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    activate PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    PayslipCommand --\u003e PayslipCommandParser : pc","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    deactivate PayslipCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":49}},{"path":"docs/diagrams/ParsePayslipCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":PayslipCommandParser\" as PayslipCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \"argMultimap:ArgumentMultimap\" as ArgMultimap LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"-\u003e PayslipCommandParser : parse(\"1 /t 09/10/2023\") \\n or \\n parse(\"/n Alex\")","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"activate PayslipCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser -\u003e ArgumentTokenizer : tokenize(\"1 /t 09/10/2023\",\\nPREFIX_NAME, \\nPREFIX_MONTH_YEAR) \\n or \\n tokenize(\"/n Alex\",\\nPREFIX_NAME, \\nPREFIX_MONTH_YEAR)","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"create ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"ArgumentTokenizer -\u003e ArgMultimap : new","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"activate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"ArgumentTokenizer \u003c-- ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"deactivate ArgMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser \u003c-- ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_MonthYear","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Index","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"group **sd** Parse_Name","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"end","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"\u003c-- PayslipCommandParser : dc","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"deactivate PayslipCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser -[hidden]-\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"destroy PayslipCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":41}},{"path":"docs/diagrams/PayslipActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"skin rose","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"start","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":":User finds the index or name of employee of interest;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":":User enters payslip command;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":":ManaGease reads and parses command;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    if () then ([User specifies the index of employee])","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    else ([User specifies the name of employee])","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"        repeat","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"        :ManaGease shows all employees","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        whose name contains the name keyword;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        backward:User selects the employee of interest;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        repeat while () is ([More than one","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        matching employees])","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    endif","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"if () then ([User does not specify","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"the month and year of the payslip to generate])","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    :ManaGease generates payslip for","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    the current month and year;","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"else ([User specifies","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"the month and year of the payslip to generate])","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    :ManaGease generates payslip for","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    the given month and year;","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"endif","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":":Payslip is saved as a PDF file","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"and stored in the payslip directory;","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"stop","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":36}},{"path":"docs/diagrams/PayslipClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"hide circle","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"skinparam arrowColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"skinparam classBackgroundColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"show method","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"show attribute","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"Class PayslipCommandParser {","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    +parse(args: String): PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"Class PayslipCommand {","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    +execute(model: Model)","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"Class PayslipGenerator {","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    +{static}OUTPUT_DIRECTORY_PATH: String","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    +{static}TEMPLATE: String","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    +{static}generatePayslip(employee: Person)","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    +{static}generatePayslipWithMonth(employee: Person, monthYear: LocalDate)","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    +{static}getFieldMap(employee: Person, payroll: Payroll): Map\u003cString, String\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"Class PayrollStorage {","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    +getPayrolls(): ArrayList\u003cPayroll\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"Class Payroll {","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    +addDeduction(deduction: Deduction)","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"Parser \u003c|-- PayslipCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"Command \u003c|-- PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser --\u003e PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator ..\u003e Person","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"PayslipCommand --\u003e Person","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"PayslipCommand --\u003e PayslipGenerator","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"Person --\u003e \"1\" PayrollStorage","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"PayrollStorage *--\u003e \"*\" Payroll","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator ..\u003e Payroll","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":43}},{"path":"docs/diagrams/PayslipSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"participant \":PayslipCommandParser\" as PayslipCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"participant \"pc:PayslipCommand\" as PayslipCommand LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"box Commons ATTENDANCE_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nPayslipGenerator\" as PayslipGenerator ATTENDANCE_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"[-\u003e LogicManager : execute(\"payslip 1 /t 09/10/2023\")","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"activate LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"payslip 1 /t 09/10/2023\")","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"create PayslipCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"AddressBookParser -\u003e PayslipCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"activate PayslipCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"deactivate PayslipCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"AddressBookParser -\u003e PayslipCommandParser : parse(\"1 /t 09/10/2023\")","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"activate PayslipCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"create PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser -\u003e PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"activate PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"PayslipCommand --\u003e PayslipCommandParser : pc","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"deactivate PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser --\u003e AddressBookParser : pc","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"deactivate PayslipCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"PayslipCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"destroy PayslipCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"AddressBookParser --\u003e LogicManager : pc","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"LogicManager -\u003e PayslipCommand : execute()","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"activate PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"PayslipCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"activate Model","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"Model --\u003e PayslipCommand:","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"deactivate Model","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"PayslipCommand -\u003e PayslipGenerator : generatePayslip()","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"activate PayslipGenerator","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"ref over PayslipGenerator: generatePayslip()","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator --\u003e PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"deactivate PayslipGenerator","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"create CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"PayslipCommand -\u003e CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"activate CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"CommandResult --\u003e PayslipCommand : result","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"PayslipCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"deactivate PayslipCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jibtaf":85}},{"path":"docs/diagrams/PayslipSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"mainframe ref","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"box Commons ATTENDANCE_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nPayslipGenerator\" as PayslipGenerator ATTENDANCE_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"participant \":PayrollStorage\" as PayrollStorage PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"participant \":Payroll\" as Payroll PERSON_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"activate PayslipGenerator","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e PayslipGenerator : getFieldMap()","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"activate PayslipGenerator","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Person : getPayrollWithStartDate()","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"activate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"create PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"Person -\u003e PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"activate PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"Person -\u003e PayrollStorage : getPayrollWithStartDate()","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"create Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"PayrollStorage -\u003e Payroll :","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"activate Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"Payroll --\u003e PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"deactivate Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"PayrollStorage --\u003e Person","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"deactivate PayrollStorage","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"Person --\u003e PayslipGenerator","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"deactivate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getBasicSalaryString()","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"activate Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getTotalDeductionsString()","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getNetSalaryString()","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getTotalAllowancesExceptBonusesString()","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getGrossPayString()","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getEmployeeCpfDeductionsString()","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getAnnualBonusesString()","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getAbsencesString()","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getNoPayLeavesString()","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getTransportAllowancesString()","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getStartDateString()","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getEndDateString()","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator -\u003e Payroll : getPaymentDateString()","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"Payroll --\u003e PayslipGenerator","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"deactivate Payroll","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"PayslipGenerator --\u003e PayslipGenerator","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"deactivate PayslipGenerator","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jibtaf":60}},{"path":"docs/diagrams/ReadActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"CommitActivityDiagram.puml@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"skin rose","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"start","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":":User find the index of the employee;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":":User enters read command;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":":ManaGease reads and parses read command;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":":ManaGease retrieves the specific field of the particular employee and display it;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"stop","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"@enduml","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"ReadActivityDiagram.puml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"Leb14":13}},{"path":"docs/diagrams/ReadClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"hide circle","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"skinparam arrowColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"skinparam classBackgroundColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"show method","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"show attribute","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"class ReadCommand {","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"  + execute(model: Model)","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"  + getField(): String","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"  + fieldValueToString(Person): String","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"class Model {","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"  + getFilteredPersonList(): List\u003cPerson\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"  + setSpecificPersonToDisplay(Person)","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"class ReadCommandParser {","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    +parse(args: String): ReadCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"class Person {","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"  + getPhone(): Phone","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"  + getAddress(): Address","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"  + getEmail(): Email","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"  + getBankAccount(): BankAccount","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"  + getJoinDate(): JoinDate","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"  + getSalary(): Salary","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"  + getAnnualLeave(): AnnualLeave","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"  + getWorkingStatusToday(): WorkingStatus","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"Parser \u003c|-- ReadCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"Command \u003c|-- ReadCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"ReadCommandParser --\u003e ReadCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"ReadCommand --\u003e Model","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"ReadCommand --\u003e Person","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"Leb14":52}},{"path":"docs/diagrams/ReadSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"participant \":ReadCommandParser\" as ReadCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"participant \"r:ReadCommand\" as ReadCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"[-\u003e LogicManager : execute(\"read 1 /a\")","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"read 1 /a\")","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"create ReadCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"AddressBookParser -\u003e ReadCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"activate ReadCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"ReadCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"deactivate ReadCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"AddressBookParser -\u003e ReadCommandParser : parse(\"1 /a\")","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"activate ReadCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"create ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"ReadCommandParser -\u003e ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"activate ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"ReadCommand --\u003e ReadCommandParser : r","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"deactivate ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"ReadCommandParser --\u003e AddressBookParser : r","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"deactivate ReadCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"ReadCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"destroy ReadCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"AddressBookParser --\u003e LogicManager : r","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"LogicManager -\u003e ReadCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"activate ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"ReadCommand -\u003e Model : setSpecificPersonToDisplay(person)","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"ReadCommand -\u003e Person : get specific field value","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"activate Person","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"Person --\u003e ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"deactivate Person","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"Model --\u003e ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"ReadCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"CommandResult --\u003e ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"ReadCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"deactivate ReadCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Leb14":80}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"Class JsonAdaptedPayroll","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"Class JsonAdaptedBenefit","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"Class JsonAdaptedDeduction","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"JsonAdaptedPerson --\u003e \"1 .. *\" JsonAdaptedPayroll","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"JsonAdaptedPayroll --\u003e \"*\" JsonAdaptedBenefit","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"JsonAdaptedPayroll --\u003e \"*\" JsonAdaptedDeduction","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jibtaf":6,"-":41}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"Class PersonCardWithSpecificField","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"Class CalendarComponent","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"Class ClockComponent","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"Class YearMonthComponent","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"MainWindow *-down-\u003e \"1\" CalendarComponent","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"MainWindow *-down-\u003e \"1\" ClockComponent","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"MainWindow *-down-\u003e \"1\" YearMonthComponent","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"PersonListPanel -down-\u003e \"1\" PersonCardWithSpecificField","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"PersonCardWithSpecificField--|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"CalendarComponent ..\u003e Model","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"PersonCardWithSpecificField ..\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"Leb14":11}},{"path":"docs/diagrams/ViewLeaveActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"CommitActivityDiagram.puml@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"skin rose","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"start","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":":User enters viewleave command;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":":ManaGease reads and parses viewleave command;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":":ManaGease generates a hashmap with name and date;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"if () then ([There is/are employee(s) on leave on that date])","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"        :ManaGease displays the name of the employee(s);","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"else ([no employee on leave on that date])","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"endif","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"stop","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"@enduml","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"ReadActivityDiagram.puml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"Leb14":21}},{"path":"docs/diagrams/ViewLeaveClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"hide circle","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"skinparam arrowColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"skinparam classBackgroundColor PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"show method","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"show attribute","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"class ViewLeaveCommand {","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"  +execute(model: Model)","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"  + getNameList(List\u003cPerson\u003e): List\u003cString\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"  + nameListToString(List\u003cString\u003e): String","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"class Model {","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"  + getFilteredPersonList(): List\u003cPerson\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"class ViewLeaveCommandParser {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    +parse(args: String): ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"class Person {","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"  + getLeaveList(): List\u003cLocalDate\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"  + getName(): Name","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"Parser \u003c|-- ViewLeaveCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"Command \u003c|-- ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommandParser --\u003e ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand --\u003e Model","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand --\u003e Person","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"Leb14":45}},{"path":"docs/diagrams/ViewLeaveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"@startuml","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"!include style.puml","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"participant \":ViewLeaveCommandParser\" as ViewLeaveCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"participant \"r:ViewLeaveCommand\" as ViewLeaveCommand LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"box Person PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"participant \":Person\" as Person PERSON_COLOR","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"end box","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"[-\u003e LogicManager : execute(\"viewleave /on 23/11/2023\")","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"activate LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"viewleave /on 23/11/2023\")","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"create ViewLeaveCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"AddressBookParser -\u003e ViewLeaveCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"activate ViewLeaveCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"deactivate ViewLeaveCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"AddressBookParser -\u003e ViewLeaveCommandParser : parse(\"/on 23/11/2023\")","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"activate ViewLeaveCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"create ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommandParser -\u003e ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"activate ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand --\u003e ViewLeaveCommandParser : vl","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"deactivate ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommandParser --\u003e AddressBookParser : vl","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"deactivate ViewLeaveCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"destroy ViewLeaveCommandParser","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"AddressBookParser --\u003e LogicManager : vl","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"LogicManager -\u003e ViewLeaveCommand : execute()","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"activate ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"activate Model","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"Model --\u003e ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"deactivate Model","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand -\u003e ViewLeaveCommand : getNameList(model)","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"activate ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"loop","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand -\u003e Person : getLeaveList()","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"activate Person","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand -\u003e Person : getName()","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"activate Person","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"Person --\u003e ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"deactivate Person","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"end loop","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"deactivate ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand -\u003e ViewLeaveCommand : nameListToString(nameList)","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"activate ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand --\u003e ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"deactivate ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"create CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand -\u003e CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"activate CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"CommandResult --\u003e ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"ViewLeaveCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"deactivate ViewLeaveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"@enduml","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"Leb14":97}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"!define ATTENDANCE_COLOR #e3cb8a","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"!define ATTENDANCE_COLOR_T1 #edc24c","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"!define PERSON_COLOR #9AA899","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"applepiofmyeye":3,"-":79,"Leb14":3}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"ecp -\u003e ec ++: index, editEmployeeDescriptor","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"jibtaf":1,"-":21}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"title: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-W12-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W12-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W12-2/tp/graph/badge.svg?token\u003dD5073R19SO)](https://codecov.io/gh/AY2324S1-CS2103T-W12-2/tp)","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"**ManaGease is a contact management application to simplify and centralize information for full-time employees.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"* If you are interested in using ManaGease, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"* If you are interested about developing ManaGease, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"* This project uses the [iText 7](https://itextpdf.com/en/products/itext-7/itext-7-core) library to generate PDFs.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [iText 7](https://itextpdf.com/en/products/itext-7/itext-7-core)","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":9,"-":12}},{"path":"docs/team/applepiofmyeye.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"title: Joey\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"ManaGease is a desktop Human Resource (HR) management system used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"* **New Feature**: Added the ability to mark employees absent, late or present.","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"  * What it does: allows the user to mark any of the employees in the database as absent, late or present for the current day. ","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"  * Justification: This feature is crucial to the effectiveness of the application because it sets the status of an employee to be late or absent, but is also the factor which other commands such as payroll calculation could make use of in future implementations as well.","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"  * Highlights: This enhancement affects future commands to be added. It required a designing of a new type of storage and storage methods, and hence analysing which design choices would be optimal was done. The implementation and integration with other aspects of the code was also challenging.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"* **New Feature**: Added an attendance command to allow the user to view the full attendance report of an employee.","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"  * Justification: This feature is an aspect of employee performance that we currently measure. This feature allows for future implementations of signalling which employees have been away for long periods and need to be caught up, or which employees always seem to be coming late.","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dapplepiofmyeye\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"  * ","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"      * Did initial mockups for User Guide UI","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"      * Added documentation for the features `mark` and `attendance`","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"      * Did tweaks for the User Guide from AB3 to our product [\\#25](https://github.com/AY2324S1-CS2103T-W12-2/tp/pull/25/files)","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"      * Changed the styling of the User Guide slightly [\\#25](https://github.com/AY2324S1-CS2103T-W12-2/tp/pull/25/files)","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"       ","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"      * ","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"* **Team based Tasks**:","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"  * Morphed the initial code from AB3 to our product.","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"  * xxx","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    * PRs reviewed (with non-trivial review comments): ","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    * Contributed to forum discussions (examples: )","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"    * Reported bugs and suggestions for other teams in the class (examples:)","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    * Some parts of the x feature I added was adopted by several other class mates ()","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"applepiofmyeye":48}},{"path":"docs/team/jibtaf.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"title: He Yifan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"ManaGease - Contact management app to simplify and centralize information for full-time employees.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"It offers easy access to essential details such as name, email, phone number, address, bank accounts, salary, joining date, and annual leaves. With all the information, the app can help to track employees’ annual leave and also generate their payroll automatically. This helps to reduce errors and enhance overall operational efficiency. This results in time and cost savings, improved organization, and a smoother workflow for your business.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"* **New Feature**: Added the ability to add deductions and benefits to employees\u0027 salary.","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"  * What it does: Allows the user to add deductions and benefits to employees\u0027 salary.","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"  * Justification: This feature is crucial to the effectiveness of the application because it allows the user to manipulate and manage any change to employees\u0027 salaries. Meanwhile, deductions and benefits are added together with valid reasons, and this increases the traceability of any possible error in the manipulation of monthly payroll.","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"* **New Feature**: Added the ability to generate payslips for employees.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"  * What it does: Allows the user to generate payslips for employees.","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"  * Justification: This feature is crucial to the effectiveness of the application because it allows the user to calculate and manage employees\u0027 payroll on a given template in PDF format. The template meets the legal requirements of the Ministry of Manpower (MOM) in Singapore, where companies must keep meticulous records of employees\u0027 payrolls.","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djibtaf\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"  * Managed releases `v1.2`, `v1.3(trial)` and `v1.3(final)` on GitHub","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"  * Enhanced the `edit` command to allow the user to edit employees\u0027 salary, bank accounts, annual leaves and join dates.","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"  * User Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    * Added documentation for `edit`, `deduct`, `benefit`, and `payslip` commands.","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    * Added a summary of parameter formats and a table of contents.","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    * Modified the format of the User Guide to make PDF conversion easier.","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"  * Developer Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    * Added implementation details of the `deduct`, `benefit`, and `payslip` commands.","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    * Added Use Cases for the `deduct`, `benefit`, and `payslip` commands.","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"  * PRs reviewed (with non-trivial review comments): #26, #46, #49, #51, #55, #62, #83, #87, #201","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"  * Integrated a third party library (`itextpdf`) into the project. ","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"  * Integrated a third party library (`fuzzywuzzy`) into the project.","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"jibtaf":44}},{"path":"docs/team/kevin-liusx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"title: Liu Shixin\u0027s Project Portfolio Page","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"ManaGease stands as a cutting-edge contact management app tailored to streamline HR operations for full-time employees. ","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"This intuitive application provides a centralized hub for crucial information, encompassing everything from names and contact details to bank accounts, salaries, and annual leave records. By offering seamless access to these essentials, ManaGease not only simplifies annual leave tracking but also automates payroll generation, ensuring precision and efficiency. The result? A reduction in errors, significant time and cost savings, and an organizational workflow that\u0027s as smooth as it gets. Elevate your business operations with ManaGease and witness a new era of efficiency and structure.","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"* **New Feature**: Added a payroll command to allow users to calculate the monthly payroll of an employee","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"  * What it does: Allows users to perform advanced payroll calculations with precision by managing employees\u0027 salaries seamlessly.","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"  * Justification: This feature is essential for effective salary management, providing users with the flexibility to manipulate and manage changes to employees\u0027 salaries. Deductions and benefits, along with valid reasons, are seamlessly integrated, enhancing traceability and minimizing the risk of errors in monthly payroll operations.","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"  * Highlights: The introduction of this feature required careful design considerations, including the creation of a new storage system using JSON files. This enhancement not only elevates current payroll capabilities but also sets the stage for future functionalities, ensuring the application remains at the forefront of HR administration.","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"* **New Enhancement**: Monthly Payroll, Deductions, and Benefits Storage Using JSON","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"  * Monthly Payrolls Storage Enhancement: Implemented a JSON file to store monthly payrolls for each employee. This enhancement enhances data organization, providing a structured and accessible repository for historical payroll data. It ensures a seamless retrieval process for future reference or audits.","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"  * Deductions and Benefits Storage Enhancement: Extended the JSON file approach to store monthly deductions and benefits for individual employees. This enhancement not only centralizes the information but also improves traceability by associating reasons with each deduction or benefit. The structured JSON format facilitates easy modification and retrieval of this critical financial data.","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"  * Overall Justification: The transition to JSON-based storage for monthly payrolls, deductions, and benefits brings a layer of transparency and efficiency to ManaGease. It simplifies data management, reduces the likelihood of errors, and ensures that historical financial information is easily accessible. This enhancement aligns with the overarching goal of creating a robust and user-friendly HR management system.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"* **Code contributed**: [Response link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dKevin\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dKevin-Liusx\u0026zR\u003dAY2324S1-CS2103T-W12-2%2Ftp%5Bmaster%5D\u0026zACS\u003d236.18330829121706\u0026zS\u003d2023-09-22\u0026zFS\u003d\u0026zU\u003d2023-11-09\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"  * Added issue for team on GitHub.","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"* **Documentation**:","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"  * Added documentation for the `payroll`, `mark`, `attendance` commands.","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"* **Community**","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"  * Contributed in team meetings.","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"  * Reported bugs and suggestions for team lesSon, another team in CS2103T.","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"* **Tools**","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"  * GitHub workflow","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"Kevin-Liusx":38}},{"path":"docs/team/leb14.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"title: Jin Hao\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"* **New Feature**: Read a specific field from a particular employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"  * What it does: Allow the user to read a specific field from a particular employee.","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"  * Justification: The significance of this feature lies in its ability to enhance the application\u0027s efficiency. By enabling users to target and extract information from a specific field for a particular employee, it streamlines the process of navigating through the list of person cards in the application. This not only saves valuable time but also ensures more precise and focused access to the required data.","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"  * Highlights: The adjustment involves the necessity to incorporate checks for different prefixes to appropriately showcase specific fields. Additionally, modifications to the Person Cards have been implemented, refining their display to emphasize only the specified field. ","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"* **New Feature**: View the employee who is on leave on a specific date","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"  * What it does: Allow the user to view the employee who is on leave on a specific date","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"  * Justification: The significance of this feature lies in its ability to enhance the application\u0027s tracking ability. It provides users with a quick and efficient way to identify employees on leave on any given date.","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"* **New Feature**: Added a clock and calendar to UI","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"  * What it does: Allow the user to visualize the number of employees on leave for each day on the calendar.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"  * Justification: It provides users with a quick overview of the number of employees on leave. The feature contributes to a more intuitive and user-friendly interface, improving overall application usability.","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dLeb14\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"* **Project management**:","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"  * ","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    * Added documentation for the features `read`, `nm`, `pm`, `cm`, and `view leave`.","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    * Added implementation details of the `read` feature.","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"      ","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"  * Review teammate\u0027s PR and merge\\","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":" ","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"  * Reported bugs and suggestions for other teams in the class","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"  * Git workflow","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"  * Plant UML","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Leb14":44}},{"path":"docs/team/weemingqing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"title: Wee Ming Qing\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"### Project: ManaGease","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"ManaGease is a comprehensive contact management application designed for HR managers to streamline and consolidate critical information for your full-time employees. It provides convenient access to essential data, including names, email addresses, phone numbers, addresses, bank account details, salaries, join dates, and annual leave records. With this information at your fingertips, the application simplifies annual leave tracking and automates payroll generation. By doing so, it minimizes errors, boosts operational efficiency, and leads to significant time and cost savings. This results in improved organizational structure and a more seamless workflow, benefiting your business in various ways.","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"* **New Feature**: Added an addleave command to allow users to add leave to an employee.","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"  * What it does: Allows user to add in leave for an employee.","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"  * Justification: This feature plays an important role within the application, as leave management stands as a cornerstone of HR administration. It empowers users to seamlessly monitor employees\u0027 vacation days so as to ensure that employees do not take extra leaves off, ensures daily work status oversight, and greatly simplifies the payroll calculation process.","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"  * Highlights: Introduced methods that enables the storage of leave dates as strings and their retrieval from storage, offering enhanced data management capabilities.","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"* **New Feature**: Added an deleteleave command to allow users to delete leave from an employee.","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    * What it does: Allows user to delete leave from an employee.","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    * Justification: This feature plays an important role within the application, as mentioned above in the justification section for the Add Leave feature. It allows users the flexibility to edit leave data by deleting them and adding new ones.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"* **New Enhancement**: Added the ability to delete employee via name.","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    * What it does: Allows user to delete employees by using their names.","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    * Justification: This feature plays a pivotal role in the application\u0027s efficiency, particularly as your employee list expands. It provides a swift and effective means to filter employees by their names and allows direct deletion if the name is unique in the list.","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    * Highlights: This feature seamlessly merges filtering and deletion functions, making it especially useful when there are multiple employees with the same name. It streamlines the process of singling out the desired employee for deletion.","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"* **New Enhancement**: Added a colored label to display the working status of an employee on the current day.","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"  * What it does: Allows user to see the working status of an employee; whether they are late, absent, on leave or present.","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"  * Justification: By employing colors to represent the work status of employees, this feature provides a quick visual reference for users to assess individual employee performance and efficiently plan workforce management.","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dWeeMingQing\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dapplepiofmyeye\u0026zR\u003dAY2324S1-CS2103T-W12-2%2Ftp%5Bmaster%5D\u0026zACS\u003d207.02777777777777\u0026zS\u003d2023-09-22\u0026zFS\u003dS2103T-W12-2\u0026zU\u003d2023-11-08\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"* **Project management**:","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"  * Added issue for team on Github.","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"  * User Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"    * Worked on the `Deleting an employee` section, as well as `Adding leave` and `Deleting leave` sections.","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"  * Developer Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"    * Worked on the `Add Leave Feature` section","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"    * Worked on the `Delete Leave Feature` section","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"    * Designed the UML diagrams and writeup for the `Add Leave Feature` and `Delete Leave Feature` sections.","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"    * Worked on Use Cases for `Delete`, `Add Leave` and `Delete Leave`","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"  * Contributed in team meetings","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"  * PRs reviewed (with non-trivial review comments): [#229](https://github.com/AY2324S1-CS2103T-W12-2/tp/pull/229)","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"  * Reported [bugs and suggestions](https://github.com/AY2324S1-CS2103T-W11-3/tp/issues) for team BandConnect++, another team in CS2103T","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"  * PlantUML: Software for generating UML diagrams","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"  * Git workflow","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"WeeMingQing":59}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"jibtaf"},"content":"        Person employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":345,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d new Person(","lastModifiedDate":"2023-10-16"},{"lineNumber":346,"author":{"gitId":"jibtaf"},"content":"                employeeToEdit.getName(), employeeToEdit.getPhone(), employeeToEdit.getEmail(),","lastModifiedDate":"2023-10-16"},{"lineNumber":347,"author":{"gitId":"jibtaf"},"content":"                employeeToEdit.getAddress(), remark, employeeToEdit.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"jibtaf"},"content":"        model.setPerson(employeeToEdit, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(generateSuccessMessage(editedEmployee));","lastModifiedDate":"2023-10-16"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"jibtaf"},"content":"     * {@code employeeToEdit}.","lastModifiedDate":"2023-10-16"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"jibtaf"},"content":"    private String generateSuccessMessage(Person employeeToEdit) {","lastModifiedDate":"2023-10-16"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"jibtaf"},"content":"        return String.format(message, employeeToEdit);","lastModifiedDate":"2023-10-16"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"jibtaf":9,"-":390}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditEmployeeDescriptor` may require more careful inspection.","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"Let’s try removing references to `Address` in `EditEmployeeDescriptor`.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"1. Safe delete the field `address` in `EditEmployeeDescriptor`.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jibtaf":3,"-":109}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditEmployeeDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"jibtaf"},"content":"       Person employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"       Person editedEmployee \u003d createeditedEmployee(employeeToEdit, EditEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"jibtaf"},"content":"       if (!employeeToEdit.isSamePerson(editedEmployee) \u0026\u0026 model.hasPerson(editedEmployee)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"jibtaf"},"content":"       model.setPerson(employeeToEdit, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedEmployee));","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jibtaf":6,"-":295}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jibtaf":1,"-":185,"Leb14":2}},{"path":"src/main/java/seedu/address/commons/util/PaySlipGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import java.io.File;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.forms.PdfAcroForm;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.font.PdfFont;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.font.PdfFontFactory;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.pdf.PdfDocument;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.pdf.PdfReader;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import com.itextpdf.kernel.pdf.PdfWriter;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":" * Generates a PDF payslip for an employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"public class PaySlipGenerator {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    private static final String OUTPUT_DIRECTORY_PATH \u003d \"./payslips/\";","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    private static final String TEMPLATE \u003d PaySlipGenerator.class.getClassLoader()","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"            .getResource(\"template.pdf\").toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"     * Generates a PDF payslip for an employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"     * @param employee The employee to generate the payslip for.","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"     * @throws IOException If the template file cannot be found.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    public static void generateReport(Person employee) throws IOException {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        createOutputDirectory();","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        PdfDocument pdfDocument \u003d new PdfDocument(new PdfReader(TEMPLATE),","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"            new PdfWriter(OUTPUT_DIRECTORY_PATH + getFileName(employee)));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        PdfAcroForm form \u003d PdfAcroForm.getAcroForm(pdfDocument, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        PdfFont font \u003d PdfFontFactory.createFont();","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        fillTextFields(form, getFieldMap(employee, employee.getLatestPayroll()), font);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        form.flattenFields();","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        pdfDocument.close();","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"     * Generates a PDF payslip for an employee.","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"     * @param employee The employee to generate the payslip for.","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"     * @param monthYear The month and year of the payslip.","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"     * @throws IOException If the template file cannot be found.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    public static void generateReportWithMonth(Person employee, LocalDate monthYear) throws IOException {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        createOutputDirectory();","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        PdfDocument pdfDocument \u003d new PdfDocument(new PdfReader(TEMPLATE),","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"            new PdfWriter(OUTPUT_DIRECTORY_PATH + getFileName(employee)));","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        PdfAcroForm form \u003d PdfAcroForm.getAcroForm(pdfDocument, false);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        PdfFont font \u003d PdfFontFactory.createFont();","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        fillTextFields(form, getFieldMap(employee, employee.getPayrollWithStartDate(monthYear)), font);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        form.flattenFields();","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        pdfDocument.close();","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"     * Creates the output directory if it does not exist.","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    public static void createOutputDirectory() {","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        File dir \u003d new File(OUTPUT_DIRECTORY_PATH);","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"            dir.mkdir();","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"     * Generates the file name.","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"     * @param employee The employee to generate the payslip for.","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    public static String getFileName(Person employee) {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        String employeeName \u003d employee.getName().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        ArrayList\u003cString\u003e employeeNameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        String[] employeeNameArray \u003d employeeName.toLowerCase().split(\" \");","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        Collections.addAll(employeeNameList, employeeNameArray);","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        return String.join(\"_\", employeeNameList) + \".pdf\";","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"     * Fills the text fields in the PDF payslip.","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"     * @param form The PDF form.","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"     * @param fieldMap The map of field names to values.","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"     * @param font The font to use.","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"    public static void fillTextFields(PdfAcroForm form, Map\u003cString, String\u003e fieldMap, PdfFont font) {","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"        for (Map.Entry\u003cString, String\u003e entry : fieldMap.entrySet()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"            form.getFormFields().get(entry.getKey()).setValue(entry.getValue())","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"                .setFontSize(12).setFont(font);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"     * Returns the map of field names to values.","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"     * @param employee The employee to generate the payslip for.","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"     * @param payroll The payroll of the employee.","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"     * @return The map of field names to values.","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"    public static Map\u003cString, String\u003e getFieldMap(Person employee, Payroll payroll) {","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"        Map\u003cString, String\u003e fieldMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"employerName\", \"XXX Limited\");","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"employeeName\", employee.getName().toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"basicPay\", payroll.getBasicSalaryString());","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"totalDeductions\", payroll.getTotalDeductionsString());","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"netPay\", payroll.getNetSalaryString());","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"totalAllowances\", payroll.getTotalAllowancesExceptBonusesString());","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"grossPay\", payroll.getGrossPayString());","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"CPFDeduction\", payroll.getEmployeeCpfDeductionsString());","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"        if (Double.parseDouble(payroll.getAnnualBonusesString()) \u003e 0.0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"            fieldMap.put(\"otherAdditionalPayments\", payroll.getAnnualBonusesString());","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"            fieldMap.put(\"additionalPaymentReason1\", \"Annual Bonus\");","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"            fieldMap.put(\"additionalPayment1\", payroll.getAnnualBonusesString());","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"            fieldMap.put(\"otherAdditionalPayments\", \"0.00\");","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"        if (Double.parseDouble(payroll.getTotalDeductionsString())","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"            \u003e Double.parseDouble(payroll.getEmployeeCpfDeductionsString())) {","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"            String deductionReason1 \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"            String deduction1 \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"            if (Double.parseDouble(payroll.getAbsencesString()) !\u003d 0.0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"                deductionReason1 +\u003d \"Absence\\n\";","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"                deduction1 +\u003d payroll.getAbsencesString() + \"\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"            if (Double.parseDouble(payroll.getNoPayLeavesString()) !\u003d 0.0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"                deductionReason1 +\u003d \"No-Pay Leave\\n\";","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"                deduction1 +\u003d payroll.getNoPayLeavesString() + \"\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"            if (!deductionReason1.isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"                fieldMap.put(\"deductionReason1\", deductionReason1);","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"                fieldMap.put(\"deduction1\", deduction1);","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"        if (Double.parseDouble(payroll.getTotalAllowancesExceptBonusesString()) !\u003d 0.0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"            if (Double.parseDouble(payroll.getTransportAllowancesString()) !\u003d 0.0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"                fieldMap.put(\"allowanceReason1\", \"Transport Allowance\");","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"                fieldMap.put(\"allowance1\", payroll.getTransportAllowancesString());","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"paymentStartDate\", payroll.getStartDateString());","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"paymentEndDate\", payroll.getEndDateString());","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"        fieldMap.put(\"dateOfPayment\", payroll.getPaymentDateString());","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"        return fieldMap;","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"     * Removes the payslip file of an employee.","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"     * @param employeeToGenerate The employee to remove the payslip for.","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"jibtaf"},"content":"    public static void removeWrongFile(Person employeeToGenerate) {","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"jibtaf"},"content":"        File payslip \u003d new File(\"payslips/\" + PaySlipGenerator.getFileName(employeeToGenerate));","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"jibtaf"},"content":"        if (payslip.exists()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"            payslip.delete();","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":175}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"     * Returns true if {@code s} represents an integer","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"     * e.g. empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"    public static boolean isInteger(String s) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WeeMingQing":17,"-":68}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The employee index provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_NAME \u003d \"The employee name provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d employees listed!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_INVALID_FIELD_TO_READ \u003d \"The field to read provided is invalid\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_DELETE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"            \"%1$d employees found! Refer to their indexes for deletion\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_MARK \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"            \"%1$d employees found! Refer to their indexes for marking attendance\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_ATTENDANCE_REPORT \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"            \"%1$d employees found! Refer to their indexes for retrieving their attendance report.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Invalid command format! Date should be in format: \u0027dd/MM/yyyy\u0027\"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            + \" and date should be valid!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_PAYROLL \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"            \"%1$d employees found! Refer to their indexes for payroll calculation\";","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_DEDUCT \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"            \"%1$d employees found! Refer to their indexes for deduction\";","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_BENEFIT \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"            \"%1$d employees found! Refer to their indexes for benefit\";","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_PAYSLIP \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            \"%1$d employees found! Refer to their indexes for payslip generation\";","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_NO_EMPLOYEE_ON_LEAVE \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            \"There are no employees on leave on %1$s\";","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Bank Account: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"                .append(person.getBankAccount())","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Join Date: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"                .append(person.getJoinDate())","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Salary: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"                .append(person.getSalary())","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Annual Leave: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"                .append(person.getAnnualLeave().value)","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"                .append(\"; Attendance: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"                .append(person.getWorkingStatusToday());","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kevin-Liusx":2,"WeeMingQing":8,"jibtaf":8,"applepiofmyeye":13,"-":49,"Leb14":4}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_BANK_ACCOUNT + \" BANK ACCOUNT \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_JOIN_DATE + \" JOIN DATE \"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"            + PREFIX_SALARY + \" SALARY \"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_ANNUAL_LEAVE + \" ANNUAL LEAVE\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_BANK_ACCOUNT + \" 12345678 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"            + PREFIX_JOIN_DATE + \" 12/02/2023 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"            + PREFIX_SALARY + \" 2000.00 \"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_ANNUAL_LEAVE + \" 14\";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the employee database\";","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        toAdd.addPayroll(new Payroll(toAdd.getSalary()));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jibtaf":11,"applepiofmyeye":5,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddLeaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_FROM;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_TO;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":" * Adds leave to an existing employee in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"public class AddLeaveCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    public static final String COMMAND_WORD \u003d \"addleave\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds leave to an employee.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_ON + \" DATE     \"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            + \"OR     \"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_FROM + \" DATE \"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_TO + \" DATE \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_ON + \" 01/01/2023     \"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"            + \"OR     \"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_FROM + \" 01/01/2023 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_TO + \" 05/01/2023 \\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Leave has been added for employee: %1$s!\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"     * Creates an AddLeaveCommand to add leave to the specified employee at {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The date of leave to add to the specified employee at {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand(Index index, LocalDate startDate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"     * Creates an AddLeaveCommand to add a range of leave to the employee at specified {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"     * from the startDate to the endDate.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The starting date of leave to add to the specified employee at {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate The ending date of leave to add to the specified employee at {@code index}","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand(Index index, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"        Person employeeToAddLeave \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        if (startDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(String.format(AnnualLeave.MESSAGE_ADD_EXPIRED_LEAVE));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        if (employeeToAddLeave.getAnnualLeave().containsDuplicateLeave(startDate, endDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(AnnualLeave.MESSAGE_ADD_DUPLICATE_LEAVE);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"            if (employeeToAddLeave.getAnnualLeave().isValidAddLeave(startDate, startDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"                if (startDate.equals(LocalDate.now())","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"                        \u0026\u0026 employeeToAddLeave.getAttendanceStorage().getTodayAttendance() !\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"                    employeeToAddLeave.getAttendanceStorage().markPresent(LocalDate.now());","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"                employeeToAddLeave.getAnnualLeave().addLeave(startDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(AnnualLeave.MESSAGE_LEAVE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"            if (!endDate.isAfter(startDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(AnnualLeave.MESSAGE_INVALID_LEAVE);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"            if (employeeToAddLeave.getAnnualLeave().isValidAddLeave(startDate, endDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"                if (!LocalDate.now().isBefore(startDate) \u0026\u0026 !LocalDate.now().isAfter(endDate)","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"                        \u0026\u0026 employeeToAddLeave.getAttendanceStorage().getTodayAttendance() !\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"                    employeeToAddLeave.getAttendanceStorage().markPresent(LocalDate.now());","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"                employeeToAddLeave.getAnnualLeave().addLeave(startDate, endDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(AnnualLeave.MESSAGE_LEAVE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS + this.getLeaveStatusMessage(employeeToAddLeave),","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"                Messages.format(employeeToAddLeave)), false, false, true, false, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"        if (!(other instanceof AddLeaveCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand otherAddLeaveCommand \u003d (AddLeaveCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"        if (this.endDate \u003d\u003d null || otherAddLeaveCommand.endDate \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"            if (this.endDate \u003d\u003d null \u0026\u0026 otherAddLeaveCommand.endDate \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"                return this.index.equals(otherAddLeaveCommand.index)","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"                        \u0026\u0026 this.startDate.equals(otherAddLeaveCommand.startDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        return this.index.equals(otherAddLeaveCommand.index) \u0026\u0026 this.startDate.equals(otherAddLeaveCommand.startDate)","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 this.endDate.equals(otherAddLeaveCommand.endDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"                .add(\"toAddLeave\", index)","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"     * Returns a string of message to indicate the number of days of leave left for an employee for the current year.","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"     * @param employee The employee that has their leave added.","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"     * @return The message that shows remaining days of leave for an employee for the current year.","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"    public static String getLeaveStatusMessage(Person employee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(employee);","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"        return \"Number of leaves left for this year: \" + employee.getAnnualLeave().numOfLeaveLeftForCurrYear()","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"                + \" / \"","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().value + \"\\nNumber of leaves left for next year: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().numOfLeaveLeftForNextYear()","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"                + \" / \"","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().value;","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"WeeMingQing":152,"jibtaf":1,"Leb14":1}},{"path":"src/main/java/seedu/address/logic/commands/AttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_ATTENDANCE_REPORT;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"public class AttendanceCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String COMMAND_WORD \u003d \"attendance\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"            + \": Reports the employee\u0027s attendance identified by the index number \"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"            + \"used in the displayed employee list.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"            + \"Parameters: INDEX (must be a positive integer) or /n NAME (must be present)\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"            + \"Example: \" + COMMAND_WORD + \" /n John\";","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_REPORT_ATTENDANCE \u003d \"%1$s\u0027s attendance:\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"            + \"\\tDays on leave: %2$s\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"            + \"\\tDays absent: %3$s\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"            + \"\\tDays late: %4$s\\n\";","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"     * The constructor for AttendanceCommand to take in name instead of index","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"     * @param name The name of the employee to view","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    public AttendanceCommand(NameContainsKeywordsPredicate name) {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"     * The constructor for AttendanceCommand to take in name instead of index","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"     * @param index The index of the employee to view","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"    public AttendanceCommand(Index index) {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"        if (this.targetIndex \u003d\u003d null \u0026\u0026 this.name !\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"            return this.reportByName(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"            return this.reportByIndex(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof AttendanceCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand otherAttendanceCommand \u003d (AttendanceCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"        if ((this.targetIndex \u003d\u003d null \u0026\u0026 otherAttendanceCommand.targetIndex !\u003d null)","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"                || (this.targetIndex !\u003d null \u0026\u0026 otherAttendanceCommand.targetIndex \u003d\u003d null)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"        if ((this.name \u003d\u003d null \u0026\u0026 otherAttendanceCommand.name !\u003d null)","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"                || (this.name !\u003d null \u0026\u0026 otherAttendanceCommand.name \u003d\u003d null)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"        if (this.targetIndex !\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"            return targetIndex.equals(otherAttendanceCommand.targetIndex);","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        return this.name.equals(otherAttendanceCommand.name);","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"                    .add(\"targetName\", name)","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"                    .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"applepiofmyeye"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"     * Reports the attendance of the employee identified by the name used in the displayed employee list.","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"     * @return A command result that contains the message to be displayed to the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"    public CommandResult reportByName(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"        List\u003cPerson\u003e fullList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"applepiofmyeye"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"applepiofmyeye"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"applepiofmyeye"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"applepiofmyeye"},"content":"            Person employeeToReport \u003d fullList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"applepiofmyeye"},"content":"            int[] attendanceValues \u003d employeeToReport","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"                    .getAttendanceStorage()","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"                    .getAttendanceReport(employeeToReport.getJoinDate(),","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"                            employeeToReport.getAnnualLeave().getTotalLeaveTaken());","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"applepiofmyeye"},"content":"            return new CommandResult(String.format(MESSAGE_REPORT_ATTENDANCE,","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"applepiofmyeye"},"content":"                    employeeToReport.getName(),","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"applepiofmyeye"},"content":"                    attendanceValues[0],","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"applepiofmyeye"},"content":"                    attendanceValues[1],","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"applepiofmyeye"},"content":"                    attendanceValues[2]));","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"applepiofmyeye"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"applepiofmyeye"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_ATTENDANCE_REPORT,","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"                model.getFilteredPersonList().size()));","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"applepiofmyeye"},"content":"     * Reports the attendance of the employee identified by the name used in the displayed employee list.","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"applepiofmyeye"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"applepiofmyeye"},"content":"     * @return A command result that contains the message to be displayed to the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"applepiofmyeye"},"content":"    public CommandResult reportByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"applepiofmyeye"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"applepiofmyeye"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"applepiofmyeye"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"applepiofmyeye"},"content":"        Person employeeToReport \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"applepiofmyeye"},"content":"        int[] attendanceValues \u003d employeeToReport","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"applepiofmyeye"},"content":"                .getAttendanceStorage()","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"                .getAttendanceReport(employeeToReport.getJoinDate(),","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"                        employeeToReport.getAnnualLeave().getTotalLeaveTaken());","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"applepiofmyeye"},"content":"        return new CommandResult(String.format(MESSAGE_REPORT_ATTENDANCE,","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"applepiofmyeye"},"content":"                employeeToReport.getName(),","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[0],","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[1],","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[2]));","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"jibtaf":4,"WeeMingQing":5,"applepiofmyeye":158}},{"path":"src/main/java/seedu/address/logic/commands/BenefitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_BENEFIT;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" * Adds a benefit to the salary of the person identified using it\u0027s","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":" * displayed index or name from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"public class BenefitCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public static final String COMMAND_WORD \u003d \"benefit\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        + \": add benefits to the salary of the person identified \"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        + \"by the index number or name used in the last person listing.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        + \"Parameters: INDEX (must be a positive integer) or NAME, AMOUNT, REASON\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        + \"Example 1 (index): \" + COMMAND_WORD + \" 1 /v 3000.00 /r bonus\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        + \"Example 2 (name): \" + COMMAND_WORD + \" /n john /v 150.00 /r transport\\n\";","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"The benefits for the specified person is as below\\n%s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    private final Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    private final Benefit benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"     * Creates a BenefitCommand to add benefits","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"     * to the salary of the person specified by the index.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"     * @param index The index of the employee to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"     * @param benefit The benefit.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    public BenefitCommand(Index index, Benefit benefit) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        this.benefit \u003d benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * Creates a BenefitCommand to add benefits","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     * to the salary of the person specified by the name.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"     * @param name The name of the employee to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"     * @param benefit The benefit.","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    public BenefitCommand(NameContainsKeywordsPredicate name, Benefit benefit) {","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        this.benefit \u003d benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"            return executeByIndex(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"            return executeByName(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by index.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"     * @return The command result in string format.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        PayrollStorage payrollStorage \u003d employeeToCalculate.getPayrollStorage();","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"        payrollStorage.getLatestPayroll().addBenefit(benefit);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(person -\u003e person.equals(employeeToCalculate));","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"            payrollStorage.getLatestPayroll().getBenefitsString()));","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by name.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"     * @return The command result in string format.","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"            Person employeeToCalculate \u003d lastShownList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"            PayrollStorage payrollStorage \u003d employeeToCalculate.getPayrollStorage();","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"            payrollStorage.getLatestPayroll().addBenefit(benefit);","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"            model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"                payrollStorage.getLatestPayroll().getBenefitsString()));","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_BENEFIT,","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"            lastShownList.size()), indexes);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof BenefitCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand otherDeductCommand \u003d (BenefitCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null \u0026\u0026 otherDeductCommand.index !\u003d null \u0026\u0026 benefit !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"            \u0026\u0026 otherDeductCommand.benefit !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"            return index.equals(otherDeductCommand.index)","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 benefit.equals(otherDeductCommand.benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"        if (name !\u003d null \u0026\u0026 otherDeductCommand.name !\u003d null \u0026\u0026 benefit !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"            \u0026\u0026 otherDeductCommand.benefit !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"            return name.equals(otherDeductCommand.name)","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 benefit.equals(otherDeductCommand.benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"        return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"                .add(\"benefit\", benefit)","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"            assert name !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"                .add(\"benefit\", benefit)","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":169}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    private final List\u003cInteger\u003e indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    /** The application should read a specific field of a particular employee. */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    private final boolean read;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    private final boolean leave;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    private final String fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    private final boolean nextMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    private final boolean previousMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    private final boolean currentMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean leave,","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"                         boolean nextMonth, boolean previousMonth, boolean currentMonth) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        this.read \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        this.leave \u003d leave;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        this.nextMonth \u003d nextMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        this.previousMonth \u003d previousMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        this.currentMonth \u003d currentMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        this.read \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        this.leave \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        this.nextMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        this.previousMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"        this.currentMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"     * To store read field and set read to true to display a different person card.","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"    public CommandResult(String feedbackToUser, boolean read, String fieldToRead) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"        this.read \u003d read;","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        this.leave \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        this.nextMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"        this.previousMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        this.currentMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult(String feedbackToUser, List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"        this.read \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"        this.fieldToRead \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"        this.leave \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"        this.nextMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        this.previousMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        this.currentMonth \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"    public String getFieldToRead() {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"        return fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"    public boolean isRead() {","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        return read;","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"    public boolean isLeave() {","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"        return leave;","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"    public boolean isNextMonth() {","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"        return nextMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"    public boolean isCurrentMonth() {","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"        return currentMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"    public boolean isPreviousMonth() {","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"        return previousMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"                \u0026\u0026 currentMonth \u003d\u003d otherCommandResult.currentMonth","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"                \u0026\u0026 nextMonth \u003d\u003d otherCommandResult.nextMonth","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"                \u0026\u0026 previousMonth \u003d\u003d otherCommandResult.previousMonth;","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"Leb14"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, currentMonth, nextMonth, previousMonth);","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"                .add(\"currentMonth\", currentMonth)","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"                .add(\"nextMonth\", nextMonth)","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"                .add(\"previousMonth\", previousMonth)","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"    public List\u003cInteger\u003e getIndexes() {","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"WeeMingQing"},"content":"        return this.indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"WeeMingQing":23,"-":78,"Leb14":77}},{"path":"src/main/java/seedu/address/logic/commands/CurrentMonthCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"public class CurrentMonthCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    public static final String COMMAND_WORD \u003d \"cm\";","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_CURRENT_MONTH_ACKNOWLEDGEMENT \u003d \"Displaying current month calendar!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        return new CommandResult(MESSAGE_CURRENT_MONTH_ACKNOWLEDGEMENT, false, false, false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Leb14":19}},{"path":"src/main/java/seedu/address/logic/commands/DeductCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_DEDUCT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":" * Adds a deduction to the salary of the person identified using it\u0027s","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" * displayed index or name from the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"public class DeductCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    public static final String COMMAND_WORD \u003d \"deduct\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"            + \": add deductions to the salary of the person identified \"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"            + \"by the index number or name used in the last person listing.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"            + \"Parameters: INDEX (must be a positive integer) or NAME, AMOUNT, REASON\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"            + \"Example 1 (index): \" + COMMAND_WORD + \" 1 /v 200.00 /r cpf\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"            + \"Example 2 (name): \" + COMMAND_WORD + \" /n john /v 150.00 /r absence\\n\";","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"The deductions for the specified person is as below\\n%s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    private final Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"     * Creates a DeductCommand to add deductions","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"     * to the salary of the person specified by the index.","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"     * @param index The index of the employee to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"     * @param deduction The deduction.","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"    public DeductCommand(Index index, Deduction deduction) {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        this.deduction \u003d deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"     * Creates a DeductCommand to add deductions","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * to the salary of the person specified by the name.","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     * @param name The name of the employee to be deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"     * @param deduction The deduction.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"    public DeductCommand(NameContainsKeywordsPredicate name, Deduction deduction) {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        this.deduction \u003d deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"            return executeByIndex(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"            return executeByName(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by index.","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"     * @return A command result in which the deductions of the person is shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        PayrollStorage payrollStorage \u003d employeeToCalculate.getPayrollStorage();","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        payrollStorage.getLatestPayroll().addDeduction(deduction);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(person -\u003e person.equals(employeeToCalculate));","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"            payrollStorage.getLatestPayroll().getDeductionsString()));","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by name.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"     * @return A command result in which the deductions of the person is shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"            Person employeeToCalculate \u003d lastShownList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"            PayrollStorage payrollStorage \u003d employeeToCalculate.getPayrollStorage();","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"            payrollStorage.getLatestPayroll().addDeduction(deduction);","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"            model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"                payrollStorage.getLatestPayroll().getDeductionsString()));","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_DEDUCT,","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"            lastShownList.size()), indexes);","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof DeductCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"        DeductCommand otherDeductCommand \u003d (DeductCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null \u0026\u0026 otherDeductCommand.index !\u003d null \u0026\u0026 deduction !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherDeductCommand.deduction !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"            return index.equals(otherDeductCommand.index)","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 deduction.equals(otherDeductCommand.deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"        if (name !\u003d null \u0026\u0026 otherDeductCommand.name !\u003d null \u0026\u0026 deduction !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherDeductCommand.deduction !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"            return name.equals(otherDeductCommand.name)","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 deduction.equals(otherDeductCommand.deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"        return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"                .add(\"deduction\", deduction)","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"            assert name !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"                .add(\"deduction\", deduction)","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":166}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_DELETE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"            + \": Deletes the employee identified by the index number used in the displayed employee list or \"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"            + \"by name of employee.\\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"            + \"Parameters: INDEX (must be a positive integer)    OR    \\n/n NAME (cannot be empty)\\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1    OR    \" + COMMAND_WORD + \" /n John\";","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Employee: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    /* The name of the employee to be deleted*/","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"     * The constructor for DeleteCommand to take in index","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"     * @param targetIndex The index of the employee to be deleted","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for DeleteCommand to take in name instead of index","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"     * @param name The name of the employee to be deleted","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"    public DeleteCommand(NameContainsKeywordsPredicate name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"        if (targetIndex \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"            return this.deleteByName(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"        return this.deleteByIndex(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        if ((this.targetIndex \u003d\u003d null \u0026\u0026 otherDeleteCommand.targetIndex !\u003d null)","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"                || (this.targetIndex !\u003d null \u0026\u0026 otherDeleteCommand.targetIndex \u003d\u003d null)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        if ((this.name \u003d\u003d null \u0026\u0026 otherDeleteCommand.name !\u003d null)","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"                || (this.name !\u003d null \u0026\u0026 otherDeleteCommand.name \u003d\u003d null)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"        if (this.targetIndex !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        return this.name.equals(otherDeleteCommand.name);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"                    .add(\"targetName\", name)","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"                    .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"     * Deletes the employee identified by the index number used in the displayed employee list.","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"     * @return A command result that contains the message to be displayed to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult deleteByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"        Person employeeToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"        model.deletePerson(employeeToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(employeeToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"     * Deletes the employee identified by the name used in the displayed employee list.","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"     * @return A command result that contains the message to be displayed to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult deleteByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cPerson\u003e fullList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"            Person employeeToDelete \u003d fullList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"            model.deletePerson(employeeToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(employeeToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_DELETE,","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"                model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"WeeMingQing":70,"jibtaf":16,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteLeaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_FROM;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_TO;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":" * Deletes leave from an existing employee in the list.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"public class DeleteLeaveCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    public static final String COMMAND_WORD \u003d \"deleteleave\";","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes leave from an employee.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_ON + \" DATE     \"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"            + \"OR     \"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_FROM + \" DATE \"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_TO + \" DATE \\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_ON + \" 01/01/2023     \"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"            + \"OR     \"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_FROM + \" 01/01/2023 \"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"            + PREFIX_ADD_ANNUAL_LEAVE_TO + \" 05/01/2023 \\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Leave has been deleted for employee: %1$s!\\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"     * Creates a DeleteLeaveCommand to delete leave from specified employee at {@code index}","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The date of leave to be deleted from the specified employee at {@code index}","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"    public DeleteLeaveCommand(Index index, LocalDate startDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d null;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"     * Creates an DeleteLeaveCommand to delete a range of leave from the employee at specified {@code index}","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"     * from the startDate to the endDate.","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The starting date of leave to be deleted from the specified employee at {@code index}","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate The ending date of leave to be deleted from to the specified employee at {@code index}","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"    public DeleteLeaveCommand(Index index, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        Person employeeToDeleteLeave \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"        if (startDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(String.format(AnnualLeave.MESSAGE_DELETE_EXPIRED_LEAVE));","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"            if (!employeeToDeleteLeave.getAnnualLeave().containsAllLeave(startDate, startDate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(AnnualLeave.MESSAGE_DELETE_INVALID_LEAVE);","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"            employeeToDeleteLeave.getAnnualLeave().deleteLeave(startDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"            if (!endDate.isAfter(startDate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(AnnualLeave.MESSAGE_INVALID_LEAVE);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"                if (!employeeToDeleteLeave.getAnnualLeave().containsAllLeave(startDate, endDate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"                    throw new CommandException(AnnualLeave.MESSAGE_DELETE_INVALID_LEAVE);","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"                }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"                employeeToDeleteLeave.getAnnualLeave().deleteLeave(startDate, endDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS + this.getLeaveStatusMessage(employeeToDeleteLeave),","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"                Messages.format(employeeToDeleteLeave)), false, false, true, false, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"        if (!(other instanceof DeleteLeaveCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand otherDeleteLeaveCommand \u003d (DeleteLeaveCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        if (this.endDate \u003d\u003d null || otherDeleteLeaveCommand.endDate \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"            if (this.endDate \u003d\u003d null \u0026\u0026 otherDeleteLeaveCommand.endDate \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"                return this.index.equals(otherDeleteLeaveCommand.index)","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"                        \u0026\u0026 this.startDate.equals(otherDeleteLeaveCommand.startDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"        return this.index.equals(otherDeleteLeaveCommand.index)","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 this.startDate.equals(otherDeleteLeaveCommand.startDate)","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 this.endDate.equals(otherDeleteLeaveCommand.endDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"                .add(\"toDeleteLeave\", index)","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"                .toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"     * Returns a string of message to indicate the number of days of leave left for an employee for the current year.","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"     * @param employee The employee that has their leave deleted.","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"     * @return The message that shows remaining days of leave for an employee for the current year.","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"    public static String getLeaveStatusMessage(Person employee) {","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"        requireNonNull(employee);","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        return \"Number of leaves left for this year: \" + employee.getAnnualLeave().numOfLeaveLeftForCurrYear()","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"                + \" / \"","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().value + \"\\nNumber of leaves left for next year: \"","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().numOfLeaveLeftForNextYear()","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"                + \" / \"","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"                + employee.getAnnualLeave().value;","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"WeeMingQing":143,"jibtaf":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.attendance.AttendanceStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":" * Edits the details of an existing employee in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the employee identified \"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"            + \"by the index number used in the displayed employee list. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            + \"[\" + PREFIX_BANK_ACCOUNT + \" BANK_ACCOUNT] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"            + \"[\" + PREFIX_JOIN_DATE + \" JOIN_DATE] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            + \"[\" + PREFIX_SALARY + \" SALARY] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            + \"[\" + PREFIX_ANNUAL_LEAVE + \" ANNUAL_LEAVE]\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"            + PREFIX_PHONE + \" 91234568 \"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Employee: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_UNCHANGED_FIELD \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        \"The field you are trying to edit is the same as the existing one.\";","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_EDIT_LEAVE_ERROR \u003d \"The total number of days of leave you are trying to\"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"            + \" change to cannot be lesser than the number of days of leave \"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"            + \"that has already been added to the employee.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    private final EditEmployeeDescriptor editEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"     * Creates an EditCommand to edit the specified employee at {@code index}.","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"     * @param editEmployeeDescriptor details to edit the employee with","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"    public EditCommand(Index index, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(editEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        this.editEmployeeDescriptor \u003d new EditEmployeeDescriptor(editEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        Person employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d createEditedEmployee(employeeToEdit, editEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        if (employeeToEdit.isSamePerson(editedEmployee) \u0026\u0026 model.hasPerson(editedEmployee)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(MESSAGE_UNCHANGED_FIELD);","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"        if (employeeToEdit.getAnnualLeave().numOfLeaveUsedForCurrYear()","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"                \u003e editedEmployee.getAnnualLeave().getTotalNumOfLeave()","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"                || employeeToEdit.getAnnualLeave().numOfLeaveUsedForNextYear()","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"                \u003e editedEmployee.getAnnualLeave().getTotalNumOfLeave()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(MESSAGE_EDIT_LEAVE_ERROR);","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"        model.setPerson(employeeToEdit, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedEmployee)));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"     * Creates and returns an {@code Employee} with the details of {@code employeeToEdit}","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"     * edited with {@code editEmployeeDescriptor}.","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"    private static Person createEditedEmployee(Person employeeToEdit, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"        assert employeeToEdit !\u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        Name updatedName \u003d editEmployeeDescriptor.getName().orElse(employeeToEdit.getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        Phone updatedPhone \u003d editEmployeeDescriptor.getPhone().orElse(employeeToEdit.getPhone());","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"        Email updatedEmail \u003d editEmployeeDescriptor.getEmail().orElse(employeeToEdit.getEmail());","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"        Address updatedAddress \u003d editEmployeeDescriptor.getAddress().orElse(employeeToEdit.getAddress());","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"        BankAccount updatedBankAccount \u003d editEmployeeDescriptor.getBankAccount()","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"            .orElse(employeeToEdit.getBankAccount());","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"        JoinDate updatedJoinDate \u003d editEmployeeDescriptor.getJoinDate()","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"            .orElse(employeeToEdit.getJoinDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"        Salary updatedSalary \u003d editEmployeeDescriptor.getSalary()","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"            .orElse(employeeToEdit.getSalary());","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        AnnualLeave updatedAnnualLeave \u003d editEmployeeDescriptor.getAnnualLeave()","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"            .orElse(employeeToEdit.getAnnualLeave());","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceStorage updatedAttendanceStorage \u003d editEmployeeDescriptor.getAttendanceStorage()","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"applepiofmyeye"},"content":"                .orElse(employeeToEdit.getAttendanceStorage());","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollStorage updatedPayrollStorage \u003d editEmployeeDescriptor.getPayrollStorage()","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Kevin-Liusx"},"content":"                .orElse(employeeToEdit.getPayrollStorage());","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBankAccount, updatedJoinDate,","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"Kevin-Liusx"},"content":"            updatedSalary, updatedAnnualLeave, updatedAttendanceStorage, updatedPayrollStorage);","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 editEmployeeDescriptor.equals(otherEditCommand.editEmployeeDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"                .add(\"editEmployeeDescriptor\", editEmployeeDescriptor)","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"     * Stores the details to edit the employee with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"     * corresponding field value of the employee.","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"    public static class EditEmployeeDescriptor {","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"        private AnnualLeave annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"        private BankAccount bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"jibtaf"},"content":"        private JoinDate joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"jibtaf"},"content":"        private Salary salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"applepiofmyeye"},"content":"        private AttendanceStorage attendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"Kevin-Liusx"},"content":"        private PayrollStorage payrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"jibtaf"},"content":"        public EditEmployeeDescriptor() {}","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"jibtaf"},"content":"        public EditEmployeeDescriptor(EditEmployeeDescriptor toCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":190,"author":{"gitId":"jibtaf"},"content":"            setAnnualLeave(toCopy.annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"jibtaf"},"content":"            setBankAccount(toCopy.bankAccount);","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"jibtaf"},"content":"            setJoinDate(toCopy.joinDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"            setSalary(toCopy.salary);","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"applepiofmyeye"},"content":"            setAttendanceStorage(toCopy.attendanceStorage);","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"Kevin-Liusx"},"content":"            setPayrollStorage(toCopy.payrollStorage);","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"jibtaf"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, annualLeave, bankAccount, joinDate, salary);","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"jibtaf"},"content":"        public void setBankAccount(BankAccount bankAccount) {","lastModifiedDate":"2023-10-16"},{"lineNumber":238,"author":{"gitId":"jibtaf"},"content":"            this.bankAccount \u003d bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"jibtaf"},"content":"        public Optional\u003cBankAccount\u003e getBankAccount() {","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"jibtaf"},"content":"            return Optional.ofNullable(bankAccount);","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":245,"author":{"gitId":"jibtaf"},"content":"        public void setJoinDate(JoinDate joinDate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"jibtaf"},"content":"            this.joinDate \u003d joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":247,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"jibtaf"},"content":"        public Optional\u003cJoinDate\u003e getJoinDate() {","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"jibtaf"},"content":"            return Optional.ofNullable(joinDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"jibtaf"},"content":"        public void setSalary(Salary salary) {","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"jibtaf"},"content":"            this.salary \u003d salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":255,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":257,"author":{"gitId":"jibtaf"},"content":"        public Optional\u003cSalary\u003e getSalary() {","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"jibtaf"},"content":"            return Optional.ofNullable(salary);","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":260,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":261,"author":{"gitId":"jibtaf"},"content":"        public void setAnnualLeave(AnnualLeave annualLeave) {","lastModifiedDate":"2023-10-16"},{"lineNumber":262,"author":{"gitId":"jibtaf"},"content":"            this.annualLeave \u003d annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":264,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":265,"author":{"gitId":"jibtaf"},"content":"        public Optional\u003cAnnualLeave\u003e getAnnualLeave() {","lastModifiedDate":"2023-10-16"},{"lineNumber":266,"author":{"gitId":"jibtaf"},"content":"            return Optional.ofNullable(annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"applepiofmyeye"},"content":"        public void setAttendanceStorage(AttendanceStorage attendanceStorage) {","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"applepiofmyeye"},"content":"            this.attendanceStorage \u003d attendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"applepiofmyeye"},"content":"        public Optional\u003cAttendanceStorage\u003e getAttendanceStorage() {","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"applepiofmyeye"},"content":"            return Optional.ofNullable(attendanceStorage);","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"Kevin-Liusx"},"content":"        public void setPayrollStorage(PayrollStorage payrollStorage) {","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"Kevin-Liusx"},"content":"            this.payrollStorage \u003d payrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"Kevin-Liusx"},"content":"        public Optional\u003cPayrollStorage\u003e getPayrollStorage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"Kevin-Liusx"},"content":"            return Optional.ofNullable(payrollStorage);","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"jibtaf"},"content":"            if (!(other instanceof EditEmployeeDescriptor)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"jibtaf"},"content":"            EditEmployeeDescriptor otherEditEmployeeDescriptor \u003d (EditEmployeeDescriptor) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":297,"author":{"gitId":"jibtaf"},"content":"            return Objects.equals(name, otherEditEmployeeDescriptor.name)","lastModifiedDate":"2023-10-16"},{"lineNumber":298,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditEmployeeDescriptor.phone)","lastModifiedDate":"2023-10-16"},{"lineNumber":299,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditEmployeeDescriptor.email)","lastModifiedDate":"2023-10-16"},{"lineNumber":300,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditEmployeeDescriptor.address)","lastModifiedDate":"2023-10-16"},{"lineNumber":301,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(bankAccount, otherEditEmployeeDescriptor.bankAccount)","lastModifiedDate":"2023-10-16"},{"lineNumber":302,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(joinDate, otherEditEmployeeDescriptor.joinDate)","lastModifiedDate":"2023-10-16"},{"lineNumber":303,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(salary, otherEditEmployeeDescriptor.salary)","lastModifiedDate":"2023-10-16"},{"lineNumber":304,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 Objects.equals(annualLeave, otherEditEmployeeDescriptor.annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":314,"author":{"gitId":"jibtaf"},"content":"                    .add(\"bankAccount\", bankAccount)","lastModifiedDate":"2023-10-16"},{"lineNumber":315,"author":{"gitId":"jibtaf"},"content":"                    .add(\"joinDate\", joinDate)","lastModifiedDate":"2023-10-16"},{"lineNumber":316,"author":{"gitId":"jibtaf"},"content":"                    .add(\"salary\", salary)","lastModifiedDate":"2023-10-16"},{"lineNumber":317,"author":{"gitId":"jibtaf"},"content":"                    .add(\"annualLeave\", annualLeave)","lastModifiedDate":"2023-10-16"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Kevin-Liusx":14,"jibtaf":105,"WeeMingQing":10,"applepiofmyeye":16,"-":176}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"Leb14":1}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"Leb14":1}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_MARK;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.attendance.AttendanceStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.attendance.AttendanceType;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"            + \": Marks the employee\u0027s attendance identified by the index number used in the displayed employee list.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"            + \"Parameters: INDEX (must be a positive integer) /at ATTENDANCE_TYPE\\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 /at present\\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"            + \"OR\\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"            + \"Parameters: /n NAME /at ATTENDANCE_TYPE\\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"            + \"Example: \" + COMMAND_WORD + \"/n John /at late\\n\";","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_MARK_PERSON_SUCCESS \u003d \"Marked Employee: %2$s as %1$s\";","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_PERSON_ON_LEAVE \u003d \"The employee that you are trying to mark is on leave today!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"    private final AttendanceType attendanceType;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"     * The constructor for MarkCommand to take in name instead of index","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"     * @param name The name of the employee to be marked","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"    public MarkCommand(NameContainsKeywordsPredicate name, AttendanceType attendanceType) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"        this.attendanceType \u003d attendanceType;","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"     * The constructor for MarkCommand to take in name instead of index","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"     * @param index The index of the employee to be marked","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"    public MarkCommand(Index index, AttendanceType attendanceType) {","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"        this.attendanceType \u003d attendanceType;","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"        if (this.targetIndex \u003d\u003d null \u0026\u0026 this.name !\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"            return this.markByName(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"            return this.markByIndex(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"        MarkCommand otherMarkCommand \u003d (MarkCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        if ((this.targetIndex \u003d\u003d null \u0026\u0026 otherMarkCommand.targetIndex !\u003d null)","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"                || (this.targetIndex !\u003d null \u0026\u0026 otherMarkCommand.targetIndex \u003d\u003d null)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"        if ((this.name \u003d\u003d null \u0026\u0026 otherMarkCommand.name !\u003d null)","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"                || (this.name !\u003d null \u0026\u0026 otherMarkCommand.name \u003d\u003d null)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"applepiofmyeye"},"content":"        if (this.targetIndex !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"            return targetIndex.equals(otherMarkCommand.targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"        return this.name.equals(otherMarkCommand.name);","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"                    .add(\"targetName\", name)","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"                    .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"applepiofmyeye"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"applepiofmyeye"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"applepiofmyeye"},"content":"     * Marks the attendance of the employee identified by the name used in the displayed employee list.","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"applepiofmyeye"},"content":"     * @return A command result that contains the message to be displayed to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"applepiofmyeye"},"content":"    public CommandResult markByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"applepiofmyeye"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"applepiofmyeye"},"content":"        List\u003cPerson\u003e fullList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"applepiofmyeye"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"applepiofmyeye"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"applepiofmyeye"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"applepiofmyeye"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"applepiofmyeye"},"content":"            Person employeeToMark \u003d fullList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"            if (employeeToMark.getWorkingStatusToday().equals(AttendanceType.ON_LEAVE)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"                throw new CommandException(MESSAGE_PERSON_ON_LEAVE);","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"            Person markedEmployee \u003d markEmployee(employeeToMark);","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"applepiofmyeye"},"content":"            model.setPerson(employeeToMark, markedEmployee);","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"Kevin-Liusx"},"content":"            return new CommandResult(String.format(MESSAGE_MARK_PERSON_SUCCESS,","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"Kevin-Liusx"},"content":"                    attendanceType.toString().toLowerCase(), employeeToMark.getName()));","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"applepiofmyeye"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_MARK,","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"applepiofmyeye"},"content":"                model.getFilteredPersonList().size()), indexes);","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"applepiofmyeye"},"content":"     * Marks the attendance of the employee identified by the name used in the displayed employee list.","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"applepiofmyeye"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"applepiofmyeye"},"content":"     * @return A command result that contains the message to be displayed to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws CommandException If the name is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"applepiofmyeye"},"content":"    public CommandResult markByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"applepiofmyeye"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"applepiofmyeye"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"applepiofmyeye"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"applepiofmyeye"},"content":"        Person employeeToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"        if (employeeToMark.getWorkingStatusToday() \u003d\u003d AttendanceType.ON_LEAVE) {","lastModifiedDate":"2023-11-03"},{"lineNumber":171,"author":{"gitId":"WeeMingQing"},"content":"            throw new CommandException(MESSAGE_PERSON_ON_LEAVE);","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"        Person markedEmployee \u003d markEmployee(employeeToMark);","lastModifiedDate":"2023-11-03"},{"lineNumber":175,"author":{"gitId":"applepiofmyeye"},"content":"        model.setPerson(employeeToMark, markedEmployee);","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"applepiofmyeye"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"applepiofmyeye"},"content":"                String.format(MESSAGE_MARK_PERSON_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"applepiofmyeye"},"content":"                        this.attendanceType.toString().toLowerCase(),","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"applepiofmyeye"},"content":"                        employeeToMark.getName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"applepiofmyeye"},"content":"     * Creates and returns an {@code Employee} with the details of {@code employeeToEdit}","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"applepiofmyeye"},"content":"     * edited with {@code editEmployeeDescriptor}.","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"applepiofmyeye"},"content":"    private Person markEmployee(Person employeeToMark) {","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"applepiofmyeye"},"content":"        assert employeeToMark !\u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"applepiofmyeye"},"content":"        Name name \u003d employeeToMark.getName();","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"applepiofmyeye"},"content":"        Phone phone \u003d employeeToMark.getPhone();","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"applepiofmyeye"},"content":"        Email email \u003d employeeToMark.getEmail();","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"applepiofmyeye"},"content":"        Address address \u003d employeeToMark.getAddress();","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"applepiofmyeye"},"content":"        BankAccount bankAccount \u003d employeeToMark.getBankAccount();","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"applepiofmyeye"},"content":"        JoinDate joinDate \u003d employeeToMark.getJoinDate();","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"applepiofmyeye"},"content":"        Salary salary \u003d employeeToMark.getSalary();","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"applepiofmyeye"},"content":"        AnnualLeave annualLeave \u003d employeeToMark.getAnnualLeave();","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollStorage payrollStorage \u003d employeeToMark.getPayrollStorage();","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceStorage attendanceStorage \u003d employeeToMark.getAttendanceStorage();","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"applepiofmyeye"},"content":"        switch (attendanceType) {","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"applepiofmyeye"},"content":"        case ABSENT:","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"applepiofmyeye"},"content":"            attendanceStorage.markAbsent(LocalDate.now());","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"applepiofmyeye"},"content":"            break;","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"applepiofmyeye"},"content":"        case LATE:","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"applepiofmyeye"},"content":"            attendanceStorage.markLate(LocalDate.now());","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"applepiofmyeye"},"content":"            break;","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"Kevin-Liusx"},"content":"        default:","lastModifiedDate":"2023-10-29"},{"lineNumber":209,"author":{"gitId":"applepiofmyeye"},"content":"            attendanceStorage.markPresent(LocalDate.now());","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"Kevin-Liusx"},"content":"        return new Person(name, phone, email, address, bankAccount,","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"Kevin-Liusx"},"content":"                joinDate, salary, annualLeave, attendanceStorage, payrollStorage);","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Kevin-Liusx":9,"WeeMingQing":11,"applepiofmyeye":197}},{"path":"src/main/java/seedu/address/logic/commands/NextMonthCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"public class NextMonthCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    public static final String COMMAND_WORD \u003d \"nm\";","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_NEXT_MONTH_ACKNOWLEDGEMENT \u003d \"Displaying next month calendar!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        return new CommandResult(MESSAGE_NEXT_MONTH_ACKNOWLEDGEMENT, false, false, false, true, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Leb14":19}},{"path":"src/main/java/seedu/address/logic/commands/PayrollCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_PAYROLL;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":" * Calculates the payroll of the person identified using it\u0027s","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":" * displayed index or name from the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"public class PayrollCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String COMMAND_WORD \u003d \"payroll\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"            + \": calculates the payroll of the person identified \"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"            + \"by the index number or name used in the last person listing.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"            + \"Parameter: INDEX (must be a positive integer) or NAME\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"            + \"Example 1 (index): \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"            + \"Example 2 (name): \" + COMMAND_WORD + \" /n john\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"The payroll detail for the specified person is as below\\n%s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"     * Creates a PayrollCommand to calculate the payroll","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"     * of the person specified by the index.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param index The index of the employee to be deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollCommand(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"     * Creates a PayrollCommand to calculate the payroll","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"     * of the person specified by the name.","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param name The name of the employee to be deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollCommand(NameContainsKeywordsPredicate name) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Kevin-Liusx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Kevin-Liusx"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Kevin-Liusx"},"content":"            return executeByIndex(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Kevin-Liusx"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"            return executeByName(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Kevin-Liusx"},"content":"     * Calculate the payroll of the employee identified by the index number used in the displayed employee list.","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"Kevin-Liusx"},"content":"    public CommandResult executeByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Kevin-Liusx"},"content":"        LocalDate localDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll latestPayroll \u003d employeeToCalculate.getLatestPayroll();","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"Kevin-Liusx"},"content":"        if (latestPayroll.getStartDate().equals(localDate.withDayOfMonth(1))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"            model.updateFilteredPersonList(person -\u003e person.equals(employeeToCalculate));","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"Kevin-Liusx"},"content":"                    latestPayroll.calculatePayrollString()), List.of(index.getOneBased()));","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll monthPayroll \u003d new Payroll(employeeToCalculate.getSalary());","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"Kevin-Liusx"},"content":"        employeeToCalculate.addPayroll(monthPayroll);","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"        model.updateFilteredPersonList(person -\u003e person.equals(employeeToCalculate));","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"Kevin-Liusx"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"Kevin-Liusx"},"content":"                monthPayroll.calculatePayrollString()), List.of(index.getOneBased()));","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"     * Calculate the payroll of the employee identified by the name used in the displayed employee list.","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"Kevin-Liusx"},"content":"     * @throws CommandException If the index is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"Kevin-Liusx"},"content":"    public CommandResult executeByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"        LocalDate localDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"            Person employeeToCalculate \u003d lastShownList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"Kevin-Liusx"},"content":"            Payroll latestPayroll \u003d employeeToCalculate.getLatestPayroll();","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"Kevin-Liusx"},"content":"            if (latestPayroll.getStartDate().equals(localDate.withDayOfMonth(1))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"Kevin-Liusx"},"content":"                model.updateFilteredPersonList(person -\u003e person.equals(employeeToCalculate));","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"Kevin-Liusx"},"content":"                return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"Kevin-Liusx"},"content":"                        latestPayroll.calculatePayrollString()), indexes);","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"Kevin-Liusx"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"Kevin-Liusx"},"content":"            Payroll monthPayroll \u003d new Payroll(employeeToCalculate.getSalary());","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"            employeeToCalculate.addPayroll(monthPayroll);","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"Kevin-Liusx"},"content":"            model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"Kevin-Liusx"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"Kevin-Liusx"},"content":"                    monthPayroll.calculatePayrollString()), indexes);","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"Kevin-Liusx"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"Kevin-Liusx"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_PAYROLL,","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"Kevin-Liusx"},"content":"                lastShownList.size()), indexes);","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"Kevin-Liusx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"Kevin-Liusx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"Kevin-Liusx"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"Kevin-Liusx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"Kevin-Liusx"},"content":"        if (!(other instanceof PayrollCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Kevin-Liusx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand otherPayrollCommand \u003d (PayrollCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"Kevin-Liusx"},"content":"        if ((this.index !\u003d null \u0026\u0026 otherPayrollCommand.index \u003d\u003d null)","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"Kevin-Liusx"},"content":"                || (this.index \u003d\u003d null \u0026\u0026 otherPayrollCommand.index !\u003d null)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"Kevin-Liusx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"Kevin-Liusx"},"content":"        if ((this.name !\u003d null \u0026\u0026 otherPayrollCommand.name \u003d\u003d null)","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"Kevin-Liusx"},"content":"                || (this.name \u003d\u003d null \u0026\u0026 otherPayrollCommand.name !\u003d null)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"Kevin-Liusx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"Kevin-Liusx"},"content":"        if (this.index !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"Kevin-Liusx"},"content":"            return index.equals(otherPayrollCommand.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"Kevin-Liusx"},"content":"        assert this.name !\u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.name.equals(otherPayrollCommand.name);","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kevin-Liusx":164,"jibtaf":2}},{"path":"src/main/java/seedu/address/logic/commands/PayslipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_PAYSLIP;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.PaySlipGenerator;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" * Generates a payslip for an employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"public class PayslipCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    public static final String COMMAND_WORD \u003d \"payslip\";","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Generates a payslip in PDF format for the employee \"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        + \"identified by the index number or name used in the last person listing.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        + \"Parameters: INDEX (must be a positive integer) or NAME\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        + \"Example 1 (index): \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        + \"Example 2 (name): \" + COMMAND_WORD + \" /n john\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        + \"You can also include a parameter to specify the month and year of the payroll to generate the payslip for, \"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        + \"by providing a date in the format of dd/mm/yyyy.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        + \"Example 3 (index and month): \" + COMMAND_WORD + \" 1 /t 06/10/2023\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    public static final String EMPTY_PAYROLL_ERROR \u003d \"The payroll list for the specified employee is empty.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        + \"Please use the payroll command to add a payroll for the employee first.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        + PayrollCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    public static final String WRONG_DATE_FORMAT_ERROR \u003d \"The date format is wrong.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        + \"Please use the format of dd/mm/yyyy.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        + \"Example: 06/10/2023\";","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    public static final String NO_CORRESPONDING_PAYROLL_ERROR \u003d \"There is no payroll for the specified month.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        + \"Please make sure the time you entered is correct.\\n\";","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_PAYSLIP_SUCCESS \u003d \"Payslip generated for Employee: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate name;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"    private final LocalDate monthYear;","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"     * Creates a PayslipCommand to generate a payslip for the specified employee.","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * @param index of the person in the filtered person list to generate a payslip for.","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    public PayslipCommand(Index index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        this.monthYear \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"     * Creates a PayslipCommand to generate a payslip for the specified employee.","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"     * @param name of the person in the filtered person list to generate a payslip for.","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    public PayslipCommand(NameContainsKeywordsPredicate name) {","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        this.monthYear \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"     * Creates a PayslipCommand to generate a payslip for the specified employee.","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"     * @param index of the person in the filtered person list to generate a payslip for.","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * @param monthYear month of the payroll to generate a payslip for the specified employee.","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    public PayslipCommand(Index index, LocalDate monthYear) {","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        this.monthYear \u003d monthYear;","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"     * Creates a PayslipCommand to generate a payslip for the specified employee.","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"     * @param name of the person in the filtered person list to generate a payslip for.","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"     * @param monthYear month of the payroll to generate a payslip for the specified employee.","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"    public PayslipCommand(NameContainsKeywordsPredicate name, LocalDate monthYear) {","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        this.index \u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        this.monthYear \u003d monthYear;","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"            return executeByIndex(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"            return executeByName(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by index.","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"     * @return {@code CommandResult} representing the result of the command execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByIndex(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        assert index !\u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"        Person personToGenerate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"        executeWithExceptionHandling(personToGenerate);","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(person -\u003e person.equals(personToGenerate));","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_PAYSLIP_SUCCESS, personToGenerate.getName().toString()));","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"     * Executes the command by name.","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"     * @return {@code CommandResult} representing the result of the command execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"    private CommandResult executeByName(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"        if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"            Person personToGenerate \u003d lastShownList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"            executeWithExceptionHandling(personToGenerate);","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"            model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"            return new CommandResult(String.format(MESSAGE_PAYSLIP_SUCCESS, personToGenerate.getName().toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"        model.updateFilteredPersonList(this.name);","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"        return new CommandResult(String.format(MESSAGE_PERSONS_LISTED_OVERVIEW_PAYSLIP, lastShownList.size()), indexes);","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"     * Executes the command with exception handling.","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"     * @param personToGenerate {@code Person} which the command should operate on.","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"    private void executeWithExceptionHandling(Person personToGenerate) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"            if (monthYear !\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"                PaySlipGenerator.generateReportWithMonth(personToGenerate, monthYear);","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"            } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"                PaySlipGenerator.generateReport(personToGenerate);","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"            PaySlipGenerator.removeWrongFile(personToGenerate);","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(NO_CORRESPONDING_PAYROLL_ERROR);","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"jibtaf"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"jibtaf"},"content":"            PaySlipGenerator.removeWrongFile(personToGenerate);","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"jibtaf"},"content":"            throw new CommandException(EMPTY_PAYROLL_ERROR);","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof PayslipCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"jibtaf"},"content":"        PayslipCommand otherPayslipCommand \u003d (PayslipCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":187,"author":{"gitId":"jibtaf"},"content":"        if (index !\u003d null \u0026\u0026 otherPayslipCommand.index !\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"jibtaf"},"content":"            return index.equals(otherPayslipCommand.index);","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"jibtaf"},"content":"        if (name !\u003d null \u0026\u0026 otherPayslipCommand.name !\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"jibtaf"},"content":"            return name.equals(otherPayslipCommand.name);","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"jibtaf"},"content":"        return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"jibtaf"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"jibtaf"},"content":"            .add(\"index\", index)","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"jibtaf"},"content":"            .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":204}},{"path":"src/main/java/seedu/address/logic/commands/PreviousMonthCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"public class PreviousMonthCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    public static final String COMMAND_WORD \u003d \"pm\";","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_PREVIOUS_MONTH_ACKNOWLEDGEMENT \u003d \"Displaying previous month calendar!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        return new CommandResult(MESSAGE_PREVIOUS_MONTH_ACKNOWLEDGEMENT, false, false, false, false, true, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Leb14":19}},{"path":"src/main/java/seedu/address/logic/commands/ReadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":" * Reads a specific piece of information of a particular employee","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":" * and display it.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"public class ReadCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    public static final String COMMAND_WORD \u003d \"read\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"            + \": Read a specific information of a particular employee \"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"            + \"by the index number used in the last person listing and the specific field name. \"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"            + \"The app will then display the information accordingly.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"            + \"/field\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 /b\";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_READ_PERSON_SUCCESS \u003d \"Read %s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    private final String field;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a ReadCommand to read the information of the specified field from","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"     * a person at the given index.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the person in the last displayed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"     * @param field The field to read (e.g., \"p\" for phone, \"a\" for address, \"e\" for","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"     *              email).","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    public ReadCommand(Index index, String field) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        requireNonNull(index, field);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        this.field \u003d field;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    public String getField() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        return this.field;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        Person personToRead \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        String fieldStr \u003d fieldValueToString(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"        model.setSpecificPersonToDisplay(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        return new CommandResult(String.format(MESSAGE_READ_PERSON_SUCCESS, field), true, fieldStr);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"     * Returns a string representation of the specific field of a person.","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     * @param person The person to retrieve the field from.","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     * @return The information specified by the field.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     * @throws CommandException if the field is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"    public String fieldValueToString(Person person) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        switch (field) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        case \"phone\":","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"            return person.getPhone().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        case \"address\":","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"            return person.getAddress().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        case \"email\":","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"            return person.getEmail().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        case \"bank account\":","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"            return person.getBankAccount().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        case \"join date\":","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"            return person.getJoinDate().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        case \"salary\":","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"            return person.getSalary().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        case \"annual leave\":","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"            return \"Total Annual Leave: \" + person.getAnnualLeave().value + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"                + person.getAnnualLeave().printListLeaveTaken();","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"        case \"attendance\":","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"            return person.getWorkingStatusToday().toString().toLowerCase();","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FIELD_TO_READ);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        if (!(other instanceof ReadCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"        ReadCommand otherReadCommand \u003d (ReadCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"        return targetIndex.equals(otherReadCommand.targetIndex) \u0026\u0026 field.equals(otherReadCommand.getField());","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"WeeMingQing":2,"applepiofmyeye":6,"Leb14":107}},{"path":"src/main/java/seedu/address/logic/commands/ViewLeaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import java.util.Map;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":" * Views the employee who is","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":" * on leave on a specific date.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"public class ViewLeaveCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    public static final String COMMAND_WORD \u003d \"viewleave\";","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View employee who is on leave on specific date.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"            + \"Parameters: /on DATE (must be a valid date)\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"            + \"Example: \" + COMMAND_WORD + \" /on 01/01/2023\";","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Employee who is on leave on %1$s:\\n%2$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    private final LocalDate dateToView;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * Constructs a ViewLeaveCommand with the specified date to view.","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     * @param dateToView The date for which to view employees on leave.","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    public ViewLeaveCommand(LocalDate dateToView) {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        requireNonNull(dateToView);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        this.dateToView \u003d dateToView;","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        List\u003cString\u003e nameList \u003d getNameList(model.getFilteredPersonList());","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateToView.format(formatter);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        if (nameList.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_EMPLOYEE_ON_LEAVE, formattedDate));","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        String nameListInString \u003d nameListToString(nameList);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, formattedDate, nameListInString),","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"                false, false, false, false, false, false);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"     * Gets the list of names of employees on leave from the provided list of persons.","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     * @param personList The list of persons to search for employees on leave.","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"     * @return A list of employee names on leave.","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"    public List\u003cString\u003e getNameList(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        requireNonNull(personList);","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        Map\u003cLocalDate, List\u003cString\u003e\u003e leaveRecords \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"        for (Person person : personList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"            List\u003cLocalDate\u003e leaveList \u003d person.getLeaveList();","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"            if (leaveList \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"                continue;","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"            for (LocalDate leaveDate : leaveList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"                if (leaveDate !\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"                    LocalDate currentDateToCheck \u003d leaveDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"                    leaveRecords.computeIfAbsent(currentDateToCheck,","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"                            k -\u003e new ArrayList\u003c\u003e()).add(person.getName().fullName);","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        List\u003cString\u003e personNames \u003d leaveRecords.get(dateToView);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        if (personNames \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"            return Collections.emptyList(); // Return an empty list if there are no names","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"        return personNames;","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"     * Converts a list of employee names into a comma-separated string.","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"     * @param personNames The list of employee names.","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"     * @return A comma-separated string of employee names.","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"    public String nameListToString(List\u003cString\u003e personNames) {","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c personNames.size(); i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"            builder.append(personNames.get(i));","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"            if (i \u003c personNames.size() - 1) {","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"                builder.append(\", \");","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"        return builder.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"        if (!(other instanceof ViewLeaveCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand otherViewLeaveCommand \u003d (ViewLeaveCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"        return dateToView.equals(otherViewLeaveCommand.dateToView);","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"jibtaf":2,"Leb14":129}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Kevin-Liusx":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.attendance.AttendanceStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"                PREFIX_ADDRESS, PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_SALARY, PREFIX_ANNUAL_LEAVE);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"                PREFIX_ADDRESS, PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_SALARY, PREFIX_ANNUAL_LEAVE)","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"                PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_ANNUAL_LEAVE, PREFIX_SALARY);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        BankAccount bankAccount \u003d ParserUtil.parseBankAccount(argMultimap.getValue(PREFIX_BANK_ACCOUNT).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        JoinDate joinDate \u003d ParserUtil.parseJoinDate(argMultimap.getValue(PREFIX_JOIN_DATE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        Salary salary \u003d ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        AnnualLeave annualLeave \u003d ParserUtil.parseAnnualLeave(argMultimap.getValue(PREFIX_ANNUAL_LEAVE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceStorage attendanceStorage \u003d new AttendanceStorage();","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollStorage payrollStorage \u003d new PayrollStorage();","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"Kevin-Liusx"},"content":"        Person person \u003d new Person(name, phone, email, address,","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"                bankAccount, joinDate, salary, annualLeave, attendanceStorage, payrollStorage);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"     * in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Kevin-Liusx":9,"jibtaf":7,"applepiofmyeye":10,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddLeaveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_FROM;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_TO;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.AddLeaveCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":" * Parses input arguments and creates a new AddLeaveCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"public class AddLeaveCommandParser implements Parser\u003cAddLeaveCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"     * Parses the given {@code String} of arguments in the context of the AddLeaveCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"     * and returns an AddLeaveCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForAll \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_ON,","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"                PREFIX_ADD_ANNUAL_LEAVE_FROM, PREFIX_ADD_ANNUAL_LEAVE_TO);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isPresent()","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 (argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).isPresent()","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"                || argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).isPresent())) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForOn \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_ON);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForFromAndTo \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_FROM, PREFIX_ADD_ANNUAL_LEAVE_TO);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForOn.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"            return singleDayLeaveHandler(argMultimapForOn);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        } else if (argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).isPresent()","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"            return multipleDaysLeaveHandler(argMultimapForFromAndTo);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"     * Handles the command based on user input if user wish to add in a single day of leave for employee.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"     * @param argMultimapForOn The ArgumentMultimap consisting of the user input","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"     * @return AddLeaveCommand object for execution","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand singleDayLeaveHandler(ArgumentMultimap argMultimapForOn) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForOn.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimapForOn.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"            if (argMultimapForOn.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate date \u003d ParserUtil.stringToDate(argMultimapForOn.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"            return new AddLeaveCommand(index, date);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"            if (StringUtil.isInteger(argMultimapForOn.getPreamble())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DateTimeParseException de) {","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(Messages.MESSAGE_INVALID_DATE));","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"     * Handles the command based on user input if user wish to add in multiple days of leave for employee.","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"     * @param argMultimapForFromAndTo The ArgumentMultimap consisting of the user input","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"     * @return AddLeaveCommand object for execution","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"    public AddLeaveCommand multipleDaysLeaveHandler(ArgumentMultimap argMultimapForFromAndTo) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForFromAndTo.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimapForFromAndTo.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"            if (argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).isEmpty()","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"                    || argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate startDate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"                    ParserUtil.stringToDate(argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate endDate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"                    ParserUtil.stringToDate(argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"            return new AddLeaveCommand(index, startDate, endDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"            if (StringUtil.isInteger(argMultimapForFromAndTo.getPreamble())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DateTimeParseException de) {","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(Messages.MESSAGE_INVALID_DATE));","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"WeeMingQing":123}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.AddLeaveCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.AttendanceCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.BenefitCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.CurrentMonthCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.DeductCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.DeleteLeaveCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.NextMonthCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.PayrollCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayslipCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.PreviousMonthCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ViewLeaveCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"        case PayrollCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"Kevin-Liusx"},"content":"            return new PayrollCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        case ReadCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"            return new ReadCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"        case AddLeaveCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"            return new AddLeaveCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"        case PayslipCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"            return new PayslipCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        case DeductCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"            return new DeductCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"        case BenefitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"            return new BenefitCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"        case DeleteLeaveCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"            return new DeleteLeaveCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"        case NextMonthCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"            return new NextMonthCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"        case PreviousMonthCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"            return new PreviousMonthCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"        case CurrentMonthCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"            return new CurrentMonthCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"applepiofmyeye"},"content":"        case AttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"applepiofmyeye"},"content":"            return new AttendanceCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"        case ViewLeaveCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"            return new ViewLeaveCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kevin-Liusx":4,"WeeMingQing":8,"jibtaf":12,"applepiofmyeye":8,"-":86,"Leb14":20}},{"path":"src/main/java/seedu/address/logic/parser/AttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.AttendanceCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"public class AttendanceCommandParser implements Parser\u003cAttendanceCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"     * and returns an AttendanceCommand object for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"    public AttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"        Index index;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"            return new AttendanceCommand(index);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"                String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"                String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"                return new AttendanceCommand(","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords))","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"                );","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"                throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"jibtaf":1,"applepiofmyeye":53}},{"path":"src/main/java/seedu/address/logic/parser/BenefitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REASON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.BenefitCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":" * Parses input arguments and creates a new BenefitCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"public class BenefitCommandParser implements Parser\u003cBenefitCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    public BenefitCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_VALUE, PREFIX_REASON);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        Reason reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        Benefit benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_VALUE, PREFIX_REASON);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_REASON).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            reason \u003d ParserUtil.parseBenefitReason(argMultimap.getValue(PREFIX_REASON).get());","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Reason.MISSING_ALERT));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_VALUE).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"            benefit \u003d ParserUtil.parseBenefit(argMultimap.getValue(PREFIX_VALUE).get(), reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"            return new BenefitCommand(index, benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"                    BenefitCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"            return new BenefitCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)), benefit);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":67}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/p\");","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/e\");","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"/a\");","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_BANK_ACCOUNT \u003d new Prefix(\"/b\");","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_JOIN_DATE \u003d new Prefix(\"/jd\");","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_SALARY \u003d new Prefix(\"/s\");","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_ANNUAL_LEAVE \u003d new Prefix(\"/l\");","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"    public static final Prefix PREFIX_ATTENDANCE_TYPE \u003d new Prefix(\"/at\");","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    public static final Prefix PREFIX_ADD_ANNUAL_LEAVE_ON \u003d new Prefix(\"/on\");","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    public static final Prefix PREFIX_ADD_ANNUAL_LEAVE_FROM \u003d new Prefix(\"/from\");","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    public static final Prefix PREFIX_ADD_ANNUAL_LEAVE_TO \u003d new Prefix(\"/to\");","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_VALUE \u003d new Prefix(\"/v\");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_REASON \u003d new Prefix(\"/r\");","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    public static final Prefix PREFIX_MONTH_YEAR \u003d new Prefix(\"/t\");","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    public static final Prefix PREFIX_SLASH \u003d new Prefix(\"/\");","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jibtaf":11,"WeeMingQing":3,"applepiofmyeye":1,"-":10,"Leb14":1}},{"path":"src/main/java/seedu/address/logic/parser/DeductCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REASON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.DeductCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":" * Parses input arguments and creates a new DeductCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"public class DeductCommandParser implements Parser\u003cDeductCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    public DeductCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_VALUE, PREFIX_REASON);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        Reason reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        Deduction deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_VALUE, PREFIX_REASON);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_REASON).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"            reason \u003d ParserUtil.parseDeductionReason(argMultimap.getValue(PREFIX_REASON).get());","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Reason.MISSING_ALERT));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_VALUE).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"            deduction \u003d ParserUtil.parseDeduction(argMultimap.getValue(PREFIX_VALUE).get(), reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"            return new DeductCommand(index, deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"                    DeductCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"            return new DeductCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)), deduction);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":67}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"            if (StringUtil.isInteger(trimmedArgs)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent() \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"                String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"                String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"                return new DeleteCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"WeeMingQing":24,"jibtaf":1,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteLeaveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_FROM;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_TO;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.DeleteLeaveCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":" * Parses input arguments and creates a new DeleteLeaveCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"public class DeleteLeaveCommandParser implements Parser\u003cDeleteLeaveCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteLeaveCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"     * and returns a DeleteLeaveCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    public DeleteLeaveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForAll \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_ON,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"                PREFIX_ADD_ANNUAL_LEAVE_FROM, PREFIX_ADD_ANNUAL_LEAVE_TO);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isPresent()","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 (argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).isPresent()","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"                || argMultimapForAll.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).isPresent())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForOn \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_ON);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"        ArgumentMultimap argMultimapForFromAndTo \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_FROM, PREFIX_ADD_ANNUAL_LEAVE_TO);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForOn.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"            return deleteSingleDayLeaveHandler(argMultimapForOn);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        } else if (argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).isPresent()","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"            return deleteMultipleDaysLeaveHandler(argMultimapForFromAndTo);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"     * Handles the command based on user input if user wish to delete a single day of leave from employee.","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"     * @param argMultimapForOn The ArgumentMultimap consisting of the user input","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"     * @return DeleteLeaveCommand object for execution","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"    public DeleteLeaveCommand deleteSingleDayLeaveHandler(ArgumentMultimap argMultimapForOn) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForOn.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimapForOn.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"            if (argMultimapForOn.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate date \u003d ParserUtil.stringToDate(argMultimapForOn.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"            return new DeleteLeaveCommand(index, date);","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"            if (StringUtil.isInteger(argMultimapForOn.getPreamble())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DateTimeParseException de) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(Messages.MESSAGE_INVALID_DATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"     * Handles the command based on user input if user wish to delete multiple days of leave from employee.","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"     * @param argMultimapForFromAndTo The ArgumentMultimap consisting of the user input","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"     * @return DeleteLeaveCommand object for execution","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"    public DeleteLeaveCommand deleteMultipleDaysLeaveHandler(ArgumentMultimap argMultimapForFromAndTo)","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"            throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"        if (argMultimapForFromAndTo.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimapForFromAndTo.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"            if (argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).isEmpty()","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"                    || argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate startDate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"                    ParserUtil.stringToDate(argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_FROM).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"            LocalDate endDate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"                    ParserUtil.stringToDate(argMultimapForFromAndTo.getValue(PREFIX_ADD_ANNUAL_LEAVE_TO).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"            return new DeleteLeaveCommand(index, startDate, endDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"            if (StringUtil.isInteger(argMultimapForFromAndTo.getPreamble())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"                        String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DateTimeParseException de) {","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"                    String.format(Messages.MESSAGE_INVALID_DATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"WeeMingQing":123}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"     * EditCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"                    PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_SALARY, PREFIX_ANNUAL_LEAVE);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"            PREFIX_BANK_ACCOUNT, PREFIX_JOIN_DATE, PREFIX_SALARY, PREFIX_ANNUAL_LEAVE);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_BANK_ACCOUNT).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setBankAccount(","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"                ParserUtil.parseBankAccount(argMultimap.getValue(PREFIX_BANK_ACCOUNT).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_JOIN_DATE).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setJoinDate(ParserUtil.parseJoinDate(argMultimap.getValue(PREFIX_JOIN_DATE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_SALARY).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setSalary(ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_ANNUAL_LEAVE).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"            editEmployeeDescriptor.setAnnualLeave(","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"                ParserUtil.parseAnnualLeave(argMultimap.getValue(PREFIX_ANNUAL_LEAVE).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        if (!editEmployeeDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        return new EditCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jibtaf":26,"applepiofmyeye":3,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_TYPE;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.attendance.AttendanceType;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"     * and returns an MarkCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ATTENDANCE_TYPE);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_ATTENDANCE_TYPE);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        if (!argMultimap.getValue(PREFIX_ATTENDANCE_TYPE).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE)","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"            );","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"        Index index;","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"            AttendanceType attendanceType \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"                    ParserUtil.parseAttendanceType(argMultimap.getValue(PREFIX_ATTENDANCE_TYPE).get());","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"            return new MarkCommand(index, attendanceType);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"            if (e.getMessage().equals(AttendanceType.MESSAGE_CONSTRAINTS)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"                throw new ParseException(AttendanceType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"                if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"                    String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"                    String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"                    AttendanceType attendanceType \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"                            ParserUtil.parseAttendanceType(argMultimap.getValue(PREFIX_ATTENDANCE_TYPE).get());","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"                    return new MarkCommand(","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"                            new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)),","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"                            attendanceType","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"                    );","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"                } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"                    throw new ParseException(","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Kevin-Liusx":7,"jibtaf":3,"applepiofmyeye":68}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import me.xdrop.fuzzywuzzy.FuzzySearch;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.attendance.AttendanceType;","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":" * classes.","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String bankAccount} into an {@code BankAccount}.","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code bankAccount} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"    public static BankAccount parseBankAccount(String bankAccount) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(bankAccount);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        String trimmedBankAccount \u003d bankAccount.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        if (!BankAccount.isValidBankAccount(trimmedBankAccount)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(BankAccount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"        return new BankAccount(trimmedBankAccount);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String joinDate} into an {@code JoinDate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code joinDate} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"    public static JoinDate parseJoinDate(String joinDate) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(joinDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"        String trimmedJoinDate \u003d joinDate.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"        if (!JoinDate.isValidJoinDate(trimmedJoinDate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(JoinDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"        return new JoinDate(trimmedJoinDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String salary} into an {@code Salary}.","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code salary} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"    public static Salary parseSalary(String salary) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(salary);","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"        String trimmedSalary \u003d salary.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"        if (!Salary.isValid(trimmedSalary)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"        return new Salary(trimmedSalary);","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String annualLeave} into an {@code AnnualLeave}.","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code annualLeave} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"    public static AnnualLeave parseAnnualLeave(String annualLeave) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"        String trimmedAnnualLeave \u003d annualLeave.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"        if (!AnnualLeave.isValidAnnualLeave(trimmedAnnualLeave)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(AnnualLeave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"        return new AnnualLeave(trimmedAnnualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"applepiofmyeye"},"content":"     * Parses a {@code String attendanceType} into an {@code AttendanceType}.","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"applepiofmyeye"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws ParseException if the given {@code attendanceType} is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"applepiofmyeye"},"content":"    public static AttendanceType parseAttendanceType(String attendanceType) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(attendanceType);","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"applepiofmyeye"},"content":"        String trimmedAttendanceType \u003d attendanceType.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"applepiofmyeye"},"content":"        if (!AttendanceType.isValidAttendanceType(trimmedAttendanceType)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"applepiofmyeye"},"content":"            throw new ParseException(AttendanceType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"applepiofmyeye"},"content":"        return AttendanceType.valueOf(attendanceType.toUpperCase());","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"WeeMingQing"},"content":"     * Returns LocalDate object from String","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"WeeMingQing"},"content":"     * @param date The String containing date from user input","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"WeeMingQing"},"content":"     * @return LocalDate","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"WeeMingQing"},"content":"     * @throws DateTimeParseException if the format of String is wrong","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"WeeMingQing"},"content":"    public static LocalDate stringToDate(String date) throws DateTimeParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"WeeMingQing"},"content":"        String dateFormat \u003d \"dd/MM/uuuu\";","lastModifiedDate":"2023-11-07"},{"lineNumber":192,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormat).withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-11-07"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"        return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-10-30"},{"lineNumber":194,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"WeeMingQing"},"content":"     * Returns String from LocalDate object.","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"WeeMingQing"},"content":"     * @param date The LocalDate object","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"WeeMingQing"},"content":"     * @return String format of LocalDate object","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"WeeMingQing"},"content":"    public static String dateToString(LocalDate date) {","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"WeeMingQing"},"content":"        String dateFormat \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"jibtaf"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-10-30"},{"lineNumber":205,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String reason} into an {@code Reason}.","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code reason} is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"jibtaf"},"content":"    public static Reason parseDeductionReason(String reason) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"jibtaf"},"content":"        String trimmedReason \u003d reason.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"jibtaf"},"content":"        Reason inputReason \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"jibtaf"},"content":"        for (Reason r : Reason.values()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"jibtaf"},"content":"            String expected \u003d String.join(\" \", r.toString().split(\"_\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"jibtaf"},"content":"            if (FuzzySearch.tokenSetRatio(trimmedReason.toLowerCase(), expected.toLowerCase()) \u003e 50) {","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"jibtaf"},"content":"                inputReason \u003d r;","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"jibtaf"},"content":"        if (inputReason \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Reason.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"jibtaf"},"content":"        if (!Deduction.isValidReason(inputReason)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Deduction.MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"jibtaf"},"content":"        return inputReason;","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String reason} into an {@code Reason}.","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code reason} is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"jibtaf"},"content":"    public static Reason parseBenefitReason(String reason) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"jibtaf"},"content":"        String trimmedReason \u003d reason.trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"jibtaf"},"content":"        Reason inputReason \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"jibtaf"},"content":"        for (Reason r : Reason.values()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"jibtaf"},"content":"            String expected \u003d String.join(\" \", r.toString().split(\"_\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"jibtaf"},"content":"            if (FuzzySearch.tokenSetRatio(trimmedReason.toLowerCase(), expected.toLowerCase()) \u003e 50) {","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"jibtaf"},"content":"                inputReason \u003d r;","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"jibtaf"},"content":"        if (inputReason \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Reason.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"jibtaf"},"content":"        if (!Benefit.isValidReason(inputReason)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Benefit.MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"jibtaf"},"content":"        return inputReason;","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String deduction} into an {@code Deduction}.","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code deduction} is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"jibtaf"},"content":"    public static Deduction parseDeduction(String value, Reason reason) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"jibtaf"},"content":"        String trimmedDeduction \u003d value.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"jibtaf"},"content":"        if (!Deduction.isValid(trimmedDeduction)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Deduction.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"jibtaf"},"content":"        return new Deduction(trimmedDeduction, reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"jibtaf"},"content":"     * Parses a {@code String benefit} into an {@code Benefit}.","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"jibtaf"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the given {@code benefit} is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"jibtaf"},"content":"    public static Benefit parseBenefit(String value, Reason reason) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"jibtaf"},"content":"        String trimmedBenefit \u003d value.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"jibtaf"},"content":"        if (!Benefit.isValid(trimmedBenefit)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(Benefit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"jibtaf"},"content":"        return new Benefit(trimmedBenefit, reason);","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kevin-Liusx":1,"WeeMingQing":25,"jibtaf":140,"applepiofmyeye":25,"-":105}},{"path":"src/main/java/seedu/address/logic/parser/PayrollCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.PayrollCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":" * Parses input arguments and creates a new PayrollCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"public class PayrollCommandParser implements Parser\u003cPayrollCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"     * Parses the given {@code String} of arguments in the context of the PayrollCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"     * and returns a PayrollCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayrollCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"            return new PayrollCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"                String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"                String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"                return new PayrollCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayrollCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kevin-Liusx":48}},{"path":"src/main/java/seedu/address/logic/parser/PayslipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MONTH_YEAR;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayslipCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":" * Parses input arguments and creates a new PayslipCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"public class PayslipCommandParser implements Parser\u003cPayslipCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"     * Parses the given {@code String} of arguments in the context of the PayslipCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"     * and returns an PayslipCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public PayslipCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayslipCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MONTH_YEAR);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_MONTH_YEAR);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        if (argMultimap.getValue(PREFIX_MONTH_YEAR).isPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"            try {","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"                ParserUtil.stringToDate(argMultimap.getValue(PREFIX_MONTH_YEAR).get());","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"            } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"                throw new ParseException(","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayslipCommand.WRONG_DATE_FORMAT_ERROR), dtpe);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            return argMultimap.getValue(PREFIX_MONTH_YEAR).isEmpty()","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"                ? new PayslipCommand(index)","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"                : new PayslipCommand(index,","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"                    ParserUtil.stringToDate(argMultimap.getValue(PREFIX_MONTH_YEAR).get()).withDayOfMonth(1));","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"                    PayslipCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"            String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            String[] nameKeywords \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            return argMultimap.getValue(PREFIX_MONTH_YEAR).isEmpty()","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"                ? new PayslipCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)))","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"                : new PayslipCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)),","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"                    ParserUtil.stringToDate(argMultimap.getValue(PREFIX_MONTH_YEAR).get()).withDayOfMonth(1));","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":69}},{"path":"src/main/java/seedu/address/logic/parser/ReadCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SLASH;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":" * Parses input arguments and creates a new ReadCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"public class ReadCommandParser implements Parser\u003cReadCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private static final String p_field_name \u003d \"phone\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    private static final String e_field_name \u003d \"email\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    private static final String jd_field_name \u003d \"join date\";","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    private static final String a_field_name \u003d \"address\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    private static final String s_field_name \u003d \"salary\";","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    private static final String l_field_name \u003d \"annual leave\";","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    private static final String b_field_name \u003d \"bank account\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * Parses the given {@code String} of arguments in the context of the ReadCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * and returns a ReadCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    public ReadCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SLASH);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        if (argMultimap.getValue(PREFIX_SLASH).isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        String fieldName \u003d fieldNameToString(argMultimap.getValue(PREFIX_SLASH).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        return new ReadCommand(index, fieldName);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"     * Returns a string representation of the specific field name of a person.","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"     * @param fieldToRead The field name.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"     * @return The information specified by the field.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * @throws CommandException if the field is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    public String fieldNameToString(String fieldToRead) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        switch (fieldToRead) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        case \"p\":","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"            return p_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        case \"a\":","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"            return a_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        case \"e\":","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"            return e_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"        case \"b\":","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"            return b_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        case \"l\":","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"            return l_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        case \"jd\":","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"            return jd_field_name;","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        case \"s\":","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"            return s_field_name;","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_FIELD_TO_READ);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jibtaf":4,"Leb14":75}},{"path":"src/main/java/seedu/address/logic/parser/ViewLeaveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ViewLeaveCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":" * Parses input arguments and creates a new ViewLeaveCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"public class ViewLeaveCommandParser implements Parser\u003cViewLeaveCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewLeaveCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * and returns a ViewLeaveCommand object for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @throws DateTimeParseException if the user input does not conform the expected DateTime format","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    public ViewLeaveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADD_ANNUAL_LEAVE_ON);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"            if (argMultimap.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"                throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            LocalDate dateToView \u003d ParserUtil.stringToDate(argMultimap.getValue(PREFIX_ADD_ANNUAL_LEAVE_ON).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"            return new ViewLeaveCommand(dateToView);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        } catch (DateTimeParseException de) {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"                    String.format(Messages.MESSAGE_INVALID_DATE));","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Leb14":49}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"     * Replaces the given person {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"     * The person identity of {@code editedEmployee} must not be the same as","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"     * another existing person in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    public void setPerson(Person target, Person editedEmployee) {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        persons.setPerson(target, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jibtaf":6,"-":125}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"     * Replaces the given person {@code target} with {@code editedEmployee}.","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"     * The person identity of {@code editedEmployee} must not be the same as","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * another existing person in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    void setPerson(Person target, Person editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"     * Returns an array of index corresponding to the entries in the filtered person list","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"    List\u003cInteger\u003e getIndexOfFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"     * Sets a specific person to be displayed.","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"     * @param targetPerson The person that you want to set as the specific person to be displayed.","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"    void setSpecificPersonToDisplay(Person targetPerson);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"WeeMingQing":7,"jibtaf":4,"-":84,"Leb14":7}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"    public void setPerson(Person target, Person editedEmployee) {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"        addressBook.setPerson(target, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"     * internal list of","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"    public void setSpecificPersonToDisplay(Person targetPerson) {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"        requireNonNull(targetPerson);","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"        Predicate\u003cPerson\u003e indexEqualToTargetIndex \u003d person -\u003e person.equals(targetPerson);","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"        filteredPersons.setPredicate(indexEqualToTargetIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"    public List\u003cInteger\u003e getIndexOfFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c filteredPersons.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"WeeMingQing"},"content":"            if (predicate.test(filteredPersons.get(i))) {","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"WeeMingQing"},"content":"                indexes.add(i + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"        return indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WeeMingQing":13,"jibtaf":3,"applepiofmyeye":8,"-":140,"Leb14":7}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"employees.json\");","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"applepiofmyeye":1,"-":87}},{"path":"src/main/java/seedu/address/model/person/AnnualLeave.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s annual leave in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAnnualLeave(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"public class AnnualLeave {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"            \"Number of days of annual leave remaining should only contain numerical digits. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"                + \"It should not contain dashes or spaces.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_LEAVE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"            \"The leave that you are trying to add is invalid.\\nCheck that \"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"            + \"the number of days of annual leave taken should not exceed the total limit and \\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"                    + \"you can only add leave for this year and next year.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_ADD_EXPIRED_LEAVE \u003d \"Date of the leave that you are trying to \"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            + \"add is already over.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_DELETE_EXPIRED_LEAVE \u003d \"Date of the leave that you are trying to \"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"            + \"delete is already over.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_ADD_DUPLICATE_LEAVE \u003d \"Some or all the leave(s) that you \"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"            + \"are trying to add has already been added. Please check again.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_DELETE_INVALID_LEAVE \u003d \"Some or all the leave(s) that you \"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"            + \"are trying to delete does not exist. Please check again.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    public static final String MESSAGE_INVALID_LEAVE \u003d \"The end date of the leave must be after the start date.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"     * The first character of the annual leave must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"    private List\u003cLocalDate\u003e leaveList;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a {@code AnnualLeave}.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"     * @param annualLeave A valid annual leave.","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"    public AnnualLeave(String annualLeave) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(annualLeave);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"        checkArgument(isValidAnnualLeave(annualLeave), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        value \u003d annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"        this.leaveList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns true if a given string is a valid number of days.","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    public static boolean isValidAnnualLeave(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d value;","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date : this.leaveList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"            String formattedDate \u003d date.format(formatter);","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"            result +\u003d \" | \" + formattedDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof AnnualLeave)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"        AnnualLeave otherAnnualLeave \u003d (AnnualLeave) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"        if (!value.equals(otherAnnualLeave.value)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate d: this.leaveList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"            if (!otherAnnualLeave.leaveList.contains(d)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"                return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        return this.leaveList.size() \u003d\u003d otherAnnualLeave.leaveList.size();","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"    public List\u003cLocalDate\u003e getLeaveList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"        return leaveList;","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"     * Adds in multiple days of leave.","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be added to the leaveList","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate of the leave to be added to the leaveList","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"    public void addLeave(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"        long numOfDays \u003d ChronoUnit.DAYS.between(startDate, endDate) + 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c numOfDays; i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"            this.leaveList.add(startDate.plusDays(i));","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"     * Adds in a single day of leave.","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"    public void addLeave(LocalDate startDate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        this.leaveList.add(startDate);","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"     * Deletes a single day of leave.","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be deleted from the leaveList","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"    public void deleteLeave(LocalDate startDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        this.leaveList.remove(startDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"     * Deletes multiple days of leave.","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be deleted from the leaveList","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate of the leave to be deleted from the leaveList","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"    public void deleteLeave(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"        long numOfDays \u003d ChronoUnit.DAYS.between(startDate, endDate) + 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c numOfDays; i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"            this.leaveList.remove(startDate.plusDays(i));","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"WeeMingQing"},"content":"     * Returns true if the number of days of leave to be added does not exceed the remaining days of leave","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"WeeMingQing"},"content":"     * that the emplyee has, else false.","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"WeeMingQing"},"content":"     * @return true or false depending on whether the total number of days of leave is exceeded","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isValidAddLeave(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"        if (endDate.getYear() \u003e currentDate.getYear() + 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"WeeMingQing"},"content":"        long numOfDays \u003d ChronoUnit.DAYS.between(startDate, endDate) + 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"WeeMingQing"},"content":"        int numOfLeaveForCurrYear \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"WeeMingQing"},"content":"        int numOfLeaveForNextYear \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c numOfDays; i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"            if (startDate.plusDays(i).getYear() \u003d\u003d currentDate.getYear()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"                numOfLeaveForCurrYear +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"            } else if (startDate.plusDays(i).getYear() \u003d\u003d currentDate.getYear() + 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"WeeMingQing"},"content":"                numOfLeaveForNextYear +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"        if (numOfLeaveForCurrYear + this.numOfLeaveUsedForCurrYear() \u003c\u003d this.getTotalNumOfLeave()","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"WeeMingQing"},"content":"                \u0026\u0026 numOfLeaveForNextYear + this.numOfLeaveUsedForNextYear() \u003c\u003d this.getTotalNumOfLeave()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"WeeMingQing"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"WeeMingQing"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"WeeMingQing"},"content":"     * To get the number of days of leave remaining for the current year.","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"WeeMingQing"},"content":"     * @return the number of days of leave left for the current year","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"WeeMingQing"},"content":"    public int numOfLeaveLeftForCurrYear() {","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"WeeMingQing"},"content":"        return this.getTotalNumOfLeave() - this.numOfLeaveUsedForCurrYear();","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"WeeMingQing"},"content":"     * To get the number of days of leave remaining for the next year.","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"WeeMingQing"},"content":"     * @return the number of days of leave left for the next year","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"WeeMingQing"},"content":"    public int numOfLeaveLeftForNextYear() {","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"WeeMingQing"},"content":"        return this.getTotalNumOfLeave() - this.numOfLeaveUsedForNextYear();","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"WeeMingQing"},"content":"     * To get the number of days of leave used for the current year.","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"WeeMingQing"},"content":"     * @return the number of days of leave used for the current year","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"WeeMingQing"},"content":"    public int numOfLeaveUsedForCurrYear() {","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"WeeMingQing"},"content":"        int numOfDays \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"WeeMingQing"},"content":"            if (date.getYear() \u003d\u003d currentDate.getYear()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"WeeMingQing"},"content":"                numOfDays +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"WeeMingQing"},"content":"        return numOfDays;","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"WeeMingQing"},"content":"     * To get the number of days of leave used for the next year.","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"WeeMingQing"},"content":"     * @return the number of days of leave used for the next year","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"WeeMingQing"},"content":"    public int numOfLeaveUsedForNextYear() {","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"WeeMingQing"},"content":"        int numOfDays \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"WeeMingQing"},"content":"            if (date.getYear() \u003d\u003d currentDate.getYear() + 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"WeeMingQing"},"content":"                numOfDays +\u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"WeeMingQing"},"content":"        return numOfDays;","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"WeeMingQing"},"content":"     * To get the total number of days of leave.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"WeeMingQing"},"content":"     * @return the total number of days of leave","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"WeeMingQing"},"content":"    public int getTotalNumOfLeave() {","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"WeeMingQing"},"content":"        return parseInt(this.value);","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"WeeMingQing"},"content":"     * Returns true if the leave to be added has already been added before, else false.","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate of the leave to be added to the leaveList","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"WeeMingQing"},"content":"     * @return true or false depending on whether there are duplicate leave","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"WeeMingQing"},"content":"    public boolean containsDuplicateLeave(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate tempEndDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"WeeMingQing"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"WeeMingQing"},"content":"            tempEndDate \u003d startDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"WeeMingQing"},"content":"            tempEndDate \u003d endDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"WeeMingQing"},"content":"            if (!date.isBefore(startDate) \u0026\u0026 !date.isAfter(tempEndDate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"WeeMingQing"},"content":"                return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"WeeMingQing"},"content":"        return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"WeeMingQing"},"content":"     * Returns true if the leave to be deleted has already been added before, else false.","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate of the leave to be deleted from the leaveList","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate of the leave to be deleted from the leaveList","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"WeeMingQing"},"content":"     * @return true or false depending on whether the dates given are all present in the leaveList","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"WeeMingQing"},"content":"    public boolean containsAllLeave(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"WeeMingQing"},"content":"        long numOfDays \u003d ChronoUnit.DAYS.between(startDate, endDate) + 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c numOfDays; i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"WeeMingQing"},"content":"            if (!this.leaveList.contains(startDate.plusDays(i))) {","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"WeeMingQing"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"WeeMingQing"},"content":"        return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"WeeMingQing"},"content":"     * To get whether the employee is working or on leave on the current day.","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"WeeMingQing"},"content":"     * @return \"Working\" if the employee is not one leave, else return \"On Leave\"","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"WeeMingQing"},"content":"    public String getLeaveStatus() {","lastModifiedDate":"2023-10-29"},{"lineNumber":277,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"WeeMingQing"},"content":"            if (currentDate.equals(date)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"WeeMingQing"},"content":"                return \"On Leave\";","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"WeeMingQing"},"content":"        return \"Working\";","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"WeeMingQing"},"content":"     * Return the string for the dates of the leave for current year and next year.","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"WeeMingQing"},"content":"     * @return string for the dates of the leave for current year and next year","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"WeeMingQing"},"content":"    public String printListLeaveTaken() {","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"WeeMingQing"},"content":"        String datesForCurrYear \u003d \"Leave taken for current year: [ \";","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"WeeMingQing"},"content":"        String datesForNextYear \u003d \"Leave taken for next year: [ \";","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"WeeMingQing"},"content":"            if (date.getYear() \u003d\u003d currentDate.getYear()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"WeeMingQing"},"content":"                datesForCurrYear +\u003d \" \" + ParserUtil.dateToString(date) + \", \";","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"WeeMingQing"},"content":"            } else if (date.getYear() \u003d\u003d currentDate.getYear() + 1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"WeeMingQing"},"content":"                datesForNextYear +\u003d \" \" + ParserUtil.dateToString(date) + \", \";","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"WeeMingQing"},"content":"        datesForCurrYear +\u003d \" ]\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"WeeMingQing"},"content":"        datesForNextYear +\u003d \" ]\";","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"WeeMingQing"},"content":"        return datesForCurrYear + datesForNextYear;","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"WeeMingQing"},"content":"    public void setLeaveList(List\u003cLocalDate\u003e list) {","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"WeeMingQing"},"content":"        this.leaveList \u003d list;","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":312,"author":{"gitId":"WeeMingQing"},"content":"     * Return the total number of days of leave taken from the joinDate to current Date.","lastModifiedDate":"2023-11-03"},{"lineNumber":313,"author":{"gitId":"WeeMingQing"},"content":"     * @return the total number of days of leave taken from the joinDate to current Date","lastModifiedDate":"2023-11-03"},{"lineNumber":314,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":315,"author":{"gitId":"WeeMingQing"},"content":"    public int getTotalLeaveTaken() {","lastModifiedDate":"2023-11-03"},{"lineNumber":316,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-03"},{"lineNumber":317,"author":{"gitId":"WeeMingQing"},"content":"        int numOfDays \u003d 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":318,"author":{"gitId":"WeeMingQing"},"content":"        for (LocalDate date: this.leaveList) {","lastModifiedDate":"2023-11-03"},{"lineNumber":319,"author":{"gitId":"WeeMingQing"},"content":"            if (!date.isAfter(currentDate)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":320,"author":{"gitId":"WeeMingQing"},"content":"                numOfDays +\u003d 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":321,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":322,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":323,"author":{"gitId":"WeeMingQing"},"content":"        return numOfDays;","lastModifiedDate":"2023-11-03"},{"lineNumber":324,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":325,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":326,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"WeeMingQing":259,"jibtaf":6,"applepiofmyeye":57,"Leb14":4}},{"path":"src/main/java/seedu/address/model/person/BankAccount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":" * Represents a Person\u0027s bankAccount in the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBankAccount(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"public class BankAccount {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"            \"Bank account should only contain numerical digits. It should not contain dashes or spaces.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{5,17}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a {@code BankAccount}.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"     * @param bankAccount A valid bank account.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"    public BankAccount(String bankAccount) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(bankAccount);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"        checkArgument(isValidBankAccount(bankAccount), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"        value \u003d bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns true if a given string is a valid bank account.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"    public static boolean isValidBankAccount(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof BankAccount)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        BankAccount otherBankAccount \u003d (BankAccount) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        return value.equals(otherBankAccount.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jibtaf":3,"applepiofmyeye":62}},{"path":"src/main/java/seedu/address/model/person/Benefit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.model.person.Payroll.DECIMAL_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s benefit of salary in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"public class Benefit extends Payment {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS_INVALID_REASON \u003d \"The reason for a benefit \"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        + \"should only be one of the following:\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        + \"1. Transport Allowance\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        + \"2. Annual Bonus\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    private static final ArrayList\u003cReason\u003e REASONS_FOR_BENEFITS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        List.of(","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"            Reason.TRANSPORT_ALLOWANCE,","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"            Reason.ANNUAL_BONUS","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        )","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    );","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    private final Reason reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Benefit}.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"     * @param benefit A valid benefit.","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    public Benefit(String benefit, Reason reason) {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        super(benefit);","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        checkArgument(isValidReason(reason), MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    public Reason getReason() {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        return reason;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"    public String getBenefitString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        return DECIMAL_FORMAT.format(this.getBenefit());","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"    public Double getBenefit() {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"        return Double.parseDouble(this.value);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * Returns true if a given reason is a valid reason for benefits.","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    public static boolean isValidReason(Reason test) {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        return REASONS_FOR_BENEFITS.contains(test);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"     * Returns true if the object is a valid benefit.","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        return Payment.isValid(value) \u0026\u0026 isValidReason(reason);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof Benefit)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        Benefit otherBenefit \u003d (Benefit) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        return value.equals(otherBenefit.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 reason.equals(otherBenefit.reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        return \"Benefit: $\" + value + \" (\" + reason + \")\";","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"Kevin-Liusx":9,"jibtaf":78}},{"path":"src/main/java/seedu/address/model/person/Deduction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.model.person.Payroll.DECIMAL_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s deduction of salary in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"public class Deduction extends Payment {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS_INVALID_REASON \u003d \"The reason for a deduction \"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        + \"should only be one of the following:\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        + \"1. No Pay Leave\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        + \"2. Absence\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        + \"3. Employee CPF Deduction\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    private static final ArrayList\u003cReason\u003e REASONS_FOR_DEDUCTIONS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        List.of(","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"            Reason.NO_PAY_LEAVE,","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"            Reason.ABSENCE,","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"            Reason.EMPLOYEE_CPF_DEDUCTION","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        )","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    );","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    private final Reason reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Deduction}.","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"     * @param value A valid deduction.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"     * @param reason A valid reason.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    public Deduction(String value, Reason reason) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        super(value);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        checkArgument(isValidReason(reason), MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    public Reason getReason() {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        return reason;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"    public String getDeductString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"        return DECIMAL_FORMAT.format(this.getDeduct());","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"    public Double getDeduct() {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"        return Double.parseDouble(this.value);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"     * Returns true if a given reason is a valid reason for deductions.","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    public static boolean isValidReason(Reason test) {","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        return REASONS_FOR_DEDUCTIONS.contains(test);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"     * Returns true if the object is a valid deduction.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        return Payment.isValid(value) \u0026\u0026 isValidReason(reason);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof Deduction)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        Deduction otherDeduction \u003d (Deduction) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        return value.equals(otherDeduction.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 reason.equals(otherDeduction.reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        return \"Deduction: $\" + value + \" (\" + reason + \")\";","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"Kevin-Liusx":9,"jibtaf":81}},{"path":"src/main/java/seedu/address/model/person/JoinDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s join date in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJoinDate(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"public class JoinDate {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Join date should be in the form of DD/MM/YYYY. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"        + \"Eg. 12/02/2023 represents 12th Feb 2023 and date must be valid!\";","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a {@code JoinDate}.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"     * @param joinDate A valid join date in dd/mm/yyyy form.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    public JoinDate(String joinDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(joinDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"        checkArgument(isValidJoinDate(joinDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"        value \u003d joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"     * Returns true if a given string is a valid join date in dd/mm/yyyy form.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"    public static boolean isValidJoinDate(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/uuuu\").withResolverStyle(ResolverStyle.STRICT).parse(test);","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof JoinDate)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        JoinDate otherJoinDate \u003d (JoinDate) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        return value.equals(otherJoinDate.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jibtaf":8,"WeeMingQing":3,"applepiofmyeye":56}},{"path":"src/main/java/seedu/address/model/person/Payment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s payment in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"public class Payment {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"        \"Payment should only contain numerical digits. It should not contain dashes or spaces.\"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"            + \"It should be in the format of XXXXX.XX, i.e. 2 decimal places\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    /*","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"     * The first character of the salary must not be a whitespace,","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\\\\.\\\\d{2}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    public final String value;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Payment}.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"     * @param value A valid payment.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    public Payment(String value) {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"     * Returns true if a given string is a valid payment.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    public static boolean isValid(String test) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        return value;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        if (!(other instanceof Payment)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        Payment otherPayment \u003d (Payment) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        return value.equals(otherPayment.value);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jibtaf":65}},{"path":"src/main/java/seedu/address/model/person/Payroll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":" * Represents an employee\u0027s payroll of the month.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"public class Payroll {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    public static final DecimalFormat DECIMAL_FORMAT \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    private Salary salary;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"    private LocalDate paymentDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"     * Constructs a {@code Payroll}.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param salary This contains the details of the person\u0027s salary.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"     *               E.g. basic salary, deductions and bonuses.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"    public Payroll(Salary salary) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"        LocalDate localDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"        this.startDate \u003d localDate.withDayOfMonth(1);","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"        this.endDate \u003d localDate.with(TemporalAdjusters.lastDayOfMonth());","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"        this.paymentDate \u003d localDate.plusMonths(1).withDayOfMonth(5);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Payroll}.","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"     * @param salary This contains the details of the person\u0027s salary.","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"     *               E.g. basic salary, deductions and bonuses.","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"     * @param startDate The start date of the payroll.","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"     * @param endDate The end date of the payroll.","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"     * @param paymentDate The payment date of the payroll.","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"    public Payroll(Salary salary, String startDate, String endDate, String paymentDate) {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"        this.startDate \u003d LocalDate.parse(startDate, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"        this.endDate \u003d LocalDate.parse(endDate, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        this.paymentDate \u003d LocalDate.parse(paymentDate, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"    public void addDeduction(Deduction deduction) {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        this.salary.addDeduction(deduction);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"    public void addBenefit(Benefit benefit) {","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        this.salary.addBenefit(benefit);","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"     * Calculates the net salary of a person.","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return net salary.","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    public String getNetSalaryString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getNetSalary());","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"     * Returns the basic salary of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"     * @return basic salary.","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"    public String getBasicSalaryString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getBasicSalary());","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"     * Returns the total deductions of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"     * @return total deductions.","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"    public String getTotalDeductionsString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getTotalDeductions());","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"     * Returns the total allowances of a person, except annual bonuses.","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"     * @return total allowances except annual bonuses.","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"    public String getTotalAllowancesExceptBonusesString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getTotalAllowancesExceptBonuses());","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"     * Returns the transport allowances of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"     * @return transport allowances.","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"    public String getTransportAllowancesString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getTransportAllowances());","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"     * Returns the annual bonuses of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"     * @return annual bonuses.","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"    public String getAnnualBonusesString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getAnnualBonuses());","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"     * Returns the no pay leaves of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"     * @return no pay leaves.","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"    public String getNoPayLeavesString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getNoPayLeaves());","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"     * Returns the absences of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"     * @return absences.","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"    public String getAbsencesString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getAbsences());","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"     * Returns the employee CPF deductions of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"     * @return employee CPF deductions.","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"    public String getEmployeeCpfDeductionsString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getEmployeeCpfDeductions());","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"     * Returns the gross pay of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"     * @return gross pay.","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"    public String getGrossPayString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"        return DECIMAL_FORMAT.format(this.salary.getGrossPay());","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"Kevin-Liusx"},"content":"     * Returns the start date of this payroll.","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return start date","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"Kevin-Liusx"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.startDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the start date of this payroll.","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"     * @return string representation of the start date","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"    public String getStartDateString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"        return this.startDate.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":154,"author":{"gitId":"Kevin-Liusx"},"content":"     * Returns the end date of this payroll.","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return end date","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"Kevin-Liusx"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.endDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the end date of this payroll.","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"     * @return string representation of the end date","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"    public String getEndDateString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"        return this.endDate.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":170,"author":{"gitId":"Kevin-Liusx"},"content":"     * Returns the payment date.","lastModifiedDate":"2023-10-29"},{"lineNumber":171,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return payment date.","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"Kevin-Liusx"},"content":"    public LocalDate getPaymentDate() {","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.endDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the payment date.","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"jibtaf"},"content":"     * @return string representation of the payment date","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"jibtaf"},"content":"    public String getPaymentDateString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"        return this.paymentDate.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"Kevin-Liusx"},"content":"     * Returns the string representation of the net salary.","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return string net salary.","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"Kevin-Liusx"},"content":"    public String calculatePayrollString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.salary.getNetSalaryString();","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"Kevin-Liusx"},"content":"    public Salary getSalary() {","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.salary;","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"jibtaf"},"content":"    public String getDeductionsString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"jibtaf"},"content":"        return this.salary.getDeductionsString();","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"jibtaf"},"content":"    public String getBenefitsString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"jibtaf"},"content":"        return this.salary.getBenefitsString();","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"Kevin-Liusx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"Kevin-Liusx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"Kevin-Liusx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"Kevin-Liusx"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"Kevin-Liusx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"Kevin-Liusx"},"content":"        if (!(other instanceof Payroll)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"Kevin-Liusx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll otherPayroll \u003d (Payroll) other;","lastModifiedDate":"2023-11-03"},{"lineNumber":217,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.salary.equals(otherPayroll.salary) \u0026\u0026 this.startDate.equals(otherPayroll.startDate)","lastModifiedDate":"2023-11-03"},{"lineNumber":218,"author":{"gitId":"Kevin-Liusx"},"content":"                \u0026\u0026 this.endDate.equals(otherPayroll.endDate) \u0026\u0026 this.paymentDate.equals(otherPayroll.paymentDate);","lastModifiedDate":"2023-11-03"},{"lineNumber":219,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Kevin-Liusx":91,"jibtaf":129}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.attendance.AttendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.attendance.AttendanceType;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":" * immutable.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    private final Email email;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    private final AnnualLeave annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    private final BankAccount bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    private final JoinDate joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    private final Salary salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"    private final AttendanceStorage attendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"    private final PayrollStorage payrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    public Person(Name name, Phone phone, Email email, Address address, BankAccount bankAccount, JoinDate joinDate,","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"            Salary salary, AnnualLeave annualLeave,","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"                  AttendanceStorage attendanceStorage, PayrollStorage payrollStorage) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(name, phone, email, address, bankAccount, joinDate, salary, annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        this.bankAccount \u003d bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        this.joinDate \u003d joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        this.annualLeave \u003d annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"        this.attendanceStorage \u003d attendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrollStorage \u003d payrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    public BankAccount getBankAccount() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        return bankAccount;","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"    public JoinDate getJoinDate() {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        return joinDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"    public Salary getSalary() {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        return salary;","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"    public AnnualLeave getAnnualLeave() {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        return annualLeave;","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"    public List\u003cLocalDate\u003e getLeaveList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        return annualLeave.getLeaveList();","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollStorage getPayrollStorage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.payrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"    public AttendanceStorage getAttendanceStorage() {","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"        return attendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"    private AttendanceType getAttendanceToday() {","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        return this.attendanceStorage.getType(LocalDate.now());","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"     * @return the working status of this employee.","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"    public AttendanceType getWorkingStatusToday() {","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"        if (this.annualLeave.getLeaveStatus().equals(\"On Leave\")) {","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"            return AttendanceType.ON_LEAVE;","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"        return this.getAttendanceToday();","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"     * Adds a payroll to the payroll list of this person.","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param payroll Payroll to be added.","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"Kevin-Liusx"},"content":"    public void addPayroll(Payroll payroll) {","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrollStorage.add(payroll);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"     * Returns the latest payroll of this person.","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"     * @return Latest payroll.","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"    public Payroll getLatestPayroll() {","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.payrollStorage.getLatestPayroll();","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"Kevin-Liusx"},"content":"     * Returns a payroll based on a specific date.","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"     * @param date Start date of the payroll you want to retrieve, in MM/YY.","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return payroll of a specific start date.","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"Kevin-Liusx"},"content":"    public Payroll getPayrollWithStartDate(LocalDate date) {","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.payrollStorage.getPayrollWithStartDate(date);","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"            \u0026\u0026 otherPerson.equals(this);","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 bankAccount.equals(otherPerson.bankAccount)","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 joinDate.equals(otherPerson.joinDate)","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 salary.equals(otherPerson.salary)","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 annualLeave.equals(otherPerson.annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"jibtaf"},"content":"        return Objects.hash(name, phone, email, address, bankAccount, joinDate, salary, annualLeave);","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"jibtaf"},"content":"                .add(\"bankAccount\", bankAccount)","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"jibtaf"},"content":"                .add(\"joinDate\", joinDate)","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"jibtaf"},"content":"                .add(\"salary\", salary)","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"WeeMingQing"},"content":"                .add(\"annualLeave\", annualLeave.value)","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kevin-Liusx":19,"jibtaf":44,"WeeMingQing":11,"applepiofmyeye":14,"-":100,"Leb14":7}},{"path":"src/main/java/seedu/address/model/person/Reason.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":" * Represents reasons for deductions or benefits.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"public enum Reason {","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"    ABSENCE,","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"    TRANSPORT_ALLOWANCE,","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"    NO_PAY_LEAVE,","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"    ANNUAL_BONUS,","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    EMPLOYEE_CPF_DEDUCTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    public static final String MISSING_ALERT \u003d \"Please specify your reason with /r prefix.\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        \"Reasons should only be one of the following:\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        + \"1. \" + ABSENCE.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        + \"2. \" + TRANSPORT_ALLOWANCE.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        + \"3. \" + NO_PAY_LEAVE.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        + \"4. \" + ANNUAL_BONUS.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        + \"5. \" + EMPLOYEE_CPF_DEDUCTION.toString() + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        + \"Please specify your reason.\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jibtaf":23}},{"path":"src/main/java/seedu/address/model/person/Salary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":" * Represents a Person\u0027s salary in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValid(String)}","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"public class Salary extends Payment {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    private ArrayList\u003cDeduction\u003e deductions;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    private ArrayList\u003cBenefit\u003e benefits;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code Salary}.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     * @param salary A valid basic salary.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    public Salary(String salary) {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        super(salary);","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"        this.deductions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"        this.benefits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"     * Constructs a {@code Salary}.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"     * @param salary A valid basic salary.","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"     * @param deductions A list of valid deductions.","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"     * @param benefits A list of valid benefits.","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    public Salary(String salary, ArrayList\u003cDeduction\u003e deductions, ArrayList\u003cBenefit\u003e benefits) {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        super(salary);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        this.deductions \u003d deductions;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        this.benefits \u003d benefits;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"     * Calculates the total deductions of a person.","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"     * @return total deductions.","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    public double getTotalDeductions() {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        for (Deduction deduction : deductions) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"            total +\u003d Double.parseDouble(deduction.value);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"     * Calculates the total benefits of a person.","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"     * @return total benefits.","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"    public double getTotalBenefits() {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        for (Benefit benefit : benefits) {","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"            total +\u003d Double.parseDouble(benefit.value);","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"     * Calculates the net salary of a person.","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"     * @return net salary.","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"    public double getNetSalary() {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        double total \u003d Double.parseDouble(value);","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        total -\u003d getTotalDeductions();","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        total +\u003d getTotalBenefits();","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the net salary.","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"     * @return net salary string.","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"    public String getNetSalaryString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        String basicSalary \u003d \"Basic Pay: $\" + super.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"        String deductions \u003d \"Total Deductions: $\" + df.format(getTotalDeductions());","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"        String benefits \u003d \"Total Benefits: $\" + df.format(getTotalBenefits());","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"Kevin-Liusx"},"content":"        String netSalary \u003d \"Net Salary: $\" + df.format(getNetSalary());","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"        return String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\", netSalary, basicSalary, deductions, benefits);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"     * Adds a deduction to this salary.","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"     * @param d The deduction to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"    public void addDeduction(Deduction d) {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"            deductions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        deductions.add(d);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the deductions.","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"     * @return deductions string.","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"    public String getDeductionsString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"            return \"NIL\";","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"        String deductionsString \u003d \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"        for (Deduction deduction : deductions) {","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"            deductionsString +\u003d i + \". \" + deduction.toString() + \"\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"            i++;","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"        return deductionsString;","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"     * Adds a benefit to this salary.","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"     * @param b The benefit to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"    public void addBenefit(Benefit b) {","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"            benefits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"        benefits.add(b);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"     * Returns the string representation of the benefits.","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"     * @return benefits string.","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"    public String getBenefitsString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"            return \"NIL\";","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"        String benefitsString \u003d \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"        for (Benefit benefit : benefits) {","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"            benefitsString +\u003d i + \". \" + benefit.toString() + \"\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"            i++;","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"        return benefitsString;","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"     * Returns the basic salary of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"     * @return basic salary.","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"    public double getBasicSalary() {","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"        return Double.parseDouble(value);","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"     * Returns the total allowances of a person, except annual bonuses.","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"     * @return total allowances except annual bonuses.","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"    public double getTotalAllowancesExceptBonuses() {","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"jibtaf"},"content":"        for (Benefit benefit : benefits) {","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"jibtaf"},"content":"            if (!benefit.getReason().equals(Reason.ANNUAL_BONUS)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"                total +\u003d Double.parseDouble(benefit.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"jibtaf"},"content":"     * Returns the transport allowances of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"jibtaf"},"content":"     * @return transport allowances.","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"    public double getTransportAllowances() {","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"jibtaf"},"content":"        for (Benefit benefit : benefits) {","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"jibtaf"},"content":"            if (benefit.getReason().equals(Reason.TRANSPORT_ALLOWANCE)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"jibtaf"},"content":"                total +\u003d Double.parseDouble(benefit.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"jibtaf"},"content":"     * Returns the annual bonuses of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"jibtaf"},"content":"     * @return annual bonuses.","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"jibtaf"},"content":"    public double getAnnualBonuses() {","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"jibtaf"},"content":"        if (benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"jibtaf"},"content":"        for (Benefit benefit : benefits) {","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"jibtaf"},"content":"            if (benefit.getReason().equals(Reason.ANNUAL_BONUS)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"jibtaf"},"content":"                total +\u003d Double.parseDouble(benefit.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"jibtaf"},"content":"     * Returns the no pay leaves of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"jibtaf"},"content":"     * @return no pay leaves.","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"jibtaf"},"content":"    public double getNoPayLeaves() {","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"jibtaf"},"content":"        for (Deduction deduction : deductions) {","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"jibtaf"},"content":"            if (deduction.getReason().equals(Reason.NO_PAY_LEAVE)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"jibtaf"},"content":"                total +\u003d Double.parseDouble(deduction.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"jibtaf"},"content":"     * Returns the absences of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"jibtaf"},"content":"     * @return absences.","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"jibtaf"},"content":"    public double getAbsences() {","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"jibtaf"},"content":"        for (Deduction deduction : deductions) {","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"jibtaf"},"content":"            if (deduction.getReason().equals(Reason.ABSENCE)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"jibtaf"},"content":"                total +\u003d Double.parseDouble(deduction.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"jibtaf"},"content":"     * Returns the employee CPF deductions of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"jibtaf"},"content":"     * @return employee CPF deductions.","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"jibtaf"},"content":"    public double getEmployeeCpfDeductions() {","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"jibtaf"},"content":"            return 0.0;","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"jibtaf"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"jibtaf"},"content":"        for (Deduction deduction : deductions) {","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"jibtaf"},"content":"            if (deduction.getReason().equals(Reason.EMPLOYEE_CPF_DEDUCTION)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"jibtaf"},"content":"                total +\u003d Double.parseDouble(deduction.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"jibtaf"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"jibtaf"},"content":"        return total;","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"jibtaf"},"content":"     * Returns the gross pay of a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"jibtaf"},"content":"     * @return gross pay.","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"jibtaf"},"content":"    public double getGrossPay() {","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"jibtaf"},"content":"        return getBasicSalary() + getTotalAllowancesExceptBonuses();","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"Kevin-Liusx"},"content":"    public ArrayList\u003cDeduction\u003e getDeductions() {","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.deductions;","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":279,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"Kevin-Liusx"},"content":"    public ArrayList\u003cBenefit\u003e getBenefits() {","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.benefits;","lastModifiedDate":"2023-11-01"},{"lineNumber":282,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":283,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":284,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":285,"author":{"gitId":"applepiofmyeye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":286,"author":{"gitId":"applepiofmyeye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":287,"author":{"gitId":"applepiofmyeye"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":288,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":289,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":290,"author":{"gitId":"applepiofmyeye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":291,"author":{"gitId":"applepiofmyeye"},"content":"        if (!(other instanceof Salary)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":292,"author":{"gitId":"applepiofmyeye"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":293,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":294,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":295,"author":{"gitId":"jibtaf"},"content":"        Salary otherSalary \u003d (Salary) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":296,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":297,"author":{"gitId":"jibtaf"},"content":"        // degenerates to Payment if deductions and benefits are null","lastModifiedDate":"2023-10-24"},{"lineNumber":298,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null \u0026\u0026 benefits \u003d\u003d null \u0026\u0026 otherSalary.deductions \u003d\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherSalary.benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":300,"author":{"gitId":"jibtaf"},"content":"            return super.equals(other);","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":302,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":303,"author":{"gitId":"jibtaf"},"content":"        if (deductions !\u003d null \u0026\u0026 benefits !\u003d null \u0026\u0026 otherSalary.deductions !\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherSalary.benefits !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"jibtaf"},"content":"            return value.equals(otherSalary.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":306,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 deductions.equals(otherSalary.deductions)","lastModifiedDate":"2023-10-24"},{"lineNumber":307,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 benefits.equals(otherSalary.benefits);","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":310,"author":{"gitId":"jibtaf"},"content":"        if (deductions !\u003d null \u0026\u0026 benefits \u003d\u003d null \u0026\u0026 otherSalary.deductions !\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":311,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherSalary.benefits \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":312,"author":{"gitId":"jibtaf"},"content":"            return value.equals(otherSalary.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":313,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 deductions.equals(otherSalary.deductions);","lastModifiedDate":"2023-10-24"},{"lineNumber":314,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":315,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"jibtaf"},"content":"        if (deductions \u003d\u003d null \u0026\u0026 benefits !\u003d null \u0026\u0026 otherSalary.deductions \u003d\u003d null","lastModifiedDate":"2023-10-25"},{"lineNumber":317,"author":{"gitId":"jibtaf"},"content":"                \u0026\u0026 otherSalary.benefits !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":318,"author":{"gitId":"jibtaf"},"content":"            return value.equals(otherSalary.value)","lastModifiedDate":"2023-10-24"},{"lineNumber":319,"author":{"gitId":"jibtaf"},"content":"                    \u0026\u0026 benefits.equals(otherSalary.benefits);","lastModifiedDate":"2023-10-24"},{"lineNumber":320,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":321,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":322,"author":{"gitId":"jibtaf"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":323,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":324,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Kevin-Liusx":15,"jibtaf":275,"applepiofmyeye":34}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"     * Replaces the person {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"     * The person identity of {@code editedEmployee} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    public void setPerson(Person target, Person editedEmployee) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        if (!target.isSamePerson(editedEmployee) \u0026\u0026 contains(editedEmployee)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        internalList.set(index, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jibtaf":6,"-":144}},{"path":"src/main/java/seedu/address/model/person/attendance/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person.attendance;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":" * Represents an employee\u0027s attendance.","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"public class Attendance {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"    private LocalDate date;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"    private AttendanceType attendanceType;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"     * Constructs a {@code Attendance}.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param date date you want to record","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param attendanceType the type of attendance.","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    public Attendance(LocalDate date, AttendanceType attendanceType) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(attendanceType);","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"        this.attendanceType \u003d attendanceType;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"        return this.date;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    public AttendanceType getType() {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"        return this.attendanceType;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"    public void markAbsent() {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"        this.attendanceType \u003d AttendanceType.ABSENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"    public void markLate() {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        this.attendanceType \u003d AttendanceType.LATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \"//\" + attendanceType.toString().toLowerCase();","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Kevin-Liusx":8,"applepiofmyeye":40}},{"path":"src/main/java/seedu/address/model/person/attendance/AttendanceStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person.attendance;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":" * Stores the attendances of each person.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"public class AttendanceStorage {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"    private ArrayList\u003cAttendance\u003e storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"     * Constructs a {@code AttendanceStorage}","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"    public AttendanceStorage() {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"        storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"     * Constructs a {@code AttendanceStorage}","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param attendances A list of attendance records.","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    public AttendanceStorage(ArrayList\u003cString\u003e attendances) {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"        this();","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"        for (String attendance : attendances) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"            String[] attendanceArr \u003d attendance.split(\"//\");","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"            DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"                    .appendPattern(\"dd/MM/yyyy\")","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"                    .toFormatter();","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"            LocalDate date \u003d LocalDate.parse(attendanceArr[0], formatter);","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"            AttendanceType attendanceType \u003d AttendanceType.valueOf(attendanceArr[1].toUpperCase());","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"            storage.add(new Attendance(date, attendanceType));","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"     * Gets the attendance given the date.","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"     * @param date date to query","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"     * @return the type of attendance of the person on this date","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"    private Attendance getAttendance(LocalDate date) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(storage);","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        if (storage.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"            // Anything not in storage is present.","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"            return null;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        for (Attendance attendance : storage) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"            if (attendance.getDate().equals(date)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"                return attendance;","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"        return null;","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"     * Get the attendance type on a specific date","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param date date of attendance type you want to know","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return attendance type. This can either be Late, Absent or Present.","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"    public AttendanceType getType(LocalDate date) {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"        if (getAttendance(date) \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"            return AttendanceType.PRESENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(getAttendance(date));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"        return getAttendance(date).getType();","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"     * Marks a person to be absent.","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param date The date on which the person is absent.","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"    public void markAbsent(LocalDate date) {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"        if (getAttendance(date) \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"            storage.add(new Attendance(date, AttendanceType.ABSENT));","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"            requireNonNull(getAttendance(date));","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"            getAttendance(date).markAbsent();","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"Kevin-Liusx"},"content":"     * Marks a person to be late.","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param date The date on which the person is late.","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"    public void markLate(LocalDate date) {","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"        if (getAttendance(date) \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"            storage.add(new Attendance(date, AttendanceType.LATE));","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"            requireNonNull(getAttendance(date));","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"            getAttendance(date).markLate();","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"     * Marks a person to be present.","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param date The date on which the person is present.","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"    public void markPresent(LocalDate date) {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"        if (getAttendance(date) !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"            storage.remove(getAttendance(date));","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"     * Returns the attendanceType of the employee on the current date.","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"    public AttendanceType getTodayAttendance() {","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"        return getType(currentDate);","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"applepiofmyeye"},"content":"     * Gets the number of attendances for the given type.","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"applepiofmyeye"},"content":"     * @param type the type of attendance","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"applepiofmyeye"},"content":"     * @param joinDate the date the employee joined","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"applepiofmyeye"},"content":"     * @param numOfLeave the number of leaves taken","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"applepiofmyeye"},"content":"     * @return","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"    private int getCount(AttendanceType type, JoinDate joinDate, int numOfLeave) {","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"Kevin-Liusx"},"content":"        //TODO decide if the param should be JoinDate or LocalDate","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"applepiofmyeye"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"applepiofmyeye"},"content":"        LocalDate dateJoined \u003d LocalDate.parse(joinDate.value, formatter);","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"applepiofmyeye"},"content":"        if (type \u003d\u003d AttendanceType.PRESENT) {","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"applepiofmyeye"},"content":"            int numOfDaysSinceJoining \u003d dateJoined.until(LocalDate.now()).getDays();","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"            int numOfDaysPresent \u003d numOfDaysSinceJoining - getCount(AttendanceType.ABSENT, joinDate, numOfLeave)","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"                    - getCount(AttendanceType.LATE, joinDate, numOfLeave) - numOfLeave;","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"applepiofmyeye"},"content":"            return numOfDaysPresent;","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"applepiofmyeye"},"content":"        return (int) storage.stream()","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"applepiofmyeye"},"content":"                .filter(attendance -\u003e attendance.getType() \u003d\u003d type)","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"applepiofmyeye"},"content":"                .count();","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"applepiofmyeye"},"content":"     * Gets the number of attendances for the given type.","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"applepiofmyeye"},"content":"     * @return array of attendances, number of days leave, number of days absent and number of days late.","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"applepiofmyeye"},"content":"    public int[] getAttendanceReport(JoinDate joinDate, int numOfLeave) {","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"WeeMingQing"},"content":"        int numOfDaysOnLeave \u003d numOfLeave;","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"        int numOfDaysAbsent \u003d getCount(AttendanceType.ABSENT, joinDate, numOfLeave);","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"        int numOfDaysLate \u003d getCount(AttendanceType.LATE, joinDate, numOfLeave);","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"applepiofmyeye"},"content":"        return new int[]{numOfDaysOnLeave, numOfDaysAbsent, numOfDaysLate};","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"applepiofmyeye"},"content":"     * Gets value of storage as an array list of Strings.","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"applepiofmyeye"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"applepiofmyeye"},"content":"     * @return array list of Attendance values as string","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"applepiofmyeye"},"content":"    public ArrayList\u003cString\u003e getValue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"Kevin-Liusx"},"content":"        // Assuming storage is an ArrayList\u003cAttendance\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"Kevin-Liusx"},"content":"        ArrayList\u003cAttendance\u003e attendancesCopy \u003d new ArrayList\u003c\u003e(storage);","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"applepiofmyeye"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"applepiofmyeye"},"content":"        for (Attendance attendance : attendancesCopy) {","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"applepiofmyeye"},"content":"            result.add(attendance.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"applepiofmyeye"},"content":"        return result;","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Kevin-Liusx":30,"WeeMingQing":14,"applepiofmyeye":137}},{"path":"src/main/java/seedu/address/model/person/attendance/AttendanceType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person.attendance;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":" * Types of attendance","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"public enum AttendanceType {","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"    LATE,","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"    ABSENT,","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"    PRESENT,","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    ON_LEAVE;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"            \"Attendance type should only contain alphabets. It should either be \u0027present\u0027, \u0027late\u0027 or \u0027absent\u0027.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"     * Validate the attendance type entered by the user.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"     * @param name attendance type entered by the user.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return the result of the validation, true if it matches one of the tree attendance types","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"    public static boolean isValidAttendanceType(String name) {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"        name \u003d name.toLowerCase();","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"        return name.equals(\"present\") || name.equals(\"absent\") || name.equals(\"late\");","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Kevin-Liusx":6,"WeeMingQing":2,"jibtaf":1,"applepiofmyeye":15}},{"path":"src/main/java/seedu/address/model/person/payroll/PayrollStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.model.person.payroll;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":" * Stores the payrolls of all employees.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"public class PayrollStorage {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"    private ArrayList\u003cPayroll\u003e payrolls;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollStorage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrolls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    public PayrollStorage(ArrayList\u003cPayroll\u003e payrolls) {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrolls \u003d payrolls;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"    public void add(Payroll payroll) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrolls.add(payroll);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"    public ArrayList\u003cPayroll\u003e getPayrolls() {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.payrolls;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"    public Payroll getLatestPayroll() {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"        return this.payrolls.get(this.payrolls.size() - 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"    public Payroll getPayrollWithStartDate(LocalDate date) {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"        for (Payroll payroll: payrolls) {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"            if (payroll.getStartDate().getMonth().equals(date.getMonth())","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"                    \u0026\u0026 payroll.getStartDate().getYear() \u003d\u003d date.getYear()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"                return payroll;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"        return null;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"    public ArrayList\u003cString\u003e getValue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"        ArrayList\u003cString\u003e value \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        return value;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Kevin-Liusx":45,"jibtaf":3}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.attendance.AttendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"        Person[] persons \u003d new Person[] {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new BankAccount(\"1234567\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"                    new JoinDate(\"12/02/2023\"), new Salary(\"1000.00\"), new AnnualLeave(\"20\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"                    new AttendanceStorage(), new PayrollStorage()),","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new BankAccount(\"293737\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"                    new JoinDate(\"10/02/2003\"), new Salary(\"200.00\"), new AnnualLeave(\"10\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"                    new AttendanceStorage(), new PayrollStorage()),","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new BankAccount(\"129313\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"                    new JoinDate(\"20/03/2013\"), new Salary(\"3400.00\"), new AnnualLeave(\"3\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"                    new AttendanceStorage(), new PayrollStorage()),","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new BankAccount(\"34276382\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"                    new JoinDate(\"30/01/2020\"), new Salary(\"1300.00\"), new AnnualLeave(\"0\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"                    new AttendanceStorage(), new PayrollStorage()),","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new BankAccount(\"19382737\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"                    new JoinDate(\"13/09/2023\"), new Salary(\"2010.00\"), new AnnualLeave(\"2\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"                    new AttendanceStorage(), new PayrollStorage()),","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new BankAccount(\"10239871\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"                    new JoinDate(\"03/12/2012\"), new Salary(\"3000.00\"), new AnnualLeave(\"1\"),","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"                    new AttendanceStorage(), new PayrollStorage())","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"        for (Person person: persons) {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"            person.addPayroll(new Payroll(person.getSalary()));","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"        return persons;","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Kevin-Liusx":15,"applepiofmyeye":17,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBenefit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":" * Jackson-friendly version of {@link Benefit}.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"public class JsonAdaptedBenefit {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"    private final String reason;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    private final String benefit;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code JsonAdaptedBenefit} with the given benefit details.","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    @JsonCreator","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"    public JsonAdaptedBenefit(@JsonProperty(\"reason\") String reason, @JsonProperty(\"benefit\") String benefit) {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"        this.benefit \u003d benefit;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"     * Converts a given {@code Benefit} into this class for Jackson use.","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    public JsonAdaptedBenefit(Benefit benefit) {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"        this.reason \u003d benefit.getReason().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"        this.benefit \u003d benefit.getBenefitString();","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"     * Converts this Jackson-friendly adapted benefit object into the model\u0027s {@code Benefit} object.","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"    public Benefit toModelType() {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"        return new Benefit(this.benefit, Reason.valueOf(this.reason));","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Kevin-Liusx":27,"jibtaf":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDeduction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":" * Jackson-friendly version of {@link Deduction}.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"public class JsonAdaptedDeduction {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"    private final String reason;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    private final String deduction;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code JsonAdaptedDeduction} with the given deduction details.","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    @JsonCreator","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"    public JsonAdaptedDeduction(@JsonProperty(\"reason\") String reason, @JsonProperty(\"deductions\") String deduction) {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"        this.deduction \u003d deduction;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"     * Converts a given {@code Deduction} into this class for Jackson use.","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    public JsonAdaptedDeduction(Deduction deduction) {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"        this.reason \u003d deduction.getReason().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"        this.deduction \u003d deduction.getDeductString();","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"     * Converts this Jackson-friendly adapted deduction object into the model\u0027s {@code Deduction} object.","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"    public Deduction toModelType() {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"        return new Deduction(this.deduction, Reason.valueOf(this.reason));","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Kevin-Liusx":27,"jibtaf":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPayroll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":" * Jackson-friendly version of {@link Payroll}.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"public class JsonAdaptedPayroll {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"    private final String salary;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"    private final String startDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"    private final String endDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"    private final String paymentDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    private final List\u003cJsonAdaptedBenefit\u003e benefits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"    private final List\u003cJsonAdaptedDeduction\u003e deductions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"     * Constructs a {@code JsonAdaptedPayroll} with the given payroll details.","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"    @JsonCreator","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    public JsonAdaptedPayroll(@JsonProperty(\"salary\") String salary, @JsonProperty(\"startDate\") String startDate,","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"            @JsonProperty(\"endDate\") String endDate, @JsonProperty(\"paymentDate\") String paymentDate,","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"            @JsonProperty(\"benefits\") List\u003cJsonAdaptedBenefit\u003e benefits,","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"            @JsonProperty(\"deductions\") List\u003cJsonAdaptedDeduction\u003e deductions) {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"        this.paymentDate \u003d paymentDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"        this.benefits.addAll(benefits);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"        this.deductions.addAll(deductions);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"     * Converts a given {@code Payroll} into this class for Jackson use.","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"    public JsonAdaptedPayroll(Payroll payroll) {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"        salary \u003d payroll.getBasicSalaryString();","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"        startDate \u003d payroll.getStartDateString();","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"        endDate \u003d payroll.getEndDateString();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"        paymentDate \u003d payroll.getPaymentDateString();","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"        benefits.addAll(payroll.getSalary()","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"                .getBenefits()","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"                .stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"                .map(JsonAdaptedBenefit::new)","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"        deductions.addAll(payroll.getSalary()","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"                .getDeductions()","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"                .stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"                .map(JsonAdaptedDeduction::new)","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"     * Converts this Jackson-friendly adapted payroll object into the model\u0027s {@code Payroll} object.","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Kevin-Liusx"},"content":"    public Payroll toModelType() {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"        final ArrayList\u003cBenefit\u003e personBenefits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"        final ArrayList\u003cDeduction\u003e personDeductions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Kevin-Liusx"},"content":"        for (JsonAdaptedBenefit benefit: benefits) {","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Kevin-Liusx"},"content":"            personBenefits.add(benefit.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Kevin-Liusx"},"content":"        for (JsonAdaptedDeduction deduction: deductions) {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"            personDeductions.add(deduction.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Kevin-Liusx"},"content":"        return new Payroll(new Salary(this.salary, personDeductions, personBenefits),","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Kevin-Liusx"},"content":"                this.startDate, this.endDate, this.paymentDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Kevin-Liusx":69,"jibtaf":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.attendance.AttendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"    private final String bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    private final String joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"    private final String salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"    private final String annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    private final ArrayList\u003cString\u003e attendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"    private final List\u003cJsonAdaptedPayroll\u003e payrolls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"            @JsonProperty(\"bankAccount\") String bankAccount, @JsonProperty(\"joinDate\") String joinDate,","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"            @JsonProperty(\"salary\") String salary, @JsonProperty(\"annualLeave\") String annualLeave,","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"            @JsonProperty(\"attendanceStorage\") ArrayList\u003cString\u003e attendanceStorage,","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"            @JsonProperty(\"payrolls\") List\u003cJsonAdaptedPayroll\u003e payrolls) {","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        this.bankAccount \u003d bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        this.joinDate \u003d joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"        this.annualLeave \u003d annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"        this.attendanceStorage \u003d attendanceStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrolls.addAll(payrolls);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"        bankAccount \u003d source.getBankAccount().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"        joinDate \u003d source.getJoinDate().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        salary \u003d source.getSalary().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage \u003d source.getAttendanceStorage().getValue();","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        annualLeave \u003d source.getAnnualLeave().toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Kevin-Liusx"},"content":"        payrolls.addAll(source.getPayrollStorage().getPayrolls()","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"                .stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"                .map(JsonAdaptedPayroll::new)","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"     * {@code Person} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"     *                               the adapted person.","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"        final ArrayList\u003cPayroll\u003e personPayrolls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"Kevin-Liusx"},"content":"        for (JsonAdaptedPayroll payroll: payrolls) {","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"            personPayrolls.add(payroll.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"        if (!BankAccount.isValidBankAccount(bankAccount)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"applepiofmyeye"},"content":"            throw new IllegalValueException(BankAccount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"applepiofmyeye"},"content":"        final BankAccount modelBankAccount \u003d new BankAccount(bankAccount);","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"applepiofmyeye"},"content":"        if (!JoinDate.isValidJoinDate(joinDate)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"applepiofmyeye"},"content":"            throw new IllegalValueException(JoinDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"applepiofmyeye"},"content":"        final JoinDate modelJoinDate \u003d new JoinDate(joinDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"        if (!Salary.isValid(salary)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"applepiofmyeye"},"content":"            throw new IllegalValueException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"applepiofmyeye"},"content":"        final Salary modelSalary \u003d new Salary(salary);","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"        if (!AnnualLeave.isValidAnnualLeave(getTotalNumOfLeaves(annualLeave))) {","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"applepiofmyeye"},"content":"            throw new IllegalValueException(AnnualLeave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"applepiofmyeye"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"        final AnnualLeave modelAnnualLeave \u003d new AnnualLeave(getTotalNumOfLeaves(annualLeave));","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"        modelAnnualLeave.setLeaveList(stringToLeaveListConverter(annualLeave));","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"applepiofmyeye"},"content":"        final AttendanceStorage modelAttendanceStorage \u003d new AttendanceStorage(attendanceStorage);","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"Kevin-Liusx"},"content":"        final PayrollStorage modelPayrollStorage \u003d new PayrollStorage(personPayrolls);","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"applepiofmyeye"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelBankAccount, modelJoinDate, modelSalary,","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"Kevin-Liusx"},"content":"                modelAnnualLeave, modelAttendanceStorage, modelPayrollStorage);","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"    public List\u003cLocalDate\u003e stringToLeaveListConverter(String annualLeave) {","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"        List\u003cLocalDate\u003e leaveList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"        String args \u003d annualLeave.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"        String[] dates \u003d args.split(\" \\\\| \");","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 1; i \u003c dates.length; i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"WeeMingQing"},"content":"            System.out.println(ParserUtil.stringToDate(dates[i]));","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"WeeMingQing"},"content":"            leaveList.add(ParserUtil.stringToDate(dates[i]));","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"        return leaveList;","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"WeeMingQing"},"content":"    public String getTotalNumOfLeaves(String annualLeave) {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"WeeMingQing"},"content":"        String args \u003d annualLeave.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"WeeMingQing"},"content":"        String[] dates \u003d args.split(\" \\\\| \");","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"        return dates[0];","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kevin-Liusx":14,"WeeMingQing":22,"jibtaf":4,"applepiofmyeye":43,"-":94}},{"path":"src/main/java/seedu/address/ui/CalendarComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":" * The UI component that is responsible for showing the calendar.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"public class CalendarComponent extends VBox {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    private LocalDate currentDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    private GridPane calendarGrid;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"     * Creates a {@code CalendarComponent} with the current date.","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public CalendarComponent(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        calendarGrid \u003d new GridPane();","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        createCalendarUI();","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     * Creates a {@code CalendarComponent} with the given {@code ObservableList} and date.","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    public CalendarComponent(ObservableList\u003cPerson\u003e personList, LocalDate newDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        currentDate \u003d newDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        calendarGrid \u003d new GridPane();","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        createCalendarUI();","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    private void createCalendarUI() {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        calendarGrid.getStyleClass().add(\"calendar-grid\");","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        // Define the labels for the days of the week","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        String[] daysOfWeek \u003d { \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\" };","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        // Add day labels (Sun, Mon, Tue, etc.) to the calendar grid","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c daysOfWeek.length; i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"            Label dayLabel \u003d new Label(daysOfWeek[i]);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"            dayLabel.getStyleClass().add(\"day-name-label\");","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"            calendarGrid.add(dayLabel, i, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        Map\u003cLocalDate, List\u003cString\u003e\u003e leaveRecords \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        for (Person person : personList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"            for (LocalDate leaveDate : person.getLeaveList()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"                LocalDate currentDateToCheck \u003d leaveDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"                leaveRecords.computeIfAbsent(currentDateToCheck, k -\u003e new ArrayList\u003c\u003e()).add(person.getName().fullName);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        // Determine the first day of the current month","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        LocalDate firstDayOfMonth \u003d currentDate.withDayOfMonth(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"        int firstDayOfWeek \u003d firstDayOfMonth.getDayOfWeek().getValue(); // 1 for Monday, 7 for Sunday","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        int currentRow \u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        // Fill in the calendar grid with day labels for the current month","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"        for (int day \u003d 1; day \u003c\u003d currentDate.lengthOfMonth(); day++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"            Label dayLabel \u003d new Label(Integer.toString(day));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"            VBox dayContainer \u003d new VBox(dayLabel);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"            dayContainer.getStyleClass().add(\"day-container\");","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"            dayLabel.getStyleClass().add(\"day-label\");","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"            calendarGrid.add(dayContainer, (firstDayOfWeek + day - 2) % 7, currentRow);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"            // Check if there is a leave record for this date","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"            LocalDate currentDateToCheck \u003d currentDate.withDayOfMonth(day);","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"            if (leaveRecords.containsKey(currentDateToCheck)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"                List\u003cString\u003e personNames \u003d leaveRecords.get(currentDateToCheck);","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"                Label nameLabel \u003d new Label(String.format(\"On leave : %d\", personNames.size()));","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"                dayContainer.getChildren().add(nameLabel);","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"                nameLabel.getStyleClass().add(\"name-label\");","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"                Label emptyLabel \u003d new Label(\"On leave : 0\");","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"                dayContainer.getChildren().add(emptyLabel);","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"                emptyLabel.getStyleClass().add(\"empty-label\");","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"            if (day \u003d\u003d currentDate.getDayOfMonth() \u0026\u0026 currentDate.isEqual(LocalDate.now())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"                dayContainer.getStyleClass().add(\"today\");","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"            if (day !\u003d currentDate.getDayOfMonth() || !currentDate.isEqual(LocalDate.now())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"                dayContainer.getStyleClass().add(\"not-today\");","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"            if ((firstDayOfWeek + day - 2) % 7 \u003d\u003d 6) {","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"                currentRow++;","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"        this.getChildren().add(calendarGrid);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"    public void setCurrentDate(LocalDate newDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"        this.currentDate \u003d newDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"    public LocalDate getCurrentDate() {","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"        return currentDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":12,"Leb14":108}},{"path":"src/main/java/seedu/address/ui/ClockComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":" * The UI component that is responsible for showing a clock.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"public class ClockComponent extends Label {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     * Creates a {@code ClockComponent} with the current time.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    public ClockComponent() {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        getStyleClass().add(\"clock-label\");","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        initializeClock();","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    private void initializeClock() {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        Timeline clockTimeline \u003d new Timeline(new KeyFrame(Duration.ZERO, e -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HH:mm:ss\");","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"            setText(LocalDateTime.now().format(dtf));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        }), new KeyFrame(Duration.seconds(1)));","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        clockTimeline.setCycleCount(Timeline.INDEFINITE);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        clockTimeline.play();","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":10,"Leb14":22}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w12-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jibtaf":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    private List\u003cInteger\u003e indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    private CalendarComponent calendarComponent;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    private YearMonthComponent yearMonthComponent;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"    private StackPane clockDisplayPlaceholder;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"    private StackPane calendarDisplayPlaceholder;","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"    private StackPane yearMonthDisplayPlaceholder;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this.indexes);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"        ClockComponent clockComponent \u003d new ClockComponent();","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"        clockDisplayPlaceholder.getChildren().add(clockComponent);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"        calendarComponent \u003d new CalendarComponent(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"        calendarDisplayPlaceholder.getChildren().add(calendarComponent);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"        yearMonthComponent \u003d new YearMonthComponent();","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"        yearMonthDisplayPlaceholder.getChildren().add(yearMonthComponent);","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"Leb14"},"content":"    private void handleRead(String fieldToRead) {","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"Leb14"},"content":"        personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"Leb14"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), fieldToRead);","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"Leb14"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"Leb14"},"content":"    private void handleLeave() {","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"Leb14"},"content":"        calendarDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"Leb14"},"content":"        CalendarComponent calendarComponent \u003d new CalendarComponent(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"Leb14"},"content":"        calendarDisplayPlaceholder.getChildren().add(calendarComponent);","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"Leb14"},"content":"    private void handleNextMonth() {","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Leb14"},"content":"        LocalDate newDate \u003d calendarComponent.getCurrentDate().plusMonths(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"Leb14"},"content":"        this.calendarComponent.setCurrentDate(newDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"Leb14"},"content":"        CalendarComponent calendarComponent \u003d new CalendarComponent(logic.getFilteredPersonList(), newDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Leb14"},"content":"        if (newDate.getMonth() \u003d\u003d LocalDate.now().getMonth() \u0026\u0026 newDate.getYear() \u003d\u003d LocalDate.now().getYear()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"Leb14"},"content":"            CalendarComponent calendarComponent1 \u003d new CalendarComponent(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"Leb14"},"content":"            calendarDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"Leb14"},"content":"            calendarDisplayPlaceholder.getChildren().add(calendarComponent1);","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"Leb14"},"content":"            calendarDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"Leb14"},"content":"            calendarDisplayPlaceholder.getChildren().add(calendarComponent);","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"Leb14"},"content":"        YearMonthComponent yearMonthComponent \u003d new YearMonthComponent(newDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"Leb14"},"content":"        yearMonthDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"Leb14"},"content":"        yearMonthDisplayPlaceholder.getChildren().add(yearMonthComponent);","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"Leb14"},"content":"    private void handlePreviousMonth() {","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"Leb14"},"content":"        LocalDate newDate \u003d calendarComponent.getCurrentDate().minusMonths(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"Leb14"},"content":"        this.calendarComponent.setCurrentDate(newDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"Leb14"},"content":"        CalendarComponent calendarComponent \u003d new CalendarComponent(logic.getFilteredPersonList(), newDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"Leb14"},"content":"        if (newDate.getMonth() \u003d\u003d LocalDate.now().getMonth() \u0026\u0026 newDate.getYear() \u003d\u003d LocalDate.now().getYear()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"Leb14"},"content":"            CalendarComponent calendarComponent1 \u003d new CalendarComponent(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"Leb14"},"content":"            calendarDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"Leb14"},"content":"            calendarDisplayPlaceholder.getChildren().add(calendarComponent1);","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"Leb14"},"content":"            calendarDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"Leb14"},"content":"            calendarDisplayPlaceholder.getChildren().add(calendarComponent);","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"Leb14"},"content":"        YearMonthComponent yearMonthComponent \u003d new YearMonthComponent(newDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"Leb14"},"content":"        yearMonthDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"Leb14"},"content":"        yearMonthDisplayPlaceholder.getChildren().add(yearMonthComponent);","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"Leb14"},"content":"    private void handleCurrentMonth() {","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"Leb14"},"content":"        CalendarComponent calendarComponent \u003d new CalendarComponent(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"Leb14"},"content":"        this.calendarComponent.setCurrentDate(LocalDate.now());","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"Leb14"},"content":"        calendarDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"Leb14"},"content":"        calendarDisplayPlaceholder.getChildren().add(calendarComponent);","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"Leb14"},"content":"        YearMonthComponent yearMonthComponent \u003d new YearMonthComponent();","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"Leb14"},"content":"        yearMonthDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"Leb14"},"content":"        yearMonthDisplayPlaceholder.getChildren().add(yearMonthComponent);","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":255,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"Leb14"},"content":"     * Reset the MainWindow after displaying PersonCardWithSpecificField","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"Leb14"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2023-10-15"},{"lineNumber":259,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"Leb14"},"content":"    private void resetMainWindow() {","lastModifiedDate":"2023-10-15"},{"lineNumber":261,"author":{"gitId":"Leb14"},"content":"        personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-15"},{"lineNumber":262,"author":{"gitId":"Leb14"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-15"},{"lineNumber":263,"author":{"gitId":"Leb14"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":264,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"Leb14"},"content":"            resetMainWindow();","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"WeeMingQing"},"content":"            this.indexes \u003d commandResult.getIndexes();","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"WeeMingQing"},"content":"            this.personListPanel.indexesSetter(this.indexes);","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":288,"author":{"gitId":"Leb14"},"content":"            if (commandResult.isRead()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":289,"author":{"gitId":"Leb14"},"content":"                handleRead(commandResult.getFieldToRead());","lastModifiedDate":"2023-10-15"},{"lineNumber":290,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":291,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":292,"author":{"gitId":"Leb14"},"content":"            if (commandResult.isLeave()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"Leb14"},"content":"                handleLeave();","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"Leb14"},"content":"            if (commandResult.isNextMonth()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"Leb14"},"content":"                handleNextMonth();","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"Leb14"},"content":"            if (commandResult.isPreviousMonth()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"Leb14"},"content":"                handlePreviousMonth();","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"Leb14"},"content":"            if (commandResult.isCurrentMonth()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":305,"author":{"gitId":"Leb14"},"content":"                handleCurrentMonth();","lastModifiedDate":"2023-10-31"},{"lineNumber":306,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":307,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"WeeMingQing":6,"-":195,"Leb14":114}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.attendance.AttendanceType;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    private Label bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    private Label joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"    private Label salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"    private Label annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"    @FXML","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"    private Label workingStatus;","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"     * display.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"        bankAccount.setText(person.getBankAccount().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"        joinDate.setText(person.getJoinDate().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"        salary.setText(person.getSalary().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"        annualLeave.setText(person.getAnnualLeave().value);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        setWorkingStatus(person.getWorkingStatusToday());","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"     * Creates a {@code PersonCode} with the given {@code Person}, index to","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"     * display and list of indexes.","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"    public PersonCard(Person person, int displayedIndex, List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        super(FXML);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        id.setText(indexes.get(displayedIndex - 1) + \". \");","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"        bankAccount.setText(person.getBankAccount().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"        joinDate.setText(person.getJoinDate().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"        salary.setText(person.getSalary().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"        annualLeave.setText(person.getAnnualLeave().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        setWorkingStatus(person.getWorkingStatusToday());","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"     * Set the style of the workingStatus label based on test","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"     * @param status of the employee on whether they are On Leave or Working","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"    public void setWorkingStatus(AttendanceType status) {","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        switch (status) {","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"        case PRESENT:","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"            workingStatus.setStyle(\"-fx-background-color: green; -fx-padding: 2; -fx-text-fill: white;\"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"                    + \"-fx-font-family: \u0027Arial Black\u0027; -fx-font-size:13; -fx-background-radius: 3\");","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"            workingStatus.setText(\"Working\");","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"            break;","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"        case LATE:","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"            workingStatus.setStyle(\"-fx-background-color: #b8af00; -fx-padding: 2; -fx-text-fill: white;\"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"                    + \"-fx-font-family: \u0027Arial Black\u0027; -fx-font-size:13; -fx-background-radius: 3\");","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"            workingStatus.setText(\"Late\");","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"            break;","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"        case ABSENT:","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"            workingStatus.setStyle(\"-fx-background-color: #d17749; -fx-padding: 2; -fx-text-fill: white;\"","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"                    + \"-fx-font-family: \u0027Arial Black\u0027; -fx-font-size:13; -fx-background-radius: 3\");","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"            workingStatus.setText(\"Absent\");","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"            break;","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"        case ON_LEAVE:","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"            workingStatus.setStyle(\"-fx-background-color: #A50000; -fx-padding: 2; -fx-text-fill: white;\"","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"                    + \"-fx-font-family: \u0027Arial Black\u0027; -fx-font-size:13; -fx-background-radius: 3\");","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"            workingStatus.setText(\"On Leave\");","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"            break;","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"        default:","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"            workingStatus.setStyle(\"-fx-background-color: green; -fx-padding: 2; -fx-text-fill: white;\"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"                    + \"-fx-font-family: \u0027Arial Black\u0027; -fx-font-size:13; -fx-background-radius: 3\");","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"            workingStatus.setText(\"Working\");","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"WeeMingQing":46,"jibtaf":4,"applepiofmyeye":18,"-":51,"Leb14":5}},{"path":"src/main/java/seedu/address/ui/PersonCardWithSpecificField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" * An UI component that displays specific information of a {@code Person}.","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"public class PersonCardWithSpecificField extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    private static final String FXML \u003d \"SpecificPersonListCard.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    public final Person person;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    private Label name;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    private Label id;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    private Label fieldLabel;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"     * Creates a {@code PersonCode} with the given {@code Person},index and specific","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"     * field to display.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public PersonCardWithSpecificField(Person person, int displayedIndex, String fieldToRead) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        fieldLabel.setText(fieldToRead);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"applepiofmyeye":7,"Leb14":42}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    private final String fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    private List\u003cInteger\u003e indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList} and list of indexes.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        if (indexes !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell(indexes));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"        this.fieldToRead \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, String fieldToRead) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        personListView.setCellFactory(listView -\u003e new SpecifyPersonListViewCell());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        this.fieldToRead \u003d fieldToRead;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        private List\u003cInteger\u003e indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        public PersonListViewCell() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"            this.indexes \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        public PersonListViewCell(List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"            this.indexes \u003d indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"                if (indexes !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"                    setGraphic(new PersonCard(person, getIndex() + 1, this.indexes).getRoot());","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"     * Sets the list of indexes to be displayed.","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"    public void indexesSetter(List\u003cInteger\u003e indexes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"        if (indexes !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell(indexes));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"            personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        personListView.requestLayout();","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"     * Custom {@code ListCell} that displays the graphics of","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"     * a {@code Person} using a {@code PersonCardWithSpecificField}.","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    class SpecifyPersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"                setText(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"                setGraphic(new PersonCardWithSpecificField(person, getIndex() + 1, fieldToRead).getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"WeeMingQing":30,"jibtaf":3,"-":58,"Leb14":29}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":28,"Leb14":1}},{"path":"src/main/java/seedu/address/ui/YearMonthComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":" * The UI component that is responsible for showing the year and month.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class YearMonthComponent extends Label {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private LocalDate currentDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"     * Creates a {@code YearMonthComponent} with the current date.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    public YearMonthComponent() {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        getStyleClass().add(\"year-month\");","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        createLabel(); // Initialize and update the label","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * Creates a {@code YearMonthComponent} with a given date.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    public YearMonthComponent(LocalDate newDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        getStyleClass().add(\"year-month\");","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        currentDate \u003d newDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        createLabel(); // Initialize and update the label","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    private void createLabel() {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM yyyy\");","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d currentDate.format(formatter);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        setText(formattedDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    public void updateLabel() {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        createLabel();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    public void setCurrentDate(LocalDate newDate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        this.currentDate \u003d newDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jibtaf":8,"Leb14":37}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"    -fx-graphic-text-gap : 10;","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"    -fx-padding: 10 10 30 10;","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"    -fx-background-color: #E0EDC5;","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"    -fx-background-color: #F1FFE7;","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"    -fx-padding: 0 0 0 5;","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":".pc-label-container {","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"    -fx-padding: 4 0 0 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":".work {","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"    -fx-background-color: green;","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"    -fx-padding: 3;","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"    -fx-font-family: \u0027Arial Black\u0027;","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill : white;","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":".on-leave {","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"    -fx-background-color: red;","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"    -fx-padding: 3;","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"    -fx-font-family: \u0027Arial Black\u0027;","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill : white;","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":".clock-pane {","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":".year-month-pane {","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"Leb14"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"Leb14"},"content":"     -fx-border-color: transparent;","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"Leb14"},"content":".year-month {","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"Leb14"},"content":"     -fx-font-size: 25px;","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"Leb14"},"content":"     -fx-text-fill: #020887;","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"Leb14"},"content":"     -fx-background-color: #ECFFB0;","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"Leb14"},"content":"     -fx-background-radius: 15;","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"Leb14"},"content":"     -fx-pref-width: 250px;","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"Leb14"},"content":"     -fx-alignment: center;","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"Leb14"},"content":".clock-label {","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"Leb14"},"content":"     -fx-text-fill: white;","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"Leb14"},"content":"     -fx-font-size: 40px;","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"Leb14"},"content":"     -fx-min-height:50px;","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"Leb14"},"content":".day-label {","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"Leb14"},"content":".calendar-grid {","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"Leb14"},"content":"     -fx-padding: 10;","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"Leb14"},"content":"     -fx-text-fill: white;","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"Leb14"},"content":"     -fx-font-size: 15px;","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"Leb14"},"content":"     -fx-hgap: 5;","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"Leb14"},"content":"     -fx-vgap: 5;","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"Leb14"},"content":"     -fx-alignment: center;","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"Leb14"},"content":".name-label {","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill: #E71D36;","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"Leb14"},"content":"    -fx-background-color: #FFFD98;","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"Leb14"},"content":"    -fx-min-height: 50px;","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"Leb14"},"content":"    -fx-min-width: 35;","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"Leb14"},"content":"    -fx-pref-width: 120px;","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"Leb14"},"content":"    -fx-min-height: 15px;","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"Leb14"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"Leb14"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"Leb14"},"content":".empty-label {","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill: #8d99ae;","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"Leb14"},"content":"    -fx-min-height: 50px;","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"Leb14"},"content":"    -fx-min-width: 35;","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"Leb14"},"content":"    -fx-pref-width: 120px;","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"Leb14"},"content":"    -fx-min-height: 15px;","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"Leb14"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"Leb14"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"Leb14"},"content":".calendar-grid VBox{","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"Leb14"},"content":"     -fx-padding: 10;","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"Leb14"},"content":"     -fx-text-fill: #020887;","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"Leb14"},"content":"     -fx-font-size: 15px;","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"Leb14"},"content":"     -fx-min-width: 40px;","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"Leb14"},"content":"     -fx-min-height: 100px;","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"Leb14"},"content":"     -fx-alignment: center;","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"Leb14"},"content":"     -fx-background-radius: 15;","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"Leb14"},"content":".day-name-label {","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"Leb14"},"content":"    -fx-background-color: #FFFD98;","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"Leb14"},"content":"    -fx-min-height: 50px;","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"Leb14"},"content":"    -fx-text-fill: #020887;","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"Leb14"},"content":"    -fx-min-width: 35px;","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"Leb14"},"content":"    -fx-pref-width: 150px;","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"Leb14"},"content":"    -fx-min-height: 40px;","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"Leb14"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"Leb14"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"Leb14"},"content":".today {","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"Leb14"},"content":"    -fx-background-color: #EAFFFD;","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"Leb14"},"content":".not-today {","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"Leb14"},"content":"    -fx-background-color: #C6EBBE;","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"Leb14"},"content":".calendar-pane {","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"Leb14"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"Leb14"},"content":"     -fx-border-color: transparent;","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"Leb14"},"content":"     -fx-padding: 10;","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"Leb14"},"content":"     -fx-alignment: center;","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"Leb14"},"content":"     -fx-text-fill: white;","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"Leb14"},"content":"     -fx-font-size: 15px;","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":273,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":276,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":280,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":391,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":399,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":401,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":406,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":408,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":410,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":412,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":417,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":420,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":422,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":424,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":426,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":428,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":430,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":432,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":434,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":437,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":439,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":442,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":444,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":451,"author":{"gitId":"Leb14"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":453,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":455,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":457,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":459,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":462,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":464,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":467,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":469,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":476,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":477,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":478,"author":{"gitId":"Leb14"},"content":".leftVbox {","lastModifiedDate":"2023-10-26"},{"lineNumber":479,"author":{"gitId":"Leb14"},"content":"    -fx-max-width: 50px;","lastModifiedDate":"2023-10-26"},{"lineNumber":480,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"-":339,"Leb14":141}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"jibtaf":1,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"\u003cfx:root minHeight\u003d\"800\" minWidth\u003d\"1500\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ManaGease\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"                \u003cHBox HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"                    \u003cVBox fx:id\u003d\"leftVBox\" minWidth\u003d\"600\" maxWidth\u003d\"900\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"                                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"250\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"                                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"                    \u003cVBox fx:id\u003d\"rightVBox\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"                        \u003cStackPane fx:id\u003d\"clockDisplayPlaceholder\" maxHeight\u003d\"81.0\" minHeight\u003d\"69.0\" minWidth\u003d\"500\" prefHeight\u003d\"81.0\" prefWidth\u003d\"500.0\" styleClass\u003d\"clock-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"                        \u003cStackPane fx:id\u003d\"yearMonthDisplayPlaceholder\" minHeight\u003d\"60\" minWidth\u003d\"500\" prefHeight\u003d\"60\" styleClass\u003d\"year-month-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"                        \u003cStackPane fx:id\u003d\"calendarDisplayPlaceholder\" maxHeight\u003d\"1000\" minWidth\u003d\"500\" prefHeight\u003d\"1000\" styleClass\u003d\"calendar-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jibtaf":3,"-":48,"Leb14":22}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        \u003cLabel fx:id\u003d\"workingStatus\" text\u003d\"\\$workingStatus\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        \u003cHBox styleClass\u003d\"pc-label-container\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"          \u003cImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"              \u003cImage url\u003d\"/images/phone-icon.png\"  /\u003e \u003c!-- Add your icon URL here --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"            \u003cfitWidth\u003e25.0\u003c/fitWidth\u003e \u003c!-- Set the width as needed --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            \u003cfitHeight\u003e25.0\u003c/fitHeight\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        \u003cHBox styleClass\u003d\"pc-label-container\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"          \u003cImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"              \u003cImage url\u003d\"/images/add-icon.png\"  /\u003e \u003c!-- Add your icon URL here --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"            \u003cfitWidth\u003e25.0\u003c/fitWidth\u003e \u003c!-- Set the width as needed --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"            \u003cfitHeight\u003e25.0\u003c/fitHeight\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        \u003cHBox styleClass\u003d\"pc-label-container\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"          \u003cImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"              \u003cImage url\u003d\"/images/email-icon.png\"  /\u003e \u003c!-- Add your icon URL here --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"            \u003cfitWidth\u003e25.0\u003c/fitWidth\u003e \u003c!-- Set the width as needed --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"            \u003cfitHeight\u003e25.0\u003c/fitHeight\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        \u003cHBox styleClass\u003d\"pc-label-container\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"          \u003cImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"              \u003cImage url\u003d\"/images/bank-account-icon.png\"  /\u003e \u003c!-- Add your icon URL here --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"            \u003cfitWidth\u003e25.0\u003c/fitWidth\u003e \u003c!-- Set the width as needed --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"            \u003cfitHeight\u003e25.0\u003c/fitHeight\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"          \u003cLabel fx:id\u003d\"bankAccount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$bankAccount\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        \u003cHBox styleClass\u003d\"pc-label-container\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"          \u003cImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"              \u003cImage url\u003d\"/images/salary-icon.png\"  /\u003e \u003c!-- Add your icon URL here --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"            \u003cfitWidth\u003e25.0\u003c/fitWidth\u003e \u003c!-- Set the width as needed --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"            \u003cfitHeight\u003e25.0\u003c/fitHeight\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"          \u003cLabel fx:id\u003d\"salary\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$salary\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"        \u003cHBox styleClass\u003d\"pc-label-container\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"          \u003cImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"              \u003cImage url\u003d\"/images/leave-icon.png\"  /\u003e \u003c!-- Add your icon URL here --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"            \u003cfitWidth\u003e25.0\u003c/fitWidth\u003e \u003c!-- Set the width as needed --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"            \u003cfitHeight\u003e25.0\u003c/fitHeight\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"          \u003cLabel fx:id\u003d\"annualLeave\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$annualLeave\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        \u003cHBox styleClass\u003d\"pc-label-container\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"          \u003cImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"              \u003cImage url\u003d\"/images/join-date-icon.png\"  /\u003e \u003c!-- Add your icon URL here --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"            \u003cfitWidth\u003e25.0\u003c/fitWidth\u003e \u003c!-- Set the width as needed --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"            \u003cfitHeight\u003e25.0\u003c/fitHeight\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"          \u003cLabel fx:id\u003d\"joinDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$joinDate\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"jibtaf":6,"WeeMingQing":7,"-":30,"Leb14":65}},{"path":"src/main/resources/view/SpecificPersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"      \u003cLabel fx:id\u003d\"fieldLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$fieldToRead\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Leb14":33}},{"path":"src/test/java/seedu/address/commons/util/PaySlipGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"class PaySlipGeneratorTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    void getFileName() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        assertTrue(\"alice_pauline.pdf\".equals(PaySlipGenerator.getFileName(ALICE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        assertTrue(\"benson_meier.pdf\".equals(PaySlipGenerator.getFileName(BENSON)));","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        assertFalse(\"Alice-Pauline.pdf\".equals(PaySlipGenerator.getFileName(ALICE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        assertFalse(\"BensonMeier.pdf\".equals(PaySlipGenerator.getFileName(BENSON)));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    void getFieldMap() {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        ALICE.addPayroll(new Payroll(ALICE.getSalary()));","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        Payroll payroll \u003d ALICE.getLatestPayroll();","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        Map\u003cString, String\u003e fieldMap \u003d PaySlipGenerator.getFieldMap(ALICE, payroll);","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"employerName\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"employeeName\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"basicPay\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"totalDeductions\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"netPay\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"totalAllowances\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"grossPay\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"CPFDeduction\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"otherAdditionalPayments\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertFalse(fieldMap.containsKey(\"additionalPaymentReason1\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertFalse(fieldMap.containsKey(\"additionalPayment1\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        assertFalse(fieldMap.containsKey(\"deductionReason1\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        assertFalse(fieldMap.containsKey(\"deduction1\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        assertFalse(fieldMap.containsKey(\"allowanceReason1\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        assertFalse(fieldMap.containsKey(\"allowance1\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"paymentStartDate\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"paymentEndDate\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.containsKey(\"dateOfPayment\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"employerName\").equals(\"XXX Limited\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"employeeName\").equals(\"Alice Pauline\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"basicPay\").equals(\"1500.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"totalDeductions\").equals(\"0.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"netPay\").equals(\"1500.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"totalAllowances\").equals(\"0.00\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"grossPay\").equals(\"1500.00\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"CPFDeduction\").equals(\"0.00\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"otherAdditionalPayments\").equals(\"0.00\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"paymentStartDate\").equals(payroll.getStartDateString()));","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"paymentEndDate\").equals(payroll.getEndDateString()));","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        assertTrue(fieldMap.get(\"dateOfPayment\").equals(payroll.getPaymentDateString()));","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":63}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKACCOUNT_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOINDATE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"employees.json\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"            + ADDRESS_DESC_AMY + BANKACCOUNT_DESC_AMY + JOINDATE_DESC_AMY + SALARY_DESC_AMY + ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"applepiofmyeye"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jibtaf":6,"applepiofmyeye":2,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"        public void setPerson(Person target, Person editedEmployee) {","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"        public List\u003cInteger\u003e getIndexOfFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"        public void setSpecificPersonToDisplay(Person targetPerson) {","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Kevin-Liusx":1,"jibtaf":7,"-":202,"Leb14":5}},{"path":"src/test/java/seedu/address/logic/commands/AddLeaveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"public class AddLeaveCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidIndexFilteredListForAddingSingleLeave_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(outOfBoundIndex, currentDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidIndexFilteredListForAddingMultipleLeave_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(outOfBoundIndex, currentDate,","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"                currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_validSingleLeaveAddedToEmployee_addSuccessful() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee2 \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"        editedEmployee2.getAnnualLeave().addLeave(currentDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        String expectedMessage \u003d String.format(AddLeaveCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"                        + AddLeaveCommand.getLeaveStatusMessage(editedEmployee2),","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"                Messages.format(editedEmployee2));","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(0), editedEmployee2);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandSuccess(addLeaveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_validMultipleLeaveAddedToEmployee_addSuccessful() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee2 \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        editedEmployee2.getAnnualLeave().addLeave(currentDate, currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate, currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"        String expectedMessage \u003d String.format(AddLeaveCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"                        + AddLeaveCommand.getLeaveStatusMessage(editedEmployee2),","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"                Messages.format(editedEmployee2));","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(0), editedEmployee2);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandSuccess(addLeaveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidStartAndEndDatesForAddingMultipleLeave_addLeaveFailure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate);","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(2), currentDate);","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand1, model, AnnualLeave.MESSAGE_INVALID_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand2, model, AnnualLeave.MESSAGE_INVALID_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidStartDateForLeave_addLeaveFailure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(targetIndex, currentDate.plusDays(-1), null);","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(targetIndex, currentDate.plusDays(-2), null);","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand1, model, AnnualLeave.MESSAGE_ADD_EXPIRED_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand2, model, AnnualLeave.MESSAGE_ADD_EXPIRED_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidDatesForAddingMultipleLeave_addLeaveFailure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"        editedEmployee.getAnnualLeave().addLeave(currentDate, currentDate.plusDays(1));","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(2));","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(3));","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand1, model, AnnualLeave.MESSAGE_ADD_DUPLICATE_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand2, model, AnnualLeave.MESSAGE_ADD_DUPLICATE_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_addTooManyDatesForAddingMultipleLeave_addLeaveFailure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(20));","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(30));","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand1, model, AnnualLeave.MESSAGE_LEAVE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(addLeaveCommand2, model, AnnualLeave.MESSAGE_LEAVE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_equals_failure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(2));","lastModifiedDate":"2023-11-07"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":153,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(2));","lastModifiedDate":"2023-11-07"},{"lineNumber":154,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand3 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), null);","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand4 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), null);","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(addLeaveCommand1.equals(addLeaveCommand1));","lastModifiedDate":"2023-11-07"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(!addLeaveCommand2.equals(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(addLeaveCommand1.equals(addLeaveCommand2));","lastModifiedDate":"2023-11-07"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(addLeaveCommand3.equals(addLeaveCommand4));","lastModifiedDate":"2023-11-07"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"WeeMingQing"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"                new AddLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(2));","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"        String expected \u003d AddLeaveCommand.class.getCanonicalName() + \"{toAddLeave\u003d\"","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"                + INDEX_FIRST_PERSON + \"}\";","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(expected, addLeaveCommand.toString());","lastModifiedDate":"2023-11-07"},{"lineNumber":172,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":173,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"WeeMingQing":174}},{"path":"src/test/java/seedu/address/logic/commands/AttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.attendance.AttendanceType;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"class AttendanceCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"    public void execute_reportByName_validName() throws CommandException {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alice\");","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand attendanceCommand \u003d new AttendanceCommand(predicate);","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"        Person employeeToReport \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"        int[] attendanceValues \u003d employeeToReport","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"                .getAttendanceStorage()","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"                .getAttendanceReport(employeeToReport.getJoinDate(),","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"                        employeeToReport.getAnnualLeave().getTotalLeaveTaken());","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d String.format(AttendanceCommand.MESSAGE_REPORT_ATTENDANCE,","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"                employeeToReport.getName(),","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[0],","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[1],","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[2]);","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"        assertCommandSuccess(attendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"    public void execute_reportByIndex_validIndex() throws CommandException {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand attendanceCommand \u003d new AttendanceCommand(index);","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        Person employeeToReport \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"        int[] attendanceValues \u003d employeeToReport","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"                .getAttendanceStorage()","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"                .getAttendanceReport(employeeToReport.getJoinDate(),","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"                        employeeToReport.getAnnualLeave().getTotalLeaveTaken());","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d String.format(AttendanceCommand.MESSAGE_REPORT_ATTENDANCE,","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"                employeeToReport.getName(),","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[0],","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[1],","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"                attendanceValues[2]);","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"        assertCommandSuccess(attendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"    public void equalsForIndex() {","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand attendanceFirstCommand \u003d new AttendanceCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand attendanceSecondCommand \u003d new AttendanceCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"        assertTrue(attendanceFirstCommand.equals(attendanceFirstCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand attendanceFirstCommandCopy \u003d new AttendanceCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"        assertTrue(attendanceFirstCommand.equals(attendanceFirstCommandCopy));","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"        assertFalse(attendanceSecondCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"        assertFalse(attendanceFirstCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"        assertFalse(attendanceFirstCommand.equals(attendanceSecondCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"    public void equalsForName() {","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"        Person firstPersonToReport \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"        Person secondPersonToReport \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"        NameContainsKeywordsPredicate firstPersonName \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"                        new String[] {firstPersonToReport.getName().toString()}));","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        NameContainsKeywordsPredicate secondPersonName \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"                        new String[] {secondPersonToReport.getName().toString()}));","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand attendanceFirstCommand \u003d new AttendanceCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand attendanceSecondCommand \u003d new AttendanceCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"        assertTrue(attendanceFirstCommand.equals(attendanceFirstCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceCommand attendanceFirstCommandCopy \u003d new AttendanceCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"        assertTrue(attendanceFirstCommand.equals(attendanceFirstCommandCopy));","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"        assertFalse(attendanceSecondCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"        assertFalse(attendanceFirstCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"        assertFalse(attendanceFirstCommand.equals(attendanceSecondCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"applepiofmyeye"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"applepiofmyeye"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceType attendanceType \u003d AttendanceType.PRESENT;","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"applepiofmyeye"},"content":"        MarkCommand markCommand \u003d new MarkCommand(predicate, attendanceType);","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"applepiofmyeye"},"content":"        String expected \u003d MarkCommand.class.getCanonicalName() + \"{targetName\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(expected, markCommand.toString());","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"applepiofmyeye"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"applepiofmyeye"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"applepiofmyeye"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"applepiofmyeye":140}},{"path":"src/test/java/seedu/address/logic/commands/BenefitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"public class BenefitCommandTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    private final Index index \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    private final Index outOfBoundIndex \u003d Index.fromZeroBased(1000);","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate name \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate nonExistentName \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        Collections.singletonList(\"NonExistent\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    private final Benefit benefit \u003d new Benefit(\"200.00\", Reason.TRANSPORT_ALLOWANCE);","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"    void executeByIndexSuccess() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        // success with index","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        PayrollStorage payrollStorage \u003d employeeToCalculate.getPayrollStorage();","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand benefitCommand \u003d new BenefitCommand(index, benefit);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        CommandResult commandResult \u003d benefitCommand.execute(model);","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        assertEquals(String.format(BenefitCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"            payrollStorage.getLatestPayroll().getBenefitsString()), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"    public void executeByIndex_outOfBoundsIndex_throwsCommandException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        // fail with out-of-bound index","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand benefitCommand \u003d new BenefitCommand(outOfBoundIndex, benefit);","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertCommandFailure(benefitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    public void executeByNameSuccess() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        // success with name","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        PayrollStorage payrollStorage \u003d employeeToCalculate.getPayrollStorage();","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand benefitCommand \u003d new BenefitCommand(name, benefit);","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"        CommandResult commandResult \u003d benefitCommand.execute(model);","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        assertEquals(String.format(BenefitCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"            payrollStorage.getLatestPayroll().getBenefitsString()), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"    public void executeByName_nonExistentName_throwsCommandException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        // fail with non-existent name","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand benefitCommand \u003d new BenefitCommand(nonExistentName, benefit);","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        assertCommandFailure(benefitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new BenefitCommand(index, benefit), new BenefitCommand(index, benefit));","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new BenefitCommand(name, benefit), new BenefitCommand(name, benefit));","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand benefitCommandCopy \u003d new BenefitCommand(index, benefit);","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new BenefitCommand(index, benefit), benefitCommandCopy);","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand benefitCommandCopy2 \u003d new BenefitCommand(name, benefit);","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new BenefitCommand(name, benefit), benefitCommandCopy2);","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new BenefitCommand(index, benefit).equals(\"\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new BenefitCommand(name, benefit).equals(\"\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new BenefitCommand(index, benefit).equals(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new BenefitCommand(index, benefit).equals(new BenefitCommand(index,","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"1000.00\", Reason.ANNUAL_BONUS))));","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new BenefitCommand(name, benefit).equals(new BenefitCommand(name,","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"1000.00\", Reason.ANNUAL_BONUS))));","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new BenefitCommand(index, benefit).equals(new BenefitCommand(outOfBoundIndex, benefit)));","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new BenefitCommand(name, benefit).equals(new BenefitCommand(nonExistentName, benefit)));","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"        assertEquals(BenefitCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"                + \"{index\u003d\" + Index.fromZeroBased(1) + \",\" + \" benefit\u003d\" + benefit + \"}\",","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"            new BenefitCommand(index, benefit).toString());","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        assertEquals(BenefitCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"            + \"{name\u003d\" + name + \",\" + \" benefit\u003d\" + benefit + \"}\", new BenefitCommand(name, benefit).toString());","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"jibtaf":111}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false, false, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false, false, false)));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"                \"feedback\", true, false, false, false, false, false).hashCode());","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"                \"feedback\", false, true, false, false, false, false).hashCode());","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \", currentMonth\u003d\" + commandResult.isCurrentMonth()","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"                + \", nextMonth\u003d\" + commandResult.isNextMonth() + \", previousMonth\u003d\" + commandResult.isPreviousMonth()","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"                + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":57,"Leb14":10}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_TYPE;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_BANKACCOUNT_AMY \u003d \"1234567890234\";","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_BANKACCOUNT_BOB \u003d \"01823819\";","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    public static final String VALID_JOINDATE_AMY \u003d \"10/05/2003\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    public static final String VALID_JOINDATE_BOB \u003d \"20/08/2012\";","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    public static final String VALID_SALARY_AMY \u003d \"4000.00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    public static final String VALID_SALARY_BOB \u003d \"2500.00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_ANNUALLEAVE_AMY \u003d \"4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_ANNUALLEAVE_BOB \u003d \"2\";","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_ATTENDANCE_TYPE_PRESENT \u003d \"present\";","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_ATTENDANCE_TYPE_ABSENT \u003d \"absent\";","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String VALID_ATTENDANCE_TYPE_LATE \u003d \"late\";","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"    public static final ArrayList\u003cString\u003e VALID_ATTENDANCE_STORAGE_AMY \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"    public static final ArrayList\u003cString\u003e VALID_ATTENDANCE_STORAGE_BOB \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final String VALID_DATE \u003d \"03/11/2023\";","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    public static final String BANKACCOUNT_DESC_AMY \u003d \" \" + PREFIX_BANK_ACCOUNT + \" \" + VALID_BANKACCOUNT_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"    public static final String BANKACCOUNT_DESC_BOB \u003d \" \" + PREFIX_BANK_ACCOUNT + \" \" + VALID_BANKACCOUNT_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"    public static final String JOINDATE_DESC_AMY \u003d \" \" + PREFIX_JOIN_DATE + \" \" + VALID_JOINDATE_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    public static final String JOINDATE_DESC_BOB \u003d \" \" + PREFIX_JOIN_DATE + \" \" + VALID_JOINDATE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    public static final String SALARY_DESC_AMY \u003d \" \" + PREFIX_SALARY + \" \" + VALID_SALARY_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    public static final String SALARY_DESC_BOB \u003d \" \" + PREFIX_SALARY + \" \" + VALID_SALARY_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"    public static final String ANNUALLEAVE_DESC_AMY \u003d \" \" + PREFIX_ANNUAL_LEAVE + \" \" + VALID_ANNUALLEAVE_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"    public static final String ANNUALLEAVE_DESC_BOB \u003d \" \" + PREFIX_ANNUAL_LEAVE + \" \" + VALID_ANNUALLEAVE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String ATTENDANCE_TYPE_DESC_ABSENT \u003d \" \"","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"            + PREFIX_ATTENDANCE_TYPE + \" \" + VALID_ATTENDANCE_TYPE_ABSENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String ATTENDANCE_TYPE_DESC_PRESENT \u003d \" \"","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"            + PREFIX_ATTENDANCE_TYPE + \" \" + VALID_ATTENDANCE_TYPE_PRESENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String ATTENDANCE_TYPE_DESC_LATE \u003d \" \"","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"            + PREFIX_ATTENDANCE_TYPE + \" \" + VALID_ATTENDANCE_TYPE_LATE;","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \" James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \" 911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \" bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"    public static final String INVALID_BANKACCOUNT_DESC \u003d \" \" + PREFIX_BANK_ACCOUNT","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        + \" a91721\"; // \u0027a\u0027 not allowed in bankAccount","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"    public static final String INVALID_JOINDATE_DESC \u003d \" \" + PREFIX_JOIN_DATE + \" 10-923-10\"; // wrong date format","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"    public static final String INVALID_SALARY_DESC \u003d \" \" + PREFIX_SALARY","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        + \" a291\"; // \u0027a\u0027 not allowed in salary","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"    public static final String INVALID_ANNUALLEAVE_DESC \u003d \" \" + PREFIX_ANNUAL_LEAVE","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        + \" a19\"; // \u0027a\u0027 not allowed in annual leave","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        DESC_AMY \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"                .withBankAccount(VALID_BANKACCOUNT_AMY).withJoinDate(VALID_JOINDATE_AMY).withSalary(VALID_SALARY_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"                .withAnnualLeave(VALID_ANNUALLEAVE_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"        DESC_BOB \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"                .withBankAccount(VALID_BANKACCOUNT_BOB).withJoinDate(VALID_JOINDATE_BOB).withSalary(VALID_SALARY_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"applepiofmyeye"},"content":"                .withAnnualLeave(VALID_ANNUALLEAVE_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Kevin-Liusx":1,"jibtaf":26,"applepiofmyeye":29,"-":107,"Leb14":6}},{"path":"src/test/java/seedu/address/logic/commands/CurrentMonthCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CurrentMonthCommand.MESSAGE_CURRENT_MONTH_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class CurrentMonthCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    public void execute_currentMonth_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"                MESSAGE_CURRENT_MONTH_ACKNOWLEDGEMENT, false, false, false, false, false, true);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        assertCommandSuccess(new CurrentMonthCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Leb14":21}},{"path":"src/test/java/seedu/address/logic/commands/DeductCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"class DeductCommandTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    private final Index index \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    private final Index outOfBoundIndex \u003d Index.fromZeroBased(1000);","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate name \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    private final NameContainsKeywordsPredicate nonExistentName \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        Collections.singletonList(\"NonExistent\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction \u003d new Deduction(\"200.00\", Reason.NO_PAY_LEAVE);","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeductCommand((Index) null, deduction));","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeductCommand((Index) null, deduction));","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    void executeByIndexSuccess() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        // success with index","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        Person employeeToCalculate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        PayrollStorage payrollStorage \u003d employeeToCalculate.getPayrollStorage();","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        DeductCommand deductCommand \u003d new DeductCommand(index, deduction);","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        CommandResult commandResult \u003d deductCommand.execute(model);","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertEquals(String.format(DeductCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            payrollStorage.getLatestPayroll().getDeductionsString()), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"    public void executeByIndex_outOfBoundsIndex_throwsCommandException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        // fail with out-of-bound index","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        DeductCommand deductCommand \u003d new DeductCommand(outOfBoundIndex, deduction);","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        assertCommandFailure(deductCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    public void executeByNameSuccess() throws CommandException {","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        // success with name","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(this.name);","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        Person employeeToCalculate \u003d lastShownList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        PayrollStorage payrollStorage \u003d employeeToCalculate.getPayrollStorage();","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        DeductCommand deductCommand \u003d new DeductCommand(name, deduction);","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        CommandResult commandResult \u003d deductCommand.execute(model);","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        assertEquals(String.format(DeductCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"            payrollStorage.getLatestPayroll().getDeductionsString()), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"    public void executeByName_nonExistentName_throwsCommandException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        // fail with name","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        DeductCommand deductCommand \u003d new DeductCommand(nonExistentName, deduction);","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        assertCommandFailure(deductCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new DeductCommand(index, deduction), new DeductCommand(index, deduction));","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new DeductCommand(name, deduction), new DeductCommand(name, deduction));","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"        DeductCommand deductCommandCopy \u003d new DeductCommand(index, deduction);","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new DeductCommand(index, deduction), deductCommandCopy);","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"        DeductCommand deductCommandCopy2 \u003d new DeductCommand(name, deduction);","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new DeductCommand(name, deduction), deductCommandCopy2);","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new DeductCommand(index, deduction).equals(\"\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new DeductCommand(name, deduction).equals(\"\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new DeductCommand(index, deduction).equals(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new DeductCommand(index, deduction).equals(new DeductCommand(index,","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"100.00\", Reason.NO_PAY_LEAVE))));","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new DeductCommand(name, deduction).equals(new DeductCommand(name,","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"100.00\", Reason.NO_PAY_LEAVE))));","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new DeductCommand(index, deduction).equals(new DeductCommand(outOfBoundIndex, deduction)));","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"        assertFalse(new DeductCommand(name, deduction).equals(new DeductCommand(nonExistentName, deduction)));","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"    public void testToString() {","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"        assertEquals(DeductCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"            + \"{index\u003d\" + Index.fromZeroBased(1) + \",\" + \" deduction\u003d\" + deduction + \"}\",","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"            new DeductCommand(index, deduction).toString());","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        assertEquals(DeductCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"            + \"{name\u003d\" + name + \",\" + \" deduction\u003d\" + deduction + \"}\", new DeductCommand(name, deduction).toString());","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"jibtaf":120}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_validNameUnfilteredList_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"        String name \u003d personToDelete.getName().toString();","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        String[] words \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new NameContainsKeywordsPredicate(Arrays.asList(words)));","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_validNameFilteredList_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"        String name \u003d personToDelete.getName().toString();","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"        String[] words \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new NameContainsKeywordsPredicate(Arrays.asList(words)));","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"    public void equalsForIndex() {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"    public void equalsForName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"        NameContainsKeywordsPredicate firstPersonName \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"                        new String[] {firstPersonToDelete.getName().toString()}));","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"        NameContainsKeywordsPredicate secondPersonName \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"                        new String[] {secondPersonToDelete.getName().toString()}));","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(firstPersonName);","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(secondPersonName);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"WeeMingQing"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"WeeMingQing"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(firstPersonName);","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"WeeMingQing"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"WeeMingQing"},"content":"    public void equalsForNameAndIndex_failure() {","lastModifiedDate":"2023-11-10"},{"lineNumber":172,"author":{"gitId":"WeeMingQing"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-11-10"},{"lineNumber":173,"author":{"gitId":"WeeMingQing"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"        NameContainsKeywordsPredicate firstPersonName \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"WeeMingQing"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"WeeMingQing"},"content":"                        new String[] {firstPersonToDelete.getName().toString()}));","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"WeeMingQing"},"content":"        NameContainsKeywordsPredicate secondPersonName \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"WeeMingQing"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"WeeMingQing"},"content":"                        new String[] {secondPersonToDelete.getName().toString()}));","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(firstPersonName);","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(secondPersonName);","lastModifiedDate":"2023-11-10"},{"lineNumber":182,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteFirstIndexCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-10"},{"lineNumber":183,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteSecondIndexCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteFirstCommand.equals(deleteFirstIndexCommand));","lastModifiedDate":"2023-11-10"},{"lineNumber":185,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondIndexCommand));","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteSecondCommand.equals(deleteFirstIndexCommand));","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"WeeMingQing"},"content":"        assertFalse(deleteSecondCommand.equals(deleteSecondIndexCommand));","lastModifiedDate":"2023-11-10"},{"lineNumber":188,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":189,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":190,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":191,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":192,"author":{"gitId":"WeeMingQing"},"content":"    public void toStringMethodForIndex() {","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"WeeMingQing"},"content":"    public void toStringMethodForName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"WeeMingQing"},"content":"        NameContainsKeywordsPredicate targetName \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"WeeMingQing"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(new String[] {\"James\"}));","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"WeeMingQing"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetName);","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"WeeMingQing"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetName\u003d\" + targetName.toString() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jibtaf":2,"WeeMingQing":96,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/DeleteLeaveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"public class DeleteLeaveCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidIndexFilteredListForDeletingSingleLeave_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d new DeleteLeaveCommand(outOfBoundIndex, currentDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(deleteLeaveCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidIndexFilteredListForDeletingMultipleLeave_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d new DeleteLeaveCommand(outOfBoundIndex, currentDate,","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"                currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(deleteLeaveCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_validSingleLeaveDeletedFromEmployee_deleteSuccessful() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee2 \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"        editedEmployee2.getAnnualLeave().addLeave(currentDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), editedEmployee2);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        String expectedMessage \u003d String.format(DeleteLeaveCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"                        + DeleteLeaveCommand.getLeaveStatusMessage(editedEmployee),","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"                Messages.format(editedEmployee));","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandSuccess(deleteLeaveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_validMultipleLeaveDeletedFromEmployee_deleteSuccessful() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee2 \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        editedEmployee2.getAnnualLeave().addLeave(currentDate, currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), editedEmployee2);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate, currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"        String expectedMessage \u003d String.format(DeleteLeaveCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"                        + DeleteLeaveCommand.getLeaveStatusMessage(editedEmployee),","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"                Messages.format(editedEmployee));","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandSuccess(deleteLeaveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidStartDateForLeave_deleteLeaveFailure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(targetIndex, currentDate.plusDays(-1), null);","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(targetIndex, currentDate.plusDays(-2), currentDate.plusDays(1));","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(deleteLeaveCommand1, model, AnnualLeave.MESSAGE_DELETE_EXPIRED_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(deleteLeaveCommand2, model, AnnualLeave.MESSAGE_DELETE_EXPIRED_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidEndDateForLeave_deleteLeaveFailure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(targetIndex, currentDate.plusDays(1), currentDate);","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(targetIndex, currentDate.plusDays(1), currentDate.plusDays(-1));","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(deleteLeaveCommand1, model, AnnualLeave.MESSAGE_INVALID_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(deleteLeaveCommand2, model, AnnualLeave.MESSAGE_INVALID_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_invalidDatesForDeletingMultipleLeave_deleteLeaveFailure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"        editedEmployee.getAnnualLeave().addLeave(currentDate, currentDate.plusDays(1));","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(2));","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(3));","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(deleteLeaveCommand1, model, AnnualLeave.MESSAGE_DELETE_INVALID_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"        assertCommandFailure(deleteLeaveCommand2, model, AnnualLeave.MESSAGE_DELETE_INVALID_LEAVE);","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"    public void execute_equals_failure() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand1 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(2));","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand2 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(2));","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand3 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), null);","lastModifiedDate":"2023-11-07"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand4 \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), null);","lastModifiedDate":"2023-11-07"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(deleteLeaveCommand1.equals(deleteLeaveCommand1));","lastModifiedDate":"2023-11-07"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(!deleteLeaveCommand1.equals(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(deleteLeaveCommand1.equals(deleteLeaveCommand2));","lastModifiedDate":"2023-11-07"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"        assertTrue(deleteLeaveCommand3.equals(deleteLeaveCommand4));","lastModifiedDate":"2023-11-07"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":153,"author":{"gitId":"WeeMingQing"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-07"},{"lineNumber":154,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"WeeMingQing"},"content":"                new DeleteLeaveCommand(INDEX_FIRST_PERSON, currentDate.plusDays(1), currentDate.plusDays(2));","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"WeeMingQing"},"content":"        String expected \u003d DeleteLeaveCommand.class.getCanonicalName() + \"{toDeleteLeave\u003d\"","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"WeeMingQing"},"content":"                + INDEX_FIRST_PERSON + \"}\";","lastModifiedDate":"2023-11-07"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(expected, deleteLeaveCommand.toString());","lastModifiedDate":"2023-11-07"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"WeeMingQing":163}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(editedEmployee).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"            Messages.format(editedEmployee));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"                .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"            Messages.format(editedEmployee));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        expectedModel.setPerson(lastPerson, editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditEmployeeDescriptor());","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d EditCommand.MESSAGE_UNCHANGED_FIELD;","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"        Person editedEmployee \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"            Messages.format(editedEmployee));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedEmployee);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e editCommand.execute(model));","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"                new EditEmployeeDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e editCommand.execute(model));","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor copyDescriptor \u003d new EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"jibtaf"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"jibtaf"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editEmployeeDescriptor\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"                + editEmployeeDescriptor + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jibtaf":35,"applepiofmyeye":2,"-":149}},{"path":"src/test/java/seedu/address/logic/commands/EditEmployeeDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"public class EditEmployeeDescriptorTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptorWithSameValues \u003d new EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        // different bank account -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withBankAccount(VALID_BANKACCOUNT_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        EditEmployeeDescriptor editPersonDescriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        String expected \u003d EditEmployeeDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", bankAccount\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getBankAccount().orElse(null) + \", joinDate\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getJoinDate().orElse(null) + \", salary\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getSalary().orElse(null) + \", annualLeave\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"                + editPersonDescriptor.getAnnualLeave().orElse(null) + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jibtaf":8,"applepiofmyeye":7,"-":56,"Leb14":3}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"                MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"Leb14":2}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"                SHOWING_HELP_MESSAGE, true, false, false, false, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"Leb14":2}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import java.util.List;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.person.attendance.AttendanceType;","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"class MarkCommandTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    private List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    public void execute_markByName_validName() throws CommandException {","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        AttendanceType attendanceType \u003d AttendanceType.PRESENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alice\");","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        MarkCommand markCommand \u003d new MarkCommand(predicate, attendanceType);","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        Person markedPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        String expectedMessage \u003d String.format(markCommand.MESSAGE_MARK_PERSON_SUCCESS,","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"                attendanceType.toString().toLowerCase(), markedPerson.getName());","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    public void execute_markByIndex_validIndex() throws CommandException {","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        AttendanceType attendanceType \u003d AttendanceType.PRESENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_PERSON, attendanceType);","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        Person markedPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        String expectedMessage \u003d String.format(markCommand.MESSAGE_MARK_PERSON_SUCCESS,","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"                attendanceType.toString().toLowerCase(), markedPerson.getName());","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"    public void equals() {","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        AttendanceType attendanceType \u003d AttendanceType.PRESENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        AttendanceType attendanceType1 \u003d AttendanceType.ABSENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(firstPredicate, attendanceType);","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(secondPredicate, attendanceType);","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        MarkCommand markThirdCommand \u003d new MarkCommand(secondPredicate, attendanceType1);","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"        // same predicates \u0026 attendance type -\u003e returns true","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(firstPredicate, attendanceType);","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        assertTrue(markFirstCommandCopy.equals(markFirstCommandCopy));","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"        // same attendance type, different predicate -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        // same predicate, different attendance type -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"        // assertFalse(markSecondCommand.equals(markThirdCommand));","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        // different predicate, different attendance type -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        assertFalse(markFirstCommand.equals(markThirdCommand));","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"        AttendanceType attendanceType \u003d AttendanceType.PRESENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"        MarkCommand markCommand \u003d new MarkCommand(predicate, attendanceType);","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        String expected \u003d MarkCommand.class.getCanonicalName() + \"{targetName\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"        assertEquals(expected, markCommand.toString());","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"Leb14":112}},{"path":"src/test/java/seedu/address/logic/commands/NextMonthCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.NextMonthCommand.MESSAGE_NEXT_MONTH_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class NextMonthCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    public void execute_nextMonth_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"               MESSAGE_NEXT_MONTH_ACKNOWLEDGEMENT, false, false, false, true, false, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        assertCommandSuccess(new NextMonthCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Leb14":21}},{"path":"src/test/java/seedu/address/logic/commands/PayrollCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookPayroll;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.List;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"class PayrollCommandTest {","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    private Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"    private NameContainsKeywordsPredicate name \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\"));","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"    private NameContainsKeywordsPredicate name2 \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"George\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"    private Model model2 \u003d new ModelManager(getTypicalAddressBookPayroll(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"    private Salary salary \u003d new Salary(\"2000.00\");","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"    public void constructor_nullModel_throwsNullPointerException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"        Index index \u003d null;","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"        NameContainsKeywordsPredicate name \u003d null;","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"        // Empty Index","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PayrollCommand(index));","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"        // Empty Name","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PayrollCommand(name));","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"    public void executeByIndex_outOfBoundIndex_throwsCommandException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"        Index index \u003d Index.fromZeroBased(99);","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand payrollCommand \u003d new PayrollCommand(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"        assertCommandFailure(payrollCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"    public void executeByIndex_calculatePayroll_calculationSuccess() throws CommandException {","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cPerson\u003e lastFilteredList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"        Person personToCalculate \u003d lastFilteredList.get(index.getZeroBased());","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll latestPayroll \u003d personToCalculate.getLatestPayroll();","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand payrollCommand \u003d new PayrollCommand(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"        CommandResult commandResult \u003d payrollCommand.execute(model);","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(String.format(PayrollCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"Kevin-Liusx"},"content":"                latestPayroll.calculatePayrollString()).equals(commandResult.getFeedbackToUser()));","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"Kevin-Liusx"},"content":"    public void executeByIndex_differentStartDate_calculationSuccess() throws CommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d new Payroll(salary,","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"                \"01/12/2023\", \"01/01/2023\", \"05/01/2023\");","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cPerson\u003e lastFilteredList \u003d model2.getFilteredPersonList();","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"Kevin-Liusx"},"content":"        Person personToCalculate \u003d lastFilteredList.get(index.getZeroBased());","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll latestPayroll \u003d personToCalculate.getLatestPayroll();","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"Kevin-Liusx"},"content":"        personToCalculate.addPayroll(payroll);","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand payrollCommand \u003d new PayrollCommand(index);","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"        CommandResult commandResult \u003d payrollCommand.execute(model2);","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(String.format(PayrollCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"Kevin-Liusx"},"content":"                latestPayroll.calculatePayrollString()).equals(commandResult.getFeedbackToUser()));","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"    public void executeByName_nonExistentName_throwsCommandException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"        NameContainsKeywordsPredicate nonExistentName \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Boo\"));","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand payrollCommand \u003d new PayrollCommand(nonExistentName);","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"        assertCommandFailure(payrollCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"    public void executeByName_calculatePayroll_calculationSuccess() throws CommandException {","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cPerson\u003e lastFilteredList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cInteger\u003e indexes \u003d model.getIndexOfFilteredPersonList(name);","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"        Person personToCalculate \u003d lastFilteredList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll latestPayroll \u003d personToCalculate.getLatestPayroll();","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand payrollCommand \u003d new PayrollCommand(name);","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"        CommandResult commandResult \u003d payrollCommand.execute(model);","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(String.format(PayrollCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"Kevin-Liusx"},"content":"                latestPayroll.calculatePayrollString()).equals(commandResult.getFeedbackToUser()));","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"    public void executeByName_differentStartDate_calculationSuccess() throws CommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d new Payroll(salary,","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"                \"01/12/2023\", \"01/01/2023\", \"05/01/2023\");","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cPerson\u003e lastFilteredList \u003d model2.getFilteredPersonList();","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cInteger\u003e indexes \u003d model2.getIndexOfFilteredPersonList(name2);","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"Kevin-Liusx"},"content":"        Person personToCalculate \u003d lastFilteredList.get(indexes.get(0) - 1);","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll latestPayroll \u003d personToCalculate.getLatestPayroll();","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"Kevin-Liusx"},"content":"        personToCalculate.addPayroll(payroll);","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand payrollCommand \u003d new PayrollCommand(name2);","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"Kevin-Liusx"},"content":"        CommandResult commandResult \u003d payrollCommand.execute(model2);","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(String.format(PayrollCommand.MESSAGE_ARGUMENTS,","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"                latestPayroll.calculatePayrollString()).equals(commandResult.getFeedbackToUser()));","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"Kevin-Liusx"},"content":"    public void equals() {","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand payrollCommand1 \u003d new PayrollCommand(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand payrollCommand2 \u003d new PayrollCommand(name);","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"Kevin-Liusx"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payrollCommand1.equals(payrollCommand1));","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payrollCommand2.equals(payrollCommand2));","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":125,"author":{"gitId":"Kevin-Liusx"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2023-11-05"},{"lineNumber":126,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payrollCommand1.equals(new PayrollCommand(index)));","lastModifiedDate":"2023-11-05"},{"lineNumber":127,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payrollCommand2.equals(new PayrollCommand(name)));","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"Kevin-Liusx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-05"},{"lineNumber":130,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payrollCommand1.equals(null));","lastModifiedDate":"2023-11-05"},{"lineNumber":131,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payrollCommand2.equals(null));","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":133,"author":{"gitId":"Kevin-Liusx"},"content":"        // one holds index and the other one holds name -\u003e returns false","lastModifiedDate":"2023-11-05"},{"lineNumber":134,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payrollCommand1.equals(payrollCommand2));","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payrollCommand2.equals(payrollCommand1));","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":137,"author":{"gitId":"Kevin-Liusx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-05"},{"lineNumber":138,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payrollCommand1.equals(5.0f));","lastModifiedDate":"2023-11-05"},{"lineNumber":139,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payrollCommand2.equals(5.0f));","lastModifiedDate":"2023-11-05"},{"lineNumber":140,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":141,"author":{"gitId":"Kevin-Liusx"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payrollCommand1.equals(new PayrollCommand(Index.fromZeroBased(1))));","lastModifiedDate":"2023-11-05"},{"lineNumber":143,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":144,"author":{"gitId":"Kevin-Liusx"},"content":"        //different name -\u003e returns false","lastModifiedDate":"2023-11-05"},{"lineNumber":145,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payrollCommand2.equals(new NameContainsKeywordsPredicate(Arrays.asList(\"John\"))));","lastModifiedDate":"2023-11-05"},{"lineNumber":146,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":147,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"Kevin-Liusx":147}},{"path":"src/test/java/seedu/address/logic/commands/PayslipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.io.File;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.util.PaySlipGenerator;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"class PayslipCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"    private final PayslipCommand payslipCommand \u003d new PayslipCommand(Index.fromZeroBased(2));","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    private final PayslipCommand payslipCommand2 \u003d new PayslipCommand(Index.fromZeroBased(1000));","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    private final PayslipCommand payslipCommand3 \u003d new PayslipCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\")),","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        ParserUtil.stringToDate(\"06/10/2023\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    private final PayslipCommand payslipCommand4 \u003d new PayslipCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        new NameContainsKeywordsPredicate(Collections.singletonList(\"Sponge\")));","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    private final PayslipCommand payslipCommand5 \u003d new PayslipCommand(","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\")),","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        ParserUtil.stringToDate(\"06/10/2024\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PayslipCommand((Index) null));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PayslipCommand((NameContainsKeywordsPredicate) null));","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    public void executeWithIndex() throws Exception {","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        // success with index","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        Person employeeToGenerate \u003d model.getFilteredPersonList().get(2);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        employeeToGenerate.addPayroll(new Payroll(employeeToGenerate.getSalary()));","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        CommandResult commandResult \u003d payslipCommand.execute(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertEquals(String.format(PayslipCommand.MESSAGE_PAYSLIP_SUCCESS, employeeToGenerate.getName().toString()),","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        File payslip \u003d new File(\"payslips/\" + PaySlipGenerator.getFileName(employeeToGenerate));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payslip.exists());","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        payslip.delete();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"    public void execute_invalidArguments_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        // fail with invalid index","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        assertThrows(CommandException.class, () -\u003e payslipCommand2.execute(model)); // index out of bounds","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        // fail with non-existent name","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        assertThrows(CommandException.class, () -\u003e payslipCommand4.execute(model)); // no such person","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        // fail with non-existent payroll","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        assertThrows(CommandException.class, () -\u003e payslipCommand5.execute(model)); // no such payroll","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payslipCommand.equals(payslipCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        PayslipCommand payslipCommandCopy \u003d new PayslipCommand(Index.fromZeroBased(2));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payslipCommand.equals(payslipCommandCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payslipCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payslipCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payslipCommand.equals(payslipCommand2));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        String expected \u003d PayslipCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"            + \"{index\u003d\" + Index.fromZeroBased(2) + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        assertEquals(expected, payslipCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":96}},{"path":"src/test/java/seedu/address/logic/commands/PreviousMonthCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.PreviousMonthCommand.MESSAGE_PREVIOUS_MONTH_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class PreviousMonthCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    public void execute_previousMonth_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"                MESSAGE_PREVIOUS_MONTH_ACKNOWLEDGEMENT, false, false, false, false, true, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        assertCommandSuccess(new PreviousMonthCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Leb14":21}},{"path":"src/test/java/seedu/address/logic/commands/ReadCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalFields.EMAIL_FIELD;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalFields.PHONE_FIELD;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"class ReadCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public void execute_validIndexAndFieldToRead_success() throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommand \u003d new ReadCommand(INDEX_FIRST_PERSON, PHONE_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        String expectedMessage \u003d String.format(readCommand.MESSAGE_READ_PERSON_SUCCESS, PHONE_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        Person personToRead \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        expectedModel.setSpecificPersonToDisplay(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        assertCommandSuccess(readCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommand \u003d new ReadCommand(outOfBoundIndex, PHONE_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        assertCommandFailure(readCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    public void execute_invalidField_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        String invalidField \u003d \"invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommand \u003d new ReadCommand(INDEX_FIRST_PERSON, invalidField);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        assertCommandFailure(readCommand, model, Messages.MESSAGE_INVALID_FIELD_TO_READ);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        ReadCommand readFirstCommand \u003d new ReadCommand(INDEX_FIRST_PERSON, EMAIL_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        ReadCommand readSecondCommand \u003d new ReadCommand(INDEX_SECOND_PERSON, EMAIL_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        assertTrue(readFirstCommand.equals(readFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"        ReadCommand readFirstCommandCopy \u003d new ReadCommand(INDEX_FIRST_PERSON, EMAIL_FIELD);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        assertTrue(readFirstCommand.equals(readFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        assertFalse(readFirstCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        assertFalse(readFirstCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"        assertFalse(readFirstCommand.equals(readSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    public void fieldValueToString_validFields_success() throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        // Create a sample Person object with valid fields","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        Person personToRead \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommandPhoneTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"phone\");","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommandEmailTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"email\");","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        ReadCommand readCommandAddressTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"address\");","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        ReadCommand readCommandBankAccountTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"bank account\");","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        ReadCommand readCommandJoinDateTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"join date\");","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        ReadCommand readCommandSalaryTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"salary\");","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        ReadCommand readCommandAnnualLeaveTest \u003d new ReadCommand(INDEX_FIRST_PERSON, \"annual leave\");","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        String phoneValue \u003d readCommandPhoneTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        String emailValue \u003d readCommandEmailTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        String addressValue \u003d readCommandAddressTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        String bankAccountValue \u003d readCommandBankAccountTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        String joinDateValue \u003d readCommandJoinDateTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"        String salaryValue \u003d readCommandSalaryTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        String annualLeaveValue \u003d readCommandAnnualLeaveTest.fieldValueToString(personToRead);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"        assertEquals(\"94351253\", phoneValue);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"        assertEquals(\"alice@example.com\", emailValue);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        assertEquals(\"123, Jurong West Ave 6, #08-111\", addressValue);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        assertEquals(\"123123123123\", bankAccountValue);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        assertEquals(\"04/05/2021\", joinDateValue);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"        assertEquals(\"1500.00\", salaryValue);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(\"Total Annual Leave: \" + personToRead.getAnnualLeave().value + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"                + personToRead.getAnnualLeave().printListLeaveTaken(), annualLeaveValue);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jibtaf":15,"WeeMingQing":2,"Leb14":92}},{"path":"src/test/java/seedu/address/logic/commands/ViewLeaveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"class ViewLeaveCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    public void execute_validDateWithNoEmployeeOnLeave_throwCommandException() throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        LocalDate validDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d validDate.format(formatter);","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand viewLeaveCommand \u003d new ViewLeaveCommand(validDate);","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        assertCommandFailure(viewLeaveCommand, model,","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"                String.format(Messages.MESSAGE_NO_EMPLOYEE_ON_LEAVE, formattedDate));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    public void execute_validDateWithEmployeeOnLeave_success() throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        LocalDate validDate \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d validDate.format(formatter);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(INDEX_FIRST_PERSON, validDate);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        addLeaveCommand.execute(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand viewLeaveCommand \u003d new ViewLeaveCommand(validDate);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        List\u003cString\u003e nameList \u003d viewLeaveCommand.getNameList(model.getFilteredPersonList());","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        String nameListInString \u003d viewLeaveCommand.nameListToString(nameList);","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        String expectedMessage \u003d String.format(ViewLeaveCommand.MESSAGE_SUCCESS, formattedDate, nameListInString);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        assertCommandSuccess(viewLeaveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d new DeleteLeaveCommand(INDEX_FIRST_PERSON, validDate);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        deleteLeaveCommand.execute(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"    public void nameListToStringTest_success() throws CommandException {","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        LocalDate validDate \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d validDate.format(formatter);","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(INDEX_FIRST_PERSON, validDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        addLeaveCommand.execute(model);","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand viewLeaveCommand \u003d new ViewLeaveCommand(validDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        List\u003cString\u003e nameList \u003d viewLeaveCommand.getNameList(model.getFilteredPersonList());","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"        String nameListInString \u003d viewLeaveCommand.nameListToString(nameList);","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        String expectedString \u003d \"Alice Pauline\";","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        assertEquals(nameListInString, expectedString);","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d new DeleteLeaveCommand(INDEX_FIRST_PERSON, validDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"        deleteLeaveCommand.execute(model);","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"    public void getNameListTest_success() throws CommandException {","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        LocalDate validDate \u003d LocalDate.now().plusDays(3);","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d validDate.format(formatter);","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(INDEX_FIRST_PERSON, validDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        addLeaveCommand.execute(model);","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand viewLeaveCommand \u003d new ViewLeaveCommand(validDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"        List\u003cString\u003e nameList \u003d viewLeaveCommand.getNameList(model.getFilteredPersonList());","lastModifiedDate":"2023-11-11"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        List\u003cString\u003e expectedNameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        expectedNameList.add(\"Alice Pauline\");","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"        assertEquals(nameList, expectedNameList);","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d new DeleteLeaveCommand(INDEX_FIRST_PERSON, validDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"        deleteLeaveCommand.execute(model);","lastModifiedDate":"2023-11-11"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"    public void equals() {","lastModifiedDate":"2023-11-11"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand viewLeaveFirstCommand \u003d new ViewLeaveCommand(LocalDate.now());","lastModifiedDate":"2023-11-11"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand viewLeaveSecondCommand \u003d new ViewLeaveCommand(LocalDate.now().plusDays(1));","lastModifiedDate":"2023-11-11"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"        assertTrue(viewLeaveFirstCommand.equals(viewLeaveFirstCommand));","lastModifiedDate":"2023-11-11"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand viewLeaveFirstCommandCopy \u003d new ViewLeaveCommand(LocalDate.now());","lastModifiedDate":"2023-11-11"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"        assertTrue(viewLeaveFirstCommandCopy.equals(viewLeaveFirstCommand));","lastModifiedDate":"2023-11-11"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"        assertFalse(viewLeaveFirstCommand.equals(1));","lastModifiedDate":"2023-11-11"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"        assertFalse(viewLeaveFirstCommand.equals(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"        assertFalse(viewLeaveFirstCommand.equals(viewLeaveSecondCommand));","lastModifiedDate":"2023-11-11"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jibtaf":4,"Leb14":123}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ANNUALLEAVE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKACCOUNT_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKACCOUNT_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ANNUALLEAVE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BANKACCOUNT_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOINDATE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOINDATE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOINDATE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANNUALLEAVE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOINDATE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"                + ADDRESS_DESC_BOB + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"                + ANNUALLEAVE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"                + ADDRESS_DESC_BOB + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"                + ANNUALLEAVE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"        // multiple bank account","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, BANKACCOUNT_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BANK_ACCOUNT));","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Kevin-Liusx"},"content":"        // multiple join date","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, JOINDATE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOIN_DATE));","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"        // multiple salary","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, SALARY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SALARY));","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"        // multiple annual leave","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, ANNUALLEAVE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ANNUAL_LEAVE));","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"Kevin-Liusx"},"content":"                        + BANKACCOUNT_DESC_AMY + ANNUALLEAVE_DESC_AMY + SALARY_DESC_AMY + JOINDATE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Kevin-Liusx"},"content":"                        PREFIX_BANK_ACCOUNT, PREFIX_ANNUAL_LEAVE, PREFIX_JOIN_DATE, PREFIX_SALARY));","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid bank account","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_BANKACCOUNT_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BANK_ACCOUNT));","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid join date","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_JOINDATE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOIN_DATE));","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid salary","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_SALARY_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SALARY));","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid annual leave","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_ANNUALLEAVE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ANNUAL_LEAVE));","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid bank account","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_BANKACCOUNT_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BANK_ACCOUNT));","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid join date","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_JOINDATE_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOIN_DATE));","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid salary","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_SALARY_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SALARY));","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid annual leave","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ANNUALLEAVE_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"Kevin-Liusx"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ANNUAL_LEAVE));","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"Kevin-Liusx"},"content":"    // This test case can be either deleted or kept. Keep this if we have any other fields that are optional.","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"applepiofmyeye"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"jibtaf"},"content":"            + BANKACCOUNT_DESC_AMY + JOINDATE_DESC_AMY + SALARY_DESC_AMY + ANNUALLEAVE_DESC_AMY,","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"Kevin-Liusx"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"Kevin-Liusx"},"content":"        // missing bank prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"Kevin-Liusx"},"content":"                + VALID_BANKACCOUNT_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"Kevin-Liusx"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"Kevin-Liusx"},"content":"        // missing join date prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + VALID_JOINDATE_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"Kevin-Liusx"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"Kevin-Liusx"},"content":"        // missing salary prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + VALID_SALARY_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"Kevin-Liusx"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"Kevin-Liusx"},"content":"        // missing annual leave prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + VALID_ANNUALLEAVE_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":249,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"Kevin-Liusx"},"content":"                + VALID_BANKACCOUNT_BOB + VALID_JOINDATE_BOB + VALID_SALARY_BOB + VALID_ANNUALLEAVE_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"applepiofmyeye"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"applepiofmyeye"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"jibtaf"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-18"},{"lineNumber":273,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":274,"author":{"gitId":"jibtaf"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":276,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid bank account","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"Kevin-Liusx"},"content":"                + INVALID_BANKACCOUNT_DESC + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"Kevin-Liusx"},"content":"                BankAccount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":280,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid join date","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + INVALID_JOINDATE_DESC + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"Kevin-Liusx"},"content":"                JoinDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid salary","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + INVALID_SALARY_DESC + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"Kevin-Liusx"},"content":"                Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"Kevin-Liusx"},"content":"        // invalid annual leave","lastModifiedDate":"2023-10-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":293,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + INVALID_ANNUALLEAVE_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":294,"author":{"gitId":"Kevin-Liusx"},"content":"                AnnualLeave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":297,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"Kevin-Liusx"},"content":"                + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":303,"author":{"gitId":"Kevin-Liusx"},"content":"                + ADDRESS_DESC_BOB + BANKACCOUNT_DESC_BOB + JOINDATE_DESC_BOB + SALARY_DESC_BOB + ANNUALLEAVE_DESC_BOB,","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Kevin-Liusx":135,"jibtaf":4,"applepiofmyeye":4,"-":163}},{"path":"src/test/java/seedu/address/logic/parser/AddLeaveCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.AddLeaveCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"public class AddLeaveCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"            AddLeaveCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    private final AddLeaveCommandParser parser \u003d new AddLeaveCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"        // no index specified","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        // no field specified","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"        // no index and no field specified","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        // no index and no field specified","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"        // invalid field specified","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1 ma\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        // invalid field specified","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1 /at\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        // negative index","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"-5\" + \" /on 12/12/2024\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        // zero index","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"0\" + \" /on 12/12/2024\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"        // zero index","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"-1\" + \" /from 12/12/2024 /to 13/12/2024\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"        // zero index","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"0\" + \" /from 12/12/2024 /to 13/12/2024\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" 01/01/2024\", MESSAGE_INVALID_FORMAT); // invalid format","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on /from\", MESSAGE_INVALID_FORMAT); // invalid format","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on /to\", MESSAGE_INVALID_FORMAT); // invalid format","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on\", MESSAGE_INVALID_DATE); // invalid date","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on 1/01/2024\", MESSAGE_INVALID_DATE); // invalid","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        // date","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /from\", MESSAGE_INVALID_FORMAT); // invalid","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"        // date","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /from 2024/12/12 /to\", MESSAGE_INVALID_DATE); // invalid","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        // date","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /from 12/12/2023\", MESSAGE_INVALID_FORMAT); // invalid","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        // format","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /to 12/12/2023\", MESSAGE_INVALID_FORMAT); // invalid","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        // format","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /from 12/12/2023 /to\", MESSAGE_INVALID_DATE); // invalid","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        // date","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_allFieldsSpecifiedForAddingSingleLeave_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" /on \" + ParserUtil.dateToString(currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(targetIndex, currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"        assertParseSuccess(parser, userInput, addLeaveCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_allFieldsSpecifiedForAddingMultipleLeave_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" /from \"","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"                + ParserUtil.dateToString(currentDate.plusDays(1))","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"                + \" /to \"","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"                + ParserUtil.dateToString(currentDate.plusDays(2));","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"        AddLeaveCommand addLeaveCommand \u003d new AddLeaveCommand(targetIndex, currentDate.plusDays(1),","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"                currentDate.plusDays(2));","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"        assertParseSuccess(parser, userInput, addLeaveCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"WeeMingQing":111}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.BenefitCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.CurrentMonthCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.DeductCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.NextMonthCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayrollCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayslipCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.PreviousMonthCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ViewLeaveCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditEmployeeDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"    public void parseCommand_read() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        ReadCommand command \u003d (ReadCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"            ReadCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + \"/p\");","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new ReadCommand(INDEX_FIRST_PERSON, \"phone\"), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"    public void parseCommand_deduct() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"        DeductCommand command \u003d (DeductCommand) parser.parseCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"            DeductCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + \"/v 150.00 /r cpf\");","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new DeductCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"150.00\", Reason.EMPLOYEE_CPF_DEDUCTION)), command);","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"    public void parseCommand_benefit() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand command \u003d (BenefitCommand) parser.parseCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"            BenefitCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + \"/v 150.00 /r bonus\");","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new BenefitCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"150.00\", Reason.ANNUAL_BONUS)), command);","lastModifiedDate":"2023-11-07"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"    public void parseCommand_payroll() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"        PayrollCommand command \u003d (PayrollCommand) parser.parseCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"            PayrollCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new PayrollCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"    public void parseCommand_payslip() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"        PayslipCommand command \u003d (PayslipCommand) parser.parseCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"            PayslipCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new PayslipCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"    public void parseCommand_viewLeave() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d currentDate.format(formatter);","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"        ViewLeaveCommand command \u003d (ViewLeaveCommand) parser.parseCommand(","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"                ViewLeaveCommand.COMMAND_WORD + \" \" + PREFIX_ADD_ANNUAL_LEAVE_ON + \" \" + formattedDate);","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"        assertEquals(new ViewLeaveCommand(currentDate), command);","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"Leb14"},"content":"    public void parseCommand_nextMonth() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"        assertTrue(parser.parseCommand(NextMonthCommand.COMMAND_WORD) instanceof NextMonthCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"Leb14"},"content":"        assertTrue(parser.parseCommand(NextMonthCommand.COMMAND_WORD + \" 3\") instanceof NextMonthCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"Leb14"},"content":"    public void parseCommand_previousMonth() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"Leb14"},"content":"        assertTrue(parser.parseCommand(PreviousMonthCommand.COMMAND_WORD) instanceof PreviousMonthCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"Leb14"},"content":"        assertTrue(parser.parseCommand(PreviousMonthCommand.COMMAND_WORD + \" 3\") instanceof PreviousMonthCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"    public void parseCommand_currentMonth() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"        assertTrue(parser.parseCommand(CurrentMonthCommand.COMMAND_WORD) instanceof CurrentMonthCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"        assertTrue(parser.parseCommand(CurrentMonthCommand.COMMAND_WORD + \" 3\") instanceof CurrentMonthCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jibtaf":49,"-":97,"Leb14":37}},{"path":"src/test/java/seedu/address/logic/parser/AttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.AttendanceCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"public class AttendanceCommandParserTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"    private AttendanceCommandParser parser \u003d new AttendanceCommandParser();","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"    public void parse_namePresent_success() {","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB,","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"                new AttendanceCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(VALID_NAME_BOB.split(\"\\\\s+\")))));","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"    public void parse_indexPresent_success() {","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, \"1\", new AttendanceCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB;","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"        // multiple names","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"        // multiple indexes","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \" 1 2 \" + NAME_DESC_BOB + validExpectedPersonString,","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        // invalid name","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        // invalid name","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"        // missing name prefix","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, VALID_NAME_BOB,","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"        // all prefixes missing","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"    public void parse_invalidName_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"        // invalid name","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC,","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"applepiofmyeye":86}},{"path":"src/test/java/seedu/address/logic/parser/BenefitCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.BenefitCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Payment;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"public class BenefitCommandParserTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    private final BenefitCommandParser parser \u003d new BenefitCommandParser();","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public void parse_nullArgs_throwsNullPointerException() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e throws NullPointerException","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        // missing reason -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00\",","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, Reason.MISSING_ALERT));","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /v 150.00\",","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, Reason.MISSING_ALERT));","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        // unsupported reason -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00 /r xxx\", Reason.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /v 150.00 /r xxx\", Reason.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        // reasons for deduction -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00 /r cpf\", Benefit.MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00 /r no pay\", Benefit.MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00 /r absence\", Benefit.MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        // invalid index -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"-1 /v 150.00 /r bonus\",","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE)); // negative index","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"99999999999 /v 150.00 /r bonus\",","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE)); // integer overflow","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1.1 /v 150.00 /r bonus\",","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE)); // non-integer index","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        // missing name and index -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/v 150.00 /r bonus\",","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        // missing value -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /r bonus\",","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /r bonus\",","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        // invalid value -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150.00.00 /r bonus\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150 /r bonus\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150.0 /r bonus\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /v 150.000 /r bonus\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /v -150.00 /r bonus\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        // empty command arguments -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE)); // empty string","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BenefitCommand.MESSAGE_USAGE)); // whitespace","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        // repetitive prefixes -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150.00 /v 200.00 /r bonus\",","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(new Prefix(\"/v\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150.00 /r transport /r bonus\",","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(new Prefix(\"/r\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"    public void parse_validArgs_returnsBenefitCommand() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        // valid input -\u003e returns BenefitCommand","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand expectedBenefitCommand \u003d new BenefitCommand(Index.fromZeroBased(0),","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"150.00\", Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand expectedBenefitCommand2 \u003d new BenefitCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"Yu\")),","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"150.00\", Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand expectedBenefitCommand3 \u003d new BenefitCommand(Index.fromZeroBased(0),","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"150.00\", Reason.TRANSPORT_ALLOWANCE));","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"        BenefitCommand expectedBenefitCommand4 \u003d new BenefitCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"Yu\")),","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"150.00\", Reason.TRANSPORT_ALLOWANCE));","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" 1 /v 150.00 /r bonus\", expectedBenefitCommand);","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" /n Yu /v 150.00 /r bonus\", expectedBenefitCommand2);","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" 1 /v 150.00 /r transport\", expectedBenefitCommand3);","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" /n Yu /v 150.00 /r transport\", expectedBenefitCommand4);","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"jibtaf":104}},{"path":"src/test/java/seedu/address/logic/parser/DeductCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.DeductCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Payment;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"public class DeductCommandParserTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    private final DeductCommandParser parser \u003d new DeductCommandParser();","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public void parse_nullArgs_throwsNullPointerException() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e throws NullPointerException","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        // missing reason -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00\",","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, Reason.MISSING_ALERT));","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /v 150.00\",","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, Reason.MISSING_ALERT));","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        // unsupported reason -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00 /r xxx\", Reason.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /v 150.00 /r xxx\", Reason.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        // reasons for benefit -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00 /r bonus\", Deduction.MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"3 /v 150.00 /r transport\", Deduction.MESSAGE_CONSTRAINTS_INVALID_REASON);","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        // invalid index -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"-1 /v 150.00 /r cpf\",","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE)); // negative index","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"99999999999 /v 150.00 /r cpf\",","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE)); // integer overflow","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1.1 /v 150.00 /r cpf\",","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE)); // non-integer index","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        // missing name and index -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/v 150.00 /r cpf\",","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        // missing value -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /r cpf\",","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /r cpf\",","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        // invalid value -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150.00.00 /r cpf\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150 /r cpf\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150.0 /r cpf\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /v 150.000 /r cpf\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"/n Yu /v -150.00 /r cpf\", Payment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        // empty command arguments -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE)); // empty string","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeductCommand.MESSAGE_USAGE)); // whitespace","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        // repetitive prefixes -\u003e throws ParseException","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150.00 /v 200.00 /r cpf\",","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(new Prefix(\"/v\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"1 /v 150.00 /r no pay /r cpf\",","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(new Prefix(\"/r\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"    public void parse_validArgs_returnsDeductCommand() throws Exception {","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        // valid input -\u003e returns DeductCommand","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        DeductCommand expectedDeductCommand \u003d new DeductCommand(Index.fromZeroBased(0),","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"150.00\", Reason.EMPLOYEE_CPF_DEDUCTION));","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        DeductCommand expectedDeductCommand2 \u003d new DeductCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"Yu\")),","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"150.00\", Reason.EMPLOYEE_CPF_DEDUCTION));","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"        DeductCommand expectedDeductCommand3 \u003d new DeductCommand(Index.fromZeroBased(0),","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"150.00\", Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"        DeductCommand expectedDeductCommand4 \u003d new DeductCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"Yu\")),","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"150.00\", Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        DeductCommand expectedDeductCommand5 \u003d new DeductCommand(Index.fromZeroBased(0),","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"150.00\", Reason.ABSENCE));","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"        DeductCommand expectedDeductCommand6 \u003d new DeductCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"Yu\")),","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"150.00\", Reason.ABSENCE));","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" 1 /v 150.00 /r cpf\", expectedDeductCommand);","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" /n Yu /v 150.00 /r cpf\", expectedDeductCommand2);","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" 1 /v 150.00 /r no pay\", expectedDeductCommand3);","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" /n Yu /v 150.00 /r no pay\", expectedDeductCommand4);","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" 1 /v 150.00 /r absence\", expectedDeductCommand5);","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        assertParseSuccess(parser, \" /n Yu /v 150.00 /r absence\", expectedDeductCommand6);","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"jibtaf":110}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jibtaf":1,"WeeMingQing":1,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/DeleteLeaveCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"import seedu.address.logic.commands.DeleteLeaveCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"public class DeleteLeaveCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"            DeleteLeaveCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    private final DeleteLeaveCommandParser parser \u003d new DeleteLeaveCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"        // no index specified","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        // no field specified","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"        // no index and no field specified","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"        // negative index","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"-5\" + \" /on 12/12/2024\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        // zero index","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"0\" + \" /on 12/12/2024\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        // empty prefix being parsed as preamble","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"        // empty space prefix being parsed as preamble","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"        // invalid index being parsed as preamble","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"        // invalid index being parsed as preamble","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"-3\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" 01/01/2024\", MESSAGE_INVALID_FORMAT); // invalid format","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on /from\", MESSAGE_INVALID_FORMAT); // invalid format","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on /to\", MESSAGE_INVALID_FORMAT); // invalid format","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on\", MESSAGE_INVALID_DATE); // invalid date","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on 1/01/2024\", MESSAGE_INVALID_DATE); // invalid","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        // date","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, \"1\" + \" /on 2024/12/12\", MESSAGE_INVALID_DATE); // invalid","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"        // date","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_allFieldsSpecifiedForDeletingSingleLeave_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" /on \" + ParserUtil.dateToString(currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d new DeleteLeaveCommand(targetIndex, currentDate.plusDays(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"        assertParseSuccess(parser, userInput, deleteLeaveCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_allFieldsSpecifiedForDeletingMultipleLeave_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" /from \"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"                + ParserUtil.dateToString(currentDate.plusDays(1))","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"                + \" /to \"","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"                + ParserUtil.dateToString(currentDate.plusDays(2));","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"        DeleteLeaveCommand deleteLeaveCommand \u003d new DeleteLeaveCommand(targetIndex, currentDate.plusDays(1),","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"                currentDate.plusDays(2));","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"        assertParseSuccess(parser, userInput, deleteLeaveCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_invalidStartDateFieldsSpecifiedForDeletingMultipleLeave_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"        String userInput1 \u003d targetIndex.getOneBased() + \" /from \"","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"                + \" /to \"","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"                + ParserUtil.dateToString(currentDate.plusDays(1));","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"        String userInput2 \u003d targetIndex.getOneBased() + \" /from 32/02/2023\"","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"                + \" /to \"","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"                + ParserUtil.dateToString(currentDate.plusDays(1));","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, userInput1, MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_invalidEndDateFieldsSpecifiedForDeletingMultipleLeave_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"        String userInput1 \u003d targetIndex.getOneBased() + \" /from \"","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"                + ParserUtil.dateToString(currentDate.plusDays(1))","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"                + \" /to \";","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"        String userInput2 \u003d targetIndex.getOneBased() + \" /from \"","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"                + ParserUtil.dateToString(currentDate.plusDays(1))","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"                + \" /to 32/02/2023\";","lastModifiedDate":"2023-11-07"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, userInput1, MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"    public void parse_invalidStartDateFieldsSpecifiedForDeletingSingleLeave_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"        String userInput1 \u003d targetIndex.getOneBased() + \" /on\";","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"        String userInput2 \u003d targetIndex.getOneBased() + \" /on 32/02/2023\";","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        String userInput3 \u003d targetIndex.getOneBased() + \" /on 29/02/2023\";","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, userInput1, MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, userInput2, MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"        assertParseFailure(parser, userInput3, MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"WeeMingQing":145}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKACCOUNT_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ANNUALLEAVE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BANKACCOUNT_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOINDATE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOINDATE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANNUALLEAVE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOINDATE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BANKACCOUNT_DESC, BankAccount.MESSAGE_CONSTRAINTS); // invalid","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"        // tag","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \"1\" + INVALID_JOINDATE_DESC, JoinDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SALARY_DESC, Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ANNUALLEAVE_DESC, AnnualLeave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"            \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"applepiofmyeye"},"content":"        // bank account","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"applepiofmyeye"},"content":"        userInput \u003d targetIndex.getOneBased() + BANKACCOUNT_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withBankAccount(VALID_BANKACCOUNT_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"applepiofmyeye"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"applepiofmyeye"},"content":"        // join date","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"applepiofmyeye"},"content":"        userInput \u003d targetIndex.getOneBased() + JOINDATE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withJoinDate(VALID_JOINDATE_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"applepiofmyeye"},"content":"        // salary","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"applepiofmyeye"},"content":"        userInput \u003d targetIndex.getOneBased() + SALARY_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withSalary(VALID_SALARY_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"applepiofmyeye"},"content":"        // address","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"applepiofmyeye"},"content":"        userInput \u003d targetIndex.getOneBased() + ANNUALLEAVE_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"Leb14"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withAnnualLeave(VALID_ANNUALLEAVE_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"applepiofmyeye"},"content":"            + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"applepiofmyeye"},"content":"            + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":212,"author":{"gitId":"applepiofmyeye"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"applepiofmyeye"},"content":"                PREFIX_ADDRESS));","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":220,"author":{"gitId":"applepiofmyeye"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"applepiofmyeye"},"content":"                PREFIX_ADDRESS));","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jibtaf":3,"applepiofmyeye":43,"-":165,"Leb14":12}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ATTENDANCE_TYPE_DESC_ABSENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ATTENDANCE_TYPE_DESC_LATE;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ATTENDANCE_TYPE_DESC_PRESENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.attendance.AttendanceType;","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    public void parseTestValidNameValidTypeSuccess() {","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"        // valid name, mark as absent","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + ATTENDANCE_TYPE_DESC_ABSENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"                new MarkCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(VALID_NAME_BOB.split(\"\\\\s+\"))),","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"                        AttendanceType.ABSENT));","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"        // valid name, mark as late","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + ATTENDANCE_TYPE_DESC_LATE,","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"                new MarkCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(VALID_NAME_BOB.split(\"\\\\s+\"))),","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"                        AttendanceType.LATE));","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"        // valid name, mark as present","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + ATTENDANCE_TYPE_DESC_PRESENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"                new MarkCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(VALID_NAME_BOB.split(\"\\\\s+\"))),","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"                        AttendanceType.PRESENT));","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"    public void parseIndexPresentSuccess() {","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        // valid index, mark as absent","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, \"1\" + ATTENDANCE_TYPE_DESC_ABSENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"                new MarkCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"                        INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"                        AttendanceType.ABSENT));","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        // valid index, mark as late","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, \"1\" + ATTENDANCE_TYPE_DESC_LATE,","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"                new MarkCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"                        INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"                        AttendanceType.LATE));","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"        // valid index, mark as present","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseSuccess(parser, \"1\" + ATTENDANCE_TYPE_DESC_PRESENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"                new MarkCommand(","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"                        INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"                        AttendanceType.PRESENT));","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB;","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        // multiple names","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString + ATTENDANCE_TYPE_DESC_ABSENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"        // multiple indexes","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \" 1 2 \" + NAME_DESC_BOB + validExpectedPersonString + ATTENDANCE_TYPE_DESC_ABSENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"        // invalid name","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString + ATTENDANCE_TYPE_DESC_ABSENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"        // invalid name","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC + ATTENDANCE_TYPE_DESC_ABSENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"    public void parse_attendanceFieldMissing_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"        // missing attendance prefix","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, VALID_NAME_BOB,","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"        // missing name prefix","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, ATTENDANCE_TYPE_DESC_LATE,","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"        // all prefixes missing","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"                expectedMessage);","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"    public void parse_invalidName_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"        // invalid name","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ATTENDANCE_TYPE_DESC_ABSENT,","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"applepiofmyeye":123}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e ParserUtil.parseIndex(","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"            Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jibtaf":2,"-":138}},{"path":"src/test/java/seedu/address/logic/parser/PayrollCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.PayrollCommand;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"public class PayrollCommandParserTest {","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    private PayrollCommandParser parser \u003d new PayrollCommandParser();","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayrollCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    public void parse_validArgs_returnsPayrollCommand() {","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollCommand expectedPayrollCommand \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"                new PayrollCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Amy\")));","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseSuccess(parser, \" /n Amy\", expectedPayrollCommand);","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    public void parse_invalidArgs_returnsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"        assertParseFailure(parser, \"abcd\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayrollCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"Kevin-Liusx":34}},{"path":"src/test/java/seedu/address/logic/parser/PayslipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.PayslipCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"class PayslipCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    private final PayslipCommandParser parser \u003d new PayslipCommandParser();","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    public void parse_nullArgs_throwsNullPointerException() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e throws NullPointerException","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        // invalid input -\u003e throws ParseException","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a\")); // non-numeric","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1.1\")); // non-integer","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-1\")); // negative integer","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0\")); // zero","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 1\")); // multiple arguments","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1 a\")); // non-numeric argument","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\")); // empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \")); // whitespace","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        // index and name both not present","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" /t 01/01/2020\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        // invalid date format","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" 1 /t 01-01-2020\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"    public void parse_validArgs_returnsPayslipCommand() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        // valid input -\u003e returns PayslipCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new PayslipCommand(Index.fromZeroBased(0)), parser.parse(\"1\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new PayslipCommand(new NameContainsKeywordsPredicate(Collections.singletonList(\"Alex\"))),","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"            parser.parse(\" /n Alex\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new PayslipCommand(Index.fromZeroBased(0), ParserUtil.stringToDate(\"01/01/2020\")),","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            parser.parse(\" 1 /t 01/01/2020\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertEquals(new PayslipCommand(new NameContainsKeywordsPredicate(Collections.singletonList(\"Alex\")),","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            ParserUtil.stringToDate(\"01/01/2020\")),","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            parser.parse(\" /n Alex /t 01/01/2020\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":56}},{"path":"src/test/java/seedu/address/logic/parser/ReadCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ReadCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"class ReadCommandParserTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    private ReadCommandParser parser \u003d new ReadCommandParser();","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    public void parse_validArgs_returnsReadCommand() {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        assertParseSuccess(parser, \"1 /a\", new ReadCommand(INDEX_FIRST_PERSON, \"address\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    public void parse_missingField_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    public void parse_invalidField_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \"1 /invalid\",","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"                Messages.MESSAGE_INVALID_FIELD_TO_READ);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    public void fieldNameToString_validFieldIdentifiers_returnsFieldNames() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"p\"), \"phone\");","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"a\"), \"address\");","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"e\"), \"email\");","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"b\"), \"bank account\");","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"l\"), \"annual leave\");","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        assertEquals(parser.fieldNameToString(\"jd\"), \"join date\");","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        assertEquals(parser.fieldNameToString(\"s\"), \"salary\");","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":1,"Leb14":53}},{"path":"src/test/java/seedu/address/logic/parser/ViewLeaveCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_ANNUAL_LEAVE_ON;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SLASH;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import seedu.address.logic.commands.ViewLeaveCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"class ViewLeaveCommandParserTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    private static final LocalDate VALID_DATE \u003d LocalDate.now();","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    private static final String FORMATTED_DATE \u003d VALID_DATE.format(FORMATTER);","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    private ViewLeaveCommandParser parser \u003d new ViewLeaveCommandParser();","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    public void parse_validArgs_returnsViewLeaveCommand() {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ADD_ANNUAL_LEAVE_ON + FORMATTED_DATE,","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"                new ViewLeaveCommand(VALID_DATE));","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    public void parse_invalidDate_throwsParseException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ADD_ANNUAL_LEAVE_ON + \"32/11/2023\",","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"                MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public void parse_emptyDate_throwsParseException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ADD_ANNUAL_LEAVE_ON + \"       \",","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"                MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    public void parse_wrongPrefix_throwsParseException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SLASH + FORMATTED_DATE,","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        assertParseFailure(parser, \"            \",","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Leb14":53}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        // Two persons with the same fields","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    public void hasPerson_personWithDifferentFieldsInAddressBook_returnsFalse() {","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        assertFalse(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jibtaf":4,"applepiofmyeye":1,"-":101}},{"path":"src/test/java/seedu/address/model/person/BenefitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"class BenefitTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    private final Benefit benefit \u003d new Benefit(\"5000.00\", Reason.ANNUAL_BONUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    private final Benefit benefit2 \u003d new Benefit(\"500.00\", Reason.TRANSPORT_ALLOWANCE);","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Benefit(null, null));","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Benefit(null, Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Benefit(\"5000.00\", null));","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidReason_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Benefit(\"1500.00\", Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Benefit(\"1500.00\", Reason.ABSENCE));","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Benefit(\"1500.00\", Reason.EMPLOYEE_CPF_DEDUCTION));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidBenefit_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        String invalidBenefit \u003d \"5000\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Benefit(invalidBenefit, Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    public void isValidBenefit() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        // null benefit","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e Benefit.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        // valid benefit","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit2.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        // invalid benefit","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"\", Reason.ANNUAL_BONUS).isValid()); // empty value","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\" \", Reason.ANNUAL_BONUS).isValid()); // space only","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"*\", Reason.ANNUAL_BONUS).isValid()); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"8+1500.00\", Reason.ANNUAL_BONUS).isValid()); // contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000\", Reason.ANNUAL_BONUS).isValid()); // no decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.0\", Reason.ANNUAL_BONUS).isValid()); // one decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.000\", Reason.ANNUAL_BONUS).isValid()); // three decimal points","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.00\", Reason.NO_PAY_LEAVE).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.00\", Reason.ABSENCE).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.00\", Reason.EMPLOYEE_CPF_DEDUCTION).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit.equals(new Benefit(\"5000.00\", Reason.ANNUAL_BONUS)));","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit2.equals(new Benefit(\"500.00\", Reason.TRANSPORT_ALLOWANCE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit.equals(benefit));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        assertTrue(benefit2.equals(benefit2));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        assertFalse(benefit.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        assertFalse(benefit.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        assertFalse(benefit.equals(new Benefit(\"5000.01\", Reason.ANNUAL_BONUS)));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"        // different reasons -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        assertFalse(benefit.equals(new Benefit(\"5000.00\", Reason.TRANSPORT_ALLOWANCE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":88}},{"path":"src/test/java/seedu/address/model/person/DeductionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"class DeductionTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction \u003d new Deduction(\"1500.00\", Reason.NO_PAY_LEAVE);","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction2 \u003d new Deduction(\"1500.00\", Reason.ABSENCE);","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    private final Deduction deduction3 \u003d new Deduction(\"1500.00\", Reason.EMPLOYEE_CPF_DEDUCTION);","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deduction(null, null));","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deduction(null, Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deduction(\"1500.00\", null));","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidReason_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deduction(\"1500.00\", Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deduction(\"1500.00\", Reason.TRANSPORT_ALLOWANCE));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidDeduction_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        String invalidDeduction \u003d \"1500\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deduction(invalidDeduction, Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"    public void isValidDeduction() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        // null deduction","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deduction.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        // valid deduction","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction2.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction3.isValid());","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"        // invalid deduction","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"\", Reason.ABSENCE).isValid()); // empty value","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\" \", Reason.ABSENCE).isValid()); // space only","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"*\", Reason.ABSENCE).isValid()); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"8+1500.00\", Reason.ABSENCE).isValid()); // contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500\", Reason.ABSENCE).isValid()); // no decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500.0\", Reason.ABSENCE).isValid()); // one decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500.000\", Reason.ABSENCE).isValid()); // three decimal points","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500.00\", Reason.ANNUAL_BONUS).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"1500.00\", Reason.TRANSPORT_ALLOWANCE).isValid()); // invalid reason","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction.equals(new Deduction(\"1500.00\", Reason.NO_PAY_LEAVE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction2.equals(new Deduction(\"1500.00\", Reason.ABSENCE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction3.equals(new Deduction(\"1500.00\", Reason.EMPLOYEE_CPF_DEDUCTION)));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction.equals(deduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction2.equals(deduction2));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"        assertTrue(deduction3.equals(deduction3));","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"        assertFalse(deduction.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        assertFalse(deduction.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"        assertFalse(deduction.equals(new Deduction(\"1500.01\", Reason.NO_PAY_LEAVE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"        // different reasons -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"        assertFalse(deduction.equals(new Deduction(\"1500.00\", Reason.ABSENCE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":89}},{"path":"src/test/java/seedu/address/model/person/PaymentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jibtaf"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"class PaymentTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jibtaf"},"content":"    private final Payment payment \u003d new Payment(\"1500.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Payment(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    public void constructor_invalidPayment_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"        String invalidPayment \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Payment(invalidPayment));","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public void isValidPayment() {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        // null payment","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e Payment.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"        // valid payment","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"0.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"10.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"100.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"10000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"        assertTrue(Payment.isValid(\"100000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jibtaf"},"content":"        // invalid payment","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"\")); // empty value","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\" \")); // space only","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"*\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"8+1500.00\")); // contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"1500\")); // no decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"1500.0\")); // one decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Payment.isValid(\"1500.000\")); // three decimal points","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payment.equals(new Payment(\"1500.00\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jibtaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jibtaf"},"content":"        assertTrue(payment.equals(payment));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jibtaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payment.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payment.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"        assertFalse(payment.equals(new Payment(\"1500.01\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":63}},{"path":"src/test/java/seedu/address/model/person/PayrollTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"public class PayrollTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    private final Salary validSalary \u003d new Salary(\"2000.00\");","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Payroll(validSalary,","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"                        CommandTestUtil.VALID_DATE, null, null));","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"    public void constructor_invalidSalary_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"        String invalidSalary \u003d \"5000\";","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Payroll(new Salary(invalidSalary)));","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    public void constructor_invalidDate_throwsDateTimeParseException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new Payroll(validSalary,","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"                \"today\", \"30/11/2023\", \"05/12/2023\"));","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"    public void addBenefit_addingBenefit_addSuccessful() {","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d new Payroll(new Salary(\"2000.00\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"        payroll.addBenefit(new Benefit(\"200.00\", Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll.getSalary().getTotalBenefits() \u003d\u003d 200.00);","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"    public void addDeduction_addingDeduction_addSuccessful() {","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d new Payroll(new Salary(\"2000.00\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        payroll.addDeduction(new Deduction(\"200.00\", Reason.ABSENCE));","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll.getSalary().getTotalDeductions() \u003d\u003d 200.00);","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"    public void getTransportAllowancesString_addingTransportAllowance_addSuccessful() {","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d new Payroll(new Salary(\"800.00\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"        payroll.addBenefit(new Benefit(\"200.00\", Reason.TRANSPORT_ALLOWANCE));","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll.getTransportAllowancesString().equals(\"200.00\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"    public void getNoPayLeavesString_addingNoPayLeaves_addSuccessful() {","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d new Payroll(new Salary(\"20000.00\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"        payroll.addDeduction(new Deduction(\"200.00\", Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll.getNoPayLeavesString().equals(\"200.00\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"Kevin-Liusx"},"content":"    public void getAbsencesString_addingAbsences_addSuccessful() {","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d new Payroll(new Salary(\"3000.00\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"        payroll.addDeduction(new Deduction(\"200.00\", Reason.ABSENCE));","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll.getAbsencesString().equals(\"200.00\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"Kevin-Liusx"},"content":"    public void getPaymentDate_checkPaymentDate_samePaymentDate() {","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"Kevin-Liusx"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2023-11-30\");","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d new Payroll((new Salary(\"200.00\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll.getPaymentDate().equals(localDate));","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"Kevin-Liusx"},"content":"    public void equals() {","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll1 \u003d new Payroll(validSalary);","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll2 \u003d new Payroll(validSalary, \"01/11/2023\", \"30/11/2023\", \"05/12/2023\");","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll1.equals(new Payroll(new Salary(\"2000.00\"))));","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll2.equals(new Payroll(new Salary(\"2000.00\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"                \"01/11/2023\", \"30/11/2023\", \"05/12/2023\")));","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll1.equals(payroll1));","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"Kevin-Liusx"},"content":"        assertTrue(payroll2.equals(payroll2));","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"Kevin-Liusx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payroll1.equals(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payroll2.equals(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"Kevin-Liusx"},"content":"        // different types -\u003e return false","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payroll1.equals(5.0f));","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payroll2.equals(5.0f));","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"Kevin-Liusx"},"content":"        // different salary -\u003e return false","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payroll1.equals(new Payroll(new Salary(\"200.00\"))));","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"        // different start date -\u003e return false","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payroll2.equals(new Payroll(validSalary,","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"Kevin-Liusx"},"content":"                \"02/11/2023\", \"30/11/2023\", \"05/12/2023\")));","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"Kevin-Liusx"},"content":"        // different end date -\u003e return false","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payroll2.equals(new Payroll(validSalary,","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"                \"01/11/2023\", \"29/11/2023\", \"05/12/2023\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"Kevin-Liusx"},"content":"        // different payment date -\u003e return false","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"        assertFalse(payroll2.equals(new Payroll(validSalary,","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"                \"01/11/2023\", \"30/11/2023\", \"06/12/2023\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"Kevin-Liusx":115}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"                + \", bankAccount\u003d\" + ALICE.getBankAccount()","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"                + \", joinDate\u003d\" + ALICE.getJoinDate() + \", salary\u003d\" + ALICE.getSalary()","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"                + \", annualLeave\u003d\" + ALICE.getAnnualLeave().value","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"                + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jibtaf":5,"WeeMingQing":1,"applepiofmyeye":4,"-":86}},{"path":"src/test/java/seedu/address/model/person/SalaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"class SalaryTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":"    private final Salary salary \u003d new Salary(\"1500.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"    private final ArrayList\u003cBenefit\u003e benefits \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jibtaf"},"content":"        List.of(","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"5000.00\", Reason.ANNUAL_BONUS),","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"500.00\", Reason.TRANSPORT_ALLOWANCE)","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"        )","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"    );","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jibtaf"},"content":"    private final ArrayList\u003cDeduction\u003e deductions \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jibtaf"},"content":"        List.of(","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"100.00\", Reason.NO_PAY_LEAVE),","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"120.00\", Reason.ABSENCE)","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jibtaf"},"content":"        )","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jibtaf"},"content":"    );","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"    private final Salary salaryWithNoBenefitAndDeduction \u003d new Salary(\"1500.00\", null, null);","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    private final Salary salaryWithBenefit \u003d new Salary(\"1500.00\", null, benefits);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"    private final Salary salaryWithDeduction \u003d new Salary(\"1500.00\", deductions, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jibtaf"},"content":"    private final Salary salaryWithBenefitAndDeduction \u003d new Salary(\"1500.00\", deductions, benefits);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Salary(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        String invalidSalary \u003d \"1500\";","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Salary(invalidSalary));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"jibtaf"},"content":"    public void isValidSalary() {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        // null salary","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        assertThrows(NullPointerException.class, () -\u003e Salary.isValid(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        //valid salary","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"0.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"10.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"100.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"10000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        assertTrue(Salary.isValid(\"100000.00\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        //invalid salary","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        assertFalse(Salary.isValid(\"\")); //empty value","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        assertFalse(Salary.isValid(\" \")); //space only","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        assertFalse(Salary.isValid(\"*\")); //only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        assertFalse(Salary.isValid(\"8+1500.00\")); //contain non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Salary.isValid(\"8000\")); //no decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Salary.isValid(\"1500.0\")); //1 decimal point","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"        assertFalse(Salary.isValid(\"1500.000\")); //3 decimal points","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"jibtaf"},"content":"    public void getDeductionsString_nullDeductions_returnNil() {","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getDeductionsString().equals(\"NIL\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"    public void getBenefitsString_nullBenefits_returnNil() {","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getBenefitsString().equals(\"NIL\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"    public void addDeduction_nullDeductions_returnSingleElementArrayList() {","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"jibtaf"},"content":"        salaryWithNoBenefitAndDeduction.addDeduction(new Deduction(\"100.00\", Reason.NO_PAY_LEAVE));","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getDeductions().size() \u003d\u003d 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getDeductions().get(0).equals(","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"jibtaf"},"content":"            new Deduction(\"100.00\", Reason.NO_PAY_LEAVE)));","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"jibtaf"},"content":"    public void addBenefit_nullDeductions_returnSingleElementArrayList() {","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"        salaryWithNoBenefitAndDeduction.addBenefit(new Benefit(\"100.00\", Reason.ANNUAL_BONUS));","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getBenefits().size() \u003d\u003d 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getBenefits().get(0).equals(","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"jibtaf"},"content":"            new Benefit(\"100.00\", Reason.ANNUAL_BONUS)));","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"    public void getTotalDeductions() {","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"jibtaf"},"content":"        // null deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.getTotalDeductions() \u003d\u003d 0.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getTotalDeductions() \u003d\u003d 0.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"jibtaf"},"content":"        // with deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getTotalDeductions() \u003d\u003d 220.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getTotalDeductions() \u003d\u003d 220.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"    public void getTotalBenefits() {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"jibtaf"},"content":"        // null benefits","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.getTotalBenefits() \u003d\u003d 0.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getTotalBenefits() \u003d\u003d 0.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"        // with benefits","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getTotalBenefits() \u003d\u003d 5500.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getTotalBenefits() \u003d\u003d 5500.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"jibtaf"},"content":"    public void getTotalAllowancesExceptBonuses() {","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getTotalAllowancesExceptBonuses() \u003d\u003d 500.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getTotalAllowancesExceptBonuses() \u003d\u003d 500.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getTotalAllowancesExceptBonuses() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getTotalAllowancesExceptBonuses() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"jibtaf"},"content":"    public void getTransportAllowances() {","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getTransportAllowances() \u003d\u003d 500.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getTransportAllowances() \u003d\u003d 500.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getTransportAllowances() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getTransportAllowances() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"jibtaf"},"content":"    public void getAnnualBonuses() {","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getAnnualBonuses() \u003d\u003d 5000.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getAnnualBonuses() \u003d\u003d 5000.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getAnnualBonuses() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getAnnualBonuses() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"jibtaf"},"content":"    public void getNoPayLeaves() {","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getNoPayLeaves() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getNoPayLeaves() \u003d\u003d 100.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getNoPayLeaves() \u003d\u003d 100.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getNoPayLeaves() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"jibtaf"},"content":"    public void getAbsences() {","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getAbsences() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":152,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getAbsences() \u003d\u003d 120.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getAbsences() \u003d\u003d 120.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getAbsences() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"jibtaf"},"content":"    public void getEmployeeCpfDeductions() {","lastModifiedDate":"2023-11-08"},{"lineNumber":159,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getEmployeeCpfDeductions() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getEmployeeCpfDeductions() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getEmployeeCpfDeductions() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithNoBenefitAndDeduction.getEmployeeCpfDeductions() \u003d\u003d 0.0);","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"jibtaf"},"content":"    public void getNetSalary() {","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"jibtaf"},"content":"        // null benefits and deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.getNetSalary() \u003d\u003d 1500.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"jibtaf"},"content":"        // with benefits","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getNetSalary() \u003d\u003d 7000.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"jibtaf"},"content":"        // with deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getNetSalary() \u003d\u003d 1280.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"jibtaf"},"content":"        // with benefits and deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getNetSalary() \u003d\u003d 6780.0);","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"jibtaf"},"content":"    public void getNetSalaryString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"jibtaf"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"jibtaf"},"content":"        // null benefits and deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salary.getNetSalaryString().equals(String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"jibtaf"},"content":"            \"Net Salary: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"jibtaf"},"content":"            \"Basic Pay: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"jibtaf"},"content":"            \"Total Deductions: $\" + df.format(0.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"jibtaf"},"content":"            \"Total Benefits: $\" + df.format(0.0))));","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"jibtaf"},"content":"        // with benefits","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.getNetSalaryString().equals(String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"jibtaf"},"content":"            \"Net Salary: $\" + df.format(7000.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"jibtaf"},"content":"            \"Basic Pay: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"jibtaf"},"content":"            \"Total Deductions: $\" + df.format(0.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"jibtaf"},"content":"            \"Total Benefits: $\" + df.format(5500.0))));","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"jibtaf"},"content":"        // with deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.getNetSalaryString().equals(String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"jibtaf"},"content":"            \"Net Salary: $\" + df.format(1280.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"jibtaf"},"content":"            \"Basic Pay: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"jibtaf"},"content":"            \"Total Deductions: $\" + df.format(220.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"jibtaf"},"content":"            \"Total Benefits: $\" + df.format(0.0))));","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"jibtaf"},"content":"        // with benefits and deductions","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.getNetSalaryString().equals(","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"jibtaf"},"content":"            String.format(\"%1$-40s %2$-40s\\n%3$-40s %4$-40s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"jibtaf"},"content":"            \"Net Salary: $\" + df.format(6780.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"jibtaf"},"content":"            \"Basic Pay: $\" + df.format(1500.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"jibtaf"},"content":"            \"Total Deductions: $\" + df.format(220.0),","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"jibtaf"},"content":"            \"Total Benefits: $\" + df.format(5500.0))));","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"jibtaf"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"jibtaf"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"jibtaf"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"Leb14"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"Leb14"},"content":"        assertTrue(salary.equals(new Salary(\"1500.00\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"Leb14"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"Leb14"},"content":"        assertTrue(salary.equals(salary));","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefit.equals(salaryWithBenefit));","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithDeduction.equals(salaryWithDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"jibtaf"},"content":"        assertTrue(salaryWithBenefitAndDeduction.equals(salaryWithBenefitAndDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"jibtaf"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"Leb14"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"Leb14"},"content":"        assertFalse(salary.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"Leb14"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"Leb14"},"content":"        assertFalse(salary.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"Leb14"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"Leb14"},"content":"        assertFalse(salary.equals(new Salary(\"1500.01\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salary.equals(salaryWithBenefit));","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salary.equals(salaryWithDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salary.equals(salaryWithBenefitAndDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salaryWithBenefit.equals(salaryWithDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salaryWithBenefit.equals(salaryWithBenefitAndDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"jibtaf"},"content":"        assertFalse(salaryWithDeduction.equals(salaryWithBenefitAndDeduction));","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jibtaf":183,"Leb14":56}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"jibtaf"},"content":"    public void contains_personWithDifferentFieldsInList_returnsFalse() {","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"jibtaf"},"content":"        assertFalse(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_nulleditedEmployee_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_editedEmployeeIsSamePerson_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_editedEmployeeHasSameIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_editedEmployeeHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"jibtaf"},"content":"    public void setPerson_editedEmployeeHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jibtaf":7,"applepiofmyeye":2,"-":165}},{"path":"src/test/java/seedu/address/model/person/attendance/AttendanceStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person.attendance;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"public class AttendanceStorageTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AttendanceStorage(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    public void getType_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"                NullPointerException.class, () -\u003e new AttendanceStorage().getType(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    public void markAbsent_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"                NullPointerException.class, () -\u003e new AttendanceStorage().markAbsent(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"    public void markLate_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AttendanceStorage().markLate(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    public void markPresent_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AttendanceStorage().markPresent(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"    public void getTodayAttendance_validAttendanceStorage() {","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceStorage attendanceStorage \u003d new AttendanceStorage();","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(attendanceStorage.getTodayAttendance(), AttendanceType.PRESENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"    public void getAttendanceReport_validJoinDate_invalidNumOfLeave() {","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"        JoinDate joinDate \u003d new JoinDate(\"10/03/2023\");","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceStorage attendanceStorage \u003d new AttendanceStorage();","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"        int[] arr \u003d new int[]{-11, 0, 0};","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        assertTrue(Arrays.equals(arr, attendanceStorage.getAttendanceReport(joinDate, -11)));","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"    public void getAttendanceReport_nullJoinDate_validNumOfLeave() {","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceStorage attendanceStorage \u003d new AttendanceStorage();","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(NullPointerException.class, () -\u003e attendanceStorage.getAttendanceReport(null, 5));","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"applepiofmyeye"},"content":"    public void getValue_emptyAttendanceStorage() {","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceStorage attendanceStorage \u003d new AttendanceStorage();","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"applepiofmyeye"},"content":"        assertTrue(attendanceStorage.getValue().equals(new ArrayList\u003c\u003e()));","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"    public void allValidTests() {","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceStorage attendanceStorage \u003d new AttendanceStorage();","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        // markAbsent -- valid LocalDate input","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage.markAbsent(","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"                LocalDate.parse(\"20/04/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"        String stringAttendance \u003d attendanceStorage.getValue().get(0);","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(stringAttendance, \"20/04/2023//absent\");","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"applepiofmyeye"},"content":"        // markLate -- valid LocalDate input, same date","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage.markLate(","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"                LocalDate.parse(\"20/04/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"        stringAttendance \u003d attendanceStorage.getValue().get(0);","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(stringAttendance, \"20/04/2023//late\");","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"        // markPresent -- valid LocalDate input, same date","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage.markPresent(","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"                LocalDate.parse(\"20/04/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"        int size \u003d attendanceStorage.getValue().size();","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(size, 0);","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"        // markAbsent -- valid LocalDate input","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage.markAbsent(","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"                LocalDate.parse(\"20/04/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        stringAttendance \u003d attendanceStorage.getValue().get(0);","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(stringAttendance, \"20/04/2023//absent\");","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"        // markLate -- valid LocalDate input, different date","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage.markLate(","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"                LocalDate.parse(\"21/04/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"applepiofmyeye"},"content":"        stringAttendance \u003d attendanceStorage.getValue().get(1);","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(stringAttendance, \"21/04/2023//late\");","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"applepiofmyeye"},"content":"        // markPresent -- valid LocalDate input, different date","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage.markPresent(","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"                LocalDate.parse(\"22/04/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"        size \u003d attendanceStorage.getValue().size();","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(size, 2);","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"        // getType -- valid LocalDate input","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"        AttendanceType attendanceType \u003d attendanceStorage.getType(","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"                LocalDate.parse(\"21/04/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(attendanceType, AttendanceType.LATE);","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"applepiofmyeye":124}},{"path":"src/test/java/seedu/address/model/person/attendance/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person.attendance;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"public class AttendanceTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"    public void constructorTestNullDateValidAtdTypeThrowsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"                NullPointerException.class, () -\u003e new Attendance(null, AttendanceType.LATE));","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"    public void constructorTestValidDateNullAtdTypeThrowsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"                NullPointerException.class, () -\u003e new Attendance(LocalDate.now(), null));","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"    public void constructorTestNullDateNullAttendanceTypeThrowsNullPointerException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"                NullPointerException.class, () -\u003e new Attendance(null, null));","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"applepiofmyeye"},"content":"    public void getDateTest() {","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"applepiofmyeye"},"content":"        Attendance attendance \u003d new Attendance(LocalDate.now(), AttendanceType.LATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(attendance.getDate(), LocalDate.now());","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    public void getTypeTest() {","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"        Attendance attendance \u003d new Attendance(LocalDate.now(), AttendanceType.LATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(attendance.getType(), AttendanceType.LATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    public void markAbsentTest() {","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"        Attendance attendance \u003d new Attendance(LocalDate.now(), AttendanceType.LATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"applepiofmyeye"},"content":"        attendance.markAbsent();","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(attendance.getType(), AttendanceType.ABSENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"applepiofmyeye"},"content":"    public void markLateTest() {","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"applepiofmyeye"},"content":"        Attendance attendance \u003d new Attendance(LocalDate.now(), AttendanceType.PRESENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"applepiofmyeye"},"content":"        attendance.markLate();","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"        assertEquals(attendance.getType(), AttendanceType.LATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"applepiofmyeye":57}},{"path":"src/test/java/seedu/address/model/person/attendance/AttendanceTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"applepiofmyeye"},"content":"package seedu.address.model.person.attendance;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"applepiofmyeye"},"content":"public class AttendanceTypeTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"applepiofmyeye"},"content":"    public void isValidAttendanceType_nullName() {","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"applepiofmyeye"},"content":"                NullPointerException.class, () -\u003e AttendanceType.isValidAttendanceType(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"applepiofmyeye"},"content":"    public void isValidAttendanceType_validNamePresent_mixedCasingName() {","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"        assertTrue(AttendanceType.isValidAttendanceType(\"PreSeNt\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"applepiofmyeye"},"content":"    public void isValidAttendanceType_invalidName() {","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"applepiofmyeye"},"content":"        assertFalse(AttendanceType.isValidAttendanceType(\"latte\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"applepiofmyeye"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"applepiofmyeye":26}},{"path":"src/test/java/seedu/address/model/person/payroll/PayrollStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.model.person.payroll;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"public class PayrollStorageTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    public void getPayrollWithStartDate_sameDate_returnPayroll() {","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"        PayrollStorage payrollStorage \u003d TypicalPersons.PAYROLL.getPayrollStorage();","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"        Payroll payroll \u003d payrollStorage.getLatestPayroll();","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"        assertEquals(payroll, payrollStorage.getPayrollWithStartDate(LocalDate.parse(\"2023-11-01\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"Kevin-Liusx":21}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedBenefitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"public class JsonAdaptedBenefitTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_REASON \u003d \"Sick\";","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_BENEFITSTRING \u003d \"200\";","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String VALID_REASON \u003d \"ANNUAL_BONUS\";","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String VALID_BENEFITSTRING \u003d \"200.00\";","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final Benefit VALID_BENEFIT \u003d new Benefit(VALID_BENEFITSTRING, Reason.valueOf(VALID_REASON));","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_validBenefitDetails_returnsBenefit() {","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedBenefit benefit \u003d new JsonAdaptedBenefit(VALID_REASON, VALID_BENEFITSTRING);","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"        assertEquals(VALID_BENEFIT, benefit.toModelType());","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidReason_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedBenefit benefit \u003d new JsonAdaptedBenefit(INVALID_REASON, VALID_BENEFITSTRING);","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(IllegalArgumentException.class, benefit::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_nullReason_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedBenefit benefit \u003d new JsonAdaptedBenefit(null, VALID_BENEFITSTRING);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, benefit::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidBenefit_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedBenefit benefit \u003d new JsonAdaptedBenefit(VALID_REASON, INVALID_BENEFITSTRING);","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"        String expectedMessage \u003d Benefit.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, benefit::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_nullBenefit_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedBenefit benefit \u003d new JsonAdaptedBenefit(VALID_REASON, null);","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, benefit::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Kevin-Liusx":54}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedDeductionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"public class JsonAdaptedDeductionTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_REASON \u003d \"Sick\";","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_DEDUCTIONSTRING \u003d \"200\";","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String VALID_REASON \u003d \"ABSENCE\";","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String VALID_DEDUCTIONSTRING \u003d \"200.00\";","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final Deduction VALID_DEDUCTION \u003d new Deduction(VALID_DEDUCTIONSTRING, Reason.valueOf(VALID_REASON));","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_validDeductionDetails_returnsDeduction() {","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedDeduction deduction \u003d new JsonAdaptedDeduction(VALID_REASON, VALID_DEDUCTIONSTRING);","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"        assertEquals(VALID_DEDUCTION, deduction.toModelType());","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidReason_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedDeduction deduction \u003d new JsonAdaptedDeduction(INVALID_REASON, VALID_DEDUCTIONSTRING);","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(IllegalArgumentException.class, deduction::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_nullReason_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedDeduction deduction \u003d new JsonAdaptedDeduction(null, VALID_DEDUCTIONSTRING);","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, deduction::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidDeduction_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedDeduction deduction \u003d new JsonAdaptedDeduction(VALID_REASON, INVALID_DEDUCTIONSTRING);","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"        String expectedMessage \u003d Benefit.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, deduction::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_nullDeduction_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedDeduction deduction \u003d new JsonAdaptedDeduction(VALID_REASON, null);","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, deduction::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Kevin-Liusx":55}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPayrollTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kevin-Liusx"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Kevin-Liusx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Kevin-Liusx"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"Kevin-Liusx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.List;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Benefit;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Deduction;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Reason;","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"Kevin-Liusx"},"content":"public class JsonAdaptedPayrollTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_SALARY \u003d \"200\";","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_STARTDATE \u003d \"11/2023\";","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_ENDDATE \u003d \"38/11/2023\";","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_PAYMENTDATE \u003d \"1234\";","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_BENEFIT \u003d \"200\";","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String INVALID_DEDUCTION \u003d \"200\";","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String VALID_SALARY \u003d \"200.00\";","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String VALID_STARTDATE \u003d BENSON.getLatestPayroll().getStartDateString();","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String VALID_ENDDATE \u003d BENSON.getLatestPayroll().getEndDateString();","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final String VALID_PAYMENTDATE \u003d BENSON.getLatestPayroll().getPaymentDateString();","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final Benefit VALID_BENEFIT \u003d new Benefit(\"20.00\", Reason.ANNUAL_BONUS);","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final Deduction VALID_DEDUCTION \u003d new Deduction(\"20.00\", Reason.ABSENCE);","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final ArrayList\u003cJsonAdaptedBenefit\u003e VALID_BENEFITS \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(new JsonAdaptedBenefit(VALID_BENEFIT)));","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final ArrayList\u003cJsonAdaptedDeduction\u003e VALID_DEDUCTIONS \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(new JsonAdaptedDeduction(VALID_DEDUCTION)));","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_validPayrollDetails_returnsPayroll() {","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(BENSON.getLatestPayroll());","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"        assertEquals(BENSON.getLatestPayroll(), payroll.toModelType());","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidSalary_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(INVALID_SALARY, VALID_STARTDATE,","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ENDDATE, VALID_PAYMENTDATE, VALID_BENEFITS, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"        String expectedMessage \u003d Salary.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, payroll::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_nullSalary_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(null, VALID_STARTDATE,","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ENDDATE, VALID_PAYMENTDATE, VALID_BENEFITS, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, payroll::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidStartDate_throwsDateTimeParseException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(VALID_SALARY, INVALID_STARTDATE,","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ENDDATE, VALID_PAYMENTDATE, VALID_BENEFITS, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(DateTimeParseException.class, payroll::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_nullStartDate_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(VALID_SALARY, null,","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ENDDATE, VALID_PAYMENTDATE, VALID_BENEFITS, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, payroll::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidEndDate_throwsDateTimeParseException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(VALID_SALARY, VALID_STARTDATE,","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"Kevin-Liusx"},"content":"                INVALID_ENDDATE, VALID_PAYMENTDATE, VALID_BENEFITS, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(DateTimeParseException.class, payroll::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_nullEndDate_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(VALID_SALARY, VALID_STARTDATE,","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"Kevin-Liusx"},"content":"                null, VALID_PAYMENTDATE, VALID_BENEFITS, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, payroll::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidPaymentDate_throwsDateTimeParseException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(VALID_SALARY, VALID_STARTDATE,","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ENDDATE, INVALID_PAYMENTDATE, VALID_BENEFITS, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(DateTimeParseException.class, payroll::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_nullPaymentDate_throwsNullPointerException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d new JsonAdaptedPayroll(VALID_SALARY, VALID_STARTDATE,","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ENDDATE, null, VALID_BENEFITS, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(NullPointerException.class, payroll::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidBenefits_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cJsonAdaptedBenefit\u003e invalidBenefits \u003d new ArrayList\u003c\u003e(VALID_BENEFITS);","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"Kevin-Liusx"},"content":"        invalidBenefits.add(new JsonAdaptedBenefit(INVALID_BENEFIT, \"ANNUAL_BONUS\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"Kevin-Liusx"},"content":"                new JsonAdaptedPayroll(VALID_SALARY, VALID_STARTDATE,","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"                        VALID_ENDDATE, VALID_ENDDATE, invalidBenefits, VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(IllegalArgumentException.class, payroll::toModelType);","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"Kevin-Liusx"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"Kevin-Liusx"},"content":"    public void toModelType_invalidDeductions_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"Kevin-Liusx"},"content":"        List\u003cJsonAdaptedDeduction\u003e invalidDeductions \u003d new ArrayList\u003c\u003e(VALID_DEDUCTIONS);","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"Kevin-Liusx"},"content":"        invalidDeductions.add(new JsonAdaptedDeduction(INVALID_DEDUCTION, \"ABSENCE\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"Kevin-Liusx"},"content":"        JsonAdaptedPayroll payroll \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"Kevin-Liusx"},"content":"                new JsonAdaptedPayroll(VALID_SALARY, VALID_STARTDATE,","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"Kevin-Liusx"},"content":"                        VALID_ENDDATE, VALID_ENDDATE, VALID_BENEFITS, invalidDeductions);","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"Kevin-Liusx"},"content":"        assertThrows(IllegalArgumentException.class, payroll::toModelType);","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"Kevin-Liusx"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Kevin-Liusx":122}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"Kevin-Liusx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String INVALID_BANKACCOUNT \u003d \"bankaccount\";","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String INVALID_JOINDATE \u003d \"12th june\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String INVALID_SALARY \u003d \"salary\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String INVALID_ANNUALLEAVE \u003d \"annualleave\";","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String VALID_BANKACCOUNT \u003d BENSON.getBankAccount().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String VALID_JOINDATE \u003d BENSON.getJoinDate().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String VALID_SALARY \u003d BENSON.getSalary().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"    private static final String VALID_ANNUALLEAVE \u003d BENSON.getAnnualLeave().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    private static final ArrayList\u003cString\u003e VALID_ATTENDANCE_STORAGE \u003d BENSON.getAttendanceStorage().getValue();","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"Kevin-Liusx"},"content":"    private static final ArrayList\u003cJsonAdaptedPayroll\u003e VALID_PAYROLLS \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"Kevin-Liusx"},"content":"                    new JsonAdaptedPayroll(BENSON.getPayrollStorage().getLatestPayroll())));","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"                VALID_BANKACCOUNT,","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE, VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_BANKACCOUNT, VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE,","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_BANKACCOUNT, VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE,","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_BANKACCOUNT, VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE,","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_BANKACCOUNT, VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE,","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidBankAccount_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Kevin-Liusx"},"content":"                INVALID_BANKACCOUNT, VALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE,","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d BankAccount.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidJoinDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_BANKACCOUNT, INVALID_JOINDATE, VALID_SALARY, VALID_ANNUALLEAVE,","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d JoinDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidSalary_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_BANKACCOUNT, VALID_JOINDATE, INVALID_SALARY, VALID_ANNUALLEAVE,","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d Salary.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"applepiofmyeye"},"content":"    public void toModelType_invalidAnnualLeave_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"applepiofmyeye"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_BANKACCOUNT, VALID_JOINDATE, VALID_SALARY, INVALID_ANNUALLEAVE,","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"Kevin-Liusx"},"content":"                VALID_ATTENDANCE_STORAGE, VALID_PAYROLLS);","lastModifiedDate":"2023-11-06"},{"lineNumber":129,"author":{"gitId":"applepiofmyeye"},"content":"        String expectedMessage \u003d AnnualLeave.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kevin-Liusx":21,"applepiofmyeye":36,"-":76}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"employees.json\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"applepiofmyeye":1,"-":122}},{"path":"src/test/java/seedu/address/testutil/EditEmployeeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"jibtaf"},"content":" * A utility class to help with building EditEmployeeDescriptor objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"jibtaf"},"content":"public class EditEmployeeDescriptorBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jibtaf"},"content":"    private EditEmployeeDescriptor descriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jibtaf"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jibtaf"},"content":"        this.descriptor \u003d new EditEmployeeDescriptor(descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"jibtaf"},"content":"     * Returns an {@code EditEmployeeDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder(Person person) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setBankAccount(person.getBankAccount());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setJoinDate(person.getJoinDate());","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setSalary(person.getSalary());","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setAnnualLeave(person.getAnnualLeave());","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Name} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Phone} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Email} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Address} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code BankAccount} of the {@code EditEmployeeDescriptor} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"applepiofmyeye"},"content":"     * building.","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withBankAccount(String bankAccount) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setBankAccount(new BankAccount(bankAccount));","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code JoinDate} of the {@code EditEmployeeDescriptor} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"applepiofmyeye"},"content":"     * building.","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withJoinDate(String joinDate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setJoinDate(new JoinDate(joinDate));","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code Salary} of the {@code EditEmployeeDescriptor} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"applepiofmyeye"},"content":"     * building.","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withSalary(String salary) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setSalary(new Salary(salary));","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"jibtaf"},"content":"     * Sets the {@code AnnualLeave} of the {@code EditEmployeeDescriptor} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"applepiofmyeye"},"content":"     * building.","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptorBuilder withAnnualLeave(String annualLeave) {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.setAnnualLeave(new AnnualLeave(annualLeave));","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"jibtaf"},"content":"    public EditEmployeeDescriptor build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jibtaf":28,"applepiofmyeye":27,"-":60}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.AnnualLeave;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.BankAccount;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.JoinDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.Payroll;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.Salary;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"applepiofmyeye"},"content":"import seedu.address.model.person.attendance.AttendanceStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"Kevin-Liusx"},"content":"import seedu.address.model.person.payroll.PayrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String DEFAULT_BANKACCOUNT \u003d \"12345678\";","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    public static final String DEFAULT_JOINDATE \u003d \"12/02/2023\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    public static final String DEFAULT_SALARY \u003d \"2000.00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"applepiofmyeye"},"content":"    public static final String DEFAULT_ANNUALLEAVE \u003d \"14\";","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jibtaf"},"content":"    public static final ArrayList\u003cString\u003e DEFAULT_ATTENDANCE_STORAGE \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"jibtaf"},"content":"        Arrays.asList(\"27/10/2023//late\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final ArrayList\u003cPayroll\u003e DEFAULT_PAYROLL_STORAGE \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"        Arrays.asList(new Payroll(new Salary(DEFAULT_SALARY))));","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"applepiofmyeye"},"content":"    private BankAccount bankAccount;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"    private JoinDate joinDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"applepiofmyeye"},"content":"    private Salary salary;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"applepiofmyeye"},"content":"    private AnnualLeave annualLeave;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"applepiofmyeye"},"content":"    private AttendanceStorage attendanceStorage;","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"    private PayrollStorage payrollStorage;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"applepiofmyeye"},"content":"        bankAccount \u003d new BankAccount(DEFAULT_BANKACCOUNT);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"applepiofmyeye"},"content":"        joinDate \u003d new JoinDate(DEFAULT_JOINDATE);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        salary \u003d new Salary(DEFAULT_SALARY);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        annualLeave \u003d new AnnualLeave(DEFAULT_ANNUALLEAVE);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage \u003d new AttendanceStorage(DEFAULT_ATTENDANCE_STORAGE);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"Kevin-Liusx"},"content":"        payrollStorage \u003d new PayrollStorage(DEFAULT_PAYROLL_STORAGE);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"applepiofmyeye"},"content":"        bankAccount \u003d personToCopy.getBankAccount();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"applepiofmyeye"},"content":"        joinDate \u003d personToCopy.getJoinDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"        salary \u003d personToCopy.getSalary();","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"applepiofmyeye"},"content":"        annualLeave \u003d personToCopy.getAnnualLeave();","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"applepiofmyeye"},"content":"        attendanceStorage \u003d personToCopy.getAttendanceStorage();","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"Kevin-Liusx"},"content":"        payrollStorage \u003d personToCopy.getPayrollStorage();","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code BankAccount} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withBankAccount(String bankAccount) {","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"applepiofmyeye"},"content":"        this.bankAccount \u003d new BankAccount(bankAccount);","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code JoinDate} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withJoinDate(String joinDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"applepiofmyeye"},"content":"        this.joinDate \u003d new JoinDate(joinDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code Salary} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withSalary(String salary) {","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"applepiofmyeye"},"content":"        this.salary \u003d new Salary(salary);","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code AnnualLeave} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withAnnualLeave(String annualLeave) {","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"applepiofmyeye"},"content":"        this.annualLeave \u003d new AnnualLeave(annualLeave);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"applepiofmyeye"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"applepiofmyeye"},"content":"     * Sets the {@code AttendanceStorage} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"applepiofmyeye"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"applepiofmyeye"},"content":"    public PersonBuilder withAttendanceStorage(ArrayList\u003cString\u003e attendanceStorage) {","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"applepiofmyeye"},"content":"        this.attendanceStorage \u003d new AttendanceStorage(attendanceStorage);","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"applepiofmyeye"},"content":"        return this;","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"applepiofmyeye"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"Kevin-Liusx"},"content":"     * Sets the {@code payrollStorage} of the {@code Person} that we are building","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"Kevin-Liusx"},"content":"    public PersonBuilder withPayrollStorage(ArrayList\u003cPayroll\u003e payrollStorage) {","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrollStorage \u003d new PayrollStorage(payrollStorage);","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"Kevin-Liusx"},"content":"        this.payrollStorage.add(new Payroll(this.salary));","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"Kevin-Liusx"},"content":"        return this;","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"Kevin-Liusx"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"Kevin-Liusx"},"content":"     * Turn the {@code PersonBuilder} object into {@code Person} object","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"Kevin-Liusx"},"content":"     * @return person object","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"Kevin-Liusx"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":166,"author":{"gitId":"Kevin-Liusx"},"content":"        return new Person(name, phone, email, address, bankAccount,","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"Kevin-Liusx"},"content":"                joinDate, salary, annualLeave, attendanceStorage, payrollStorage);","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Kevin-Liusx":22,"jibtaf":4,"applepiofmyeye":62,"-":80,"Leb14":2}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANNUAL_LEAVE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANK_ACCOUNT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOIN_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_NAME + \" \" + person.getName().fullName + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_PHONE + \" \" + person.getPhone().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_EMAIL + \" \" + person.getEmail().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_ADDRESS + \" \" + person.getAddress().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_ANNUAL_LEAVE + \" \" + person.getAnnualLeave().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_BANK_ACCOUNT + \" \" + person.getBankAccount().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_JOIN_DATE + \" \" + person.getJoinDate().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kevin-Liusx"},"content":"        sb.append(PREFIX_SALARY + \" \" + person.getSalary().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"jibtaf"},"content":"     * Returns the part of command string for the given {@code EditEmployeeDescriptor}\u0027s details.","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"jibtaf"},"content":"    public static String getEditEmployeeDescriptorDetails(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.getBankAccount()","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jibtaf"},"content":"                .ifPresent(bankAccount -\u003e sb.append(PREFIX_BANK_ACCOUNT).append(bankAccount.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jibtaf"},"content":"        descriptor.getJoinDate().ifPresent(joinDate -\u003e sb.append(PREFIX_JOIN_DATE).append(joinDate.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.getSalary().ifPresent(salary -\u003e sb.append(PREFIX_SALARY).append(salary.value).append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"applepiofmyeye"},"content":"        descriptor.getAnnualLeave()","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jibtaf"},"content":"                .ifPresent(annualLeave -\u003e sb.append(PREFIX_ANNUAL_LEAVE).append(annualLeave.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Kevin-Liusx":9,"jibtaf":9,"applepiofmyeye":6,"-":40}},{"path":"src/test/java/seedu/address/testutil/TypicalFields.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":" * A utility class containing a list of {@code String} objects to be used in tests.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"public class TypicalFields {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"    public static final String PHONE_FIELD \u003d \"phone\";","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"    public static final String EMAIL_FIELD \u003d \"email\";","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"    public static final String ADDRESS_FIELD \u003d \"address\";","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Leb14":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANNUALLEAVE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANNUALLEAVE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ATTENDANCE_STORAGE_AMY;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ATTENDANCE_STORAGE_BOB;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKACCOUNT_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOINDATE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jibtaf"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOINDATE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"applepiofmyeye"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"            .withPhone(\"94351253\").withBankAccount(\"123123123123\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"applepiofmyeye"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\")","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"applepiofmyeye"},"content":"            .withAttendanceStorage(","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"applepiofmyeye"},"content":"                    new ArrayList\u003cString\u003e(List.of(","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"Kevin-Liusx"},"content":"                            new String[]{\"12/02/2023//absent\", \"08/11/2023//late\", \"09/08/2023//absent\"}))).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"            .withPhone(\"98765432\").withBankAccount(\"0123457\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Kevin-Liusx"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").build();","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Kevin-Liusx"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Kevin-Liusx"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Kevin-Liusx"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"Kevin-Liusx"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withSalary(\"1500.00\")","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"Kevin-Liusx"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withSalary(\"1500.00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Kevin-Liusx"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\").build();","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"Kevin-Liusx"},"content":"    public static final Person PAYROLL \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"Kevin-Liusx"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withSalary(\"1500.00\")","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"Kevin-Liusx"},"content":"            .withAnnualLeave(\"2\").withJoinDate(\"04/05/2021\").withBankAccount(\"0123457\")","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"Kevin-Liusx"},"content":"            .withPayrollStorage(new ArrayList\u003c\u003e()).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"jibtaf"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withBankAccount(VALID_BANKACCOUNT_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jibtaf"},"content":"            .withJoinDate(VALID_JOINDATE_AMY).withSalary(VALID_SALARY_AMY).withAnnualLeave(VALID_ANNUALLEAVE_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"applepiofmyeye"},"content":"            .withAttendanceStorage(VALID_ATTENDANCE_STORAGE_AMY)","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"jibtaf"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"jibtaf"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBankAccount(VALID_BANKACCOUNT_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"jibtaf"},"content":"            .withJoinDate(VALID_JOINDATE_BOB).withSalary(VALID_SALARY_BOB).withAnnualLeave(VALID_ANNUALLEAVE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"applepiofmyeye"},"content":"            .withAttendanceStorage(VALID_ATTENDANCE_STORAGE_BOB)","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"applepiofmyeye"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"Kevin-Liusx"},"content":"    public static AddressBook getTypicalAddressBookPayroll() {","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"Kevin-Liusx"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"Kevin-Liusx"},"content":"        ab.addPerson(PAYROLL);","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"Kevin-Liusx"},"content":"        return ab;","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"Kevin-Liusx"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"Kevin-Liusx"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Kevin-Liusx":18,"jibtaf":11,"applepiofmyeye":10,"-":61,"Leb14":7}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"jibtaf"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jibtaf":1,"-":6}}]

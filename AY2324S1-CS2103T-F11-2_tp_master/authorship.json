[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml)[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F11-2/tp/graph/badge.svg?token\u003d6VNUBS5EZI)](https://codecov.io/gh/AY2324S1-CS2103T-F11-2/tp)","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"# WedLog","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"## Description","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"While it has a Graphical User Interface (GUI), most of the user interactions occur through the Command Line Interface (CLI).","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"## Features","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"- Add \u0026 delete guest information.","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"- Add \u0026 delete vendor information.","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"- View the full list of guests and vendors.","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"- View a single guest/ vendor information.","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"- Know the names and other information of guests and vendors.","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"## Site Map","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"- [Project Website](https://ay2324s1-cs2103t-f11-2.github.io/tp)","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"- [User Guide](https://ay2324s1-cs2103t-f11-2.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"- [Developer Guide](https://ay2324s1-cs2103t-f11-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"- [About Us](https://ay2324s1-cs2103t-f11-2.github.io/tp/AboutUs.html)","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"## Credits \u0026 Acknowledgements","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"- This project was made as part of CS2103T in AY23/24 S1.","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"samuelim01":3,"wasjoe1":17,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"mainClassName \u003d \u0027wedlog.address.Main\u0027","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    archiveFileName \u003d \u0027wedlog.jar\u0027","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"run {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samuelim01":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"### Keagan Pang","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"\u003cimg src\u003d\"images/keaganpzh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"[[github](https://github.com/keaganpzh)] [[portfolio](team/keaganpzh.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"-   Role: Git expert","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"-   Responsibilities: Integration","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"### Pan Xinping","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"\u003cimg src\u003d\"images/p-xp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"[[github](http://github.com/p-xp)]","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"[[portfolio](team/p-xp.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"-   Role: Team Lead","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"-   Responsibilities: Deliverables \u0026 Deadlines","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"### Joe Chua","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/wasjoe1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"[[github](http://github.com/wasjoe1)] [[portfolio](team/wasjoe1.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"- Role: Developer","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"- Responsibilities: Documentation","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"### Samuel Lim","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/samuelim01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"[[github](http://github.com/samuelim01)]","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"[[portfolio](team/samuelim01.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"- Role: IDE/Java expert","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"- Responsibilities: Code Quality","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"### Shannon Tsou","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/tllshan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"[[github](http://github.com/tllshan)]","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"[[portfolio](team/tllshan.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"- Role: Code Tester","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"- Responsibilities: Scheduling \u0026 Tracking","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"tllshan":11,"samuelim01":1,"p-xp":11,"wasjoe1":1,"keaganpzh":4,"-":30}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/MainApp.java).","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"samuelim01":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"# WedLog Developer Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"1. [Acknowledgements](#1-acknowledgements)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"2. [Setting up, getting started](#2-setting-up-getting-started)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"3. [Design](#3-design)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    3.1. [Architecture](#3-1-architecture)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    3.2. [UI component](#3-2-ui-component)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    3.3. [Logic component](#3-3-logic-component)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    3.4. [Model component](#3-4-model-component)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    3.5. [Storage component](#3-5-storage-component)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    3.6. [Common classes](#3-6-common-classes)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"4. [Implementation](#4-implementation)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    4.1. [Tracking of Guests and Vendors](#4-1-tracking-of-guests-and-vendors)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    4.2. [Add Guest and Vendor feature](#4-2-add-guest-and-vendor-feature)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    4.3. [Delete Guest and Vendor feature](#4-3-delete-guest-and-vendor-feature)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    4.4. [Filter Guest and Vendor feature](#4-4-filter-guest-and-vendor-feature)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    4.5. [Edit Guest and Vendor feature](#4-5-edit-guest-and-vendor-feature)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    4.6. [Undo and Redo feature](#4-6-undo-and-redo-feature)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"5. [Documentation, logging, testing, configuration, dev-ops](#5-documentation-logging-testing-configuration-dev-ops)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"6. [Appendix A: Requirements](#6-appendix-a-requirements)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    6.1. [Product scope](#6-1-product-scope)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    6.2. [User stories](#6-2-user-stories)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    6.3. [Use cases](#6-3-use-cases)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    6.4. [Non-functional requirements](#6-4-non-functional-requirements)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    6.5. [Glossary](#6-5-glossary)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"7. [Appendix B: Instructions for manual testing](#7-appendix-b-instructions-for-manual-testing)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    7.1. [Launch and shutdown](#7-1-launch-and-shutdown)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    7.2. [Loading data](#7-2-loading-data)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    7.3. [Adding guests](#7-3-adding-guests)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    7.4. [Deleting guests](#7-4-deleting-guests)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    7.5. [Editing guests](#7-5-editing-guests)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    7.6. [Filtering guests](#7-6-filtering-guests)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    7.7. [Adding vendors](#7-7-adding-vendors)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    7.8. [Deleting vendors](#7-8-deleting-vendors)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    7.9. [Editing vendors](#7-9-editing-vendors)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    7.10. [Filtering vendors](#7-10-filtering-vendors)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    7.11. [Clearing all guests and vendors](#7-11-clearing-all-guests-and-vendors)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"8. [Appendix C: Planned enhancements](#8-appendix-c-planned-enhancements)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    8.1. [Allow special characters in names of guests and vendors](#8-1-allow-special-characters-in-names-of-guests-and-vendors)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    8.2. [Provide more specific error messages for invalid commands](#8-2-provide-more-specific-error-messages-for-invalid-commands)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    8.3. [Allow tracking of multiple phone numbers with differentiation](#8-3-allow-tracking-of-multiple-phone-numbers-with-differentiation)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    8.4. [Allow text wrapping for long data fields](#8-4-allow-text-wrapping-for-long-data-fields)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    8.5. [Improve pie chart](#8-5-improve-pie-chart-)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"    8.6. [Better duplicate detection for tags](#8-6-better-duplicate-detection-for-tags)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    8.7. [Better duplicate detection for dietary requirements](#8-7-better-duplicate-detection-for-dietary-requirements)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    8.8. [Allow resizing of all panels](#8-8-allow-resizing-of-all-panels)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    8.9. [Remove full-screen support for help window (macOS)](#8-9-remove-full-screen-support-for-help-window-macos)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"    8.10. [Better colour scheme](#8-10-better-colour-scheme)","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"9. [Appendix D: Effort](#9-appendix-d-effort)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"    9.1. [Augmenting `Person` with `Guest` and `Vendor` classes](#9-1-augmenting-person-with-guest-and-vendor-classes)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"    9.2. [Altering most fields to become Optional](#9-2-altering-most-fields-to-become-optional)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    9.3. [Enhancing `Guest` class with new parameters](#9-3-enhancing-guest-class-with-new-parameters)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    9.4. [Enhancing the `add` and `edit` commands](#9-4-enhancing-the-add-and-edit-commands)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    9.5. [Implementing the `filter` command](#9-5-implementing-the-filter-command)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    9.6. [Implementing the `undo` and `redo` command](#9-6-implementing-the-undo-and-redo-command)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    9.7. [Introducing `RsvpStatus` pie chart and `DietaryRequirements` statistics panel](#9-7-introducing-rsvpstatus-pie-chart-and-dietaryrequirements-statistics-panel)","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"## **1. Acknowledgements**","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"- The undo / redo feature was reused with minor modifications from [Address Book(Level 4)](https://github.com/se-edu/addressbook-level4).","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"- The function to parse optional values was reused with minor modifications from [Jobby](https://github.com/AY2324S1-CS2103T-W08-3/tp).","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"## **2. Setting up, getting started**","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"## **3. Design**","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"### 3.1. Architecture","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `guest delete 1`.","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-11-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"### 3.2. UI component","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/ui/Ui.java)","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"keaganpzh"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `GuestListPanel`, `VendorListPanel`, `StatisticsPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"### 3.3. Logic component","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/logic/Logic.java)","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"guest delete 1\")` API call as an example.","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `guest delete 1` Command\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"**Note:** The lifeline for `GuestCommandParser` and `GuestDeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a general parser that matches the command (e.g., `GuestCommandParser`).","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"2. In turn, the general parser creates a parser that matches the command (e.g., `GuestDeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"3. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `GuestDeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"4. The command can communicate with the `Model` when it is executed (e.g. to delete a guest).","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"5. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates a `GuestCommandParser` or `VendorCommandParser` depending on the command. This class then creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `GuestAddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `GuestAddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"* All `XYZCommandParser` classes (e.g., `GuestAddCommandParser`, `VendorDeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"tllshan"},"content":"### 3.4. Model component","lastModifiedDate":"2023-11-12"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/model/Model.java)","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"* stores the address book data e.g., all `Guest` objects (which are contained in a `UniqueGuestList` object).","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"* stores the currently \u0027selected\u0027 `Guest` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cGuest\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"tllshan"},"content":"### 3.5. Storage component","lastModifiedDate":"2023-11-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/storage/Storage.java)","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"tllshan"},"content":"### 3.6. Common classes","lastModifiedDate":"2023-11-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"samuelim01"},"content":"Classes used by multiple components are in the `wedlog.addressbook.commons` package.","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"tllshan"},"content":"## **4. Implementation**","lastModifiedDate":"2023-11-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"tllshan"},"content":"### 4.1. Tracking of Guests and Vendors","lastModifiedDate":"2023-11-12"},{"lineNumber":226,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"keaganpzh"},"content":"The `AddressBook` component stores the list of guests and vendors in the `UniqueGuestList` and `UniqueVendorList` classes respectively. These classes extend `UniquePersonList`, which is a generic class that stores a list of `Person` objects. `Person` is a class that represents a person in the address book. It has two subclasses, `Guest` and `Vendor`, which represent a guest and a vendor respectively. `Guest` has additional fields of `RsvpStatus`, `DietaryRequirement` and `TableNumber` objects. ","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"keaganpzh"},"content":"Furthermore, all fields except `Name` in `Person` and its subclasses are wrapped in an `Optional`. This allows for attributes to be optional, allowing for greater flexibility.  ","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"keaganpzh"},"content":"A `RsvpStatus` object has one of three possible values stored as a String: \"yes\", \"no\", and \"unknown\". The default value of a `RsvpStatus` is \"unknown\".","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"keaganpzh"},"content":"Like `Tag`, a `Guest` can store multiple `DietaryRequirement` objects. As such, it is optional by nature.","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"keaganpzh"},"content":"A `TableNumber` object stores a table number as an integer. It is wrapped in an `Optional` as well.","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"keaganpzh"},"content":"\u003cpuml src\u003d\"diagrams/GuestClassDiagram.puml\" alt\u003d\"GuestClassDiagram\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"keaganpzh"},"content":"#### Design considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"keaganpzh"},"content":"**Aspect: How to store guests and vendors**","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"wasjoe1"},"content":"* **Alternative 1:** Store both guests and vendors in the same list.","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"keaganpzh"},"content":"  * Pros: Easier to implement, less code duplication.","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"keaganpzh"},"content":"  * Cons: Will make it difficult to implement features that are specific to either guests or vendors.","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"keaganpzh"},"content":"* **Alternative 2 (current choice):** Store guests and vendors in separate lists.","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"keaganpzh"},"content":"  * Pros: Allows for greater flexibility in implementing features that are specific to either guests or vendors.","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"keaganpzh"},"content":"  * Cons: More code duplication.","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"tllshan"},"content":"### 4.2. Add Guest and Vendor feature","lastModifiedDate":"2023-11-12"},{"lineNumber":254,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":255,"author":{"gitId":"p-xp"},"content":"#### Implementation","lastModifiedDate":"2023-11-12"},{"lineNumber":256,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":257,"author":{"gitId":"p-xp"},"content":"The add feature allows users to add new guests or vendors with the compulsory field `Name`, along with any of the optional","lastModifiedDate":"2023-11-12"},{"lineNumber":258,"author":{"gitId":"tllshan"},"content":"fields mentioned in the [Tracking of Guests and Vendors](#4-1-tracking-of-guests-and-vendors) section. The feature is implemented through the","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"classes `GuestAddCommand` and `VendorAddCommand`. The implementation of the various classes facilitating the add feature","lastModifiedDate":"2023-11-12"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"on `Guest` and `Vendor` objects differ only in specifics that are not relevant here, so the keywords `Guest` and `Vendor` will be ","lastModifiedDate":"2023-11-12"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"replaced by `XYZ` (e.g. `XYZAddCommand` can be substituted with both `GuestAddCommand` and `VendorAddCommand`).","lastModifiedDate":"2023-11-12"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":263,"author":{"gitId":"p-xp"},"content":"Given below is an example usage scenario and how the add mechanism behaves at each step. You may also refer to the sequence","lastModifiedDate":"2023-11-12"},{"lineNumber":264,"author":{"gitId":"p-xp"},"content":"diagrams provided for a visual representation of the process.","lastModifiedDate":"2023-11-12"},{"lineNumber":265,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":266,"author":{"gitId":"wasjoe1"},"content":"Step 1. The user launches the application. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":268,"author":{"gitId":"p-xp"},"content":"Step 2. The user executes `xyz add n/Annette t/friend`, where `xyz` is either `guest` or `vendor`. This allows the user to add","lastModifiedDate":"2023-11-12"},{"lineNumber":269,"author":{"gitId":"p-xp"},"content":"a guest or vendor with the name `Annette` and tag `friend`. ","lastModifiedDate":"2023-11-12"},{"lineNumber":270,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":271,"author":{"gitId":"p-xp"},"content":"Step 3. `AddressBookParser` parses the `xyz` keyword and creates the `XYZCommandParser`. ","lastModifiedDate":"2023-11-12"},{"lineNumber":272,"author":{"gitId":"p-xp"},"content":"`XYZCommandParser` parses the `add` keyword and creates a `XYZAddCommandParser` object. It also calls `XYZAddCommandParser#parse` to parse the inputted fields.","lastModifiedDate":"2023-11-12"},{"lineNumber":273,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":274,"author":{"gitId":"p-xp"},"content":"\u003cpuml src\u003d\"diagrams/AddParseSequenceDiagram.puml\" alt\u003d\"AddParseSequenceDiagram\" /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":275,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":276,"author":{"gitId":"p-xp"},"content":"Step 4. `#parse` calls upon `ParserUtil#parseABC`, where `ABC` is the field being added, to check the validity of the","lastModifiedDate":"2023-11-12"},{"lineNumber":277,"author":{"gitId":"p-xp"},"content":"user input and convert it into field objects (e.g. string representing a new name into a `Name` object).","lastModifiedDate":"2023-11-12"},{"lineNumber":278,"author":{"gitId":"p-xp"},"content":"`#parse` then creates an `XYZAddCommand` using the created field objects.","lastModifiedDate":"2023-11-12"},{"lineNumber":279,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":280,"author":{"gitId":"p-xp"},"content":"\u003cpuml src\u003d\"diagrams/AddParseSequenceDiagramRef.puml\" alt\u003d\"AddParseSequenceDiagramRef\" /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":281,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":282,"author":{"gitId":"p-xp"},"content":"Step 5. Lastly, `XYZAddCommand#execute` adds a `XYZ` with the given values to the `UniqueXYZList`.","lastModifiedDate":"2023-11-13"},{"lineNumber":283,"author":{"gitId":"p-xp"},"content":"\u003cpuml src\u003d\"diagrams/AddExecuteSequenceDiagram.puml\" alt\u003d\"AddExecuteSequenceDiagram\" /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":284,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":285,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":286,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":287,"author":{"gitId":"tllshan"},"content":"### 4.3. Delete Guest and Vendor feature","lastModifiedDate":"2023-11-12"},{"lineNumber":288,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"tllshan"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"p-xp"},"content":"The `delete` feature allows users to delete a guest or vendor in WedLog, through the respective classes `GuestDeleteCommand` and `VendorDeleteCommand`. Note that the implementation of `GuestDeleteCommand` and `VendorDeleteCommand` is identical and will be referred to as `XYZDeleteCommand`. The feature makes use of the current `Index` of the person in the displayed list to identify the person.","lastModifiedDate":"2023-11-11"},{"lineNumber":292,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"p-xp"},"content":"Given below is an example usage scenario and how the `delete` mechanism behaves at each step.","lastModifiedDate":"2023-11-11"},{"lineNumber":294,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"wasjoe1"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-11-13"},{"lineNumber":296,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"tllshan"},"content":"Step 2. The user executed `xyz filter r/no`, where `xyz` is either `guest` or `vendor`, to show either guests or vendors with the `RSVP Status` set to `no`.","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"tllshan"},"content":"Step 3. The user executes `xyz delete 1`, to delete the first guest or vendor **in the currently displayed list**.","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"tllshan"},"content":"Step 4. `XYZDeleteCommandParser` parses the `Index` to create a `XYZDeleteCommand`. The following sequence diagram shows how the parsing of a delete command works:","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"tllshan"},"content":"\u003cpuml src\u003d\"diagrams/DeleteParseSequenceDiagram.puml\" alt\u003d\"DeleteParseSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"wasjoe1"},"content":"Step 5. The resulting `XYZDeleteCommand` is then executed by the `Logic Manager`. ","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":308,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":309,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":310,"author":{"gitId":"wasjoe1"},"content":"The following sequence diagram shows how the execution of a delete command works:","lastModifiedDate":"2023-11-13"},{"lineNumber":311,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"tllshan"},"content":"\u003cpuml src\u003d\"diagrams/DeleteExecuteSequenceDiagram.puml\" alt\u003d\"DeleteExecuteSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"tllshan"},"content":"#### Design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"tllshan"},"content":"**Aspect: How to specify a guest or vendor using `Index`**","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"wasjoe1"},"content":"* **Alternative 1:** `Index` refers to the index on the full list.","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"wasjoe1"},"content":"  * Pros: Each person is tied to a fixed index regardless of filtering.","lastModifiedDate":"2023-11-13"},{"lineNumber":318,"author":{"gitId":"wasjoe1"},"content":"  * Cons: Requires user to remember index of persons on the full list.","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"wasjoe1"},"content":"* **Alternative 2 (current choice):** `Index` refers to the index on the currently displayed list.","lastModifiedDate":"2023-11-13"},{"lineNumber":320,"author":{"gitId":"wasjoe1"},"content":"  * Pros: User refers to displayed list for index of persons.","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"wasjoe1"},"content":"  * Cons: Index of a person changes with each filter or list command.","lastModifiedDate":"2023-11-13"},{"lineNumber":322,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":324,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":325,"author":{"gitId":"tllshan"},"content":"### 4.4. Filter Guest and Vendor feature","lastModifiedDate":"2023-11-12"},{"lineNumber":326,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"wasjoe1"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":328,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":329,"author":{"gitId":"wasjoe1"},"content":"The `filter` feature allows the user to view a filtered list for both guests and vendors, through the respective classes `VendorFilterCommand` and `GuestFilterCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":330,"author":{"gitId":"wasjoe1"},"content":"The filtering is based on an All-Field-Match search (e.g. `guest filter n/John r/yes` will show only guests that have \"John\" in their name and have also agreed to come to the wedding).","lastModifiedDate":"2023-11-13"},{"lineNumber":331,"author":{"gitId":"wasjoe1"},"content":"The strings separated by spaces in the field of the person have to exactly match the keywords provided in the filter command parameters (e.g. `guest filter n/John` will return a guest by the","lastModifiedDate":"2023-11-13"},{"lineNumber":332,"author":{"gitId":"wasjoe1"},"content":"name of `John Doe`, however a guest with the name `Johnathan` will not be returned.","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"wasjoe1"},"content":"The implementation of the various classes facilitating the filter feature on Guest and Vendor objects differ only in specifics that are not relevant here, so the keywords Guest and Vendor will be replaced by XYZ ","lastModifiedDate":"2023-11-13"},{"lineNumber":334,"author":{"gitId":"wasjoe1"},"content":"(e.g. XYZFilterCommand can be substituted with both GuestFilterCommand and VendorFilterCommand).","lastModifiedDate":"2023-11-13"},{"lineNumber":335,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"wasjoe1"},"content":"Given below is an example usage scenario for filtering guests and how the filter mechanism behaves at each step.","lastModifiedDate":"2023-11-13"},{"lineNumber":337,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"wasjoe1"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-11-13"},{"lineNumber":339,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"wasjoe1"},"content":"Step 2. The user executes `XYZ add n/John doe …​` to add a new person.","lastModifiedDate":"2023-11-13"},{"lineNumber":341,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"wasjoe1"},"content":"Step 3. The user executes `XYZ add n/Johnathan …​` to add another new person.","lastModifiedDate":"2023-11-13"},{"lineNumber":343,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"wasjoe1"},"content":"Step 4. The user executes `XYZ filter n/John` to filter out names that contain the keyword \"John\". The execution of this `XYZFilterCommand` updates the `filteredXYZs` list via the `updateFilteredXYZList` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":345,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"wasjoe1"},"content":"Step 5. A list view of only the XYZ named John is returned.","lastModifiedDate":"2023-11-13"},{"lineNumber":347,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"wasjoe1"},"content":"**Note: The XYZ with name \"Johnathan\" is not returned due to the words in the name not matching the keyword \"John\"**","lastModifiedDate":"2023-11-13"},{"lineNumber":349,"author":{"gitId":"wasjoe1"},"content":"**However, a XYZ with name \"John doe\" would be returned as his name contains the keyword \"John\".**","lastModifiedDate":"2023-11-13"},{"lineNumber":350,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":352,"author":{"gitId":"wasjoe1"},"content":"The filtering logic is done with predicate classes that implement Java\u0027s Predicate interface:","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"wasjoe1"},"content":"\u003cpuml src\u003d\"diagrams/FilterPersonPredicateClassDiagram.puml\" alt\u003d\"FilterPersonPredicateClassDiagram\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":354,"author":{"gitId":"wasjoe1"},"content":"\u003cpuml src\u003d\"diagrams/FilterGuestPredicateClassDiagram.puml\" alt\u003d\"FilterGuestPredicateClassDiagram\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":355,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":356,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"wasjoe1"},"content":"Both `filteredGuests` and `filteredVendors` lists can be filtered by predicates of `PersonPredicate` type, However only `filteredGuests` list can be filtered by predicates of `GuestPredicates` type.","lastModifiedDate":"2023-11-13"},{"lineNumber":358,"author":{"gitId":"wasjoe1"},"content":"The predicates allowed to filter the respective lists will be referred to as `ABCPredicate` for generalisability.","lastModifiedDate":"2023-11-13"},{"lineNumber":359,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":360,"author":{"gitId":"wasjoe1"},"content":"The following sequence diagrams shows how the `filter` command works:","lastModifiedDate":"2023-11-13"},{"lineNumber":361,"author":{"gitId":"wasjoe1"},"content":"\u003cpuml src\u003d\"diagrams/FilterXYZSequenceDiagram.puml\" alt\u003d\"FilterXYZSequenceDiagram\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":362,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":363,"author":{"gitId":"wasjoe1"},"content":"When a user enters `XYZ filter n/John a/jurong west st 65`, the `XYZFilterCommandParser` created will parse the parameters in the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"wasjoe1"},"content":"\u003cpuml src\u003d\"diagrams/FilterXYZSequenceDiagramCreateCommandRef.puml\" alt\u003d\"FilterXYZSequenceDiagramCreateListRef\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"wasjoe1"},"content":"For each valid parameter, it creates the respective ABCPredicate. In the example command, there are two search criteria","lastModifiedDate":"2023-11-13"},{"lineNumber":368,"author":{"gitId":"wasjoe1"},"content":"corresponding to name and address, hence a `NamePredicate` and a `AddressPredicate` is created.","lastModifiedDate":"2023-11-13"},{"lineNumber":369,"author":{"gitId":"wasjoe1"},"content":"These predicates are stored in a `List` and passed to the `XYZFilterCommand` constructor. the predicates are then stored","lastModifiedDate":"2023-11-13"},{"lineNumber":370,"author":{"gitId":"wasjoe1"},"content":"in the `XYZFilterCommand` object and awaits execution.","lastModifiedDate":"2023-11-13"},{"lineNumber":371,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":372,"author":{"gitId":"wasjoe1"},"content":"\u003cpuml src\u003d\"diagrams/FilterXYZSequenceDiagramExecuteCommandRef.puml\" alt\u003d\"FilterXYZSequenceDiagramExecuteCommandRef\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":373,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"wasjoe1"},"content":"Upon execution of the `XYZFilterCommand`, it updates the model by having the predicates passed into the `preparePredicate`","lastModifiedDate":"2023-11-13"},{"lineNumber":375,"author":{"gitId":"wasjoe1"},"content":"internal method. The list of predicates is then made into 1 overall predicate which checks if the list of predicates are ","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"wasjoe1"},"content":"all true. If they are, the overall predicate returns true, else false. This is done through the usage of `Stream`.","lastModifiedDate":"2023-11-13"},{"lineNumber":377,"author":{"gitId":"wasjoe1"},"content":"The resulting predicate is a `Predicate\u003cXYZ\u003e`.","lastModifiedDate":"2023-11-13"},{"lineNumber":378,"author":{"gitId":"wasjoe1"},"content":"The model\u0027s `filteredXYZs` list is then updated by passing in the resultant predicate into `setPredicate` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"wasjoe1"},"content":"Finally, the filtered list is displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":380,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":381,"author":{"gitId":"wasjoe1"},"content":"#### Design considerations","lastModifiedDate":"2023-11-13"},{"lineNumber":382,"author":{"gitId":"wasjoe1"},"content":"**Aspect: Filtering fields by All-Fields-Match or Partial-Fields-Match relationship**","lastModifiedDate":"2023-11-13"},{"lineNumber":383,"author":{"gitId":"wasjoe1"},"content":"* **Alternative 1:** Partial-Fields-Match relationship filter","lastModifiedDate":"2023-11-13"},{"lineNumber":384,"author":{"gitId":"wasjoe1"},"content":"    * Pros: Allow for more return result within 1 filter command.","lastModifiedDate":"2023-11-13"},{"lineNumber":385,"author":{"gitId":"wasjoe1"},"content":"    * Cons: Makes filter confusing at times for the user.","lastModifiedDate":"2023-11-13"},{"lineNumber":386,"author":{"gitId":"wasjoe1"},"content":"* **Alternative 2 (current choice):** All-Fields-Match relationship filter","lastModifiedDate":"2023-11-13"},{"lineNumber":387,"author":{"gitId":"wasjoe1"},"content":"    * Pros: Allows for greater flexibility in implementing features that are specific to either guests or vendors.","lastModifiedDate":"2023-11-13"},{"lineNumber":388,"author":{"gitId":"wasjoe1"},"content":"    * Cons: More code duplication.","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":390,"author":{"gitId":"wasjoe1"},"content":"**Aspect: Filter by Tag or String**","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"wasjoe1"},"content":"* **Alternative 1:** Filter by String","lastModifiedDate":"2023-11-13"},{"lineNumber":392,"author":{"gitId":"wasjoe1"},"content":"    * Pros: Easier to implement since initial implementation was filter by String.","lastModifiedDate":"2023-11-13"},{"lineNumber":393,"author":{"gitId":"wasjoe1"},"content":"    * Cons: Will cause too many variations of Dietary requirements, Tags and Table number.","lastModifiedDate":"2023-11-13"},{"lineNumber":394,"author":{"gitId":"wasjoe1"},"content":"* **Alternative 2 :** Filter by Tags","lastModifiedDate":"2023-11-13"},{"lineNumber":395,"author":{"gitId":"wasjoe1"},"content":"    * Pros: Fields like Dietary requirements will have less variations.","lastModifiedDate":"2023-11-13"},{"lineNumber":396,"author":{"gitId":"wasjoe1"},"content":"    * Cons: Limits field inputs and more effort to implement.","lastModifiedDate":"2023-11-13"},{"lineNumber":397,"author":{"gitId":"wasjoe1"},"content":"* **Alternative 2 (Current choice):** Mix (Use of either String or Tags for different fields)","lastModifiedDate":"2023-11-13"},{"lineNumber":398,"author":{"gitId":"wasjoe1"},"content":"    * Pros: Allow filter to cater to user needs, also making filter more intuitive.","lastModifiedDate":"2023-11-13"},{"lineNumber":399,"author":{"gitId":"wasjoe1"},"content":"    * Cons: Requires more effort to implement as different field types have different considerations.","lastModifiedDate":"2023-11-13"},{"lineNumber":400,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":401,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":403,"author":{"gitId":"tllshan"},"content":"### 4.5. Edit Guest and Vendor feature","lastModifiedDate":"2023-11-12"},{"lineNumber":404,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":405,"author":{"gitId":"samuelim01"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":406,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":407,"author":{"gitId":"samuelim01"},"content":"The edit feature allows users to edit the parameters of existing guests or vendors in WedLog, through the respective classes `GuestEditCommand` and `VendorEditCommand`. Note that the implementation of `GuestEditCommand` and `VendorEditCommand` is identical and will be referred to as `XYZEditCommand`. The feature uses the current `Index` of the person in the displayed list to identify the person.","lastModifiedDate":"2023-10-27"},{"lineNumber":408,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":409,"author":{"gitId":"samuelim01"},"content":"Given below is an example usage scenario of `GuestEditCommand` and how the operation behaves at each step.","lastModifiedDate":"2023-10-27"},{"lineNumber":410,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":411,"author":{"gitId":"wasjoe1"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":413,"author":{"gitId":"samuelim01"},"content":"Step 2. The user executes `guest filter n/John` to show only guests with the name `John`.","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":415,"author":{"gitId":"samuelim01"},"content":"Step 3. The user executes `guest edit 2 p/` to edit the 2nd guest in **the current list** to have **no phone number**.","lastModifiedDate":"2023-10-27"},{"lineNumber":416,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":417,"author":{"gitId":"samuelim01"},"content":"Step 4. `GuestEditCommandParser` parses the `Index` and the additional arguments to create an `GuestEditCommand`. The following sequence diagram shows how the parsing of an edit command works:","lastModifiedDate":"2023-10-27"},{"lineNumber":418,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":419,"author":{"gitId":"samuelim01"},"content":"\u003cpuml src\u003d\"diagrams/EditParseSequenceDiagram.puml\" alt\u003d\"EditParseSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":420,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":421,"author":{"gitId":"samuelim01"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":422,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":423,"author":{"gitId":"samuelim01"},"content":"**Note:** The lifeline for `GuestCommandParser`, `GuestEditCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-27"},{"lineNumber":424,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":425,"author":{"gitId":"samuelim01"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":426,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":427,"author":{"gitId":"samuelim01"},"content":"Step 5. The resulting `GuestEditCommand` object is then executed by the `LogicManager`. The following sequence diagram shows how the execution of an edit command works:","lastModifiedDate":"2023-10-27"},{"lineNumber":428,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":429,"author":{"gitId":"samuelim01"},"content":"\u003cpuml src\u003d\"diagrams/EditExecuteSequenceDiagram.puml\" alt\u003d\"EditExecuteSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":430,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":431,"author":{"gitId":"samuelim01"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":432,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":433,"author":{"gitId":"samuelim01"},"content":"**Note:** The lifeline for `GuestEditCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-27"},{"lineNumber":434,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":435,"author":{"gitId":"samuelim01"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":436,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":437,"author":{"gitId":"samuelim01"},"content":"#### Design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":438,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":439,"author":{"gitId":"samuelim01"},"content":"**Aspect: How `EditXYZDescriptor` works:**","lastModifiedDate":"2023-10-27"},{"lineNumber":440,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":441,"author":{"gitId":"samuelim01"},"content":"The `EditXYZDescriptor` describes if the `XYZ` fields should be modified, deleted, or left alone.","lastModifiedDate":"2023-10-27"},{"lineNumber":442,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":443,"author":{"gitId":"samuelim01"},"content":"* **Alternative 1 (current choice):**","lastModifiedDate":"2023-10-27"},{"lineNumber":444,"author":{"gitId":"samuelim01"},"content":"    * For each field in `XYZ`, create two fields `field` and `isFieldEdited` in `EditXYZDesriptor`, e.g. `phone` and `isPhoneEdited`.","lastModifiedDate":"2023-10-27"},{"lineNumber":445,"author":{"gitId":"samuelim01"},"content":"    * If the field should be deleted, `isFieldEdited` is `true` and `field` is `null`.","lastModifiedDate":"2023-10-27"},{"lineNumber":446,"author":{"gitId":"samuelim01"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-10-27"},{"lineNumber":447,"author":{"gitId":"samuelim01"},"content":"    * Cons: Code is stateful, less intuitive, and harder to test.","lastModifiedDate":"2023-10-27"},{"lineNumber":448,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":449,"author":{"gitId":"samuelim01"},"content":"* **Alternative 2:**","lastModifiedDate":"2023-10-27"},{"lineNumber":450,"author":{"gitId":"samuelim01"},"content":"    * Create a class to represent each edited field, e.g. `EditPhone`, which would capture the different states.","lastModifiedDate":"2023-10-27"},{"lineNumber":451,"author":{"gitId":"samuelim01"},"content":"    * Pros: Code is more intuitive and no need to keep track of states","lastModifiedDate":"2023-10-27"},{"lineNumber":452,"author":{"gitId":"samuelim01"},"content":"    * Cons: Many classes must be created","lastModifiedDate":"2023-10-27"},{"lineNumber":453,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":454,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":455,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":456,"author":{"gitId":"samuelim01"},"content":"### 4.6. Undo and Redo feature","lastModifiedDate":"2023-11-13"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"wasjoe1"},"content":"#### Implementation","lastModifiedDate":"2023-11-13"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"wasjoe1"},"content":"The undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-11-13"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":493,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":496,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":514,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"tllshan"},"content":"#### Design considerations","lastModifiedDate":"2023-11-11"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"tllshan"},"content":"## **5. Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2023-11-12"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":550,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":551,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":552,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":553,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"tllshan"},"content":"## **6. Appendix A: Requirements**","lastModifiedDate":"2023-11-12"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"tllshan"},"content":"### 6.1. Product scope","lastModifiedDate":"2023-11-12"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"p-xp"},"content":"A bride or groom who","lastModifiedDate":"2023-10-05"},{"lineNumber":563,"author":{"gitId":"p-xp"},"content":"* Is tech-savvy and is comfortable using CLI","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"p-xp"},"content":"* Can type fast","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"p-xp"},"content":"* Prefers working on a desktop","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"p-xp"},"content":"* Wants to plan their own wedding","lastModifiedDate":"2023-10-05"},{"lineNumber":567,"author":{"gitId":"p-xp"},"content":"* Has a partner who is uninvolved in the planning process","lastModifiedDate":"2023-10-05"},{"lineNumber":568,"author":{"gitId":"p-xp"},"content":"* Values efficiency and having a consolidated wedding planning platform","lastModifiedDate":"2023-10-05"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"p-xp"},"content":"**Value proposition**: consolidate all information related to wedding guests and vendors into 1 platform for ","lastModifiedDate":"2023-10-05"},{"lineNumber":571,"author":{"gitId":"p-xp"},"content":"streamlined planning.","lastModifiedDate":"2023-10-05"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"tllshan"},"content":"### 6.2. User stories","lastModifiedDate":"2023-11-12"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"| Priority | As a …​                         | I want to …​                                          | So that I can…​                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"tllshan"},"content":"|----------|---------------------------------|-------------------------------------------------------|----------------------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":581,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | add new guests with name and contact                  | keep track of the people whom I invited to the wedding         |","lastModifiedDate":"2023-10-05"},{"lineNumber":582,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | remove existing guests                                | remove guests I erroneously added                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":583,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | record down dietary requirements for guests           | cater correct types of meals for my guests                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":584,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | update RSVP status of a guest                         | track who is coming                                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":585,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | save data into local storage                          | keep my data even after I exit the app                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":586,"author":{"gitId":"p-xp"},"content":"| `* * *`  | new user                        | retrieve data from local storage                      | access past data that I have inputted                          |","lastModifiedDate":"2023-11-11"},{"lineNumber":587,"author":{"gitId":"tllshan"},"content":"| `* * *`  | user liaising with many vendors | add new vendor with name and contact                  | keep track of which vendors I am currently in contact with     |","lastModifiedDate":"2023-10-05"},{"lineNumber":588,"author":{"gitId":"tllshan"},"content":"| `* * *`  | user liaising with many vendors | remove existing vendors                               | remove vendors I erroneously added                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":589,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | view how many guests have RSVP\u0027d                      | know how many guests are confirmed to be coming                |","lastModifiedDate":"2023-10-05"},{"lineNumber":590,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | view a specific guest\u0027s details                       | understand the arrangements I\u0027ve made for a particular guest   |","lastModifiedDate":"2023-10-05"},{"lineNumber":591,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | view the total number of each type of diet            | cater the appropriate number and types of meals                |","lastModifiedDate":"2023-10-05"},{"lineNumber":592,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | filter guests with dietary restrictions               | cater alternate meals for them                                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":593,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | assign a guest to a table number                      | keep track of seating arrangements                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":594,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | filter guests by table                                | see who is sitting at each table                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":595,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | add guests to a group                                 | know which group a guest belongs to                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":596,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | filter guests by groups (eg family, friends)          | access and manage relevant information for each group          |","lastModifiedDate":"2023-10-05"},{"lineNumber":597,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | track my total expenses                               | stay within budget                                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":598,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | keep track of the costs associated with each vendor   | track how much I have spent on the wedding                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":599,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | record gift registry                                  | take note of which gifts are already bought, and by who        |","lastModifiedDate":"2023-10-05"},{"lineNumber":600,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | keep track of red packets received from guests        | keep future references on gift exchange                        |","lastModifiedDate":"2023-10-05"},{"lineNumber":601,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | view total amount I collected from wedding presents   | know how much cash I have                                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":602,"author":{"gitId":"tllshan"},"content":"| `*`      | user finding a wedding location | record pros and cons of possible locations            | choose the best location                                       |","lastModifiedDate":"2023-10-05"},{"lineNumber":603,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | add tasks and track roadmap                           | keep track of the wedding planning progress                    |","lastModifiedDate":"2023-10-05"},{"lineNumber":604,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | get reminders to do tasks when deadlines are nearing  | not miss important deadlines                                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":605,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | assign tasks and deadlines to guests                  | keep track of when I need to follow-up with them               |","lastModifiedDate":"2023-10-05"},{"lineNumber":606,"author":{"gitId":"samuelim01"},"content":"| `*`      | task-oriented user              | assign tasks and deadlines to vendors                 | keep track of when I need to follow-up with them               |","lastModifiedDate":"2023-10-08"},{"lineNumber":607,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | view all the deadlines that have passed               | identify the actions that I need to prioritise                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":608,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | view countdown to wedding                             | know the time I have left till the wedding                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":609,"author":{"gitId":"tllshan"},"content":"| `*`      | user planning my reception      | plan the flow of events during the reception          | know when to do what                                           |","lastModifiedDate":"2023-10-05"},{"lineNumber":610,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | view most recent commands                             | look back on what was recorded previously                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":611,"author":{"gitId":"samuelim01"},"content":"| `*`      | experienced user                | undo the last command                                 | undo accidental or erroneous commands                          |","lastModifiedDate":"2023-10-08"},{"lineNumber":612,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | import data from a csv file format onto this platform | easily transfer existing information from other sources        |","lastModifiedDate":"2023-10-06"},{"lineNumber":613,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | export data into an excel format                      | easily send data to vendors                                    |","lastModifiedDate":"2023-10-06"},{"lineNumber":614,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | share my address book with another user               | plan the wedding together with my partner                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":615,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | add custom fields for guests                          | keep track of miscellaneous information specific to my wedding |","lastModifiedDate":"2023-10-06"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"tllshan"},"content":"### 6.3. Use cases","lastModifiedDate":"2023-11-12"},{"lineNumber":620,"author":{"gitId":"wasjoe1"},"content":"(For all use cases below, the **System** is the `WedLog` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":621,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":622,"author":{"gitId":"tllshan"},"content":"\u003cins\u003e**Use case: UC1 - Add a guest**\u003c/ins\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":623,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":624,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":625,"author":{"gitId":"wasjoe1"},"content":"1. User provides guest details.","lastModifiedDate":"2023-10-05"},{"lineNumber":626,"author":{"gitId":"wasjoe1"},"content":"2. WedLog adds the guest to the guest list.","lastModifiedDate":"2023-10-05"},{"lineNumber":627,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":628,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":629,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":630,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1a. The given input format is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":631,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":632,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a2. User provides guest details in a different format.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":633,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Steps 1a1-1a2 are repeated until the User input format is valid.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":634,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes from step 2.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":635,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1b. The guest list has reached maximum capacity.","lastModifiedDate":"2023-10-05"},{"lineNumber":636,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1b1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":637,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case ends.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":638,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1c. The guest already exists in the guest list.","lastModifiedDate":"2023-10-05"},{"lineNumber":639,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1c1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":640,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case ends.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":641,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax.","lastModifiedDate":"2023-11-11"},{"lineNumber":642,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":643,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":644,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":645,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":646,"author":{"gitId":"tllshan"},"content":"\u003cins\u003e**Use case: UC2 - Delete a guest**\u003c/ins\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":647,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":648,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":649,"author":{"gitId":"tllshan"},"content":"1. User requests to \u003cins\u003elist all guests\u003c/ins\u003e (UC3).","lastModifiedDate":"2023-11-11"},{"lineNumber":650,"author":{"gitId":"tllshan"},"content":"2. WedLog shows a list of guests.","lastModifiedDate":"2023-11-11"},{"lineNumber":651,"author":{"gitId":"tllshan"},"content":"3. User requests to delete a specific guest in the list via its index.","lastModifiedDate":"2023-11-11"},{"lineNumber":652,"author":{"gitId":"tllshan"},"content":"4. WedLog deletes the guest.","lastModifiedDate":"2023-11-11"},{"lineNumber":653,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":654,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":655,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":656,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":657,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":658,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a2. User requests to delete the guest using a different index.\u003c/span\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":659,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Steps 3a1-3a2 are repeated until the User provides a valid index.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":660,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes from step 4.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":661,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax.","lastModifiedDate":"2023-11-11"},{"lineNumber":662,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":663,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":664,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":665,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":666,"author":{"gitId":"tllshan"},"content":"\u003cins\u003e**Use case: UC3 - View all guests**\u003c/ins\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":667,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":668,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":669,"author":{"gitId":"tllshan"},"content":"1. User requests to list all guests.","lastModifiedDate":"2023-11-11"},{"lineNumber":670,"author":{"gitId":"tllshan"},"content":"2. WedLog displays a list of guests.","lastModifiedDate":"2023-11-11"},{"lineNumber":671,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":672,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":673,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":674,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax.","lastModifiedDate":"2023-11-11"},{"lineNumber":675,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":678,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":679,"author":{"gitId":"tllshan"},"content":"\u003cins\u003e**Use case: UC4 - View a specific guest**\u003c/ins\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":682,"author":{"gitId":"tllshan"},"content":"1. User requests to \u003cins\u003elist all guests\u003c/ins\u003e (UC3).","lastModifiedDate":"2023-11-11"},{"lineNumber":683,"author":{"gitId":"tllshan"},"content":"2. WedLog displays a list of guests.","lastModifiedDate":"2023-11-11"},{"lineNumber":684,"author":{"gitId":"tllshan"},"content":"3. User requests to view a specific guest in the list.","lastModifiedDate":"2023-11-11"},{"lineNumber":685,"author":{"gitId":"tllshan"},"content":"4. WedLog displays the guest’s details.","lastModifiedDate":"2023-11-11"},{"lineNumber":686,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":689,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":690,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":691,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes at step 2.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":692,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax.","lastModifiedDate":"2023-11-11"},{"lineNumber":693,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":696,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":697,"author":{"gitId":"tllshan"},"content":"\u003cins\u003e**Use case: UC5 - Add a vendor**\u003c/ins\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":700,"author":{"gitId":"wasjoe1"},"content":"1. User provides vendor details.","lastModifiedDate":"2023-10-05"},{"lineNumber":701,"author":{"gitId":"wasjoe1"},"content":"2. WedLog adds the vendor to the vendor list.","lastModifiedDate":"2023-10-05"},{"lineNumber":702,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":705,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1a. The given input format is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":706,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":707,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a2. User provides vendor details in a different format.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":708,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Steps 1a1-1a2 are repeated until the User input format is valid.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":709,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes from step 2.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":710,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1b. The vendor list has reached maximum capacity.","lastModifiedDate":"2023-10-05"},{"lineNumber":711,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1b1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":712,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case ends.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":713,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1c. The guest already exists in the vendor list.","lastModifiedDate":"2023-10-05"},{"lineNumber":714,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1c1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":715,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case ends.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":716,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax.","lastModifiedDate":"2023-11-11"},{"lineNumber":717,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":718,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":719,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":720,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":721,"author":{"gitId":"tllshan"},"content":"\u003cins\u003e**Use case: UC6 - Delete a vendor**\u003c/ins\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":722,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":723,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":724,"author":{"gitId":"tllshan"},"content":"1. User requests to \u003cins\u003elist all vendors\u003c/ins\u003e (UC7).","lastModifiedDate":"2023-11-11"},{"lineNumber":725,"author":{"gitId":"tllshan"},"content":"2. WedLog shows a list of vendors.","lastModifiedDate":"2023-11-11"},{"lineNumber":726,"author":{"gitId":"tllshan"},"content":"3. User requests to delete a specific vendor in the list via its index.","lastModifiedDate":"2023-11-11"},{"lineNumber":727,"author":{"gitId":"tllshan"},"content":"4. WedLog deletes the vendor.","lastModifiedDate":"2023-11-11"},{"lineNumber":728,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":731,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":732,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":733,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a2. User requests to delete the vendor using a different index.\u003c/span\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":734,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Steps 3a1-3a2 are repeated until the User provides a valid index.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":735,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes from step 4.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":736,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax.","lastModifiedDate":"2023-11-11"},{"lineNumber":737,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":740,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":741,"author":{"gitId":"tllshan"},"content":"\u003cins\u003e**Use case: UC7 - View all vendors**\u003c/ins\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":742,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":743,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":744,"author":{"gitId":"tllshan"},"content":"1. User requests to list all vendors.","lastModifiedDate":"2023-11-11"},{"lineNumber":745,"author":{"gitId":"tllshan"},"content":"2. WedLog displays a list of vendors.","lastModifiedDate":"2023-11-11"},{"lineNumber":746,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":749,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":750,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":753,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":754,"author":{"gitId":"tllshan"},"content":"\u003cins\u003e**Use case: UC8 - View a specific vendor**\u003c/ins\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":757,"author":{"gitId":"tllshan"},"content":"1. User requests to \u003cins\u003elist all vendors\u003c/ins\u003e (UC7).","lastModifiedDate":"2023-11-11"},{"lineNumber":758,"author":{"gitId":"tllshan"},"content":"2. WedLog displays a list of vendors.","lastModifiedDate":"2023-11-11"},{"lineNumber":759,"author":{"gitId":"tllshan"},"content":"3. User requests to view a specific vendor in the list.","lastModifiedDate":"2023-11-11"},{"lineNumber":760,"author":{"gitId":"tllshan"},"content":"4. WedLog displays the vendor’s details.","lastModifiedDate":"2023-11-11"},{"lineNumber":761,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":764,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":765,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":766,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes at step 2.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":767,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax.","lastModifiedDate":"2023-11-11"},{"lineNumber":768,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":771,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":772,"author":{"gitId":"tllshan"},"content":"### 6.4. Non-functional requirements","lastModifiedDate":"2023-11-12"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse. ","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"samuelim01"},"content":"4. Should work without internet connection ","lastModifiedDate":"2023-10-05"},{"lineNumber":778,"author":{"gitId":"samuelim01"},"content":"5. For any command, the system should respond within 2 seconds. ","lastModifiedDate":"2023-10-05"},{"lineNumber":779,"author":{"gitId":"samuelim01"},"content":"6. Should be usable for colour-blind users. ","lastModifiedDate":"2023-10-05"},{"lineNumber":780,"author":{"gitId":"samuelim01"},"content":"7. Should provide comprehensive documentation for users to learn how to use the command-line interface effectively. ","lastModifiedDate":"2023-10-05"},{"lineNumber":781,"author":{"gitId":"samuelim01"},"content":"8. Should provide clear and user-friendly error messages, guiding users on how to rectify issues. ","lastModifiedDate":"2023-10-05"},{"lineNumber":782,"author":{"gitId":"samuelim01"},"content":"9. Should log errors for analysis and debugging.","lastModifiedDate":"2023-10-05"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":785,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":786,"author":{"gitId":"tllshan"},"content":"### 6.5. Glossary","lastModifiedDate":"2023-11-12"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"keaganpzh"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2023-10-06"},{"lineNumber":789,"author":{"gitId":"keaganpzh"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2023-10-06"},{"lineNumber":790,"author":{"gitId":"keaganpzh"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2023-10-06"},{"lineNumber":791,"author":{"gitId":"keaganpzh"},"content":"* **JSON**: [JavaScript Object Notation](https://www.json.org/json-en.html)","lastModifiedDate":"2023-10-06"},{"lineNumber":792,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"tllshan"},"content":"## **7. Appendix B: Instructions for manual testing**","lastModifiedDate":"2023-11-12"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":802,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":803,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"tllshan"},"content":"### 7.1. Launch and shutdown","lastModifiedDate":"2023-11-12"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"keaganpzh"},"content":"   1. Download the `.jar` file and copy into an empty folder","lastModifiedDate":"2023-10-06"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"keaganpzh"},"content":"   2. Double-click the `.jar` file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-11-07"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"keaganpzh"},"content":"2. Saving window preferences","lastModifiedDate":"2023-11-07"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"keaganpzh"},"content":"   2. Re-launch the app by double-clicking the `.jar` file.\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":820,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":824,"author":{"gitId":"tllshan"},"content":"### 7.2. Loading data","lastModifiedDate":"2023-11-12"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"samuelim01"},"content":"Prerequisites: Before launching the application, open the `data` folder.","lastModifiedDate":"2023-11-10"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":829,"author":{"gitId":"samuelim01"},"content":"1. Delete the `data/addressbook.json` file \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":830,"author":{"gitId":"samuelim01"},"content":"   Expected: Upon app launch, the app is populated with sample data.","lastModifiedDate":"2023-11-10"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"samuelim01"},"content":"2. Delete the `data` folder \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":833,"author":{"gitId":"samuelim01"},"content":"   Expected: Upon app launch, the app is populated with sample data.","lastModifiedDate":"2023-11-10"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"samuelim01"},"content":"3. Corrupt the `data/addressbook.json` file \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":836,"author":{"gitId":"samuelim01"},"content":"   Expected: Upon app launch, the app has no guests or vendors populated.","lastModifiedDate":"2023-11-10"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":838,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":840,"author":{"gitId":"tllshan"},"content":"### 7.3. Adding guests","lastModifiedDate":"2023-11-12"},{"lineNumber":841,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":842,"author":{"gitId":"samuelim01"},"content":"1. Adding a guest: `guest add n/John Doe` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":843,"author":{"gitId":"samuelim01"},"content":"   Expected: Guest with the name `John Doe` is added.","lastModifiedDate":"2023-11-10"},{"lineNumber":844,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":845,"author":{"gitId":"samuelim01"},"content":"2. Adding a guest without a name: `guest add e/johndoe@example.com` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":846,"author":{"gitId":"samuelim01"},"content":"   Expected: No guest is added, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":847,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":848,"author":{"gitId":"samuelim01"},"content":"3. Adding a guest with an invalid RSVP status: `guest add n/John Doe r/invalid` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":849,"author":{"gitId":"samuelim01"},"content":"   Expected: No guest is added, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":850,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":851,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":852,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":853,"author":{"gitId":"tllshan"},"content":"### 7.4. Deleting guests","lastModifiedDate":"2023-11-12"},{"lineNumber":854,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":855,"author":{"gitId":"samuelim01"},"content":"Prerequisites: List all guests using the `guest list` command. There should be at least 3, but less than 10,000 guests in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":856,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":857,"author":{"gitId":"samuelim01"},"content":"1. Deleting a guest: `guest delete 3` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":858,"author":{"gitId":"samuelim01"},"content":"   Expected: The third guest is removed from the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":859,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":860,"author":{"gitId":"samuelim01"},"content":"2. Deleting a guest that does not exist: `guest delete 10000` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":861,"author":{"gitId":"samuelim01"},"content":"   Expected: No guest is deleted, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":862,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":863,"author":{"gitId":"samuelim01"},"content":"3. Deleting a guest with an invalid index: `guest delete 0` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":864,"author":{"gitId":"samuelim01"},"content":"   Expected: No guest is deleted, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":865,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":866,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":867,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":868,"author":{"gitId":"tllshan"},"content":"### 7.5. Editing guests","lastModifiedDate":"2023-11-12"},{"lineNumber":869,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":870,"author":{"gitId":"samuelim01"},"content":"Prerequisites: List all guests using the `guest list` command. There should be at least 3, but less than 10,000 guests in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":871,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":872,"author":{"gitId":"samuelim01"},"content":"1. Editing a guest: `guest edit 2 p/68423611` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":873,"author":{"gitId":"samuelim01"},"content":"   Expected: The second guest in the list has their phone number updated to `68423611`.","lastModifiedDate":"2023-11-10"},{"lineNumber":874,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":875,"author":{"gitId":"samuelim01"},"content":"2. Editing multiple fields of a guest: `guest edit 3 tn/2 r/yes` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":876,"author":{"gitId":"samuelim01"},"content":"   Expected: The third guest in the list has their table number updated to `2` and their RSVP status to `yes`.","lastModifiedDate":"2023-11-10"},{"lineNumber":877,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":878,"author":{"gitId":"samuelim01"},"content":"3. Editing a guest with invalid name: `guest edit 3 n/!nvalid N@me` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":879,"author":{"gitId":"samuelim01"},"content":"   Expected: No guest is edited, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":880,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":881,"author":{"gitId":"samuelim01"},"content":"4. Editing a guest without specifying any edits: `guest edit 2` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":882,"author":{"gitId":"samuelim01"},"content":"   Expected: No guest is edited, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":883,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":884,"author":{"gitId":"samuelim01"},"content":"5. Editing a guest that does not exist: `guest edit 10000` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":885,"author":{"gitId":"samuelim01"},"content":"   Expected: No guest is edited, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":886,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":887,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":888,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":889,"author":{"gitId":"tllshan"},"content":"### 7.6. Filtering guests","lastModifiedDate":"2023-11-12"},{"lineNumber":890,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":891,"author":{"gitId":"samuelim01"},"content":"Prerequisites: There should be multiple guests in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":892,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":893,"author":{"gitId":"samuelim01"},"content":"1. Filter guests by tag: `guest filter t/friends` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":894,"author":{"gitId":"samuelim01"},"content":"   Expected: Only guests with the tag `friends` should be shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":895,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":896,"author":{"gitId":"samuelim01"},"content":"2. Filter guests by multiple tags: `guest filter t/friends t/colleagues` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":897,"author":{"gitId":"samuelim01"},"content":"   Expected: Only guests with **both** tags `friends` and `colleagues` should be shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":898,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":899,"author":{"gitId":"samuelim01"},"content":"3. Filter guests without specifying fields: `guest filter` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":900,"author":{"gitId":"samuelim01"},"content":"   Expected: The vendor list remains unchanged, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":901,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":902,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":903,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":904,"author":{"gitId":"tllshan"},"content":"### 7.7. Adding vendors","lastModifiedDate":"2023-11-12"},{"lineNumber":905,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":906,"author":{"gitId":"samuelim01"},"content":"1. Adding a vendor: `vendor add n/John Doe` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":907,"author":{"gitId":"samuelim01"},"content":"    Expected: Vendor with the name `John Doe` is added.","lastModifiedDate":"2023-11-10"},{"lineNumber":908,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":909,"author":{"gitId":"samuelim01"},"content":"2. Adding a vendor without a name: `vendor add e/johndoe@example.com` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":910,"author":{"gitId":"samuelim01"},"content":"    Expected: No vendor is added, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":911,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":912,"author":{"gitId":"samuelim01"},"content":"3. Adding a vendor with an invalid email: `vendor add n/John e/invalidemail` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":913,"author":{"gitId":"samuelim01"},"content":"    Expected: No vendor is added, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":914,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":915,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":916,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":917,"author":{"gitId":"tllshan"},"content":"### 7.8. Deleting vendors","lastModifiedDate":"2023-11-12"},{"lineNumber":918,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":919,"author":{"gitId":"samuelim01"},"content":"Prerequisites: List all vendors using the `vendor list` command. There should be at least 3, but less than 10,000 vendors in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":920,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":921,"author":{"gitId":"samuelim01"},"content":"1. Deleting a vendor: `vendor delete 3` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":922,"author":{"gitId":"samuelim01"},"content":"    Expected: The third vendor is removed from the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":923,"author":{"gitId":"samuelim01"},"content":" ","lastModifiedDate":"2023-11-10"},{"lineNumber":924,"author":{"gitId":"samuelim01"},"content":"2. Deleting a vendor that does not exist: `vendor delete 10000` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":925,"author":{"gitId":"samuelim01"},"content":"    Expected: No vendor is deleted, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":926,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":927,"author":{"gitId":"samuelim01"},"content":"3. Deleting a vendor with an invalid index: `vendor delete 0` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":928,"author":{"gitId":"samuelim01"},"content":"    Expected: No vendor is deleted, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":929,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":930,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":931,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":932,"author":{"gitId":"tllshan"},"content":"### 7.9. Editing vendors","lastModifiedDate":"2023-11-12"},{"lineNumber":933,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":934,"author":{"gitId":"samuelim01"},"content":"Prerequisites: List all vendors using the `vendor list` command. There should be at least 3, but less than 10,000 vendors in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":935,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":936,"author":{"gitId":"samuelim01"},"content":"1. Editing a vendor: `vendor edit 2 p/68423611` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":937,"author":{"gitId":"samuelim01"},"content":"    Expected: The second vendor in the list has their phone number updated to `68423611`.","lastModifiedDate":"2023-11-10"},{"lineNumber":938,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":939,"author":{"gitId":"samuelim01"},"content":"2. Editing multiple fields of a vendor: `vendor edit 3 p/66846122 e/daisypetals@example.com` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":940,"author":{"gitId":"samuelim01"},"content":"    Expected: The third vendor in the list has their phone number updated to `66846122` and their email address to `daisypetals@example.com`.","lastModifiedDate":"2023-11-10"},{"lineNumber":941,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":942,"author":{"gitId":"samuelim01"},"content":"3. Editing a vendor with invalid name: `vendor edit 3 n/!nvalid N@me` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":943,"author":{"gitId":"samuelim01"},"content":"    Expected: No vendor is edited, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":944,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":945,"author":{"gitId":"samuelim01"},"content":"4. Editing a vendor without specifying any edits: `vendor edit 2` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":946,"author":{"gitId":"samuelim01"},"content":"    Expected: No vendor is edited, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":947,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":948,"author":{"gitId":"samuelim01"},"content":"5. Editing a vendor that does not exist: `vendor edit 10000` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":949,"author":{"gitId":"samuelim01"},"content":"    Expected: No vendor is edited, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":950,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":951,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":952,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":953,"author":{"gitId":"tllshan"},"content":"### 7.10. Filtering vendors","lastModifiedDate":"2023-11-12"},{"lineNumber":954,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":955,"author":{"gitId":"samuelim01"},"content":"Prerequisites: There should be multiple vendors in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":956,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":957,"author":{"gitId":"samuelim01"},"content":"1. Filter vendors by tag: `vendor filter t/catering` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":958,"author":{"gitId":"samuelim01"},"content":"    Expected: Only vendors with the tag `catering` should be shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":959,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":960,"author":{"gitId":"samuelim01"},"content":"2. Filter vendors by multiple tags: `vendor filter t/catering t/venue` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":961,"author":{"gitId":"samuelim01"},"content":"    Expected: Only vendors with **both** tags `catering` and `venue` should be shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":962,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":963,"author":{"gitId":"samuelim01"},"content":"3. Filter vendors without specifying fields: `vendor filter` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":964,"author":{"gitId":"samuelim01"},"content":"    Expected: The vendor list remains unchanged, and an error message is shown.","lastModifiedDate":"2023-11-10"},{"lineNumber":965,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":966,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":967,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":968,"author":{"gitId":"tllshan"},"content":"### 7.11. Clearing all guests and vendors","lastModifiedDate":"2023-11-12"},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"samuelim01"},"content":"Prerequisites: There should be at least one guest or vendor in the application.","lastModifiedDate":"2023-11-10"},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"samuelim01"},"content":"1. Clearing guests and vendors: `clear` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":973,"author":{"gitId":"samuelim01"},"content":"    Expected: All guests and vendors are deleted.","lastModifiedDate":"2023-11-10"},{"lineNumber":974,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"samuelim01"},"content":"2. Clearing guests and vendors with extra input: `clear extra` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":976,"author":{"gitId":"samuelim01"},"content":"   Expected: All guests and vendors are deleted.","lastModifiedDate":"2023-11-10"},{"lineNumber":977,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":978,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-07"},{"lineNumber":979,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":980,"author":{"gitId":"tllshan"},"content":"## **8. Appendix C: Planned enhancements**","lastModifiedDate":"2023-11-12"},{"lineNumber":981,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":982,"author":{"gitId":"keaganpzh"},"content":"Given below are the planned enhancements for WedLog, beyond v1.4. This list is not ranked in order of importance.","lastModifiedDate":"2023-11-07"},{"lineNumber":983,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":984,"author":{"gitId":"tllshan"},"content":"### 8.1. Allow special characters in names of guests and vendors","lastModifiedDate":"2023-11-12"},{"lineNumber":985,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":986,"author":{"gitId":"keaganpzh"},"content":"Currently, WedLog only allows names of guests and vendors to be alphanumeric. However, this may not be ideal as some names may contain special characters such as hyphens, apostrophes, and","lastModifiedDate":"2023-11-07"},{"lineNumber":987,"author":{"gitId":"keaganpzh"},"content":"spaces. For example, the name \"Mary-Ann O\u0027Neil\" is currently not allowed. This enhancement will allow such names to be added to WedLog. ","lastModifiedDate":"2023-11-07"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":989,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":990,"author":{"gitId":"keaganpzh"},"content":"We understand that some names may contain special characters. ","lastModifiedDate":"2023-11-07"},{"lineNumber":991,"author":{"gitId":"keaganpzh"},"content":"This enhancement will allow users to add names of guests and vendors that contain special characters. This will allow WedLog to be more flexible in terms of the names that can be added to it.","lastModifiedDate":"2023-11-07"},{"lineNumber":992,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":993,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":994,"author":{"gitId":"keaganpzh"},"content":"The implementation of this enhancement will be done in the `Name` class. By changing the validation regex of a name to allow special characters, users can input special characters in the names","lastModifiedDate":"2023-11-07"},{"lineNumber":995,"author":{"gitId":"keaganpzh"},"content":"of guests and vendors.","lastModifiedDate":"2023-11-07"},{"lineNumber":996,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":997,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":998,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":999,"author":{"gitId":"tllshan"},"content":"### 8.2. Provide more specific error messages for invalid commands","lastModifiedDate":"2023-11-12"},{"lineNumber":1000,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1001,"author":{"gitId":"keaganpzh"},"content":"Currently, upon the input of a wrong command, WedLog displays rather general error messages to the user. For example, if I type: `guest add name/...` instead of `guest add n/...`,","lastModifiedDate":"2023-11-07"},{"lineNumber":1002,"author":{"gitId":"keaganpzh"},"content":"the error message shown is `Invalid command format! ...`. This is not very helpful to the user as it does not tell the user what is wrong with the command. This enhancement will allow WedLog to","lastModifiedDate":"2023-11-07"},{"lineNumber":1003,"author":{"gitId":"keaganpzh"},"content":"display more specific error messages to the user, such as `Invalid command format! The prefix \u0027name/\u0027 is not recognised.`, for example.","lastModifiedDate":"2023-11-07"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1005,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1006,"author":{"gitId":"keaganpzh"},"content":"We understand that due to the number of possible command labels available, users may not be able to remember all of them. This enhancement will allow users to know exactly what is wrong with","lastModifiedDate":"2023-11-07"},{"lineNumber":1007,"author":{"gitId":"keaganpzh"},"content":"their command, and thus allow them to rectify their mistakes more easily.","lastModifiedDate":"2023-11-07"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1009,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1010,"author":{"gitId":"keaganpzh"},"content":"The implementation of this enhancement will be done in the individual `parse()` methods in each command parser class. By checking each command label for validity, we can display more specific","lastModifiedDate":"2023-11-07"},{"lineNumber":1011,"author":{"gitId":"keaganpzh"},"content":"error messages to the user.","lastModifiedDate":"2023-11-07"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1013,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1015,"author":{"gitId":"tllshan"},"content":"### 8.3. Allow tracking of multiple phone numbers with differentiation","lastModifiedDate":"2023-11-12"},{"lineNumber":1016,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1017,"author":{"gitId":"keaganpzh"},"content":"Currently, WedLog only allows users to track one phone number per guest or vendor. The restriction imposed on phone number inputs are that it has to be a (1) a number input, (2) cannot contain","lastModifiedDate":"2023-11-07"},{"lineNumber":1018,"author":{"gitId":"keaganpzh"},"content":"special characters, and (3) must be at least 3 digits long. This does not allow users to track contacts with multiple phone numbers. This enhancement will allow users to track multiple phone","lastModifiedDate":"2023-11-07"},{"lineNumber":1019,"author":{"gitId":"keaganpzh"},"content":"numbers for each guest or vendor, and differentiate between them.","lastModifiedDate":"2023-11-07"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1021,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1022,"author":{"gitId":"keaganpzh"},"content":"We understand that our users may want to track guests or vendors with multiple phone numbers. A possible format multiple phone number representation","lastModifiedDate":"2023-11-07"},{"lineNumber":1023,"author":{"gitId":"keaganpzh"},"content":"would be `12345678 (HP) 61235938 (O)`. This allows each guest and vendor to have multiple phone numbers tracked, and also allows users to differentiate between them. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1024,"author":{"gitId":"keaganpzh"},"content":"This will allow WedLog to be more flexible in terms of the phone numbers that can be tracked.","lastModifiedDate":"2023-11-07"},{"lineNumber":1025,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1026,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1027,"author":{"gitId":"keaganpzh"},"content":"The implementation of this enhancement can be done in one of two ways.","lastModifiedDate":"2023-11-07"},{"lineNumber":1028,"author":{"gitId":"keaganpzh"},"content":"1. Change the implementation of `Phone` to follow the implementation of `Tag` and `DietaryRequirement`. A `Person` superclass would then have a set of `Phone` objects, i.e. `Set\u003cPhone\u003e`.","lastModifiedDate":"2023-11-07"},{"lineNumber":1029,"author":{"gitId":"keaganpzh"},"content":"A `Phone` object would also need to keep track of an identifier, e.g. \u0027(HP)\u0027 or \u0027(O)\u0027, to allow differentiation between different phone numbers.","lastModifiedDate":"2023-11-07"},{"lineNumber":1030,"author":{"gitId":"keaganpzh"},"content":"2. Change the implementation of `Phone` to accept other non-numerical values in the input. This allows the user to flexibly add identifiers such as \u0027(HP)\u0027 or \u0027(O)\u0027 to differentiate between","lastModifiedDate":"2023-11-07"},{"lineNumber":1031,"author":{"gitId":"keaganpzh"},"content":"different phone numbers.","lastModifiedDate":"2023-11-07"},{"lineNumber":1032,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1033,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1034,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1035,"author":{"gitId":"tllshan"},"content":"### 8.4. Allow text wrapping for long data fields","lastModifiedDate":"2023-11-12"},{"lineNumber":1036,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1037,"author":{"gitId":"keaganpzh"},"content":"Currently, long data fields in WedLog are not line-wrapped in the UI. This causes information to be displayed in a single continuous line. This can lead to information being cut off when","lastModifiedDate":"2023-11-07"},{"lineNumber":1038,"author":{"gitId":"keaganpzh"},"content":"the data stored is too long.","lastModifiedDate":"2023-11-07"},{"lineNumber":1039,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1040,"author":{"gitId":"keaganpzh"},"content":"\u003cimg src\u003d\"images/planned-enhancements/guest-card-fields-overflow.png\" alt\u003d\"Screenshot of a guest card containing data fields that are too long\"\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1041,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1042,"author":{"gitId":"keaganpzh"},"content":"This enhancement will allow text wrapping for long data fields in WedLog.","lastModifiedDate":"2023-11-07"},{"lineNumber":1043,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1044,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1045,"author":{"gitId":"keaganpzh"},"content":"Although the current UI of WedLog should contain most typical data fields without overflowing, there may be cases where the data fields are too long. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1046,"author":{"gitId":"keaganpzh"},"content":"This enhancement will allow users to input extremely long data fields without the information being cut off.","lastModifiedDate":"2023-11-07"},{"lineNumber":1047,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1048,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1049,"author":{"gitId":"keaganpzh"},"content":"In the UI files, change the `.fxml` files to allow text wrapping for long data fields. This can be done by adding the `wrapText\u003d\"true\"` attribute to the relevant `Label` elements.","lastModifiedDate":"2023-11-07"},{"lineNumber":1050,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1051,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1052,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1053,"author":{"gitId":"tllshan"},"content":"### 8.5. Improve pie chart ","lastModifiedDate":"2023-11-12"},{"lineNumber":1054,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1055,"author":{"gitId":"keaganpzh"},"content":"We have identified 2 main issues with the use of the current JavaFX pie chart in WedLog.","lastModifiedDate":"2023-11-07"},{"lineNumber":1056,"author":{"gitId":"keaganpzh"},"content":"1. When there are no guests in the list, the pie chart shows a floating label representing the number of guests with RSVP status \"No\". Since there are no guests in the list, ","lastModifiedDate":"2023-11-07"},{"lineNumber":1057,"author":{"gitId":"keaganpzh"},"content":"this label should not appear.","lastModifiedDate":"2023-11-07"},{"lineNumber":1058,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1059,"author":{"gitId":"keaganpzh"},"content":"\u003cimg src\u003d\"images/planned-enhancements/piechart-floating-label.png\" alt\u003d\"Screenshot of a pie chart with no guests in the list\" width\u003d\"350px\"\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1060,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1061,"author":{"gitId":"keaganpzh"},"content":"2. When the number of guests in the list becomes large and the number of guests with a particular RSVP status is small, the label representing the number of guests with that RSVP status","lastModifiedDate":"2023-11-07"},{"lineNumber":1062,"author":{"gitId":"keaganpzh"},"content":"seems to disappear.","lastModifiedDate":"2023-11-07"},{"lineNumber":1063,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1064,"author":{"gitId":"keaganpzh"},"content":"\u003cimg src\u003d\"images/planned-enhancements/piechart-missing-label.png\" alt\u003d\"Screenshot of a pie chart with a large number of guests in the list\" width\u003d\"350px\"\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1065,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1066,"author":{"gitId":"keaganpzh"},"content":"This enhancement will improve the pie chart in WedLog by fixing these 2 issues.","lastModifiedDate":"2023-11-07"},{"lineNumber":1067,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1068,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1069,"author":{"gitId":"keaganpzh"},"content":"As a cosmetic enhancement, this will improve the overall look of the pie chart in WedLog. By ensuring labels appear when they need to and not appear when they should not, ","lastModifiedDate":"2023-11-07"},{"lineNumber":1070,"author":{"gitId":"keaganpzh"},"content":"this will allow users to better understand the pie chart, improving accessibility.","lastModifiedDate":"2023-11-07"},{"lineNumber":1071,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1072,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1073,"author":{"gitId":"keaganpzh"},"content":"The way we populate the pie chart data is by traversing the list of guests and allocating each pie chart slice with the RSVP status of each guest in order. Since we want to maintain a ","lastModifiedDate":"2023-11-07"},{"lineNumber":1074,"author":{"gitId":"keaganpzh"},"content":"specific colour scheme for the chart slices, we have to ensure that the order of slices is maintained. This can lead to unexpected behaviour such as the floating label appearing when there ","lastModifiedDate":"2023-11-07"},{"lineNumber":1075,"author":{"gitId":"keaganpzh"},"content":"are not yet guests with RSVP status \"no\". In JavaFX, in order to change the styling of the pie chart dynamically, we will need to change its style attributes in the controller class ","lastModifiedDate":"2023-11-07"},{"lineNumber":1076,"author":{"gitId":"keaganpzh"},"content":"**after** the scene has been shown. However, the current implementation of updating UI elements is done by removing existing components and re-rendering components when the data changes,","lastModifiedDate":"2023-11-07"},{"lineNumber":1077,"author":{"gitId":"keaganpzh"},"content":"i.e. after a command is executed. In particular, the pie chart is deleted and a new one is created based on the updated data. This means that it is not possible to conditionally style the ","lastModifiedDate":"2023-11-07"},{"lineNumber":1078,"author":{"gitId":"keaganpzh"},"content":"chart slices within the current implementation.","lastModifiedDate":"2023-11-07"},{"lineNumber":1079,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1080,"author":{"gitId":"keaganpzh"},"content":"One way to fix this issue is to change the way UI elements are updated. Instead of deleting and re-rendering components, we can update the existing components with the new data. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1081,"author":{"gitId":"keaganpzh"},"content":"This is a non-trivial implementation and will require a rework of the UI code. This enhancement will then address the issues of (1) labels appearing when they should not, and (2) labels","lastModifiedDate":"2023-11-07"},{"lineNumber":1082,"author":{"gitId":"keaganpzh"},"content":"disappearing when they should not.","lastModifiedDate":"2023-11-07"},{"lineNumber":1083,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1084,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1085,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1086,"author":{"gitId":"tllshan"},"content":"### 8.6. Better duplicate detection for tags","lastModifiedDate":"2023-11-12"},{"lineNumber":1087,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1088,"author":{"gitId":"keaganpzh"},"content":"Currently, tags are case-sensitive in WedLog. This means that if a user adds a tag with the same name but different case, e.g. \u0027family\u0027 and \u0027Family\u0027, WedLog will treat them as different tags. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1089,"author":{"gitId":"keaganpzh"},"content":"This can lead to duplicate tags being added to WedLog, making it confusing for users. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1090,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1091,"author":{"gitId":"keaganpzh"},"content":"\u003cimg src\u003d\"images/planned-enhancements/duplicate-tags.png\" alt\u003d\"Screenshot of a guest card with duplicate tags\"\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1092,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1093,"author":{"gitId":"keaganpzh"},"content":"This enhancement will allow WedLog to detect duplicate tags, regardless of case. A tag will be stored in WedLog in lowercase, for standardisation.","lastModifiedDate":"2023-11-07"},{"lineNumber":1094,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1095,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1096,"author":{"gitId":"keaganpzh"},"content":"We understand that our users may assign tags with the same name but different case. This enhancement will enforce case-insensitivity for the input of tags ","lastModifiedDate":"2023-11-09"},{"lineNumber":1097,"author":{"gitId":"p-xp"},"content":"to prevent duplicate tags from being added to WedLog.","lastModifiedDate":"2023-11-11"},{"lineNumber":1098,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1099,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1100,"author":{"gitId":"keaganpzh"},"content":"The implementation of this enhancement will be done in the `Tag` class. By storing tags in lowercase, we can ensure that duplicate tags ","lastModifiedDate":"2023-11-07"},{"lineNumber":1101,"author":{"gitId":"keaganpzh"},"content":"are detected by means of string equality, and handled accordingly.","lastModifiedDate":"2023-11-07"},{"lineNumber":1102,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1103,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1104,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1105,"author":{"gitId":"tllshan"},"content":"### 8.7. Better duplicate detection for dietary requirements","lastModifiedDate":"2023-11-12"},{"lineNumber":1106,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1107,"author":{"gitId":"keaganpzh"},"content":"Currently, dietary requirements are case-sensitive in WedLog. This means that if a user adds a dietary requirement with the same name but different case, e.g. \u0027vegan\u0027","lastModifiedDate":"2023-11-07"},{"lineNumber":1108,"author":{"gitId":"keaganpzh"},"content":"and \u0027Vegan\u0027, WedLog will treat them as different dietary requirements. This can lead to duplicate dietary requirements being added to WedLog, making it confusing for users.","lastModifiedDate":"2023-11-07"},{"lineNumber":1109,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1110,"author":{"gitId":"keaganpzh"},"content":"\u003cimg src\u003d\"images/planned-enhancements/duplicate-dietary.png\" alt\u003d\"Screenshot of a guest card with duplicate dietary requirements\"\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1111,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1112,"author":{"gitId":"keaganpzh"},"content":"This enhancement will allow WedLog to detect duplicate dietary requirements, regardless of case. A dietary requirement will be stored in WedLog in lowercase, for standardisation.","lastModifiedDate":"2023-11-07"},{"lineNumber":1113,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1114,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1115,"author":{"gitId":"keaganpzh"},"content":"We understand that our users may assign dietary requirements with the same name but different case. This enhancement will enforce case-insensitivity for the input of ","lastModifiedDate":"2023-11-07"},{"lineNumber":1116,"author":{"gitId":"p-xp"},"content":"dietary requirements, to prevent duplicate dietary requirements from being added to WedLog.","lastModifiedDate":"2023-11-11"},{"lineNumber":1117,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1118,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1119,"author":{"gitId":"keaganpzh"},"content":"The implementation of this enhancement will be done in the `DietaryRequirement` class. By storing dietary requirements in lowercase, we can ensure that duplicate ","lastModifiedDate":"2023-11-07"},{"lineNumber":1120,"author":{"gitId":"keaganpzh"},"content":"dietary requirements are detected by means of string equality, and handled accordingly.","lastModifiedDate":"2023-11-07"},{"lineNumber":1121,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1122,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1123,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1124,"author":{"gitId":"tllshan"},"content":"### 8.8. Allow resizing of all panels","lastModifiedDate":"2023-11-12"},{"lineNumber":1125,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1126,"author":{"gitId":"keaganpzh"},"content":"We noted issues of the command result display box being too small, making it hard for users to view the results of their commands. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1127,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1128,"author":{"gitId":"keaganpzh"},"content":"\u003cimg src\u003d\"images/planned-enhancements/result-display-too-small.png\" alt\u003d\"Screenshot of the command result display box being too small\" width\u003d\"900\"\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1129,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1130,"author":{"gitId":"keaganpzh"},"content":"This enhancement will allow users to resize all panels in WedLog, including the command result display box. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1131,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1132,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1133,"author":{"gitId":"keaganpzh"},"content":"Having the ability to resize individual components will allow users to customise the UI to their needs and liking. This will improve the overall user experience of WedLog, because","lastModifiedDate":"2023-11-07"},{"lineNumber":1134,"author":{"gitId":"keaganpzh"},"content":"information will less likely be restricted by the size of other components.","lastModifiedDate":"2023-11-07"},{"lineNumber":1135,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1136,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1137,"author":{"gitId":"keaganpzh"},"content":"The implementation of this enhancement will be done in the `.fxml` UI files. On top of making the entire window resizable, we will also need to make individual components resizable.","lastModifiedDate":"2023-11-07"},{"lineNumber":1138,"author":{"gitId":"keaganpzh"},"content":"This can be done by adding the `resizable\u003d\"true\"` attribute to the relevant `Pane` elements, and setting the minimum and maximum bounds of each component.","lastModifiedDate":"2023-11-07"},{"lineNumber":1139,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1140,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1141,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1142,"author":{"gitId":"tllshan"},"content":"### 8.9. Remove full-screen support for help window (macOS)","lastModifiedDate":"2023-11-12"},{"lineNumber":1143,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1144,"author":{"gitId":"keaganpzh"},"content":"We are aware of the issue that some macOS users have with the help window. When the app is running in full-screen mode and the help window is launched, it is also launched in full-screen mode,","lastModifiedDate":"2023-11-07"},{"lineNumber":1145,"author":{"gitId":"keaganpzh"},"content":"as a separate window. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1146,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1147,"author":{"gitId":"keaganpzh"},"content":"\u003cimg src\u003d\"images/planned-enhancements/help-fullscreen.png\" alt\u003d\"Screenshot of the help window in full-screen mode in macOS\" width\u003d\"600\"\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1148,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1149,"author":{"gitId":"keaganpzh"},"content":"This can cause some confusion for users as they may not know how to exit the help window, or navigate back to the main window of WedLog. It also does not make sense for the help window to be","lastModifiedDate":"2023-11-07"},{"lineNumber":1150,"author":{"gitId":"keaganpzh"},"content":"maximised as such. This enhancement will improve the user experience of macOS users by removing the full-screen support for the help window.","lastModifiedDate":"2023-11-07"},{"lineNumber":1151,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1152,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1153,"author":{"gitId":"keaganpzh"},"content":"By restricting the help window to its intended size (big enough to display the UG URL and `Copy URL` button), this will allow users to navigate the help window more easily.","lastModifiedDate":"2023-11-07"},{"lineNumber":1154,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1155,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1156,"author":{"gitId":"keaganpzh"},"content":"The implementation of this enhancement will be done in the `HelpWindow` class. By removing the full-screen support for the help window, we can ensure that the help window is restricted to","lastModifiedDate":"2023-11-07"},{"lineNumber":1157,"author":{"gitId":"keaganpzh"},"content":"its intended size.","lastModifiedDate":"2023-11-07"},{"lineNumber":1158,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1159,"author":{"gitId":"keaganpzh"},"content":"#### Things to note","lastModifiedDate":"2023-11-07"},{"lineNumber":1160,"author":{"gitId":"keaganpzh"},"content":"This issue does not occur in other operating systems such as Windows and Linux. This enhancement will only affect macOS users.","lastModifiedDate":"2023-11-07"},{"lineNumber":1161,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1162,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1163,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1164,"author":{"gitId":"tllshan"},"content":"### 8.10. Better colour scheme","lastModifiedDate":"2023-11-12"},{"lineNumber":1165,"author":{"gitId":"keaganpzh"},"content":"#### Description","lastModifiedDate":"2023-11-07"},{"lineNumber":1166,"author":{"gitId":"keaganpzh"},"content":"The current colour scheme of WedLog has raised some concerns of accessibility. ","lastModifiedDate":"2023-11-07"},{"lineNumber":1167,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1168,"author":{"gitId":"keaganpzh"},"content":"1. The background colour of a dietary requirement label is too similar to the text colour, making it hard to read.","lastModifiedDate":"2023-11-07"},{"lineNumber":1169,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1170,"author":{"gitId":"p-xp"},"content":"\u003cimg src\u003d\"images/planned-enhancements/dietary-requirement-label.png\" alt\u003d\"Screenshot of a dietary requirement label with sub-optimal colour contrast\"/\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1171,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1172,"author":{"gitId":"keaganpzh"},"content":"2. In the case of a wrong command input, the error message is displayed in red, which is too similar to the background colour of the command box.","lastModifiedDate":"2023-11-07"},{"lineNumber":1173,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1174,"author":{"gitId":"keaganpzh"},"content":"\u003cimg src\u003d\"images/planned-enhancements/command-box-wrong-command.png\" alt\u003d\"Screenshot of an wrong command with sub-optimal colour contrast\"\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":1175,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1176,"author":{"gitId":"keaganpzh"},"content":"This enhancement will improve the colour scheme of WedLog to make it more accessible by increasing the colour contrast between UI components.","lastModifiedDate":"2023-11-07"},{"lineNumber":1177,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1178,"author":{"gitId":"keaganpzh"},"content":"#### Benefits","lastModifiedDate":"2023-11-07"},{"lineNumber":1179,"author":{"gitId":"keaganpzh"},"content":"Improving the colour scheme will increase colour contrast between certain affected UI components, making it easier for users to read the information displayed. This will improve the overall","lastModifiedDate":"2023-11-07"},{"lineNumber":1180,"author":{"gitId":"keaganpzh"},"content":"user experience of WedLog.","lastModifiedDate":"2023-11-07"},{"lineNumber":1181,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1182,"author":{"gitId":"keaganpzh"},"content":"#### Implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":1183,"author":{"gitId":"keaganpzh"},"content":"The implementation of this enhancement will be done by first designing a different colour scheme with higher contrast for WedLog, and then changing the colour scheme of the UI components","lastModifiedDate":"2023-11-07"},{"lineNumber":1184,"author":{"gitId":"keaganpzh"},"content":"by changing the relevant style attributes in the `.css` files.","lastModifiedDate":"2023-11-07"},{"lineNumber":1185,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1186,"author":{"gitId":"p-xp"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-11"},{"lineNumber":1187,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1188,"author":{"gitId":"tllshan"},"content":"## **9. Appendix D: Effort**","lastModifiedDate":"2023-11-13"},{"lineNumber":1189,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1190,"author":{"gitId":"p-xp"},"content":"This section documents the effort required to evolve AB3 into WedLog.","lastModifiedDate":"2023-11-11"},{"lineNumber":1191,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1192,"author":{"gitId":"keaganpzh"},"content":"### 9.1. Augmenting `Person` with `Guest` and `Vendor` classes","lastModifiedDate":"2023-11-13"},{"lineNumber":1193,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":1194,"author":{"gitId":"p-xp"},"content":"This involved: ","lastModifiedDate":"2023-11-11"},{"lineNumber":1195,"author":{"gitId":"p-xp"},"content":"* Creating `Guest` and `Vendor` classes.","lastModifiedDate":"2023-11-11"},{"lineNumber":1196,"author":{"gitId":"p-xp"},"content":"* Rewriting all existing code dealing with `Person` to handle `Guest` and `Vendor`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1197,"author":{"gitId":"p-xp"},"content":"  * E.g. `EditCommand` into `GuestEditCommand` and `VendorEditCommand`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1198,"author":{"gitId":"p-xp"},"content":"* Splitting parsing of vendor and guest commands to their respective Parser classes `GuestCommandParser` and `VendorCommandParser`.","lastModifiedDate":"2023-11-12"},{"lineNumber":1199,"author":{"gitId":"p-xp"},"content":"* Updating UI to display both lists.","lastModifiedDate":"2023-11-11"},{"lineNumber":1200,"author":{"gitId":"keaganpzh"},"content":"* Removing all deprecated classes handling the `Person` class.","lastModifiedDate":"2023-11-13"},{"lineNumber":1201,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1202,"author":{"gitId":"p-xp"},"content":"This was time and effort intensive as:","lastModifiedDate":"2023-11-11"},{"lineNumber":1203,"author":{"gitId":"p-xp"},"content":"* Tracking two entities as opposed to one in AB3 increased the complexity of our project.","lastModifiedDate":"2023-11-11"},{"lineNumber":1204,"author":{"gitId":"p-xp"},"content":"* From this point onwards, we had to create two of each command and command parsers to handle `Guest` and `Vendor` separately.","lastModifiedDate":"2023-11-12"},{"lineNumber":1205,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1206,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1207,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1208,"author":{"gitId":"tllshan"},"content":"### 9.2. Altering most fields to become Optional","lastModifiedDate":"2023-11-13"},{"lineNumber":1209,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1210,"author":{"gitId":"p-xp"},"content":"Our app allows fields like `Phone`, `Email`, `Address` and more to be empty, which AB3 did not.","lastModifiedDate":"2023-11-11"},{"lineNumber":1211,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1212,"author":{"gitId":"p-xp"},"content":"This increased complexity of our application as features like `add`, `edit` and `filter` had to account for more ","lastModifiedDate":"2023-11-11"},{"lineNumber":1213,"author":{"gitId":"p-xp"},"content":"variations in values.","lastModifiedDate":"2023-11-11"},{"lineNumber":1214,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1215,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1216,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1217,"author":{"gitId":"tllshan"},"content":"### 9.3. Enhancing `Guest` class with new parameters","lastModifiedDate":"2023-11-13"},{"lineNumber":1218,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1219,"author":{"gitId":"p-xp"},"content":"We enhanced the `Guest` class to track additional information not covered in the original `Person` class. This involved:","lastModifiedDate":"2023-11-11"},{"lineNumber":1220,"author":{"gitId":"keaganpzh"},"content":"* Introducing the `TableNumber`, `RsvpStatus` and `DietaryRequirement` classes and integrating them into existing ","lastModifiedDate":"2023-11-13"},{"lineNumber":1221,"author":{"gitId":"p-xp"},"content":"features like `add` and `edit`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1222,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1223,"author":{"gitId":"p-xp"},"content":"This change was challenging as it required lots of in-depth design discussions on how to best represent the information.","lastModifiedDate":"2023-11-11"},{"lineNumber":1224,"author":{"gitId":"p-xp"},"content":"  * For `RsvpStatus` class: We debated on the appropriate amount of flexibility to give users, and eventually ","lastModifiedDate":"2023-11-13"},{"lineNumber":1225,"author":{"gitId":"p-xp"},"content":"  settled on restricting acceptable values for `RsvpStatus` to `Yes`, `No`, and `Unknown`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1226,"author":{"gitId":"keaganpzh"},"content":"  * For `DietaryRequirement` class: We initially stored the information as a string, but later adapted it into a ","lastModifiedDate":"2023-11-13"},{"lineNumber":1227,"author":{"gitId":"p-xp"},"content":"  tag system to facilitate UI design and filtering.","lastModifiedDate":"2023-11-11"},{"lineNumber":1228,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1229,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1230,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1231,"author":{"gitId":"tllshan"},"content":"### 9.4. Enhancing the `add` and `edit` commands","lastModifiedDate":"2023-11-13"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1233,"author":{"gitId":"p-xp"},"content":"We enhanced the `add` and `edit` commands to accept and interpret empty parameters. This involved:","lastModifiedDate":"2023-11-11"},{"lineNumber":1234,"author":{"gitId":"p-xp"},"content":"* Discussing what we wanted empty parameters to represent for the different fields.","lastModifiedDate":"2023-11-11"},{"lineNumber":1235,"author":{"gitId":"p-xp"},"content":"  * E.g. Editing a guest with an empty `p/` will delete the existing `Phone` value, while an empty `r/` will update ","lastModifiedDate":"2023-11-11"},{"lineNumber":1236,"author":{"gitId":"p-xp"},"content":"  `RsvpStatus` to `Unknown`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1237,"author":{"gitId":"p-xp"},"content":"* Updating the parsers for the various classes to correctly interpret an empty input.","lastModifiedDate":"2023-11-11"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1239,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1241,"author":{"gitId":"tllshan"},"content":"### 9.5. Implementing the `filter` command","lastModifiedDate":"2023-11-13"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1243,"author":{"gitId":"p-xp"},"content":"This involved creating a new command not available in AB3.","lastModifiedDate":"2023-11-11"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1245,"author":{"gitId":"p-xp"},"content":"Implementing this was challenging:","lastModifiedDate":"2023-11-11"},{"lineNumber":1246,"author":{"gitId":"p-xp"},"content":"* Compared to AB3\u0027s `find` command which searched only the `Name` field, our `filter` command is able to filter ","lastModifiedDate":"2023-11-11"},{"lineNumber":1247,"author":{"gitId":"p-xp"},"content":"via every field in `Guest` and `Vendor`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1248,"author":{"gitId":"p-xp"},"content":"* Furthermore, we allowed users to filter using multiple fields simultaneously, which increased the ","lastModifiedDate":"2023-11-11"},{"lineNumber":1249,"author":{"gitId":"p-xp"},"content":"complexity of implementation.","lastModifiedDate":"2023-11-11"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1251,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1253,"author":{"gitId":"tllshan"},"content":"### 9.6. Implementing the `undo` and `redo` command","lastModifiedDate":"2023-11-13"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1255,"author":{"gitId":"p-xp"},"content":"This involved:","lastModifiedDate":"2023-11-11"},{"lineNumber":1256,"author":{"gitId":"p-xp"},"content":"* Creating a new command not available in AB3.","lastModifiedDate":"2023-11-11"},{"lineNumber":1257,"author":{"gitId":"p-xp"},"content":"* Binding the keyboard shortcuts Ctrl/Cmd + Z and Ctrl/Cmd + Y to `undo` and `redo` respectively.","lastModifiedDate":"2023-11-11"},{"lineNumber":1258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1259,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1261,"author":{"gitId":"keaganpzh"},"content":"### 9.7. Introducing Rsvp Status pie chart and Dietary Requirements statistics panel","lastModifiedDate":"2023-11-13"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1263,"author":{"gitId":"p-xp"},"content":"This involved creating a new UI design and logic that was not available in AB3.","lastModifiedDate":"2023-11-12"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1265,"author":{"gitId":"p-xp"},"content":"This was challenging and time-consuming as:","lastModifiedDate":"2023-11-12"},{"lineNumber":1266,"author":{"gitId":"keaganpzh"},"content":"* We had to learn and implement new UI components unavailable in AB3.","lastModifiedDate":"2023-11-12"},{"lineNumber":1267,"author":{"gitId":"keaganpzh"},"content":"* We had to design the UI to be responsive to changes in data.","lastModifiedDate":"2023-11-12"},{"lineNumber":1268,"author":{"gitId":"keaganpzh"},"content":"  * E.g. When a guest is added, the pie chart and statistics panel should update accordingly.","lastModifiedDate":"2023-11-12"},{"lineNumber":1269,"author":{"gitId":"p-xp"},"content":"* We had to make sure the diagrams and data were sized appropriately at different scales.","lastModifiedDate":"2023-11-12"},{"lineNumber":1270,"author":{"gitId":"keaganpzh"},"content":"* We had to design new classes that encapsulates the logic for the pie chart and statistics panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":1271,"author":{"gitId":"keaganpzh"},"content":"  * E.g. `RsvpStatistics` and `DietaryRequirementStatistics` classes.","lastModifiedDate":"2023-11-12"},{"lineNumber":1272,"author":{"gitId":"keaganpzh"},"content":"* For `DietaryRequirementStatistics`, we had to design an algorithm to capture the different unique dietary requirements and their respective occurrences.","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"tllshan":224,"samuelim01":194,"p-xp":96,"wasjoe1":213,"keaganpzh":228,"-":317}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"   1. Run the `wedlog.address.Main` and try a few commands.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"samuelim01":1,"-":60}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"   e.g. `wedlog.address.commons.StringUtilTest`","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"   e.g. `wedlog.address.storage.StorageManagerTest`","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"   e.g. `wedlog.address.logic.LogicManagerTest`","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"samuelim01":3,"-":38}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"  pageNav: 4","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"# User Guide","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"## Welcome to WedLog","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"_**Wedding planning made simple**_","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"WedLog is a lightweight and powerful wedding planning application designed to help brides and grooms manage important details about their wedding. By simplifying the complexities of wedding planning, WedLog offers an intuitive and stress-free experience guaranteed to streamline the planning process. Tailored for keyboard-based interaction, WedLog ensures optimized usability through efficient input typing.","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"Here\u0027s a quick summary of what WedLog can do for you:","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"* View, categorise and update information about guests and vendors","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"* Filter guests by table number, tags and more","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"* Track key statistics (eg. number of guests RSVP-ed)","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"1. [How to Use This Guide](#1-how-to-use-this-guide)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    1.1 [Notations Used in This Guide](#1-1-notations-used-in-this-guide)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    1.2 [New Users](#1-2-new-users)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    1.3 [Experienced Users](#1-3-experienced-users)","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"2. [Getting Started](#2-getting-started)","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"3. [Understanding the WedLog Interface](#3-understanding-the-wedlog-interface)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    3.1. [User Input and Feedback](#3-1-user-input-and-feedback)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 3.1.1. [Command box](#3-1-1-command-box)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 3.1.2. [Result display](#3-1-2-result-display)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    3.2. [Lists](#3-2-lists)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 3.2.1. [Guest list](#3-2-1-guest-list)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 3.2.2. [Vendor list](#3-2-2-vendor-list)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"    3.3. [Quick View Panel](#3-3-quick-view-panel)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 3.3.1. [RSVP Status panel](#3-3-1-rsvp-status-panel)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 3.3.2. [Dietary Requirements panel](#3-3-2-dietary-requirements-panel)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"4. [WedLog Tutorial](#4-wedlog-tutorial)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    4.1. [Clearing guests and vendors](#4-1-clearing-guests-and-vendors)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    4.2. [Adding a guest](#4-2-adding-a-guest)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    4.3. [Editing a guest](#4-3-editing-a-guest)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    4.4. [Filtering guests](#4-4-filtering-guests)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    4.5. [What\u0027s next?](#4-5-what-s-next)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"5. [Features](#5-features)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    5.1. [Add Command](#5-1-add-command)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.1.1. [Adding a guest: `guest add`](#5-1-1-adding-a-guest-guest-add)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.1.2. [Adding a vendor: `vendor add`](#5-1-2-adding-a-vendor-vendor-add)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    5.2. [Delete Command](#5-2-delete-command)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.2.1. [Deleting a guest: `guest delete`](#5-2-1-deleting-a-guest-guest-delete)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.2.2. [Deleting a vendor: `vendor delete`](#5-2-2-deleting-a-vendor-vendor-delete)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    5.3. [Edit Command](#5-3-edit-command)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.3.1. [Editing a guest: `guest edit`](#5-3-1-editing-a-guest-guest-edit)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.3.2. [Editing a vendor: `vendor edit`](#5-3-2-editing-a-vendor-vendor-edit)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"    5.4. [List Command](#5-4-list-command)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.4.1. [Viewing all guests: `guest list`](#5-4-1-viewing-all-guests-guest-list)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.4.2. [Viewing all vendors: `vendor list`](#5-4-2-viewing-all-vendors-vendor-list)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"    5.5. [Filter Command](#5-5-filter-command)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.5.1. [Filtering guests: `guest filter`](#5-5-1-filtering-guests-guest-filter)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.5.2. [Filtering vendor: `vendor filter`](#5-5-2-filtering-vendors-vendor-filter)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    5.6. [General Commands](#5-6-general-commands)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.6.1. [Viewing help: `help`](#5-6-1-viewing-help-help)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.6.2. [Undoing last action: `undo`](#5-6-2-undoing-last-action-undo)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.6.3. [Redoing last action: `redo`](#5-6-3-redoing-last-action-redo)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.6.4. [Clearing guests and vendors: `clear`](#5-6-4-clearing-guests-and-vendors-clear)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    \u0026emsp; 5.6.5. [Exiting the program: `exit`](#5-6-5-exiting-the-program-exit)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"6. [FAQ](#6-faq)","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"7. [Known Issues](#7-known-issues)","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"8. [Future Implementations](#8-future-implementations)","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"9. [Command Summary](#9-command-summary)\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"10. [Appendix: Acceptable values for parameters](#10-appendix-acceptable-values-for-parameters)","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"## 1. How to Use This Guide","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"### 1.1 Notations Used in This Guide","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"Coloured boxes are used throughout this guide to provide additional information for your reference.","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"These are details about the parameters that are included for your convenience.","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"These are useful tips that you should take note of when using this command/feature.","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"These are alerts which you should take note of when using this command/feature.","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"### 1.2 New Users","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"If you are new here, welcome to WedLog!","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"Before you embark on your wedding planning journey, check out our [getting started guide](#2-getting-started) for a step-by-step guide to download WedLog.","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"Once you have set up WedLog on your computer, proceed to the [Understanding the WedLog Interface](#3-understanding-the-wedlog-interface) section for a quick tour of the WedLog interface.","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"Finally, head over to our [WedLog tutorial](#4-wedlog-tutorial) to take your first steps to plan your wedding.","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"### 1.3 Experienced Users","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"If you have some experience with WedLog, welcome back! ","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"For a quick overview of WedLog\u0027s commands, jump straight to our [command summary](#9-command-summary).","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"If you would like a detailed look into each of the features WedLog has to offer, visit the [features](#5-features) section of this guide.","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"## 2. Getting Started","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"2. Download the latest `wedlog.jar` from [here](https://github.com/AY2324S1-CS2103T-F11-2/tp/releases).","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your WedLog.","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar wedlog.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"   ","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"5. A window similar to the one below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"Once you have set up WedLog on your computer, take a quick tour of the WedLog interface in the next section.","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"## 3. Understanding the WedLog Interface","lastModifiedDate":"2023-11-12"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"In this section, we give a comprehensive breakdown of the WedLog interface, offering insights into its intuitive design and functionality. Explore the components below to gain a comprehensive understanding of how WedLog simplifies wedding planning.","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"![ui-overview.png](images%2Funderstanding-interface%2Fui-overview.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"### 3.1. User Input and Feedback","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"WedLog is optimised for keyboard-based interaction to enhance the efficiency of your inputs while providing a seamless and responsive experience. This two-way interaction, facilitated by the command box and result display, forms a cohesive and user-friendly input/output system within the WedLog interface.","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"![input-output.png](images%2Funderstanding-interface%2Finput-output.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"#### 3.1.1. Command box","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"tllshan"},"content":"The command box acts as the gateway for you to interact with WedLog, allowing you to seamlessly navigate and execute various functions. Simply type a command in the command box and press `Enter` to execute it.","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"tllshan"},"content":"#### 3.1.2. Result display","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"Complementing the command box is the result display, where WedLog presents relevant responses based on the executed commands. When a command is successfully executed, a success message will be displayed. When an invalid command is entered, an error message will be displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"tllshan"},"content":"### 3.2. Lists","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"tllshan"},"content":"WedLog simplifies the management of person-based information for your wedding by offering dedicated sections for both guests and vendors. ","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"tllshan"},"content":"At the top of each list, you\u0027ll find a clear indication of the number of entries for the respective category. This real-time count ensures you stay informed about the current size of your guest and vendor lists.","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"tllshan"},"content":"To navigate through your extensive lists, a user-friendly scroll bar is provided.","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"tllshan"},"content":"![lists.png](images%2Funderstanding-interface%2Flists.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"tllshan"},"content":"#### 3.2.1. Guest list","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"tllshan"},"content":"The guest list allows you to meticulously manage and track all information related to your guests. ","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"tllshan"},"content":"![guest-card.png](images%2Funderstanding-interface%2Fguest-card.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"tllshan"},"content":"Individualized guest cards present comprehensive details, including tags, dietary requirements, RSVP status, phone numbers, addresses, emails, and assigned table numbers. This organized representation ensures that each guest\u0027s information is easily accessible and manageable.","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"tllshan"},"content":"#### 3.2.2. Vendor list","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"tllshan"},"content":"Similar to the guest list, the vendor list serves as a dedicated space for managing the vendors you are liaising with. ","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"tllshan"},"content":"![vendor-card.png](images%2Funderstanding-interface%2Fvendor-card.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"tllshan"},"content":"Vendor cards encapsulate key information such as tags, phone numbers, addresses, and emails, providing you with a comprehensive snapshot of each vendor\u0027s essential details.","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":217,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":218,"author":{"gitId":"tllshan"},"content":"### 3.3. Quick View Panel","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":220,"author":{"gitId":"tllshan"},"content":"The Quick View panel allows you to see general details of your guests at a glance. It is located on the left side of the window.","lastModifiedDate":"2023-11-12"},{"lineNumber":221,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":222,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/understanding-interface/quick-view-panel.png\" alt\u003d\"WedLog\u0027s Quick View panel\" height\u003d\"500\"\u003e \u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":224,"author":{"gitId":"tllshan"},"content":"The Quick View panel consists of 2 sections: the RSVP Status panel and the Dietary Requirements panel.","lastModifiedDate":"2023-11-12"},{"lineNumber":225,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":226,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":227,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":228,"author":{"gitId":"tllshan"},"content":"#### 3.3.1. RSVP Status panel","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":230,"author":{"gitId":"tllshan"},"content":"The RSVP Status panel is designed to help you keep track of the proportion of RSVP statuses of your guests. The data is","lastModifiedDate":"2023-11-12"},{"lineNumber":231,"author":{"gitId":"tllshan"},"content":"represented using a pie chart, with labels indicating the number of guests with each RSVP status. The pie chart is updated automatically","lastModifiedDate":"2023-11-12"},{"lineNumber":232,"author":{"gitId":"tllshan"},"content":"whenever you add, delete or edit a guest.","lastModifiedDate":"2023-11-12"},{"lineNumber":233,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":234,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/understanding-interface/rsvp-status-panel.png\" alt\u003d\"RSVP Status panel\"\u003e \u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":236,"author":{"gitId":"tllshan"},"content":"The pie chart slices are colour-coded as follows:","lastModifiedDate":"2023-11-12"},{"lineNumber":237,"author":{"gitId":"tllshan"},"content":"- `Yes`: Green","lastModifiedDate":"2023-11-12"},{"lineNumber":238,"author":{"gitId":"tllshan"},"content":"- `No`: Red","lastModifiedDate":"2023-11-12"},{"lineNumber":239,"author":{"gitId":"tllshan"},"content":"- `Unknown`: Orange","lastModifiedDate":"2023-11-12"},{"lineNumber":240,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":241,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":243,"author":{"gitId":"tllshan"},"content":"#### 3.3.2. Dietary Requirements panel","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":245,"author":{"gitId":"tllshan"},"content":"The Dietary Requirements panel is designed to help you keep track of your guests\u0027 dietary requirements. Whenever you specify","lastModifiedDate":"2023-11-12"},{"lineNumber":246,"author":{"gitId":"tllshan"},"content":"a guest to have certain dietary requirements, the requirements will be added to the panel alongside the total number","lastModifiedDate":"2023-11-12"},{"lineNumber":247,"author":{"gitId":"tllshan"},"content":"of guests with the same requirements.","lastModifiedDate":"2023-11-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":249,"author":{"gitId":"tllshan"},"content":"This panel consolidates your guests\u0027 dietary requirements to be displayed together,","lastModifiedDate":"2023-11-12"},{"lineNumber":250,"author":{"gitId":"tllshan"},"content":"for you to consider when planning the menu for your wedding. The panel is also updated automatically whenever you add, delete or edit a guest.","lastModifiedDate":"2023-11-12"},{"lineNumber":251,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":252,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/understanding-interface/dietary-requirements-panel.png\" alt\u003d\"Dietary Requirements panel\"\u003e \u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":254,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"tllshan"},"content":"- **The panel only displays dietary requirements for guests with RSVP status \"Yes\".** This is because guests with RSVP status \"No\" or \"Unknown\" are not expected to attend the wedding, and hence do not need to have their dietary requirements taken into account.","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"tllshan"},"content":"- If a guest has no specified dietary requirements, we will consider the guest to have \"regular\" dietary requirements.","lastModifiedDate":"2023-11-12"},{"lineNumber":258,"author":{"gitId":"tllshan"},"content":"- Dietary requirements are displayed in descending order of the number of guests with the same requirements.","lastModifiedDate":"2023-11-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"tllshan"},"content":"To kick-start your wedding planning journey with WedLog, explore the tutorial in the next section.","lastModifiedDate":"2023-11-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":264,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":266,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":269,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":270,"author":{"gitId":"tllshan"},"content":"## 4. WedLog Tutorial","lastModifiedDate":"2023-11-12"},{"lineNumber":271,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":272,"author":{"gitId":"tllshan"},"content":"Welcome to the WedLog Tutorial! In this section, we\u0027ll guide you through the basic commands of WedLog to get you started on your wedding planning journey.","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":274,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":275,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":276,"author":{"gitId":"tllshan"},"content":"### 4.1. Clearing guests and vendors","lastModifiedDate":"2023-11-13"},{"lineNumber":277,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"tllshan"},"content":"When you first open WedLog, the app contains some sample data. Let\u0027s reset the app using the `clear` command. ","lastModifiedDate":"2023-11-13"},{"lineNumber":279,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":280,"author":{"gitId":"tllshan"},"content":"Type `clear` into the command box and press the `Enter` key. This will delete all the data from both the guest and vendor lists, so that you have a clean slate to work with.","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":282,"author":{"gitId":"tllshan"},"content":"Your app should now look like this:","lastModifiedDate":"2023-11-13"},{"lineNumber":283,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":284,"author":{"gitId":"tllshan"},"content":"![clear.png](images%2Ftutorial%2Fclear.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":285,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":286,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":287,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":288,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":289,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":290,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":291,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":292,"author":{"gitId":"tllshan"},"content":"### 4.2. Adding a guest","lastModifiedDate":"2023-11-13"},{"lineNumber":293,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":294,"author":{"gitId":"tllshan"},"content":"Let\u0027s add your first guest to WedLog with the `guest add` command. Every guest must have a name, and you have the option to include additional details such as a phone number, address, email, and table number. Furthermore, a guest can be associated with multiple tags.","lastModifiedDate":"2023-11-13"},{"lineNumber":295,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":296,"author":{"gitId":"tllshan"},"content":"To add a guest named `John Doe` with the details provided, type the following command and press `Enter`:","lastModifiedDate":"2023-11-13"},{"lineNumber":297,"author":{"gitId":"tllshan"},"content":" ","lastModifiedDate":"2023-11-13"},{"lineNumber":298,"author":{"gitId":"tllshan"},"content":"`guest add n/John Doe p/91234567 a/15 Sunville Road e/john@example.com tn/1 t/university t/friends`","lastModifiedDate":"2023-11-13"},{"lineNumber":299,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":300,"author":{"gitId":"tllshan"},"content":"Congratulations! You have successfully added your first guest to your guest list. Your app should now look like this:","lastModifiedDate":"2023-11-13"},{"lineNumber":301,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":302,"author":{"gitId":"tllshan"},"content":"![guest-add.png](images%2Ftutorial%2Fguest-add.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":303,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":304,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"tllshan"},"content":"Notice how the default RSVP status for a guest is \u0027Unknown\u0027. We\u0027ll learn how to update this in the next section.","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":308,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":309,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":310,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":311,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":312,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":313,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":314,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":316,"author":{"gitId":"tllshan"},"content":"### 4.3. Editing a guest","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":318,"author":{"gitId":"tllshan"},"content":"Let\u0027s make adjustments to the details of a guest with the `guest edit` command. Suppose John Doe has responded to your invite and confirms that he will be attending your wedding. To reflect this, we\u0027ll update the `RSVP status` for John Doe to `Yes`.","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":320,"author":{"gitId":"tllshan"},"content":"Type the following command and press `Enter`:","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":322,"author":{"gitId":"tllshan"},"content":"`guest edit 1 r/yes`","lastModifiedDate":"2023-11-13"},{"lineNumber":323,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":324,"author":{"gitId":"tllshan"},"content":"Your app should now look like this:","lastModifiedDate":"2023-11-13"},{"lineNumber":325,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":326,"author":{"gitId":"tllshan"},"content":"![guest-edit.png](images%2Ftutorial%2Fguest-edit.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":327,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":328,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":329,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":330,"author":{"gitId":"tllshan"},"content":"Notice that when a guest confirms their attendance at your wedding, their dietary requirement is automatically included in the dietary requirements panel. In the case of John Doe, since we have not specified any dietary requirements for him, his meal is recorded as the default `regular`.","lastModifiedDate":"2023-11-13"},{"lineNumber":331,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":332,"author":{"gitId":"tllshan"},"content":"This ensures that the tallies on the dietary requirements panel reflect only guests who are confirmed to be attending your wedding.","lastModifiedDate":"2023-11-13"},{"lineNumber":333,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":334,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":335,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":336,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":337,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":338,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":339,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":340,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":341,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":342,"author":{"gitId":"tllshan"},"content":"### 4.4. Filtering guests","lastModifiedDate":"2023-11-13"},{"lineNumber":343,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":344,"author":{"gitId":"tllshan"},"content":"Let\u0027s narrow down the guest list based on specific criteria using the `guest filter` command.","lastModifiedDate":"2023-11-13"},{"lineNumber":345,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":346,"author":{"gitId":"tllshan"},"content":"Before we can begin filtering our guests, we must add more guests to the list. Enter each of the following lines one-by-one into WedLog. Each line will add a new guest to the guest list.","lastModifiedDate":"2023-11-13"},{"lineNumber":347,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":348,"author":{"gitId":"keaganpzh"},"content":"`guest add n/Mary Fowl t/friends` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":349,"author":{"gitId":"keaganpzh"},"content":"`guest add n/Bob White` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":350,"author":{"gitId":"keaganpzh"},"content":"`guest add t/friends t/university n/Lily Mae` \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":351,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":352,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":354,"author":{"gitId":"tllshan"},"content":"Notice that parameters can be placed in any order. (e.g. Lily Mae\u0027s name is specified after the tags)","lastModifiedDate":"2023-11-13"},{"lineNumber":355,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":356,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":357,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":358,"author":{"gitId":"tllshan"},"content":"Your app should now look like this:","lastModifiedDate":"2023-11-13"},{"lineNumber":359,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":360,"author":{"gitId":"tllshan"},"content":"![guest-filter-0.png](images%2Ftutorial%2Fguest-filter-0.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":361,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":362,"author":{"gitId":"tllshan"},"content":"Now that we have a few guests on our list, let\u0027s begin filtering. ","lastModifiedDate":"2023-11-13"},{"lineNumber":363,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":364,"author":{"gitId":"tllshan"},"content":"First, let\u0027s filter for all guests who are friends. The following command will result in a list that contains only guests with the `TAG` `friends`.","lastModifiedDate":"2023-11-13"},{"lineNumber":365,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":366,"author":{"gitId":"tllshan"},"content":"`guest filter t/friends`","lastModifiedDate":"2023-11-13"},{"lineNumber":367,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":368,"author":{"gitId":"tllshan"},"content":"Your guest list should now look like this:","lastModifiedDate":"2023-11-13"},{"lineNumber":369,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":370,"author":{"gitId":"tllshan"},"content":"![guest-filter-1.png](images%2Ftutorial%2Fguest-filter-1.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":371,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":372,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":373,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":374,"author":{"gitId":"tllshan"},"content":"Notice that the number of guests stated at the top of the guest list has changed from 4 to 3, since only 3 guests are displayed in the result of the latest filter command.","lastModifiedDate":"2023-11-13"},{"lineNumber":375,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":377,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":378,"author":{"gitId":"tllshan"},"content":"Next, let\u0027s narrow down our search to filter for all guests who are friends from university. The following command will result in a list that contains only guests with the `TAG` `friends` and `university`.","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":380,"author":{"gitId":"tllshan"},"content":"`guest filter t/friends t/university`","lastModifiedDate":"2023-11-13"},{"lineNumber":381,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":382,"author":{"gitId":"tllshan"},"content":"Your guest list should now look like this:","lastModifiedDate":"2023-11-13"},{"lineNumber":383,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":384,"author":{"gitId":"tllshan"},"content":"![guest-filter-2.png](images%2Ftutorial%2Fguest-filter-2.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":385,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":386,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":387,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":388,"author":{"gitId":"tllshan"},"content":"Notice that Mary Fowl is no longer included on this list, since she does not have the `university` tag.","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":390,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":392,"author":{"gitId":"tllshan"},"content":"Finally, let\u0027s filter for all guests who have not been assigned to any table yet. We can use the empty `tn/` label to look for guests without any table numbers associated to them.","lastModifiedDate":"2023-11-13"},{"lineNumber":393,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":394,"author":{"gitId":"tllshan"},"content":"`guest filter tn/`","lastModifiedDate":"2023-11-13"},{"lineNumber":395,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":396,"author":{"gitId":"tllshan"},"content":"Your guest list should now look like this:","lastModifiedDate":"2023-11-13"},{"lineNumber":397,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":398,"author":{"gitId":"tllshan"},"content":"![guest-filter-3.png](images%2Ftutorial%2Fguest-filter-3.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":399,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":400,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":401,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"tllshan"},"content":"Notice that John Doe is not included on this list, since we have previously assigned him to table 1 when we first added him to the guest list.","lastModifiedDate":"2023-11-13"},{"lineNumber":403,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":405,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":406,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":407,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":408,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":410,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":411,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"tllshan"},"content":"### 4.5. What\u0027s next?","lastModifiedDate":"2023-11-13"},{"lineNumber":413,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":414,"author":{"gitId":"tllshan"},"content":"Congratulations! You\u0027ve completed the essential steps of the WedLog Tutorial, setting the stage for seamless and organized wedding planning. Armed with the knowledge of adding guests, editing details, and filtering, you\u0027re well-equipped to make the most of WedLog. ","lastModifiedDate":"2023-11-13"},{"lineNumber":415,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":416,"author":{"gitId":"tllshan"},"content":"You can manage your vendors with the same set of commands as guests by replacing the `guest` keyword with `vendor`. The only distinction is that vendors require fewer fields for quick and efficient management.","lastModifiedDate":"2023-11-13"},{"lineNumber":417,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":418,"author":{"gitId":"tllshan"},"content":"Feel free to explore each command in detail in the [Features](#5-features) section of this guide. For a quick recap on the commands we\u0027ve just learnt, check out the [command summary](#9-command-summary).","lastModifiedDate":"2023-11-13"},{"lineNumber":419,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":420,"author":{"gitId":"tllshan"},"content":"Happy planning, and may your wedding be everything you\u0027ve dreamed of!","lastModifiedDate":"2023-11-13"},{"lineNumber":421,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":422,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":423,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":424,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":425,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":426,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":427,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":428,"author":{"gitId":"tllshan"},"content":"## 5. Features","lastModifiedDate":"2023-11-12"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"tllshan"},"content":"### Understanding the parameter format","lastModifiedDate":"2023-11-13"},{"lineNumber":431,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"tllshan"},"content":"WedLog employs a standardized parameter format to ensure consistency and accuracy when inputting information. Parameters include names, phone numbers, and other guest or vendor details you wish to track.","lastModifiedDate":"2023-11-13"},{"lineNumber":433,"author":{"gitId":"tllshan"},"content":"Let\u0027s breakdown an example parameter `x/ABC` below.","lastModifiedDate":"2023-11-13"},{"lineNumber":434,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":435,"author":{"gitId":"tllshan"},"content":"| Guideline                                                                                                  | Example                                                                                             |","lastModifiedDate":"2023-11-13"},{"lineNumber":436,"author":{"gitId":"tllshan"},"content":"|------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":437,"author":{"gitId":"tllshan"},"content":"| Each parameter takes the form `x/ABC`, where `x/` represents the label and `ABC` is the placeholder value. | `n/NAME` is the name parameter, where `n/` is the label and `NAME` is the placeholder value.        |","lastModifiedDate":"2023-11-13"},{"lineNumber":438,"author":{"gitId":"tllshan"},"content":"| Labels should be used in the exact format described in this guide.                                         | `n/` must be typed as `n/`. Variations such as `N/` or `name/` are invalid.                         |","lastModifiedDate":"2023-11-13"},{"lineNumber":439,"author":{"gitId":"tllshan"},"content":"| Placeholder values can be replaced with your own information.                                              | In `guest add n/NAME`, `NAME` is a placeholder which can be replaced, as in `guest add n/Gina Gan`. |","lastModifiedDate":"2023-11-13"},{"lineNumber":440,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":441,"author":{"gitId":"tllshan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":442,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":443,"author":{"gitId":"tllshan"},"content":"### Understanding the command format","lastModifiedDate":"2023-11-13"},{"lineNumber":444,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":445,"author":{"gitId":"tllshan"},"content":"Mastering the command format in WedLog is essential for efficient interaction. WedLog\u0027s commands allow for flexibility in parameter order and support optional and repeatable elements.","lastModifiedDate":"2023-11-13"},{"lineNumber":446,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"tllshan"},"content":"This is the command format for the `guest add` command:","lastModifiedDate":"2023-11-13"},{"lineNumber":448,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"tllshan"},"content":"`guest add n/NAME [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [tn/TABLE_NUMBER] [d/DIETARY_REQUIREMENT]… [t/TAG]…`","lastModifiedDate":"2023-11-13"},{"lineNumber":450,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":451,"author":{"gitId":"tllshan"},"content":"Let\u0027s take a closer look at the command guidelines in the table below:","lastModifiedDate":"2023-11-13"},{"lineNumber":452,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":453,"author":{"gitId":"tllshan"},"content":"| Guideline                                                                                                          | Example                                                                                       |","lastModifiedDate":"2023-11-13"},{"lineNumber":454,"author":{"gitId":"tllshan"},"content":"|--------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":455,"author":{"gitId":"tllshan"},"content":"| Parameters in square brackets are optional.                                                                        | `n/NAME [t/TAG]` can be used as `n/Gina Gan t/friend` or as `n/Gina Gan`.                     |","lastModifiedDate":"2023-11-13"},{"lineNumber":456,"author":{"gitId":"tllshan"},"content":"| Parameters with `…` after them can be used multiple times.                                                         | `[t/TAG]…` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family`.                |","lastModifiedDate":"2023-11-13"},{"lineNumber":457,"author":{"gitId":"tllshan"},"content":"| Parameters can be in any order.                                                                                    | If the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable.               |","lastModifiedDate":"2023-11-13"},{"lineNumber":458,"author":{"gitId":"tllshan"},"content":"| Extra input for commands that do not take in parameters (such as `guest list`, `undo` and `exit`) will be ignored. | If you input `help 123`, it will be interpreted as `help`.                                    |","lastModifiedDate":"2023-11-13"},{"lineNumber":459,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":460,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":461,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":462,"author":{"gitId":"tllshan"},"content":"If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-11-13"},{"lineNumber":463,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":464,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":465,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":466,"author":{"gitId":"p-xp"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":467,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":468,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-12"},{"lineNumber":469,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":470,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-18"},{"lineNumber":471,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":472,"author":{"gitId":"tllshan"},"content":"### 5.1 Add Command","lastModifiedDate":"2023-11-12"},{"lineNumber":473,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":474,"author":{"gitId":"tllshan"},"content":"#### 5.1.1. Adding a guest: `guest add`","lastModifiedDate":"2023-11-12"},{"lineNumber":475,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":476,"author":{"gitId":"keaganpzh"},"content":"Allows you to add a guest to WedLog, keeping track of important details such as their RSVP status, dietary requirements, and more.","lastModifiedDate":"2023-11-12"},{"lineNumber":477,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":478,"author":{"gitId":"wasjoe1"},"content":"Format: `guest add n/NAME [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [tn/TABLE_NUMBER] [d/DIETARY_REQUIREMENT]… [t/TAG]…`","lastModifiedDate":"2023-11-03"},{"lineNumber":479,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":480,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":481,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":482,"author":{"gitId":"tllshan"},"content":"Refer to the [Appendix](#10-appendix-acceptable-values-for-parameters) for details on the acceptable values for the parameters.","lastModifiedDate":"2023-11-12"},{"lineNumber":483,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":484,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":485,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":486,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":487,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":488,"author":{"gitId":"tllshan"},"content":"A guest cannot share the same name as another guest.","lastModifiedDate":"2023-11-13"},{"lineNumber":489,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":490,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":491,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":492,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":493,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":494,"author":{"gitId":"tllshan"},"content":"A guest and vendor can share the same name (e.g. Even if there is a vendor named `Gia`, you are also able to add a guest named `Gia`)","lastModifiedDate":"2023-11-13"},{"lineNumber":495,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":496,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":497,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":498,"author":{"gitId":"tllshan"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":499,"author":{"gitId":"p-xp"},"content":"- `guest add n/Gina p/91234567 a/Blk 123 r/no`: Adds a guest named `Gina` with phone number `91234567`, address `Blk 123`, ","lastModifiedDate":"2023-10-31"},{"lineNumber":500,"author":{"gitId":"p-xp"},"content":"and RSVP status of `No`.","lastModifiedDate":"2023-10-31"},{"lineNumber":501,"author":{"gitId":"p-xp"},"content":"- `guest add n/Gerald d/ r/`: Adds a guest named `Gerald` with no dietary requirements and unknown RSVP status.","lastModifiedDate":"2023-10-31"},{"lineNumber":502,"author":{"gitId":"p-xp"},"content":"- `guest add n/Georgiana Tan t/family t/bridesmaid`: Adds a guest named `Georgiana` with two tags, `family` and `bridesmaid`.","lastModifiedDate":"2023-10-31"},{"lineNumber":503,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":504,"author":{"gitId":"tllshan"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-06"},{"lineNumber":505,"author":{"gitId":"tllshan"},"content":"- Adds the guest.","lastModifiedDate":"2023-10-25"},{"lineNumber":506,"author":{"gitId":"tllshan"},"content":"- Displays a message showing the added guest.","lastModifiedDate":"2023-10-06"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":508,"author":{"gitId":"tllshan"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-06"},{"lineNumber":509,"author":{"gitId":"tllshan"},"content":"- Not providing the `NAME` parameter: Displays in the error message “Invalid command format!” followed by instruction on `guest add` usage.","lastModifiedDate":"2023-11-13"},{"lineNumber":510,"author":{"gitId":"tllshan"},"content":"- Adding a new guest with the same `NAME` as an existing guest: Displays the error message \"This guest already exists in WedLog.\" ","lastModifiedDate":"2023-11-13"},{"lineNumber":511,"author":{"gitId":"tllshan"},"content":"- Providing invalid values for parameters with input restrictions will also trigger error messages.","lastModifiedDate":"2023-11-12"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":513,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-06"},{"lineNumber":514,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":515,"author":{"gitId":"tllshan"},"content":"#### 5.1.2. Adding a vendor: `vendor add`","lastModifiedDate":"2023-11-12"},{"lineNumber":516,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":517,"author":{"gitId":"keaganpzh"},"content":"Allows you to add a vendor to WedLog, so that you can streamline coordination with the people involved in making your dream wedding a reality.","lastModifiedDate":"2023-11-12"},{"lineNumber":518,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":519,"author":{"gitId":"p-xp"},"content":"Format: `vendor add n/NAME [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`","lastModifiedDate":"2023-10-31"},{"lineNumber":520,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":521,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":522,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":523,"author":{"gitId":"tllshan"},"content":"Refer to the [Appendix](#10-appendix-acceptable-values-for-parameters) for details on the acceptable values for the parameters.","lastModifiedDate":"2023-11-12"},{"lineNumber":524,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":525,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":526,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":527,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":529,"author":{"gitId":"tllshan"},"content":"A vendor cannot share the same name as another vendor.","lastModifiedDate":"2023-11-13"},{"lineNumber":530,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":531,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":533,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":535,"author":{"gitId":"tllshan"},"content":"A person can be recorded as both a guest and vendor. (e.g. Even if there is a guest named `Gia`, you are also able to add a vendor named `Gia`)","lastModifiedDate":"2023-11-13"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":537,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":539,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":540,"author":{"gitId":"p-xp"},"content":"- `vendor add n/Valerie Tan p/91234567 a/12 Buona Vista St`: Adds a vendor named `Valerie Tan` with phone number `91234567`","lastModifiedDate":"2023-11-03"},{"lineNumber":541,"author":{"gitId":"p-xp"},"content":"and address `12 Buona Vista St`.","lastModifiedDate":"2023-11-03"},{"lineNumber":542,"author":{"gitId":"p-xp"},"content":"- `vendor add n/Victor Wong e/victorwflowers@email.com t/florist t/photographer`: Adds a vendor named \"Victor Wong\" with","lastModifiedDate":"2023-10-31"},{"lineNumber":543,"author":{"gitId":"p-xp"},"content":"the email `victorwflowers@email.com` and the tags `florist` and `photographer`. ","lastModifiedDate":"2023-11-03"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":545,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-05"},{"lineNumber":546,"author":{"gitId":"tllshan"},"content":"- Adds a vendor to the vendor list.","lastModifiedDate":"2023-10-25"},{"lineNumber":547,"author":{"gitId":"tllshan"},"content":"- Displays the vendor that has been added.","lastModifiedDate":"2023-10-25"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":549,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":550,"author":{"gitId":"tllshan"},"content":"- Not providing the `NAME` parameter: Displays in the error message “Invalid command format!” followed by instruction on `vendor add` usage.","lastModifiedDate":"2023-11-13"},{"lineNumber":551,"author":{"gitId":"tllshan"},"content":"- Adding a new vendor with the same `NAME` as an existing vendor: Displays in the error message \"This vendor already exists in WedLog.\"","lastModifiedDate":"2023-11-13"},{"lineNumber":552,"author":{"gitId":"tllshan"},"content":"- Providing invalid values for parameters with input restrictions will also trigger error messages.","lastModifiedDate":"2023-11-12"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":554,"author":{"gitId":"p-xp"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":555,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":556,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-12"},{"lineNumber":557,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":558,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-22"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":560,"author":{"gitId":"tllshan"},"content":"### 5.2. Delete Command","lastModifiedDate":"2023-11-12"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":562,"author":{"gitId":"tllshan"},"content":"#### 5.2.1. Deleting a guest: `guest delete`","lastModifiedDate":"2023-11-12"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":564,"author":{"gitId":"keaganpzh"},"content":"Allows you to delete a guest from WedLog, so that you can tackle last-minute changes and refine your guest list with ease.","lastModifiedDate":"2023-11-12"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":566,"author":{"gitId":"samuelim01"},"content":"Format: `guest delete INDEX`","lastModifiedDate":"2023-10-31"},{"lineNumber":567,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":568,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":569,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":570,"author":{"gitId":"tllshan"},"content":"`INDEX` must be a positive integer. (e.g. 1, 2, 3…)","lastModifiedDate":"2023-11-13"},{"lineNumber":571,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":572,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":574,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-22"},{"lineNumber":575,"author":{"gitId":"tllshan"},"content":"- `guest delete 2` deletes the 2nd guest on the guest list.","lastModifiedDate":"2023-10-25"},{"lineNumber":576,"author":{"gitId":"p-xp"},"content":"- `guest filter n/Gina` followed by `guest delete 1` deletes the 1st guest in the results of the `filter` command.","lastModifiedDate":"2023-10-31"},{"lineNumber":577,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":578,"author":{"gitId":"tllshan"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-22"},{"lineNumber":579,"author":{"gitId":"tllshan"},"content":"- Deletes the guest at the specified `INDEX`.","lastModifiedDate":"2023-10-25"},{"lineNumber":580,"author":{"gitId":"tllshan"},"content":"- Displays a message telling user which guest has been deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":581,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":582,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":583,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":584,"author":{"gitId":"tllshan"},"content":"`INDEX` refers to the index number of the guest currently displayed on the guest list.","lastModifiedDate":"2023-11-13"},{"lineNumber":585,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":586,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":587,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":588,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":589,"author":{"gitId":"wasjoe1"},"content":"- Number out of index range: Displays error message \"The guest index provided is invalid.\"","lastModifiedDate":"2023-11-12"},{"lineNumber":590,"author":{"gitId":"wasjoe1"},"content":"- Input for index not a number, or no number: Displays error message \"Invalid command format!\" followed by instruction on guest delete usage.","lastModifiedDate":"2023-11-09"},{"lineNumber":591,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":592,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-06"},{"lineNumber":593,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":594,"author":{"gitId":"tllshan"},"content":"#### 5.2.2. Deleting a vendor: `vendor delete`","lastModifiedDate":"2023-11-12"},{"lineNumber":595,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":596,"author":{"gitId":"keaganpzh"},"content":"Allows you to delete a vendor from WedLog, so that you can tailor your dream team to match your evolving wedding vision.","lastModifiedDate":"2023-11-12"},{"lineNumber":597,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":598,"author":{"gitId":"samuelim01"},"content":"Format: `vendor delete INDEX`","lastModifiedDate":"2023-10-31"},{"lineNumber":599,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":600,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":601,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":602,"author":{"gitId":"tllshan"},"content":"`INDEX` must be a positive integer. (e.g. 1, 2, 3…)","lastModifiedDate":"2023-11-13"},{"lineNumber":603,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":604,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":605,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":606,"author":{"gitId":"samuelim01"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":607,"author":{"gitId":"tllshan"},"content":"- `vendor list` followed by `vendor delete 2` deletes the 2nd vendor on the vendor list.","lastModifiedDate":"2023-10-25"},{"lineNumber":608,"author":{"gitId":"p-xp"},"content":"- `vendor filter n/Valencia` followed by `vendor delete 1` deletes the 1st vendor in the results of the `filter` command.","lastModifiedDate":"2023-10-31"},{"lineNumber":609,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":610,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-05"},{"lineNumber":611,"author":{"gitId":"tllshan"},"content":"- Deletes the vendor at the specified `INDEX`.","lastModifiedDate":"2023-10-25"},{"lineNumber":612,"author":{"gitId":"tllshan"},"content":"- Displays a message telling user which vendor has been deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":613,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":614,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":615,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":616,"author":{"gitId":"tllshan"},"content":"`INDEX` refers to the index number of the guest currently displayed on the guest list.","lastModifiedDate":"2023-11-13"},{"lineNumber":617,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":618,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":619,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":620,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":621,"author":{"gitId":"wasjoe1"},"content":"- Number out of index range: Displays error message \"The vendor index provided is invalid.\"","lastModifiedDate":"2023-11-12"},{"lineNumber":622,"author":{"gitId":"wasjoe1"},"content":"- Input for index not a number, or no number: Displays error message \"Invalid command format!\" followed by instruction on vendor delete usage.","lastModifiedDate":"2023-11-09"},{"lineNumber":623,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":624,"author":{"gitId":"p-xp"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":625,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":626,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-12"},{"lineNumber":627,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":628,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-21"},{"lineNumber":629,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":630,"author":{"gitId":"tllshan"},"content":"### 5.3. Edit Command","lastModifiedDate":"2023-11-12"},{"lineNumber":631,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":632,"author":{"gitId":"tllshan"},"content":"#### 5.3.1. Editing a guest: `guest edit`","lastModifiedDate":"2023-11-12"},{"lineNumber":633,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":634,"author":{"gitId":"keaganpzh"},"content":"Allows you to edit a guest\u0027s details, so that you can keep track of the latest information about your guests.","lastModifiedDate":"2023-11-12"},{"lineNumber":635,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":636,"author":{"gitId":"p-xp"},"content":"Format: `guest edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [tn/TABLE_NUMBER] [d/DIETARY_REQUIREMENT]… [t/TAG]…`","lastModifiedDate":"2023-10-31"},{"lineNumber":637,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":638,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":639,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":640,"author":{"gitId":"tllshan"},"content":"**Parameter information:**","lastModifiedDate":"2023-11-12"},{"lineNumber":641,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":642,"author":{"gitId":"tllshan"},"content":"* `INDEX` must be a positive integer. (e.g. 1, 2, 3…)","lastModifiedDate":"2023-11-12"},{"lineNumber":643,"author":{"gitId":"tllshan"},"content":"* Specifying an empty parameter (e.g. `p/`) will delete the parameter\u0027s value from the guest.","lastModifiedDate":"2023-11-12"},{"lineNumber":644,"author":{"gitId":"tllshan"},"content":"* At least one parameter must be specified in an edit command.","lastModifiedDate":"2023-11-12"},{"lineNumber":645,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":646,"author":{"gitId":"tllshan"},"content":"Refer to the [Appendix](#10-appendix-acceptable-values-for-parameters) for more details on the acceptable values for the parameters.","lastModifiedDate":"2023-11-12"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":648,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":649,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":650,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":652,"author":{"gitId":"tllshan"},"content":"`INDEX` refers to the index number of the guest currently displayed on the guest list.","lastModifiedDate":"2023-11-13"},{"lineNumber":653,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":654,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":656,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":658,"author":{"gitId":"tllshan"},"content":"If the edited name specified in `n/NAME` corresponds to the name of an existing guest in WedLog, an error message will be displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":659,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":660,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":662,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-31"},{"lineNumber":663,"author":{"gitId":"p-xp"},"content":"- `guest list` followed by `guest edit 2 p/914624435` edits the phone number of the 2nd guest to be `91462435`.","lastModifiedDate":"2023-10-31"},{"lineNumber":664,"author":{"gitId":"p-xp"},"content":"- `guest filter n/Gina` followed by `guest edit 1 n/Ginette` edits the name of the 1st guest in the results of the `filter` command to be `Ginette`.","lastModifiedDate":"2023-10-31"},{"lineNumber":665,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":666,"author":{"gitId":"p-xp"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-31"},{"lineNumber":667,"author":{"gitId":"tllshan"},"content":"- Edits the guest at the specified `INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":668,"author":{"gitId":"tllshan"},"content":"- Displays the guest that has been edited.","lastModifiedDate":"2023-11-12"},{"lineNumber":669,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":670,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":671,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":672,"author":{"gitId":"tllshan"},"content":"* If the previous command was `guest filter KEY_WORDS`, the `INDEX` refers to the index number shown in the filtered guest list.","lastModifiedDate":"2023-11-12"},{"lineNumber":673,"author":{"gitId":"tllshan"},"content":"* Otherwise, the `INDEX` refers to the index number on the unfiltered guest list.","lastModifiedDate":"2023-11-12"},{"lineNumber":674,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":675,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":676,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":677,"author":{"gitId":"p-xp"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-31"},{"lineNumber":678,"author":{"gitId":"wasjoe1"},"content":"(in order of priority)","lastModifiedDate":"2023-11-09"},{"lineNumber":679,"author":{"gitId":"wasjoe1"},"content":"- Index is not a number, or no index provided: Displays error message \"Invalid command format!\" followed by instruction on guest edit usage.","lastModifiedDate":"2023-11-09"},{"lineNumber":680,"author":{"gitId":"wasjoe1"},"content":"- No parameters provided: Displays error message \"At least one field to edit must be provided.\"","lastModifiedDate":"2023-11-12"},{"lineNumber":681,"author":{"gitId":"wasjoe1"},"content":"- Index does not correspond to any guest: Displays error message \"The guest index provided is invalid.\"","lastModifiedDate":"2023-11-12"},{"lineNumber":682,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":683,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-30"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":685,"author":{"gitId":"tllshan"},"content":"#### 5.3.2. Editing a vendor: `vendor edit`","lastModifiedDate":"2023-11-12"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":687,"author":{"gitId":"keaganpzh"},"content":"Allows you to edit a vendor\u0027s details, so that you can keep track of the latest information about your vendors.","lastModifiedDate":"2023-11-12"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":689,"author":{"gitId":"samuelim01"},"content":"Format: `vendor edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`","lastModifiedDate":"2023-10-31"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":691,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":692,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":693,"author":{"gitId":"tllshan"},"content":"**Parameter information:**","lastModifiedDate":"2023-11-12"},{"lineNumber":694,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":695,"author":{"gitId":"tllshan"},"content":"* `INDEX` must be a positive integer. (e.g. 1, 2, 3…)","lastModifiedDate":"2023-11-12"},{"lineNumber":696,"author":{"gitId":"tllshan"},"content":"* Specifying an empty parameter (e.g. `p/`) will delete the parameter\u0027s value from the vendor.","lastModifiedDate":"2023-11-12"},{"lineNumber":697,"author":{"gitId":"tllshan"},"content":"* At least one parameter must be specified in an edit command.","lastModifiedDate":"2023-11-12"},{"lineNumber":698,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":699,"author":{"gitId":"tllshan"},"content":"Refer to the [Appendix](#10-appendix-acceptable-values-for-parameters) for more details on the acceptable values for the parameters.","lastModifiedDate":"2023-11-12"},{"lineNumber":700,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":701,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":702,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":703,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":704,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":705,"author":{"gitId":"tllshan"},"content":"`INDEX` refers to the index number of the guest currently displayed on the guest list.","lastModifiedDate":"2023-11-13"},{"lineNumber":706,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":707,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":708,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":709,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"warning\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":710,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":711,"author":{"gitId":"tllshan"},"content":"If the edited name specified in `n/NAME` corresponds to the name of an existing guest in WedLog, an error message will be displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":712,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":713,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":715,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-21"},{"lineNumber":716,"author":{"gitId":"samuelim01"},"content":"- `vendor list` followed by `vendor edit 2 p/914624435` edits the phone number of the 2nd vendor to be `91462435`.","lastModifiedDate":"2023-10-21"},{"lineNumber":717,"author":{"gitId":"p-xp"},"content":"- `vendor filter n/Valerie` followed by `vendor edit 1 n/Val` edits the name of the 1st vendor in the results of the `filter` command to be `Val`.","lastModifiedDate":"2023-10-31"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":719,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-21"},{"lineNumber":720,"author":{"gitId":"tllshan"},"content":"- Edits the vendor at the specified `INDEX`.","lastModifiedDate":"2023-11-12"},{"lineNumber":721,"author":{"gitId":"tllshan"},"content":"- Displays the vendor that has been edited.","lastModifiedDate":"2023-11-12"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":723,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":725,"author":{"gitId":"tllshan"},"content":"* If the previous command was `vendor filter KEY_WORDS`, the `INDEX` refers to the index number shown in the filtered vendor list.","lastModifiedDate":"2023-11-12"},{"lineNumber":726,"author":{"gitId":"tllshan"},"content":"* Otherwise, the `INDEX` refers to the index number on the unfiltered vendor list.","lastModifiedDate":"2023-11-12"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":728,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":730,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-21"},{"lineNumber":731,"author":{"gitId":"wasjoe1"},"content":"(in order of priority)","lastModifiedDate":"2023-11-09"},{"lineNumber":732,"author":{"gitId":"wasjoe1"},"content":"- Index is not a number, or no index provided: Displays error message \"Invalid command format!\" followed by instruction on vendor edit usage.","lastModifiedDate":"2023-11-09"},{"lineNumber":733,"author":{"gitId":"wasjoe1"},"content":"- No parameters provided: Displays error message \"At least one field to edit must be provided.\"","lastModifiedDate":"2023-11-12"},{"lineNumber":734,"author":{"gitId":"wasjoe1"},"content":"- Index does not correspond to any guest: Displays error message \"The vendor index provided is invalid.\"","lastModifiedDate":"2023-11-12"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":736,"author":{"gitId":"p-xp"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":737,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":738,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-12"},{"lineNumber":739,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":740,"author":{"gitId":"keaganpzh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":741,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":742,"author":{"gitId":"tllshan"},"content":"### 5.4. List Command","lastModifiedDate":"2023-11-12"},{"lineNumber":743,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":744,"author":{"gitId":"tllshan"},"content":"#### 5.4.1. Viewing all guests: `guest list`","lastModifiedDate":"2023-11-12"},{"lineNumber":745,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":746,"author":{"gitId":"keaganpzh"},"content":"Allows you to view all guests in WedLog, so that you can see the big picture that is your entire guest list.","lastModifiedDate":"2023-11-12"},{"lineNumber":747,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":748,"author":{"gitId":"samuelim01"},"content":"Format: `guest list`","lastModifiedDate":"2023-10-31"},{"lineNumber":749,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":750,"author":{"gitId":"keaganpzh"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-05"},{"lineNumber":751,"author":{"gitId":"tllshan"},"content":"- Displays a list of all guest names and their respective indexes. ","lastModifiedDate":"2023-10-25"},{"lineNumber":752,"author":{"gitId":"p-xp"},"content":"    - Example: 1. Gina Tan, 2. Gabriel Lim","lastModifiedDate":"2023-11-03"},{"lineNumber":753,"author":{"gitId":"p-xp"},"content":"- If there is one or more guests, displays the message \"Listed all guests\". Else, displays the message \"No guests recorded\".","lastModifiedDate":"2023-10-31"},{"lineNumber":754,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":755,"author":{"gitId":"keaganpzh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":756,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":757,"author":{"gitId":"tllshan"},"content":"#### 5.4.2. Viewing all vendors: `vendor list`","lastModifiedDate":"2023-11-12"},{"lineNumber":758,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":759,"author":{"gitId":"keaganpzh"},"content":"Allows you to view all vendors in WedLog, so that you can see all the people involved in making your dream wedding a reality.","lastModifiedDate":"2023-11-12"},{"lineNumber":760,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":761,"author":{"gitId":"samuelim01"},"content":"Format: `vendor list`","lastModifiedDate":"2023-10-31"},{"lineNumber":762,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":763,"author":{"gitId":"keaganpzh"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-05"},{"lineNumber":764,"author":{"gitId":"tllshan"},"content":"- Displays a list of all vendor names and their respective indexes.","lastModifiedDate":"2023-10-25"},{"lineNumber":765,"author":{"gitId":"p-xp"},"content":"    - Example: 1. Valerie Tan, 2. Victor Lim","lastModifiedDate":"2023-10-31"},{"lineNumber":766,"author":{"gitId":"p-xp"},"content":"- If there is one or more vendors, displays the message \"Listed all vendors\". Else, displays the message \"No vendors recorded\".","lastModifiedDate":"2023-10-31"},{"lineNumber":767,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":768,"author":{"gitId":"p-xp"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":769,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":770,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-12"},{"lineNumber":771,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":772,"author":{"gitId":"wasjoe1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":773,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":774,"author":{"gitId":"tllshan"},"content":"### 5.5. Filter Command","lastModifiedDate":"2023-11-12"},{"lineNumber":775,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":776,"author":{"gitId":"tllshan"},"content":"#### 5.5.1. Filtering guests: `guest filter`","lastModifiedDate":"2023-11-12"},{"lineNumber":777,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":778,"author":{"gitId":"keaganpzh"},"content":"Allows you to filter guests by their details and more, so that you can pick out details that matter to you and your guests","lastModifiedDate":"2023-11-12"},{"lineNumber":779,"author":{"gitId":"keaganpzh"},"content":"and zoom in to your guest list accordingly.","lastModifiedDate":"2023-11-12"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"p-xp"},"content":"Format: `guest filter [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [tn/TABLE_NUMBER] [d/DIETARY_REQUIREMENT]… [t/TAG]…`","lastModifiedDate":"2023-10-31"},{"lineNumber":782,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":783,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":784,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":785,"author":{"gitId":"tllshan"},"content":"**Parameter information:**","lastModifiedDate":"2023-11-12"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":787,"author":{"gitId":"tllshan"},"content":"* You can use any combination of letters, numbers and special characters as inputs for all parameters.","lastModifiedDate":"2023-11-12"},{"lineNumber":788,"author":{"gitId":"tllshan"},"content":"* For all parameters aside from `NAME` and `RSVP_STATUS`, providing an empty value (e.g. `p/`) will filter for guests with unfilled values for that parameter. ","lastModifiedDate":"2023-11-12"},{"lineNumber":789,"author":{"gitId":"tllshan"},"content":"* Providing an empty `RSVP_STATUS` will filter for guests with RSVP status `Unknown`. ","lastModifiedDate":"2023-11-12"},{"lineNumber":790,"author":{"gitId":"tllshan"},"content":"* Providing an empty `NAME` will filter for guests without a name, thus returning an empty guest list as all guests need a name.","lastModifiedDate":"2023-11-12"},{"lineNumber":791,"author":{"gitId":"tllshan"},"content":"* At least one parameter must be specified in a filter command.","lastModifiedDate":"2023-11-12"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":793,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":794,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":795,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":796,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":797,"author":{"gitId":"tllshan"},"content":"**Note:**","lastModifiedDate":"2023-11-12"},{"lineNumber":798,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":799,"author":{"gitId":"tllshan"},"content":"* The filter command will only return guests that match all the input values across different parameters.","lastModifiedDate":"2023-11-12"},{"lineNumber":800,"author":{"gitId":"tllshan"},"content":"* The following parameters are filtered via a case-insensitive partial match (i.e. `guest filter n/john` returns `john` and `johnathan`):","lastModifiedDate":"2023-11-13"},{"lineNumber":801,"author":{"gitId":"tllshan"},"content":"  * `NAME`","lastModifiedDate":"2023-11-12"},{"lineNumber":802,"author":{"gitId":"tllshan"},"content":"  * `PHONE`","lastModifiedDate":"2023-11-12"},{"lineNumber":803,"author":{"gitId":"tllshan"},"content":"  * `EMAIL`","lastModifiedDate":"2023-11-12"},{"lineNumber":804,"author":{"gitId":"tllshan"},"content":"  * `ADDRESS`","lastModifiedDate":"2023-11-12"},{"lineNumber":805,"author":{"gitId":"tllshan"},"content":"* The following parameters are filtered via a case-insensitive exact match (i.e. a guest with the tag `friends` would not be a valid result for the input `t/friend`):","lastModifiedDate":"2023-11-13"},{"lineNumber":806,"author":{"gitId":"tllshan"},"content":"  * `RSVP_STATUS`","lastModifiedDate":"2023-11-12"},{"lineNumber":807,"author":{"gitId":"tllshan"},"content":"  * `TABLE_NUMBER`","lastModifiedDate":"2023-11-12"},{"lineNumber":808,"author":{"gitId":"tllshan"},"content":"  * `DIETARY_REQUIREMENT`","lastModifiedDate":"2023-11-12"},{"lineNumber":809,"author":{"gitId":"tllshan"},"content":"  * `TAG`","lastModifiedDate":"2023-11-12"},{"lineNumber":810,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":811,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":812,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":813,"author":{"gitId":"keaganpzh"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":814,"author":{"gitId":"p-xp"},"content":"- `guest filter n/Gia r/no`: filters for guests with `Gia` in their names who have RSVP status of `no`. Results might include `Gia Lee, RSVP: no` and `Gianna Tan, RSVP: no`.","lastModifiedDate":"2023-11-03"},{"lineNumber":815,"author":{"gitId":"p-xp"},"content":"- `guest filter d/`: filters for guests with no dietary requirements.","lastModifiedDate":"2023-10-31"},{"lineNumber":816,"author":{"gitId":"p-xp"},"content":"- `guest filter t/`: filters for guests with no tags.","lastModifiedDate":"2023-11-03"},{"lineNumber":817,"author":{"gitId":"tllshan"},"content":"- `guest filter d/no beef d/no pork`: filters for all guests who are tagged with both `no beef` and `no pork` in their dietary requirements field.","lastModifiedDate":"2023-11-12"},{"lineNumber":818,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":819,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-04"},{"lineNumber":820,"author":{"gitId":"p-xp"},"content":"- Displays a list of guests that match all the inputted values.","lastModifiedDate":"2023-10-31"},{"lineNumber":821,"author":{"gitId":"p-xp"},"content":"- Displays a message showing the total number of results found.","lastModifiedDate":"2023-10-31"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-04"},{"lineNumber":824,"author":{"gitId":"wasjoe1"},"content":"- No parameter (e.g. `guest filter`): Displays error message \"No prefix was found in the command!\" followed by instruction on guest filter usage.","lastModifiedDate":"2023-11-09"},{"lineNumber":825,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"wasjoe1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":828,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":829,"author":{"gitId":"tllshan"},"content":"#### 5.5.2. Filtering vendors: `vendor filter`","lastModifiedDate":"2023-11-12"},{"lineNumber":830,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":831,"author":{"gitId":"keaganpzh"},"content":"Elevate your wedding curation with precision. Filter vendors by their details and more, allowing you to manage crucial ","lastModifiedDate":"2023-11-10"},{"lineNumber":832,"author":{"gitId":"keaganpzh"},"content":"arrangements and allocation with ease.","lastModifiedDate":"2023-11-10"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"keaganpzh"},"content":"Allows you to filter vendors by their details and more, so that you can manage arrangements and allocations and ","lastModifiedDate":"2023-11-12"},{"lineNumber":835,"author":{"gitId":"keaganpzh"},"content":"zoom in to your vendor list accordingly.","lastModifiedDate":"2023-11-12"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"p-xp"},"content":"Format: `vendor filter [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`","lastModifiedDate":"2023-10-31"},{"lineNumber":838,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":839,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":840,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":841,"author":{"gitId":"tllshan"},"content":"**Parameter information:**","lastModifiedDate":"2023-11-12"},{"lineNumber":842,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":843,"author":{"gitId":"tllshan"},"content":"* You can use any combination of letters, numbers and special characters as inputs for all parameters.","lastModifiedDate":"2023-11-12"},{"lineNumber":844,"author":{"gitId":"tllshan"},"content":"* For all parameters aside from `NAME`, providing an empty value (e.g. `p/`) will filter for vendors with unfilled values for that parameter.","lastModifiedDate":"2023-11-12"},{"lineNumber":845,"author":{"gitId":"tllshan"},"content":"* Providing an empty `NAME` will filter for vendors without a name thus returning an empty vendors list as all vendors need a name.","lastModifiedDate":"2023-11-12"},{"lineNumber":846,"author":{"gitId":"tllshan"},"content":"* At least one parameter must be specified in a filter command.","lastModifiedDate":"2023-11-12"},{"lineNumber":847,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":848,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":849,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":850,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":851,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":852,"author":{"gitId":"tllshan"},"content":"**Note:**","lastModifiedDate":"2023-11-12"},{"lineNumber":853,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":854,"author":{"gitId":"tllshan"},"content":"* The filter command will only return vendors that match all the input values across different parameters.","lastModifiedDate":"2023-11-12"},{"lineNumber":855,"author":{"gitId":"tllshan"},"content":"* The following parameters are filtered via a case-insensitive partial match (i.e. `vendor filter n/john` returns `john` and `johnathan`):","lastModifiedDate":"2023-11-13"},{"lineNumber":856,"author":{"gitId":"tllshan"},"content":"    * `NAME`","lastModifiedDate":"2023-11-12"},{"lineNumber":857,"author":{"gitId":"tllshan"},"content":"    * `PHONE`","lastModifiedDate":"2023-11-12"},{"lineNumber":858,"author":{"gitId":"tllshan"},"content":"    * `EMAIL`","lastModifiedDate":"2023-11-12"},{"lineNumber":859,"author":{"gitId":"tllshan"},"content":"    * `ADDRESS`","lastModifiedDate":"2023-11-12"},{"lineNumber":860,"author":{"gitId":"tllshan"},"content":"* The following parameters are filtered via a case-insensitive exact match (i.e. a vendor with the tag `djay` would not be a valid result for the input `t/dj`):","lastModifiedDate":"2023-11-13"},{"lineNumber":861,"author":{"gitId":"tllshan"},"content":"    * `TAG`","lastModifiedDate":"2023-11-12"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"p-xp"},"content":"- `vendor filter n/Val`: Filter for all vendors with \"Val\" in their names. Results may include `Val Tan, tag: Photographer`","lastModifiedDate":"2023-10-31"},{"lineNumber":867,"author":{"gitId":"p-xp"},"content":"and `Valerie Lee, tag: Florist`.","lastModifiedDate":"2023-10-31"},{"lineNumber":868,"author":{"gitId":"p-xp"},"content":"- `vendor filter t/photographer t/dj`: Filter for all vendors tagged as both `photographer` and `dj`. Results may include ","lastModifiedDate":"2023-11-03"},{"lineNumber":869,"author":{"gitId":"p-xp"},"content":"`Veronica, tags: photographer, dj`, but not `Victor, tags: photographer` and `Valen, tags: photographer, djay`.","lastModifiedDate":"2023-10-31"},{"lineNumber":870,"author":{"gitId":"p-xp"},"content":"- `vendor filter p/`: filter for all vendors with empty phone numbers.","lastModifiedDate":"2023-10-30"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":872,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-04"},{"lineNumber":873,"author":{"gitId":"p-xp"},"content":"- Displays a list of vendors that match all the inputted values.","lastModifiedDate":"2023-10-31"},{"lineNumber":874,"author":{"gitId":"p-xp"},"content":"- Displays a message showing the total number of results found.","lastModifiedDate":"2023-10-31"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":876,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-04"},{"lineNumber":877,"author":{"gitId":"p-xp"},"content":"- No parameter (e.g. `vendor filter`): Displays error message \"No prefix was found in the command!\" followed by instruction on vendor filter usage.","lastModifiedDate":"2023-10-30"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"p-xp"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":880,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":881,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-12"},{"lineNumber":882,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":883,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-20"},{"lineNumber":884,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":885,"author":{"gitId":"tllshan"},"content":"### 5.6. General Commands","lastModifiedDate":"2023-11-12"},{"lineNumber":886,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":887,"author":{"gitId":"tllshan"},"content":"#### 5.6.1. Viewing help: `help`","lastModifiedDate":"2023-11-12"},{"lineNumber":888,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":889,"author":{"gitId":"keaganpzh"},"content":"Allows you to access the URL to our user guide at any time, in case you need to refer to it.","lastModifiedDate":"2023-11-12"},{"lineNumber":890,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":891,"author":{"gitId":"samuelim01"},"content":"Format: `help`","lastModifiedDate":"2023-10-31"},{"lineNumber":892,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":893,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-30"},{"lineNumber":894,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":895,"author":{"gitId":"tllshan"},"content":"#### 5.6.2. Undoing last action: `undo`","lastModifiedDate":"2023-11-12"},{"lineNumber":896,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":897,"author":{"gitId":"keaganpzh"},"content":"Allows you to undo the last action, so that you can correct mistakes and keep your wedding planning on track.","lastModifiedDate":"2023-11-12"},{"lineNumber":898,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":899,"author":{"gitId":"samuelim01"},"content":"Format: `undo`","lastModifiedDate":"2023-10-31"},{"lineNumber":900,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":901,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":902,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":903,"author":{"gitId":"tllshan"},"content":"The undo command can also be triggered by pressing Control + Z (Windows) or Command + Z (Mac) on the keyboard.","lastModifiedDate":"2023-11-13"},{"lineNumber":904,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":905,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":906,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":907,"author":{"gitId":"wasjoe1"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":908,"author":{"gitId":"samuelim01"},"content":"- `vendor delete 2` followed by `undo` deletes, then restores the 2nd vendor in WedLog.","lastModifiedDate":"2023-10-20"},{"lineNumber":909,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":910,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-20"},{"lineNumber":911,"author":{"gitId":"tllshan"},"content":"- Restores WedLog to its previous state.","lastModifiedDate":"2023-10-25"},{"lineNumber":912,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":913,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-20"},{"lineNumber":914,"author":{"gitId":"samuelim01"},"content":"- No states to undo: Displays error message “There is no change to undo!”","lastModifiedDate":"2023-10-20"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":916,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-20"},{"lineNumber":917,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":918,"author":{"gitId":"tllshan"},"content":"#### 5.6.3. Redoing last action: `redo`","lastModifiedDate":"2023-11-12"},{"lineNumber":919,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":920,"author":{"gitId":"keaganpzh"},"content":"Allows you to redo the last action, so that you can correct mistakes and keep your wedding planning on track.","lastModifiedDate":"2023-11-12"},{"lineNumber":921,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":922,"author":{"gitId":"samuelim01"},"content":"Format: `redo`","lastModifiedDate":"2023-10-31"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":924,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":926,"author":{"gitId":"tllshan"},"content":"The redo command can be triggered by pressing Control + Y (Windows) or Command + Y (Mac) on the keyboard.","lastModifiedDate":"2023-11-13"},{"lineNumber":927,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":928,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":930,"author":{"gitId":"wasjoe1"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":931,"author":{"gitId":"samuelim01"},"content":"- `vendor delete 2`, followed by `undo`, followed by `redo` deletes, then restores, then re-deletes the 2nd vendor in WedLog.","lastModifiedDate":"2023-10-20"},{"lineNumber":932,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":933,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-20"},{"lineNumber":934,"author":{"gitId":"tllshan"},"content":"- Restores WedLog to its previous state before the last undo.","lastModifiedDate":"2023-10-25"},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":936,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-20"},{"lineNumber":937,"author":{"gitId":"samuelim01"},"content":"- No states to redo: Displays error message “There is no change to redo!”","lastModifiedDate":"2023-10-20"},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":939,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-18"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":941,"author":{"gitId":"tllshan"},"content":"#### 5.6.4. Clearing guests and vendors: `clear`","lastModifiedDate":"2023-11-13"},{"lineNumber":942,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":943,"author":{"gitId":"keaganpzh"},"content":"Allows you to clear the guest and vendor lists, so that you can start planning your wedding from a clean slate.","lastModifiedDate":"2023-11-12"},{"lineNumber":944,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":945,"author":{"gitId":"wasjoe1"},"content":"format: `clear`","lastModifiedDate":"2023-11-09"},{"lineNumber":946,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":947,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-11-09"},{"lineNumber":948,"author":{"gitId":"wasjoe1"},"content":"- Removes all guest and vendors in the guest and vendor lists respectively.","lastModifiedDate":"2023-11-09"},{"lineNumber":949,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":950,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":951,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":952,"author":{"gitId":"tllshan"},"content":"If you have mistakenly cleared the lists, use the [undo command](#5-6-2-undoing-last-action-undo) to restore all your data.","lastModifiedDate":"2023-11-13"},{"lineNumber":953,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":954,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":955,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":956,"author":{"gitId":"wasjoe1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-09"},{"lineNumber":957,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":958,"author":{"gitId":"tllshan"},"content":"#### 5.6.5. Exiting the program: `exit`","lastModifiedDate":"2023-11-13"},{"lineNumber":959,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":960,"author":{"gitId":"keaganpzh"},"content":"Allows you to exit the program, so that you can wrap up your planning session seamlessly and pick up where you left off next time.","lastModifiedDate":"2023-11-12"},{"lineNumber":961,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":962,"author":{"gitId":"samuelim01"},"content":"Format: `exit`","lastModifiedDate":"2023-10-31"},{"lineNumber":963,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":964,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":965,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":966,"author":{"gitId":"tllshan"},"content":"Upon exit, the latest data is saved to your computer at `data/addressbook.json`.","lastModifiedDate":"2023-11-13"},{"lineNumber":967,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":968,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":969,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":970,"author":{"gitId":"p-xp"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":971,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":972,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-12"},{"lineNumber":973,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":974,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":976,"author":{"gitId":"tllshan"},"content":"## 6. FAQ","lastModifiedDate":"2023-11-12"},{"lineNumber":977,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":978,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":979,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":980,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":981,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":982,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":983,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":984,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":985,"author":{"gitId":"tllshan"},"content":"## 7. Known Issues","lastModifiedDate":"2023-11-12"},{"lineNumber":986,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":987,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":989,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":990,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":991,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":992,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":993,"author":{"gitId":"tllshan"},"content":"## 8. Future Implementations","lastModifiedDate":"2023-11-12"},{"lineNumber":994,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":995,"author":{"gitId":"wasjoe1"},"content":"1. `guest clear` and `vendor clear` features will be implemented in the future. This feature will allow users to clear the guest list or vendor list quickly.","lastModifiedDate":"2023-11-09"},{"lineNumber":996,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":997,"author":{"gitId":"tllshan"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":998,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":999,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":1000,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":1003,"author":{"gitId":"tllshan"},"content":"## 9. Command Summary","lastModifiedDate":"2023-11-12"},{"lineNumber":1004,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":1005,"author":{"gitId":"keaganpzh"},"content":"| Action                   | Format                                                                                                                           | Example                                                                                       |","lastModifiedDate":"2023-10-05"},{"lineNumber":1006,"author":{"gitId":"samuelim01"},"content":"|--------------------------|:---------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-12"},{"lineNumber":1007,"author":{"gitId":"wasjoe1"},"content":"| Add a guest              | `guest add n/NAME [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [tn/TABLE_NUMBER] [d/DIETARY_REQUIREMENT]… [t/TAG]…`           | `guest add n/John Doe p/98765432 e/john@doe.com a/Street 456 r/unknown d/vegetarian t/friend` |","lastModifiedDate":"2023-11-03"},{"lineNumber":1008,"author":{"gitId":"p-xp"},"content":"| Add a vendor             | `vendor add n/NAME [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`                                                                     | `vendor add n/Betsy p/91234567`                                                               |","lastModifiedDate":"2023-10-31"},{"lineNumber":1009,"author":{"gitId":"tllshan"},"content":"| Delete a guest           | `guest delete INDEX`                                                                                                             | `guest delete 1`                                                                              |","lastModifiedDate":"2023-10-22"},{"lineNumber":1010,"author":{"gitId":"tllshan"},"content":"| Delete a vendor          | `vendor delete INDEX`                                                                                                            | `vendor delete 2`                                                                             |","lastModifiedDate":"2023-10-22"},{"lineNumber":1011,"author":{"gitId":"wasjoe1"},"content":"| Edit a guest             | `guest edit INDEX [n/NAME] [p/PHONE]  [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [tn/TABLE_NUMBER] [d/DIETARY_REQUIREMENT]… [t/TAG]…` | `guest edit 1 p/98765432 r/unknown`                                                           |","lastModifiedDate":"2023-11-03"},{"lineNumber":1012,"author":{"gitId":"samuelim01"},"content":"| Edit a vendor            | `vendor edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`                                                            | `vendor edit 2 p/914624435`                                                                   |","lastModifiedDate":"2023-10-31"},{"lineNumber":1013,"author":{"gitId":"tllshan"},"content":"| View all guests          | `guest list`                                                                                                                     |                                                                                               |","lastModifiedDate":"2023-10-22"},{"lineNumber":1014,"author":{"gitId":"tllshan"},"content":"| View all vendors         | `vendor list`                                                                                                                    |                                                                                               |","lastModifiedDate":"2023-10-22"},{"lineNumber":1015,"author":{"gitId":"wasjoe1"},"content":"| Filter guest list        | `guest filter [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [d/DIETARY_REQUIREMENTS] [tn/TABLE_NUMBER] [t/TAG]…`      | `guest filter n/Keith p/92354567 r/yes`                                                       |","lastModifiedDate":"2023-11-03"},{"lineNumber":1016,"author":{"gitId":"p-xp"},"content":"| Filter vendor list       | `vendor filter [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`                                                                | `vendor filter n/John Doe p/91234567 e/johndflowers@email.com a/123 Flower Lane`              |","lastModifiedDate":"2023-10-31"},{"lineNumber":1017,"author":{"gitId":"wasjoe1"},"content":"| View help                | `help`                                                                                                                           |                                                                                               |","lastModifiedDate":"2023-11-02"},{"lineNumber":1018,"author":{"gitId":"tllshan"},"content":"| Undo last action         | `undo`                                                                                                                           |                                                                                               |","lastModifiedDate":"2023-10-22"},{"lineNumber":1019,"author":{"gitId":"tllshan"},"content":"| Redo last action         | `redo`                                                                                                                           |                                                                                               |","lastModifiedDate":"2023-10-22"},{"lineNumber":1020,"author":{"gitId":"samuelim01"},"content":"| Clear guests and vendors | `clear`                                                                                                                          |                                                                                               |","lastModifiedDate":"2023-11-12"},{"lineNumber":1021,"author":{"gitId":"tllshan"},"content":"| Exit program             | `exit`                                                                                                                           |                                                                                               |","lastModifiedDate":"2023-10-22"},{"lineNumber":1022,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":1023,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-22"},{"lineNumber":1024,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":1025,"author":{"gitId":"tllshan"},"content":"## 10. Appendix: Acceptable values for parameters","lastModifiedDate":"2023-11-12"},{"lineNumber":1026,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":1027,"author":{"gitId":"tllshan"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":1028,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1029,"author":{"gitId":"wasjoe1"},"content":"**Definitions:** \u003cbr /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":1030,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1031,"author":{"gitId":"tllshan"},"content":"* Word: Any letters, numbers or special characters of length 1 or more (non-blank). \u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1032,"author":{"gitId":"tllshan"},"content":"* Alphanumeric word: Any letters or numbers of length 1 or more (non-blank). \u003cbr /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1033,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1034,"author":{"gitId":"tllshan"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":1035,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1036,"author":{"gitId":"wasjoe1"},"content":"\u003cbr /\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":1037,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":1038,"author":{"gitId":"wasjoe1"},"content":"**Acceptable values for `n/NAME`:**","lastModifiedDate":"2023-11-12"},{"lineNumber":1039,"author":{"gitId":"tllshan"},"content":"- Alphanumeric word with or without spaces and should not be blank.","lastModifiedDate":"2023-10-25"},{"lineNumber":1040,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":1041,"author":{"gitId":"wasjoe1"},"content":"**Acceptable values for `p/PHONE`:**","lastModifiedDate":"2023-11-12"},{"lineNumber":1042,"author":{"gitId":"tllshan"},"content":"- Numbers with no spaces or special characters.","lastModifiedDate":"2023-10-25"},{"lineNumber":1043,"author":{"gitId":"tllshan"},"content":"- At least 3 numbers.","lastModifiedDate":"2023-10-25"},{"lineNumber":1044,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":1045,"author":{"gitId":"wasjoe1"},"content":"**Acceptable values for `e/EMAIL`:**","lastModifiedDate":"2023-11-12"},{"lineNumber":1046,"author":{"gitId":"tllshan"},"content":"- `local-part@domain`","lastModifiedDate":"2023-10-22"},{"lineNumber":1047,"author":{"gitId":"tllshan"},"content":"    - the `local-part` must:","lastModifiedDate":"2023-10-22"},{"lineNumber":1048,"author":{"gitId":"tllshan"},"content":"        - contain alphanumeric characters and these special characters, excluding the parentheses (+_.-)","lastModifiedDate":"2023-10-22"},{"lineNumber":1049,"author":{"gitId":"tllshan"},"content":"        - not start or end with any special characters.","lastModifiedDate":"2023-10-25"},{"lineNumber":1050,"author":{"gitId":"tllshan"},"content":"    - the `domain` must:","lastModifiedDate":"2023-10-22"},{"lineNumber":1051,"author":{"gitId":"tllshan"},"content":"        - consist of domain labels separated by periods.","lastModifiedDate":"2023-10-25"},{"lineNumber":1052,"author":{"gitId":"tllshan"},"content":"        - end with a domain label at least 2 characters long.","lastModifiedDate":"2023-10-25"},{"lineNumber":1053,"author":{"gitId":"tllshan"},"content":"        - have each domain label start and end with alphanumeric characters.","lastModifiedDate":"2023-10-25"},{"lineNumber":1054,"author":{"gitId":"tllshan"},"content":"        - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2023-10-25"},{"lineNumber":1055,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1056,"author":{"gitId":"wasjoe1"},"content":"**Acceptable values for `a/ADDRESS`:**","lastModifiedDate":"2023-11-12"},{"lineNumber":1057,"author":{"gitId":"wasjoe1"},"content":"- Word with or without spaces and should not be blank.","lastModifiedDate":"2023-11-12"},{"lineNumber":1058,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":1059,"author":{"gitId":"wasjoe1"},"content":"**Acceptable values for `r/RSVP_STATUS`:**","lastModifiedDate":"2023-11-12"},{"lineNumber":1060,"author":{"gitId":"tllshan"},"content":"- `yes`","lastModifiedDate":"2023-10-22"},{"lineNumber":1061,"author":{"gitId":"tllshan"},"content":"- `no`","lastModifiedDate":"2023-10-22"},{"lineNumber":1062,"author":{"gitId":"tllshan"},"content":"- `unknown`","lastModifiedDate":"2023-10-22"},{"lineNumber":1063,"author":{"gitId":"tllshan"},"content":"- Inputs with no values when adding a guest (e.g. `r/`) signify that RSVP status should be stored as `unknown`.","lastModifiedDate":"2023-10-25"},{"lineNumber":1064,"author":{"gitId":"p-xp"},"content":"- Inputs with no values when filtering guests (e.g. `r/`) signify that you wish to filter for guests with `unknown` RSVP status.","lastModifiedDate":"2023-10-31"},{"lineNumber":1065,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":1066,"author":{"gitId":"wasjoe1"},"content":"**Acceptable values for `d/DIETARY_REQUIREMENT`:**","lastModifiedDate":"2023-11-12"},{"lineNumber":1067,"author":{"gitId":"wasjoe1"},"content":"- Alphanumeric word with or without spaces and should not be blank.","lastModifiedDate":"2023-11-09"},{"lineNumber":1068,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":1069,"author":{"gitId":"wasjoe1"},"content":"**Acceptable values for `tn/TABLE_NUMBER`:**","lastModifiedDate":"2023-11-12"},{"lineNumber":1070,"author":{"gitId":"tllshan"},"content":"- Numbers between 1 and 2147483647 inclusive with no spaces or special characters","lastModifiedDate":"2023-11-08"},{"lineNumber":1071,"author":{"gitId":"tllshan"},"content":"- Preceding zeros will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":1072,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":1073,"author":{"gitId":"wasjoe1"},"content":"**Acceptable values for `t/TAG`:**","lastModifiedDate":"2023-11-12"},{"lineNumber":1074,"author":{"gitId":"tllshan"},"content":"- Alphanumeric word without spaces.","lastModifiedDate":"2023-10-25"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":1076,"author":{"gitId":"tllshan"},"content":"\u003e [Back to top](#user-guide)","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"tllshan":690,"samuelim01":70,"p-xp":72,"wasjoe1":75,"keaganpzh":47,"-":122}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eWedLog\u003c/a\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-F11-2/tp/\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"  * [How to Use This Guide]({{ baseUrl }}/UserGuide.html#1-how-to-use-this-guide)","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"  * [Getting Started]({{ baseUrl }}/UserGuide.html#2-getting-started)","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"  * [Understanding the WedLog Interface]({{ baseUrl }}/UserGuide.html#3-understanding-the-wedlog-interface)","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"  * [WedLog Tutorial]({{ baseUrl }}/UserGuide.html#4-wedlog-tutorial)","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#5-features)","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#6-faq)","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"  * [Known Issues]({{ baseUrl }}/UserGuide.html#7-known-issues)","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"  * [Future Implementations]({{ baseUrl }}/UserGuide.html#8-future-implementations)","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#9-command-summary)","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"  * [Appendix: Acceptable Values for Parameters]({{ baseUrl }}/UserGuide.html#10-appendix-acceptable-values-for-parameters)","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#1-acknowledgements)","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"  * [Setting Up, Getting Started]({{ baseUrl }}/DeveloperGuide.html#2-setting-up-getting-started)","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#3-design)","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#4-implementation)","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#5-documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"  * [Appendix A: Requirements]({{ baseUrl }}/DeveloperGuide.html#6-appendix-a-requirements)","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"  * [Appendix B: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#7-appendix-b-instructions-for-manual-testing)","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"  * [Appendix C: Planned Enhancements]({{ baseUrl }}/DeveloperGuide.html#8-appendix-c-planned-enhancements)","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"  * [Appendix D: Effort]({{baseUrl}}/DeveloperGuide.html#9-appendix-d-effort)","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"keaganpzh":20,"-":54}},{"path":"docs/diagrams/AddExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"participant \"e:XYZAddCommand\" as XYZAddCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"participant \":UniqueXYZList\" as UniqueXYZList MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"note right of XYZAddCommand: XYZ \u003d Guest or Vendor","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"[-\u003e LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"LogicManager -\u003e XYZAddCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"activate XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"XYZAddCommand -\u003e Model : addXYZ(Annette)","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"note right of XYZAddCommand: addXYZ \u003d addGuest or addVendor","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"Model -\u003e UniqueXYZList : add(Annette)","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"activate UniqueXYZList","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"UniqueXYZList --\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"deactivate UniqueXYZList","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"Model --\u003e XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"create CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"XYZAddCommand -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"activate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"CommandResult --\u003e XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"XYZAddCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"p-xp":47}},{"path":"docs/diagrams/AddParseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"participant \":XYZCommandParser\" as XYZCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"participant \":XYZAddCommandParser\" as XYZAddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"participant \":XYZAddCommand\" as XYZAddCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"[-\u003e LogicManager : execute(\"xyz add n/Annette t/friend\")","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"note left of LogicManager: xyz \u003d guest or vendor","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"xyz add n/Annette t/friend\")","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"create XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"AddressBookParser -\u003e XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"activate XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"note right of XYZCommandParser: XYZ \u003d Guest or Vendor","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"XYZCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"AddressBookParser -\u003e XYZCommandParser : parse(\"add n/Annette t/friend\")","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"activate XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"create XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"XYZCommandParser -\u003e XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"activate XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"XYZAddCommandParser --\u003e XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"deactivate XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"XYZCommandParser -\u003e XYZAddCommandParser : parse(\"n/Annette t/friend\")","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"activate XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"group ref [parse and create fields]","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    XYZAddCommandParser -[hidden]\u003e ParserUtil","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"end","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"create XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"XYZAddCommandParser -\u003e XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"activate XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"XYZAddCommand --\u003e XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"deactivate XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"XYZAddCommandParser --\u003e XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"deactivate XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"XYZAddCommandParser -[hidden]-\u003e XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"destroy XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"XYZCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"XYZCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"destroy XYZCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"p-xp":70}},{"path":"docs/diagrams/AddParseSequenceDiagramRef.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"participant \":XYZAddCommandParser\" as XYZAddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"participant \":XYZAddCommand\" as XYZAddCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"group sd [parse and create fields]","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"    XYZAddCommandParser -\u003e ParserUtil: parseName(\"Annette\")","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"    ParserUtil --\u003e XYZAddCommandParser: Name","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"    XYZAddCommandParser -\u003e ParserUtil: parseTags(\"friend\")","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"        ParserUtil --\u003e XYZAddCommandParser: Tag","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"end","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"create XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"XYZAddCommandParser -\u003e XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"activate XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"XYZAddCommand --\u003e XYZAddCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"deactivate XYZAddCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"p-xp":25}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"user -[USER_COLOR]\u003e ui : \"guest delete 1\"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"guest delete 1\")","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteGuest(g)","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":3,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"AddressBook *-right-\u003e \"1\" UniqueGuestList","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"UniqueTagList -[hidden]down- UniqueGuestList","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"UniqueGuestList -right-\u003e Guest","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"Guest -right-|\u003e Person","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"Guest *--\u003e DietaryRequirements","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"Guest *--\u003e RsvpStatus","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":7,"-":17}},{"path":"docs/diagrams/DeleteExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"participant \"e:XYZDeleteCommand\" as XYZDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"participant \":UniqueXYZList\" as UniqueXYZList MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"note right of XYZDeleteCommand: XYZ \u003d Guest or Vendor","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"[-\u003e LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"LogicManager -\u003e XYZDeleteCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"activate XYZDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"XYZDeleteCommand -\u003e Model : deleteXYZ(1)","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"note right of XYZDeleteCommand: deleteXYZ \u003d deleteGuest or deleteVendor","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"Model -\u003e UniqueXYZList : deleteXYZ(1)","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"activate UniqueXYZList","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"UniqueXYZList --\u003e Model","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"deactivate UniqueXYZList","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"Model --\u003e XYZDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"XYZDeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"CommandResult --\u003e XYZDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"XYZDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"tllshan":42,"p-xp":5}},{"path":"docs/diagrams/DeleteParseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"participant \":XYZCommandParser\" as XYZCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"participant \":XYZDeleteCommandParser\" as XYZDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"participant \"d:XYZDeleteCommand\" as XYZDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"[-\u003e LogicManager : execute(\"xyz delete 1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"note left of LogicManager: xyz \u003d guest or vendor","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"xyz delete 1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"create XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"AddressBookParser -\u003e XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"activate XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"note right of XYZCommandParser: XYZ \u003d Guest or Vendor","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"XYZCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"AddressBookParser -\u003e XYZCommandParser : parse(\"delete 1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"activate XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"create XYZDeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"XYZCommandParser -\u003e XYZDeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"activate XYZDeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"XYZDeleteCommandParser --\u003e XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"deactivate XYZDeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"XYZCommandParser -\u003e XYZDeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"activate XYZDeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"create XYZDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"XYZDeleteCommandParser -\u003e XYZDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"activate XYZDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"XYZDeleteCommand --\u003e XYZDeleteCommandParser : d","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"deactivate XYZDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"XYZDeleteCommandParser --\u003e XYZCommandParser : d","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"deactivate XYZDeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"XYZDeleteCommandParser -[hidden]-\u003e XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"destroy XYZDeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"XYZCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"XYZCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"destroy XYZCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"tllshan":65}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"participant \":GuestCommandParser\" as GuestCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"participant \":GuestDeleteCommandParser\" as GuestDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"participant \"d:GuestDeleteCommand\" as GuestDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"[-\u003e LogicManager : execute(\"guest delete 1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"guest delete 1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"create GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"AddressBookParser -\u003e GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"activate GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"deactivate GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"AddressBookParser -\u003e GuestCommandParser : parse(\"delete 1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"activate GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"create GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -\u003e GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"activate GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommandParser --\u003e GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"deactivate GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -\u003e GuestDeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"activate GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"create GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommandParser -\u003e GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"activate GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommand --\u003e GuestDeleteCommandParser : d","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"deactivate GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommandParser --\u003e GuestCommandParser : d","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"deactivate GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommandParser -[hidden]-\u003e GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"destroy GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"deactivate GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"destroy GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"LogicManager -\u003e GuestDeleteCommand : execute()","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"activate GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommand -\u003e Model : deleteGuest(1)","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"Model --\u003e GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"CommandResult --\u003e GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"deactivate GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":45,"-":42}},{"path":"docs/diagrams/EditExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"participant \"e:GuestEditCommand\" as GuestEditCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"[-\u003e LogicManager :","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"LogicManager -\u003e GuestEditCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"activate GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"GuestEditCommand -\u003e Model : setGuest(2)","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"Model -\u003e VersionedAddressBook : setGuest(2)","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"activate VersionedAddressBook","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"VersionedAddressBook --\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"Model --\u003e GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"GuestEditCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"CommandResult --\u003e GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"GuestEditCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"deactivate GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"LogicManager -[hidden]-\u003e GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"destroy GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"samuelim01":49}},{"path":"docs/diagrams/EditParseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"participant \":GuestCommandParser\" as GuestCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"participant \":GuestEditCommandParser\" as GuestEditCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"participant \"e:GuestEditCommand\" as GuestEditCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"[-\u003e LogicManager : execute(\"guest edit 2 p/\")","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"guest edit 2 p/\")","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"create GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"AddressBookParser -\u003e GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"activate GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"deactivate GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"AddressBookParser -\u003e GuestCommandParser : parse(\"edit 2 p/\")","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"activate GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"create GuestEditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -\u003e GuestEditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"activate GuestEditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"GuestEditCommandParser --\u003e GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"deactivate GuestEditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -\u003e GuestEditCommandParser : parse(\"2 p/\")","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"activate GuestEditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"create GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"GuestEditCommandParser -\u003e GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"activate GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"GuestEditCommand --\u003e GuestEditCommandParser : e","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"deactivate GuestEditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"GuestEditCommandParser --\u003e GuestCommandParser : e","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"deactivate GuestEditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"GuestEditCommandParser -[hidden]-\u003e GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"destroy GuestEditCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"deactivate GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"destroy GuestCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"samuelim01":63}},{"path":"docs/diagrams/FilterGuestPredicateClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPredicate\" as Predicate #444444","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"note left","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"Predicate\u003cGuest\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"end note","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"GuestRsvpPredicate .up.|\u003e Predicate","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"GuestTablePredicate .up.|\u003e Predicate","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"GuestDietaryPredicate .up.|\u003e Predicate","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wasjoe1":17}},{"path":"docs/diagrams/FilterPersonPredicateClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPredicate\" as Predicate #444444","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"note left","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"Predicate\u003cPerson\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"end note","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"NamePredicate .up.|\u003e Predicate","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"AddressPredicate .up.|\u003e Predicate","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"EmailPredicate .up.|\u003e Predicate","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"PhonePredicate .up.|\u003e Predicate","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"TagPredicate .up.|\u003e Predicate","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wasjoe1":19}},{"path":"docs/diagrams/FilterXYZSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"!include style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"participant \":XYZCommandParser\" as XYZCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"participant \":XYZFilterCommandParser\" as XYZFilterCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"note left LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"input is \"XYZ filter n/John r/yes\"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"end note","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"[-\u003e LogicManager: execute(input)","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(input)","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"create XYZCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"AddressBookParser -\u003e XYZCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"activate XYZCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"create XYZFilterCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"XYZCommandParser -\u003e XYZFilterCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"activate XYZFilterCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"group ref [Create XYZFilterCommand]","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    XYZFilterCommandParser -[hidden]\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"XYZFilterCommandParser --\u003e XYZCommandParser : f","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"XYZCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"group ref [Execute XYZFilterCommand]","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    LogicManager -[hidden]\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"[\u003c-- LogicManager : r","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wasjoe1":49}},{"path":"docs/diagrams/FilterXYZSequenceDiagramCreateCommandRef.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"!include style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"participant \":XYZFilterCommandParser\" as XYZFilterCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"participant \":XYZFilterCommand\" as XYZFilterCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"participant \":ABCPredicate\" as ABCPredicate MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"create XYZFilterCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"group sd [Create XYZFilterCommand]","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        create ABCPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        activate XYZFilterCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        XYZFilterCommandParser -\u003e ABCPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        activate ABCPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        ABCPredicate -\u003e XYZFilterCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"        deactivate ABCPredicate","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        create XYZFilterCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        XYZFilterCommandParser -\u003e XYZFilterCommand : XYZFilterCommand(predicates)","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        activate XYZFilterCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        XYZFilterCommand --\u003e XYZFilterCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        deactivate XYZFilterCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wasjoe1":30}},{"path":"docs/diagrams/FilterXYZSequenceDiagramExecuteCommandRef.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"!include style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"participant \":GuestFilterCommand\" as GuestFilterCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"group sd [Execute XYZFilterCommand]","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    LogicManager -\u003e GuestFilterCommand : execute()","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    activate GuestFilterCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    GuestFilterCommand -\u003e ModelManager : updateFilteredGuestList(Predicate\u003cGuest\u003e)","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    activate ModelManager","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    ModelManager --\u003e GuestFilterCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    deactivate ModelManager","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    create CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    GuestFilterCommand -\u003e CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    activate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    CommandResult --\u003e GuestFilterCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    deactivate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    GuestFilterCommand --\u003e LogicManager : r","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    deactivate GuestFilterCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wasjoe1":35}},{"path":"docs/diagrams/GuestClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"Package Guest as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"Class Person","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"Class Address","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"Class Email","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"Class Name","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"Class Phone","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"Class Tag","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"Class Guest","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"Class DietaryRequirement","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"Class RsvpStatus","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"Class TableNumber","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"Guest --|\u003e Person","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"Person *--\u003e \"0..1\" Phone","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"Person *--\u003e \"0..1\" Address","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"Guest *--\u003e \"*\" DietaryRequirement","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"Guest *--\u003e \"1\" RsvpStatus","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"Guest *--\u003e \"0..1\" TableNumber","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"Person -[hidden]right-\u003e Guest","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"Tag -[hidden]right-\u003e RsvpStatus","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"RsvpStatus -[hidden]right-\u003e DietaryRequirement","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"keaganpzh":41}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"Class GuestCommmandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"Class VendorCommmandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"AddressBookParser ..\u003e GuestCommmandParser : creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"AddressBookParser ..\u003e VendorCommmandParser : creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"GuestCommmandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"VendorCommmandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"note right of XYZCommand: XYZCommand \u003d GuestAddCommand, \\nVendorListCommand, etc","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":8,"-":44}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"Class VersionedAddressBook","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"Class UniqueGuestList","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"Class UniqueVendorList","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"Class Guest","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"Class Vendor","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"Class DietaryRequirements","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"Class RsvpStatus","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"ModelManager -left-\u003e \"1\" VersionedAddressBook","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"VersionedAddressBook -left-|\u003e AddressBook","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"VersionedAddressBook *--\u003e \"1\" UniqueGuestList","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"VersionedAddressBook *--\u003e \"1\" UniqueVendorList","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"UniqueGuestList --\u003e \"*\" Guest","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"UniqueVendorList --\u003e \"*\" Vendor","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"Guest --|\u003e Person","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"Vendor --|\u003e Person","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"0..1\" Phone","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"0..1\" Address","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"Guest *--\u003e \"1\" DietaryRequirements","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"Guest *--\u003e \"1\" RsvpStatus","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"Tag -[hidden]right-\u003e RsvpStatus","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"RsvpStatus -[hidden]right-\u003e DietaryRequirements","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"ModelManager --\u003e \"*\" Guest : filtered list","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"ModelManager --\u003e \"*\" Vendor : filtered list","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":30,"-":41}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"Class GuestCommandParser","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"Class VendorCommandParser","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"AddressBookParser .down.\u003e GuestCommandParser: creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"AddressBookParser .down.\u003e VendorCommandParser: creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"VendorCommandParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"samuelim01":7,"-":37}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"Class JsonAdaptedGuest","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"Class JsonAdaptedVendor","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedGuest","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedVendor","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"JsonAdaptedGuest --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"JsonAdaptedVendor --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":6,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"Class XYZListPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"Class XYZCard","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"Class RsvpPanel","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"Class DietaryPanel","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"MainWindow *-down--\u003e  \"1\" CommandBox","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"MainWindow *-down-\u003e \"1\" XYZListPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"MainWindow *-up-\u003e \"1\" RsvpPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"MainWindow *-up-\u003e \"1\" DietaryPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"XYZListPanel -down-\u003e \"*\" XYZCard","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"note right of XYZListPanel: XYZ \u003d Guest or Vendor","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"XYZListPanel --|\u003e UiPart","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"XYZCard --|\u003e UiPart","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"RsvpPanel --|\u003e UiPart","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"DietaryPanel --|\u003e UiPart","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"RsvpPanel .up.\u003e Logic","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"DietaryPanel .up.\u003e Logic","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"XYZCard .down.\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"XYZListPanel -[hidden]left- RsvpPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"RsvpPanel -[hidden]left- DietaryPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"DietaryPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tllshan":20,"-":52}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"  title: \"WedLog\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"# WedLog","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F11-2/tp/graph/badge.svg?token\u003d6VNUBS5EZI)](https://codecov.io/gh/AY2324S1-CS2103T-F11-2/tp)","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"**WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding.**","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"While it has a Graphical User Interface (GUI), most of the user interactions occur through the Command Line Interface (CLI).","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"* If you are interested in using WedLog, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"* If you are interested about developing WedLog, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"samuelim01":9,"-":14}},{"path":"docs/team/keaganpzh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"---","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"  layout: default.md","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"  title: \"Keagan Pang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"---","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"### Project: WedLog","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on [AddressBook - Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"### Features","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"1. **New Feature**: Added the ability to track guests.","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"   * What it does: allows the user to add, delete, edit, find and list guests. Guests have a name, phone number, email, address, tags, RSVP status, dietary requirements, and a table number.","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"   * Justification: This is a core feature of WedLog as it allows the user to manage their guests and their associated information.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"   * Credits: `Guest` class was adapted from `Person` class in AddressBook Level 3.","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"2. **New Feature**: Added the ability to track a guest\u0027s RSVP status.","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"   * What it does: allows the user to set a guest\u0027s RSVP status to either \"yes\", \"no\", or \"unknown\".","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"   * Justification: This feature allows users to keep track of their guests\u0027 RSVP status. By limiting the possible RSVP statuses to \"yes\", \"no\", or \"unknown\", the user can easily see which guests coming, not coming, or unsure yet.","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"   * Highlights: When displaying the RSVP status of a guest in the UI, I decided to make it colour coded. This makes it easier for the user to see the RSVP status of a guest at a glance.","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"3. **New Feature**: Added the ability to track a guest\u0027s dietary requirements.","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"   * What it does: allows the user to set a guest\u0027s dietary requirements to any number of values.","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"   * Justification: This feature allows users to keep track of their guests\u0027 dietary requirements. By allowing the user to set any number of dietary requirements for a guest, there is flexibility in organising the lists of guests.","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"4. **New Feature**: Added a panel in the UI to display statistics of the guest list.","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"   * What it does: allows the user to have easy access to guest information such as the proportion of guests\u0027 RSVP statuses, and a list of unique dietary requirements.","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"   * Justification: This feature allows users to easily see the statistics of their guest list. This is useful for the user to see how many guests are coming, not coming, or unsure yet. It is also useful for the user to see the dietary requirements of their guests, so that they can organise the catering accordingly.","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"   * Highlights: One challenge faced was making each component react and change accordingly after each command execution. This required rebuilding parts of the UI after each command entered. Another challenge was to pass the correct data to the UI components. This required the use of the `RsvpStatistics` and `DietaryRequirementStatistics` classes to store the data.","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"5. **New Feature**: Reworked the UI to suit the two-list ideology.","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"   * What it does: displays two lists side by side, one for guests, and one for vendors. The statistics panel with the logo is displayed alongside the two lists.","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"   * Justification: originally, AB3 is designed taller than wide. By making WedLog wider than tall, it allows the user to see more information at a glance, and is more suitable for the two-list ideology.","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"### Code Contributed","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"[RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dkeaganpzh\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"### Documentation","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"* **User Guide**:","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    * Added section on Rsvp Status panel.","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    * Added section on Dietary Requirements panel.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    * Added descriptions to each feature/command.","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"* **Developer Guide**:","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"    * Updated Glossary and Appendix. [PR #42](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/42)","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"    * Created new class diagrams for UI and Guest. [PR #144](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/144)","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    * Added documentation for implementation of tracking of guests and vendors. [PR #144](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/144)","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"    * Added \"Planned Enhancements\" section. [PR #238](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/238)","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"### Contributions to team tasks","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"* **Project Management**:","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"    * Created team repository.","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"    * Migrated team documentation to MarkBind.","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"    * Set up Codecov to track code coverage. [\\#1](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/1)","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"    * Managed releases `v1.2`, `v1.3(trial)`, `v1.3`.","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"### Contributions beyond the Project Team","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"* **PE-D**:","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"    * Identified and published [9 issues](https://github.com/keaganpzh/ped) to another team\u0027s repository.","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"  ","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"keaganpzh":60}},{"path":"docs/team/p-xp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"---","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"layout: default.md","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"title: \"Pan Xinping\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"---","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"# Overview","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding. ","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. ","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"It is written in Java, and has about 10 kLoC. This project is based on [AddressBook - Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"* **New Feature**: Added the ability to add guests and vendors.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"    * What it does: Allows users to add new guests and vendors with all the associated fields to WedLog.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"    * Justification: This feature is central to the product as users cannot manage guests and vendors without being able to add them.","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"    * Highlights: The implementation was challenging as guests and vendors had optional fields which users could choose not to fill in.","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"* **New Feature**: Added the ability to edit guests.","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"    * What it does: Allows the user to edit fields of a guest.","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"    * Justification: This feature improves the product significantly because a user may want to modify guest information and the app should provide an easy way to do so without having to remove and add the guest back.","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"    * Highlights: The implementation was challenging because guests have optional fields which can be removed by using empty prefixes in the edit command. This required a careful consideration of design alternatives.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"* **New Feature**: Added the ability to filter guests by fields that stored information as tags (i.e., Dietary Requirements and Tags fields).","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    * What it does: Allows users to filter all guests using tag fields.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    * Justification: This feature improves the product significantly as users may want to view all users that belong to a certain category (e.g. \"vegans\", or \"classmates\") without searching for them individually.","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    * Highlights: ","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"      * The implementation was challenging as unlike non-tag fields, tag fields can store multiple values (e.g. a guest may have two Dietary Requirements tags). Hence, there was a need to carefully consider use cases to decide on the final design where users can filter via multiple tags.","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"      * Ensured high test effectiveness and efficiency by applying test heuristics like equivalence partitions to test designs (see `TagPredicateTest` and `GuestDietaryPredicateTest`).","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dp-xp\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"* **Contribution to team tasks**:","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    * Organised team meeting agenda based on weekly deliverables and tracked list of TODOs determined during team discussions.","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"    * Allocated issues identified in PED to team members on GitHub.","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"* **Documentation**:","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    * User Guide:","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"        * Added documentation for `guest edit` [\\#127](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/127)","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        * Updated documentation for `guest add` [\\#105](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/105), `vendor add` [\\#106](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/106), and`guest filter` [\\#153](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/153)","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    * Developer Guide:","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        * Added implementation details of the `add` feature [\\#150](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/150), [\\#268](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/268)","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        * Wrote Appendix D: Effort [\\#268](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/268)","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"* **Community**:","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#41](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/41), [\\#142](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/142)","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"    * Reported [17 bugs and suggestions](https://github.com/p-xp/ped/issues) for other teams","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"p-xp":48,"wasjoe1":1}},{"path":"docs/team/samuelim01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"  layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"  title: \"Samuel Lim\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"### Project: WedLog","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on [AddressBook - Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"* **New Feature**: Modified some fields to be optional for guests and vendors.","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"  * What it does: allows the user to leave optional fields empty for guests and vendors.","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"  * Justification: This feature improves the product significantly because a user may not want to specify all the fields of a guest or vendor, and the app should provide the flexibility for the user to do so.","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"  * Credits: Partially adapted from [AY2324S1-CS2103T-W08-3](https://github.com/AY2324S1-CS2103T-W08-3/tp/).","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"* **New Feature**: Added the ability to edit vendors.","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"  * What it does: allows the user to edit fields of a vendor.","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"  * Justification: This feature improves the product significantly because a user may want to modify vendor information and the app should provide an easy way to do so without having to remove and add back the vendor.","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"  * Highlights: The implementation was challenging because vendors have optional fields which can be removed by using empty prefixes in the edit command. This required a careful consideration of design alternatives.","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"  * Credits: Adapted from [AddressBook Level-4](https://github.com/se-edu/addressbook-level4).","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsamuelim01\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"* **Project management**:","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"  * Renamed `seedu` package to `wedlog` : [\\#96](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/96)","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"  * Managed releases `v1.1` - `v1.1.1` (2 releases: [1](https://github.com/AY2324S1-CS2103T-F11-2/tp/releases/tag/v1.1), [2](https://github.com/AY2324S1-CS2103T-F11-2/tp/releases/tag/v1.1.1)) on GitHub","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"* **Documentation**:","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"  * User Guide: ","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"    * Added documentation for the features `vendor add` and `vendor delete`: [\\#40](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/40/)","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    * Added documentation for the features `undo` and `redo`: [\\#121](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/121)","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    * Added documentation for the feature `vendor edit`: [\\#128](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/128)","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    * Added cosmetic tweaks to the structure: [\\#154](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/154), [\\#162](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/162)","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"  * Developer Guide:","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    * Added non-functional requirements: [\\#39](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/39)","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    * Updated Logic, Model, Storage component sections: [\\#112](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/112)","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    * Added implementation details for the feature `edit`: [\\#149](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/149)","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    * Updated Appendix B: [\\#262](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/262)","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"* **Community**:","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#116](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/116), [\\#127](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/127), [\\#129](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/129) ","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"  * Reported [bugs and suggestions](https://github.com/samuelim01/ped/issues) for other teams","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"samuelim01":47}},{"path":"docs/team/tllshan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"  title: \"Shannon Tsou\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"### Project: WedLog","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on [AddressBook - Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"### Features ","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"1. **New Feature**: Added the ability to delete guests.","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"   * What it does: allows the user to delete guests from the guest list.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"   * Justification: This feature allows users to remove guests whom they no longer wish to keep track of in WedLog.","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"1. **New Feature**: Added the ability to delete vendors.","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"   * What it does: allows the user to delete vendors from the vendor list.","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"   * Justification: This feature allows users to remove vendors whom they no longer wish to keep track of in WedLog.","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"1. **New Feature**: Added the ability to track a guest\u0027s table number.","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"   * What it does: allows the user to set a guest\u0027s table to any number.","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"   * Justification: This feature allows users to assign guests to specific tables and keep track of which guests are seated at which tables.","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"1. **New Feature**: Restyled the UI to match the WedLog brand.","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"   * What it does: The restyled UI updates the visual design and layout of the application to align with the WedLog brand. This includes changes to the color scheme, typography, icons, and overall aesthetic to provide a consistent and visually appealing user experience. ","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"   * Justification: This UI restyling is implemented to ensure brand consistency and improve the overall look and feel of the application. By aligning with the WedLog theme, it enhances the user interface\u0027s cohesiveness and user engagement, creating a more enjoyable user experience.","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"### Code Contributed","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"* [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dtllshan\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"### Project Management","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"* Changed product icon to WedLog logo: [PR #142](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/142)","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"* Improved user guide formatting: [PR #130](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/130)","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"* Maintained issue tracker","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"### Documentation","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"* **User Guide**:","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"  * Added documentation for the features `guest delete` and `vendor delete`: [PR #41](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/41)","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"* **Developer Guide**:","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"  * Added user stories: [PR #34](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/34)","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"  * Added implementation details for the `delete` feature: [PR #146](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/146)","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"tllshan":46}},{"path":"docs/team/wasjoe1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"---","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"layout: default.md","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"title: \"Joe Chua\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"---","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"### Project: WedLog","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on [AddressBook - Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"* **New Feature**: Added the ability to parse inputs for all parameters in guest and vendor commands.","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    * What it does: Parses the user inputs and returns command to be executed.","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    * Justification: This feature improves the product significantly because guest and vendor command inputs can be parsed and commands can be executed accordingly.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    * Highlights: The implementation was challenging because each command had a respective parser class which accepted different types of inputs respectively. This required careful consideration of possible user inputs.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    * Credits: Partially adapted from `Parser` classes in [AY2324S1-CS2103T-W08-3](https://github.com/AY2324S1-CS2103T-W08-3/tp/).","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"* **New Feature**: Added the ability to display lists of guests and vendors.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    * What it does: allows the user to view all guests and vendors in a list format.","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    * Justification: This feature improves the product significantly because a user may want to have an overarching view of all their guests that will be attending the wedding and the vendors they have in contact.","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    * Credits: Partially adapted from `ListCommand` class in [AY2324S1-CS2103T-W08-3](https://github.com/AY2324S1-CS2103T-W08-3/tp/).","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"* **New Feature**: Added the ability to filter guests and vendors.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    * What it does: allows the user to filter guest and vendor lists by all non-tag parameters.","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    * Justification: This feature improves the product significantly because a user can now filter the guest and vendor list by more parameters, giving them a more customised filter feature.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    * Highlights: The implementation was challenging because each parameter had a respective predicate class which accepted different types of inputs respectively. This required careful consideration of possible user inputs.* ","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"      Also employed defensive programming practices in implementation and applied test heuristics in test case design (observed in Predicate classes e.g. `NamePredicate` and `NamePredicateTest`).","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    * Credits: Partially adapted from `FindCommand` and `NameContainsKeywordsPredicate` class in [AY2324S1-CS2103T-W08-3](https://github.com/AY2324S1-CS2103T-W08-3/tp/).","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"* **New Feature**: Modified the guest class to take in Dietary requirement field (initial implementation).","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    * What it does: allows the user to add a dietary requirement to guests.","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    * Justification: This feature improves the product significantly because a user can now keep track of dietary requirements for guests.","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    * Credits: Partially adapted from `Phone` class in [AY2324S1-CS2103T-W08-3](https://github.com/AY2324S1-CS2103T-W08-3/tp/).","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dwasjoe1\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"* **Project management**:","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    * Managed release `v1.3` (https://github.com/AY2324S1-CS2103T-F11-2/tp/releases/tag/v1.3) on GitHub.","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"* **Documentation**:","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    * User Guide:","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        * Added documentation for the features `guest list` and `vendor list`: [\\#40](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/40/)","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        * Added documentation for the features `guest filter` and `vendor filter`: [\\#121](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/121)","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        * Added documentation for the feature `clear`: [\\#121](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/121)","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        * Added documentation for dietary requirements field: [\\#98](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/98)","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        * Vetted UG before PED: [\\#174](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/174), [\\#175](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/175)","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        * Updated Appendix: [\\#267](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/267)","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    * Developer Guide:","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        * Added use case section: [\\#38](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/38)","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        * Added implementation details for the feature `filter`: [\\#145](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/145)","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"* **Community**:","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"    * PRs reviewed (with non-trivial review comments): [#\\164](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/164), [#\\153](https://github.com/AY2324S1-CS2103T-F11-2/tp/pull/153)","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    * Reported [13 bugs and suggestions](https://github.com/wasjoe1/ped/issues) for other teams","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"wasjoe1":54}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/wedlog/address/logic/command` directory.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"Create a `RemarkCommandParser` class in the `wedlog.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"Create a new `Remark` in `wedlog.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"samuelim01"},"content":"Simply add the following to [`wedlog.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"samuelim01":7,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"The `address` field in `Person` is actually an instance of the `wedlog.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samuelim01":1,"-":114}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `wedlog.address.logic.Logic`.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"A quick look at the `wedlog.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samuelim01":2,"-":309}},{"path":"src/main/java/wedlog/address/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"samuelim01":4,"-":69}},{"path":"src/main/java/wedlog/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"samuelim01":2,"-":39}},{"path":"src/main/java/wedlog/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.Version;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.LogicManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.AddressBookStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.Storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.StorageManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.ui.Ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.ui.UiManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing WedLog ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        logger.info(\"Starting WedLog \" + MainApp.VERSION);","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"keaganpzh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping WedLog ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":26,"keaganpzh":2,"-":158}},{"path":"src/main/java/wedlog/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":64}},{"path":"src/main/java/wedlog/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    private static final double DEFAULT_HEIGHT \u003d 660;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    private static final double DEFAULT_WIDTH \u003d 1200;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tllshan":1,"samuelim01":2,"keaganpzh":1,"-":78}},{"path":"src/main/java/wedlog/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":105}},{"path":"src/main/java/wedlog/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":120}},{"path":"src/main/java/wedlog/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core.index;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"samuelim01":2,"-":67}},{"path":"src/main/java/wedlog/address/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"samuelim01":1,"-":10}},{"path":"src/main/java/wedlog/address/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":1,"-":20}},{"path":"src/main/java/wedlog/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":2,"-":40}},{"path":"src/main/java/wedlog/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"     * Returns true if any of the {@code items} are true.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    public static boolean isAnyTrue(Boolean... items) {","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        return items !\u003d null \u0026\u0026 Arrays.asList(items).contains(true);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":8,"-":34}},{"path":"src/main/java/wedlog/address/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":3,"-":20}},{"path":"src/main/java/wedlog/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":82}},{"path":"src/main/java/wedlog/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":3,"-":141}},{"path":"src/main/java/wedlog/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":66}},{"path":"src/main/java/wedlog/address/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"samuelim01":1,"-":52}},{"path":"src/main/java/wedlog/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.DietaryRequirementStatistics;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"     * @see wedlog.address.model.Model#getAddressBook()","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    /** Returns an unmodifiable view of the filtered list of guests */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    ObservableList\u003cGuest\u003e getFilteredGuestList();","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    /** Returns an unmodifiable view of the filtered list of vendors */","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"    ObservableList\u003cVendor\u003e getFilteredVendorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code RsvpStatistics} with information about the RSVP statuses of guests.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code RsvpStatistics}","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"    RsvpStatistics getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code DietaryRequirementStatistics} with information about the dietary requirements of guests.","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code DietaryRequirementStatistics}","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"    DietaryRequirementStatistics getDietaryRequirementStatistics();","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samuelim01":7,"keaganpzh":22,"-":39}},{"path":"src/main/java/wedlog/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.DietaryRequirementStatistics;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.Storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"        return model.getFilteredGuestList();","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"    public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"        return model.getFilteredVendorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"keaganpzh"},"content":"        return model.getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirementStatistics getDietaryRequirementStatistics() {","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"keaganpzh"},"content":"        return model.getDietaryRequirementStatistics();","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"samuelim01":11,"keaganpzh":22,"-":74}},{"path":"src/main/java/wedlog/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_NO_PREFIX_FOUND \u003d \"No prefix was found in the command! \\n%1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_INVALID_GUEST_DISPLAYED_INDEX \u003d \"The guest index provided is invalid.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX \u003d \"The vendor index provided is invalid.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_GUESTS_LISTED_OVERVIEW \u003d \"%1$d guest(s) listed.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_VENDORS_LISTED_OVERVIEW \u003d \"%1$d vendor(s) listed.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"     * Formats the {@code Guest} for display to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    public static String format(Guest guest) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        final DisplayBuilder builder \u003d new DisplayBuilder(guest.getName().fullName);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        builder.addOptional(\"Phone\", guest.getPhone())","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"                .addOptional(\"Email\", guest.getEmail())","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"                .addOptional(\"Address\", guest.getAddress())","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"                .add(\"RSVP Status\", guest.getRsvpStatus())","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"                .addDietaryRequirements(guest.getDietaryRequirements())","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"                .addOptional(\"Table Number\", guest.getTableNumber())","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"                .addTags(guest.getTags());","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    public static String format(Vendor vendor) {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        final DisplayBuilder builder \u003d new DisplayBuilder(vendor.getName().fullName);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        builder.addOptional(\"Phone\", vendor.getPhone())","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"                .addOptional(\"Email\", vendor.getEmail())","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"                .addOptional(\"Address\", vendor.getAddress())","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"                .addTags(vendor.getTags());","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    private static class DisplayBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \": \";","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"        DisplayBuilder(String objectName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"            stringBuilder.append(objectName);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        public DisplayBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"            stringBuilder.append(FIELD_SEPARATOR)","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"                    .append(fieldName)","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"                    .append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"            return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        public DisplayBuilder addOptional(String fieldName, Optional\u003c? extends Object\u003e fieldValue) {","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"            if (!fieldValue.isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"                return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"            stringBuilder.append(FIELD_SEPARATOR)","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"                    .append(fieldName)","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"                    .append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue.get());","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"            return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        /**","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"         * Appends dietary requirements to the {@code Guest} to be displayed, if they are present.","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"         */","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        private DisplayBuilder addDietaryRequirements(Set\u003cDietaryRequirement\u003e dietaryRequirements) {","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"            if (dietaryRequirements.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"                return this;","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"            stringBuilder.append(FIELD_SEPARATOR).append(\"Dietary Requirements\").append(FIELD_NAME_VALUE_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"            dietaryRequirements.forEach(stringBuilder::append);","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"            return this;","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        /**","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"         * Appends tags to the {@code Guest} to be displayed, if they are present.","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"         */","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        private DisplayBuilder addTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"                return this;","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"            stringBuilder.append(FIELD_SEPARATOR).append(\"Tags\").append(FIELD_NAME_VALUE_SEPARATOR);","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"            tags.forEach(stringBuilder::append);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"            return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tllshan":26,"samuelim01":48,"p-xp":23,"-":28}},{"path":"src/main/java/wedlog/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tllshan":1,"samuelim01":4,"-":19}},{"path":"src/main/java/wedlog/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":3,"-":17}},{"path":"src/main/java/wedlog/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":80}},{"path":"src/main/java/wedlog/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"samuelim01":2,"-":17}},{"path":"src/main/java/wedlog/address/logic/commands/GuestAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.GuestCommandParser.GUEST_COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":" * Adds a Guest to WedLog.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"public class GuestAddCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_USAGE \u003d GUEST_COMMAND_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"            + \": Adds a guest to the address book. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"            + \"Compulsory Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"            + \"Optional Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_RSVP + \"RSVP STATUS] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_TABLE + \"TABLE_NUMBER] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_DIETARY + \"DIETARY REQUIREMENT]... \"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"            + \"Example: \" + GUEST_COMMAND_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"            + PREFIX_RSVP + \"yes \"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            + PREFIX_TABLE + \"13 \"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"            + PREFIX_DIETARY + \"vegetarian \"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"            + PREFIX_TAG + \"friends\";","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New guest added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"This guest already exists in WedLog.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    private final Guest toAdd;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"     * Creates a GuestAddCommand to add the specified {@code Guest}","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    public GuestAddCommand(Guest guest) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        this.toAdd \u003d guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        if (model.hasGuest(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        model.addGuest(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        // checks that Object is a GuestAddCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof GuestAddCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand otherGuestAddCommand \u003d (GuestAddCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"        return toAdd.equals(otherGuestAddCommand.toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"                .add(\"toAddGuest\", toAdd)","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":7,"samuelim01":6,"p-xp":67,"wasjoe1":15}},{"path":"src/main/java/wedlog/address/logic/commands/GuestDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.GuestCommandParser.GUEST_COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * Deletes a Guest from the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"public class GuestDeleteCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_USAGE \u003d GUEST_COMMAND_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"            + \": Deletes the guest identified by the index number used in the displayed guest list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            + \"Example: \" + GUEST_COMMAND_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_DELETE_GUEST_SUCCESS \u003d \"Deleted guest: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public GuestDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        List\u003cGuest\u003e lastShownGuestList \u003d model.getFilteredGuestList();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownGuestList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        Guest guestToDelete \u003d lastShownGuestList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        model.deleteGuest(guestToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GUEST_SUCCESS, Messages.format(guestToDelete)));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        if (!(other instanceof GuestDeleteCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand otherGuestDeleteCommand \u003d (GuestDeleteCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        return targetIndex.equals(otherGuestDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":46,"samuelim01":6,"wasjoe1":18}},{"path":"src/main/java/wedlog/address/logic/commands/GuestEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.GuestCommandParser.GUEST_COMMAND_WORD;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":" * Edits the details of an existing Guest in the address book.","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"public class GuestEditCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"    public static final String MESSAGE_USAGE \u003d GUEST_COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"            + COMMAND_WORD + \": Edits the details of the guest identified \"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"            + \"by the index number used in the displayed guest list. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"            + \"Compulsory Parameter: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"            + \"Optional Parameters (fields to edit, min 1): \"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_RSVP + \"RSVP_STATUS] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_TABLE + \"TABLE_NUMBER]\"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_DIETARY + \"DIETARY_REQUIREMENT]... \"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"            + \"Example: \" + GUEST_COMMAND_WORD + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_EDIT_GUEST_SUCCESS \u003d \"Edited guest: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"A guest with this name already exists in WedLog.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"    private final EditGuestDescriptor editGuestDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"     * Creates a {@code GuestEditCommand} with the given {@code Index} and {@code EditGuestDescriptor}.","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"     * @param index of the guest in the filtered guest list to edit","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"     * @param editGuestDescriptor details to edit the guest with","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"    public GuestEditCommand(Index index, EditGuestDescriptor editGuestDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        requireNonNull(editGuestDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        this.editGuestDescriptor \u003d new EditGuestDescriptor(editGuestDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        List\u003cGuest\u003e lastShownList \u003d model.getFilteredGuestList();","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        Guest guestToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        // Creates updated version of Guest by combining values pre- and post-edit.","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        Guest editedGuest \u003d editGuestDescriptor.createEditedGuest(guestToEdit);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        logger.fine(\"Edited Guest: \" + editedGuest);","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        // Checks that updated Guest does not already exist in WedLog.","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        if (!guestToEdit.isSamePerson(editedGuest) \u0026\u0026 model.hasGuest(editedGuest)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        model.setGuest(guestToEdit, editedGuest);","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_GUEST_SUCCESS, Messages.format(editedGuest)));","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof GuestEditCommand)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand otherGuestEditCommand \u003d (GuestEditCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"        return index.equals(otherGuestEditCommand.index)","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"                \u0026\u0026 editGuestDescriptor.equals(otherGuestEditCommand.editGuestDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"                .add(\"editGuestDescriptor\", editGuestDescriptor)","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"                .toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"     * Stores the details to edit the guest with.","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"     * For non-empty fields, the field value will replace the corresponding field value of the existing guest.","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"     * For empty fields, the existing field value will be deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"    public static class EditGuestDescriptor {","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"        private Name name;","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"        private Email email;","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"        private Address address;","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"        private RsvpStatus rsvp;","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"        private Set\u003cDietaryRequirement\u003e dietary;","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"        private TableNumber table;","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"        private boolean isNameEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"        private boolean isPhoneEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"        private boolean isEmailEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"        private boolean isAddressEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"        private boolean isRsvpEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"        private boolean isDietaryEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"        private boolean isTableEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"        private boolean isTagsEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        public EditGuestDescriptor() {}","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        public EditGuestDescriptor(EditGuestDescriptor toCopy) {","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"            name \u003d toCopy.name;","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"            phone \u003d toCopy.phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"            email \u003d toCopy.email;","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"            address \u003d toCopy.address;","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"            rsvp \u003d toCopy.rsvp;","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"            dietary \u003d toCopy.dietary;","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"            table \u003d toCopy.table;","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"            tags \u003d (toCopy.tags !\u003d null) ? new HashSet\u003c\u003e(toCopy.tags) : null;","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"            isNameEdited \u003d toCopy.isNameEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"            isPhoneEdited \u003d toCopy.isPhoneEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"            isEmailEdited \u003d toCopy.isEmailEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"            isAddressEdited \u003d toCopy.isAddressEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"            isRsvpEdited \u003d toCopy.isRsvpEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"            isDietaryEdited \u003d toCopy.isDietaryEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"            isTableEdited \u003d toCopy.isTableEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"            isTagsEdited \u003d toCopy.isTagsEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"            return CollectionUtil.isAnyTrue(isNameEdited, isPhoneEdited, isEmailEdited, isAddressEdited, isRsvpEdited,","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"                    isDietaryEdited, isTableEdited, isTagsEdited);","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"            isNameEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"            isPhoneEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"            isEmailEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-22"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"            isAddressEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-10-22"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"        public void setRsvp(RsvpStatus rsvp) {","lastModifiedDate":"2023-10-22"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"            isRsvpEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":216,"author":{"gitId":"p-xp"},"content":"            if (rsvp \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"                this.rsvp \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"p-xp"},"content":"            this.rsvp \u003d rsvp;","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":221,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":222,"author":{"gitId":"p-xp"},"content":"        public void setTable(TableNumber table) {","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"p-xp"},"content":"            isTableEdited \u003d true;","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"p-xp"},"content":"            this.table \u003d table;","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":226,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":227,"author":{"gitId":"p-xp"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"p-xp"},"content":"         * Sets {@code dietary} to this object\u0027s {@code dietary}.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"p-xp"},"content":"         * {@code dietary} cannot be null.","lastModifiedDate":"2023-11-11"},{"lineNumber":230,"author":{"gitId":"p-xp"},"content":"         * A defensive copy of {@code dietary} is used internally.","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"p-xp"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"p-xp"},"content":"        public void setDietary(Set\u003cDietaryRequirement\u003e dietary) {","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"p-xp"},"content":"            assert dietary !\u003d null : \"dietary requirements passed to setDietary should not be null!\";","lastModifiedDate":"2023-11-11"},{"lineNumber":234,"author":{"gitId":"p-xp"},"content":"            isDietaryEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"p-xp"},"content":"            this.dietary \u003d new HashSet\u003c\u003e(dietary);","lastModifiedDate":"2023-11-11"},{"lineNumber":236,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"p-xp"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"p-xp"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"p-xp"},"content":"         * {@code tags} cannot be null.","lastModifiedDate":"2023-11-11"},{"lineNumber":241,"author":{"gitId":"p-xp"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"p-xp"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"p-xp"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"p-xp"},"content":"            assert tags !\u003d null : \"tags provided to setTags should not be null!\";","lastModifiedDate":"2023-11-11"},{"lineNumber":245,"author":{"gitId":"p-xp"},"content":"            isTagsEdited \u003d true;","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"p-xp"},"content":"            this.tags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2023-11-11"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"p-xp"},"content":"        public Name getName() {","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"p-xp"},"content":"            return name;","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"p-xp"},"content":"        public Phone getPhone() {","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"p-xp"},"content":"            return phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"p-xp"},"content":"        public Email getEmail() {","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"            return email;","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"        public Address getAddress() {","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"            return address;","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"p-xp"},"content":"        public RsvpStatus getRsvp() {","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"p-xp"},"content":"            return rsvp;","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":268,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":269,"author":{"gitId":"p-xp"},"content":"        public TableNumber getTable() {","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"p-xp"},"content":"            return table;","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":272,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":273,"author":{"gitId":"p-xp"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":274,"author":{"gitId":"p-xp"},"content":"         * Returns an unmodifiable dietary requirements set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"p-xp"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"p-xp"},"content":"         * Returns {@code null} if {@code dietary} is null.","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"p-xp"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":278,"author":{"gitId":"p-xp"},"content":"        public Set\u003cDietaryRequirement\u003e getDietary() {","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"p-xp"},"content":"            return (dietary !\u003d null) ? Collections.unmodifiableSet(dietary) : null;","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":281,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":282,"author":{"gitId":"p-xp"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":283,"author":{"gitId":"p-xp"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-22"},{"lineNumber":284,"author":{"gitId":"p-xp"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-22"},{"lineNumber":285,"author":{"gitId":"p-xp"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-22"},{"lineNumber":286,"author":{"gitId":"p-xp"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":287,"author":{"gitId":"p-xp"},"content":"        public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"p-xp"},"content":"            return (tags !\u003d null) ? Collections.unmodifiableSet(tags) : null;","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"p-xp"},"content":"        public boolean getIsNameEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"p-xp"},"content":"            return isNameEdited;","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"p-xp"},"content":"        public boolean getIsPhoneEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"p-xp"},"content":"            return isPhoneEdited;","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"p-xp"},"content":"        public boolean getIsEmailEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"p-xp"},"content":"            return isEmailEdited;","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"p-xp"},"content":"        public boolean getIsAddressEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"p-xp"},"content":"            return isAddressEdited;","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"p-xp"},"content":"        public boolean getIsRsvpEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"p-xp"},"content":"            return isRsvpEdited;","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"p-xp"},"content":"        public boolean getIsTableEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"p-xp"},"content":"            return isTableEdited;","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"p-xp"},"content":"        public boolean getIsDietaryEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":313,"author":{"gitId":"p-xp"},"content":"            return isDietaryEdited;","lastModifiedDate":"2023-10-26"},{"lineNumber":314,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":315,"author":{"gitId":"p-xp"},"content":"        public boolean getIsTagsEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"p-xp"},"content":"            return isTagsEdited;","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":318,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":319,"author":{"gitId":"p-xp"},"content":"        /**","lastModifiedDate":"2023-10-22"},{"lineNumber":320,"author":{"gitId":"p-xp"},"content":"         * Creates and returns a {@code Guest} with the details of {@code guestToEdit}.","lastModifiedDate":"2023-10-25"},{"lineNumber":321,"author":{"gitId":"p-xp"},"content":"         */","lastModifiedDate":"2023-10-22"},{"lineNumber":322,"author":{"gitId":"p-xp"},"content":"        private Guest createEditedGuest(Guest guestToEdit) {","lastModifiedDate":"2023-10-25"},{"lineNumber":323,"author":{"gitId":"p-xp"},"content":"            assert guestToEdit !\u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":324,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":325,"author":{"gitId":"p-xp"},"content":"            Name updatedName \u003d isNameEdited ? name : guestToEdit.getName();","lastModifiedDate":"2023-10-22"},{"lineNumber":326,"author":{"gitId":"p-xp"},"content":"            Phone updatedPhone \u003d isPhoneEdited ? phone : guestToEdit.getPhone().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":327,"author":{"gitId":"p-xp"},"content":"            Email updatedEmail \u003d isEmailEdited ? email : guestToEdit.getEmail().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":328,"author":{"gitId":"p-xp"},"content":"            Address updatedAddress \u003d isAddressEdited ? address : guestToEdit.getAddress().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":329,"author":{"gitId":"p-xp"},"content":"            RsvpStatus updatedRsvp \u003d isRsvpEdited ? rsvp : guestToEdit.getRsvpStatus();","lastModifiedDate":"2023-10-22"},{"lineNumber":330,"author":{"gitId":"p-xp"},"content":"            TableNumber updatedTable \u003d isTableEdited ? table : guestToEdit.getTableNumber().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":331,"author":{"gitId":"p-xp"},"content":"            Set\u003cDietaryRequirement\u003e updatedDietary \u003d isDietaryEdited","lastModifiedDate":"2023-10-26"},{"lineNumber":332,"author":{"gitId":"p-xp"},"content":"                    ? Collections.unmodifiableSet(dietary)","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"p-xp"},"content":"                    : guestToEdit.getDietaryRequirements();","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"p-xp"},"content":"            Set\u003cTag\u003e updatedTags \u003d isTagsEdited","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"p-xp"},"content":"                    ? Collections.unmodifiableSet(tags)","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"p-xp"},"content":"                    : guestToEdit.getTags();","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":338,"author":{"gitId":"p-xp"},"content":"            return new Guest(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRsvp, updatedDietary,","lastModifiedDate":"2023-10-22"},{"lineNumber":339,"author":{"gitId":"p-xp"},"content":"                    updatedTable, updatedTags);","lastModifiedDate":"2023-10-22"},{"lineNumber":340,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":341,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":342,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":343,"author":{"gitId":"p-xp"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":344,"author":{"gitId":"p-xp"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":345,"author":{"gitId":"p-xp"},"content":"                return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":346,"author":{"gitId":"p-xp"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":347,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":348,"author":{"gitId":"p-xp"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":349,"author":{"gitId":"p-xp"},"content":"            if (!(other instanceof EditGuestDescriptor)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":350,"author":{"gitId":"p-xp"},"content":"                return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":351,"author":{"gitId":"p-xp"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":352,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":353,"author":{"gitId":"p-xp"},"content":"            EditGuestDescriptor otherEditGuestDescriptor \u003d (EditGuestDescriptor) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":354,"author":{"gitId":"p-xp"},"content":"            return Objects.equals(name, otherEditGuestDescriptor.name)","lastModifiedDate":"2023-10-22"},{"lineNumber":355,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditGuestDescriptor.phone)","lastModifiedDate":"2023-10-22"},{"lineNumber":356,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditGuestDescriptor.email)","lastModifiedDate":"2023-10-22"},{"lineNumber":357,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditGuestDescriptor.address)","lastModifiedDate":"2023-10-22"},{"lineNumber":358,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 Objects.equals(rsvp, otherEditGuestDescriptor.rsvp)","lastModifiedDate":"2023-10-22"},{"lineNumber":359,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 Objects.equals(dietary, otherEditGuestDescriptor.dietary)","lastModifiedDate":"2023-10-22"},{"lineNumber":360,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 Objects.equals(table, otherEditGuestDescriptor.table)","lastModifiedDate":"2023-10-22"},{"lineNumber":361,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditGuestDescriptor.tags)","lastModifiedDate":"2023-10-25"},{"lineNumber":362,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 isNameEdited \u003d\u003d otherEditGuestDescriptor.isNameEdited","lastModifiedDate":"2023-10-25"},{"lineNumber":363,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 isPhoneEdited \u003d\u003d otherEditGuestDescriptor.isPhoneEdited","lastModifiedDate":"2023-10-25"},{"lineNumber":364,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 isEmailEdited \u003d\u003d otherEditGuestDescriptor.isEmailEdited","lastModifiedDate":"2023-10-25"},{"lineNumber":365,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 isAddressEdited \u003d\u003d otherEditGuestDescriptor.isAddressEdited","lastModifiedDate":"2023-10-25"},{"lineNumber":366,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 isRsvpEdited \u003d\u003d otherEditGuestDescriptor.isRsvpEdited","lastModifiedDate":"2023-10-25"},{"lineNumber":367,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 isDietaryEdited \u003d\u003d otherEditGuestDescriptor.isDietaryEdited","lastModifiedDate":"2023-10-25"},{"lineNumber":368,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 isTableEdited \u003d\u003d otherEditGuestDescriptor.isTableEdited","lastModifiedDate":"2023-10-25"},{"lineNumber":369,"author":{"gitId":"p-xp"},"content":"                    \u0026\u0026 isTagsEdited \u003d\u003d otherEditGuestDescriptor.isTagsEdited;","lastModifiedDate":"2023-10-25"},{"lineNumber":370,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":371,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":372,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":373,"author":{"gitId":"p-xp"},"content":"        public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":374,"author":{"gitId":"p-xp"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-22"},{"lineNumber":375,"author":{"gitId":"p-xp"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-22"},{"lineNumber":376,"author":{"gitId":"p-xp"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-22"},{"lineNumber":377,"author":{"gitId":"p-xp"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-22"},{"lineNumber":378,"author":{"gitId":"p-xp"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-22"},{"lineNumber":379,"author":{"gitId":"p-xp"},"content":"                    .add(\"rsvp status\", rsvp)","lastModifiedDate":"2023-10-22"},{"lineNumber":380,"author":{"gitId":"p-xp"},"content":"                    .add(\"table number\", table)","lastModifiedDate":"2023-10-22"},{"lineNumber":381,"author":{"gitId":"p-xp"},"content":"                    .add(\"dietary requirements\", dietary)","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"p-xp"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-22"},{"lineNumber":383,"author":{"gitId":"p-xp"},"content":"                    .add(\"isNameEdited\", isNameEdited)","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"p-xp"},"content":"                    .add(\"isPhoneEdited\", isPhoneEdited)","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"p-xp"},"content":"                    .add(\"isEmailEdited\", isEmailEdited)","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"p-xp"},"content":"                    .add(\"isAddressEdited\", isAddressEdited)","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"p-xp"},"content":"                    .add(\"isRsvpEdited\", isRsvpEdited)","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"p-xp"},"content":"                    .add(\"isTableEdited\", isTableEdited)","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"p-xp"},"content":"                    .add(\"isDietaryEdited\", isDietaryEdited)","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"p-xp"},"content":"                    .add(\"isTagsEdited\", isTagsEdited)","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"p-xp"},"content":"                    .toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":392,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":393,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":394,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"tllshan":5,"p-xp":389}},{"path":"src/main/java/wedlog/address/logic/commands/GuestFilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.GuestCommandParser.GUEST_COMMAND_WORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":" * Filters and lists all Guests in address book whose fields contains any of the argument keywords.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"public class GuestFilterCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all guests whose fields contain any of \"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_RSVP + \"RSVP_STATUS] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_TABLE + \"TABLE_NUMBER]\"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_DIETARY + \"DIETARY_REQUIREMENT]... \"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"            + \"Example: \" + GUEST_COMMAND_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_RSVP + \"yes \"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            + PREFIX_TABLE + \"13 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_DIETARY + \"vegetarian \"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"            + PREFIX_TAG + \"friend\";","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    private final List\u003cPredicate\u003c? super Guest\u003e\u003e predicates;","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     * Creates a GuestFilterCommand which filters according to {@code predicates}","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    public GuestFilterCommand(List\u003cPredicate\u003c? super Guest\u003e\u003e predicates) {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // Defensive programming by not allowing a null to be assigned to predicates","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        assert predicates !\u003d null : \"Predicates passed to GuestFilterCommand should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        model.updateFilteredGuestList(preparePredicate(predicates));","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"                String.format(Messages.MESSAGE_GUESTS_LISTED_OVERVIEW, model.getFilteredGuestList().size()));","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        if (!(other instanceof GuestFilterCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        GuestFilterCommand otherFilterCommand \u003d (GuestFilterCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        return predicates.equals(otherFilterCommand.predicates);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"                .add(\"predicates\", predicates)","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"                .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"     * Creates a predicate which returns true if all predicates return true,","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"     * and false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    private Predicate\u003cGuest\u003e preparePredicate(List\u003cPredicate\u003c? super Guest\u003e\u003e predicates) {","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"        // all match here make it that all parameters have an AND relationship","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        return guest -\u003e predicates.stream().allMatch(predicate -\u003e predicate.test(guest));","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"tllshan":11,"samuelim01":17,"p-xp":1,"wasjoe1":71}},{"path":"src/main/java/wedlog/address/logic/commands/GuestListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * Lists all Guests in the address book to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"public class GuestListCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all guests.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":1,"samuelim01":4,"wasjoe1":17}},{"path":"src/main/java/wedlog/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":19}},{"path":"src/main/java/wedlog/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"//@@author samuelim01-reused","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"// Reused from Address Book(Level 4) with minor modifications.","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Restores the {@code Model}\u0027s address book to its previous state before undo.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Reverses the most recent undo command to WedLog. \";","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo successful.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"There is no change to redo!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.redoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"//@author","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"samuelim01":8,"-":31}},{"path":"src/main/java/wedlog/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"//@@author samuelim01-reused","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"// Reused from Address Book(Level 4) with minor modifications.","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Restores the {@code Model}\u0027s address book to its previous state.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undoes the most recent change to WedLog. \";","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo successful.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"There is no change to undo!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"samuelim01":8,"-":31}},{"path":"src/main/java/wedlog/address/logic/commands/VendorAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.VendorCommandParser.VENDOR_COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":" * Adds a Vendor to Wedlog.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"public class VendorAddCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_USAGE \u003d VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"            + \": Adds a vendor to the address book. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"            + \"Compulsory Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"            + \"Optional Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            + \"Example: \" + VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"            + PREFIX_TAG + \"florist\";","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New vendor added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public static final String MESSAGE_DUPLICATE_VENDOR \u003d \"This vendor already exists in WedLog.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    private final Vendor toAdd;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"     * Adds a Vendor to WedLog.","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    public VendorAddCommand(Vendor vendor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        this.toAdd \u003d vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"        if (model.hasVendor(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        model.addVendor(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        // checks that Object is a VendorAddCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof VendorAddCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand otherCommand \u003d (VendorAddCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        return toAdd.equals(otherCommand.toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"                .add(\"toAddVendor\", toAdd)","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":6,"samuelim01":6,"p-xp":58,"wasjoe1":15}},{"path":"src/main/java/wedlog/address/logic/commands/VendorDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.VendorCommandParser.VENDOR_COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * Deletes a Vendor from the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"public class VendorDeleteCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_USAGE \u003d VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"            + \": Deletes the vendor identified by the index number used in the displayed vendor list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            + \"Example: \" + VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_DELETE_VENDOR_SUCCESS \u003d \"Deleted vendor: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public VendorDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        List\u003cVendor\u003e lastShownVendorList \u003d model.getFilteredVendorList();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownVendorList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        Vendor vendorToDelete \u003d lastShownVendorList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        model.deleteVendor(vendorToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_VENDOR_SUCCESS, Messages.format(vendorToDelete)));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        if (!(other instanceof VendorDeleteCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand otherVendorDeleteCommand \u003d (VendorDeleteCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        return targetIndex.equals(otherVendorDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":48,"samuelim01":6,"wasjoe1":16}},{"path":"src/main/java/wedlog/address/logic/commands/VendorEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.VendorCommandParser.VENDOR_COMMAND_WORD;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":" * Edits the details of an existing vendor in the address book.","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"public class VendorEditCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_USAGE \u003d VENDOR_COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"            + COMMAND_WORD + \": Edits the details of the vendor identified \"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"            + \"by the index number used in the displayed vendor list. \"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"            + \"Compulsory Parameters: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"            + \"Optional Parameters: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"            + \"Example: \" + VENDOR_COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"            + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_EDIT_VENDOR_SUCCESS \u003d \"Edited vendor: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_DUPLICATE_VENDOR \u003d \"A vendor with this name already exists in WedLog.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    private final Index index;","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"    private final EditVendorDescriptor editVendorDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"     * @param index of the vendor in the filtered vendor list to edit","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"     * @param editVendorDescriptor details to edit the vendor with","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    public VendorEditCommand(Index index, EditVendorDescriptor editVendorDescriptor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(editVendorDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        this.editVendorDescriptor \u003d new EditVendorDescriptor(editVendorDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        List\u003cVendor\u003e lastShownList \u003d model.getFilteredVendorList();","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        Vendor vendorToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        Vendor editedVendor \u003d editVendorDescriptor.createEditedVendor(vendorToEdit);","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        if (!vendorToEdit.isSamePerson(editedVendor) \u0026\u0026 model.hasVendor(editedVendor)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        model.setVendor(vendorToEdit, editedVendor);","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        model.updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_VENDOR_SUCCESS, Messages.format(editedVendor)));","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof VendorEditCommand)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand otherEditCommand \u003d (VendorEditCommand) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 editVendorDescriptor.equals(otherEditCommand.editVendorDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"                .add(\"editVendorDescriptor\", editVendorDescriptor)","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"                .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"     * Stores the details to edit the vendor with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"     * corresponding field value of the vendor.","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"    public static class EditVendorDescriptor {","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        private Name name;","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"        private Email email;","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        private Address address;","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"        private boolean isNameEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"        private boolean isPhoneEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        private boolean isEmailEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        private boolean isAddressEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        private boolean isTagsEdited \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        public EditVendorDescriptor() {}","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"        public EditVendorDescriptor(EditVendorDescriptor toCopy) {","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"            name \u003d toCopy.name;","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"            phone \u003d toCopy.phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"            email \u003d toCopy.email;","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"            address \u003d toCopy.address;","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"            tags \u003d (toCopy.tags !\u003d null) ? new HashSet\u003c\u003e(toCopy.tags) : null;","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"            isNameEdited \u003d toCopy.isNameEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"            isPhoneEdited \u003d toCopy.isPhoneEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"            isEmailEdited \u003d toCopy.isEmailEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"            isAddressEdited \u003d toCopy.isAddressEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"            isTagsEdited \u003d toCopy.isTagsEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"            return CollectionUtil.isAnyTrue(isNameEdited, isPhoneEdited, isEmailEdited, isAddressEdited, isTagsEdited);","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"            isNameEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"            isPhoneEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"            isEmailEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"            isAddressEdited \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"            isTagsEdited \u003d tags !\u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"        public Name getName() {","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"            return name;","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"        public Phone getPhone() {","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"            return phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"        public Email getEmail() {","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"            return email;","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"        public Address getAddress() {","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"            return address;","lastModifiedDate":"2023-10-22"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":208,"author":{"gitId":"samuelim01"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"samuelim01"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"samuelim01"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"samuelim01"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"        public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-22"},{"lineNumber":213,"author":{"gitId":"samuelim01"},"content":"            return (tags !\u003d null) ? Collections.unmodifiableSet(tags) : null;","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"        public boolean isNameEdited() {","lastModifiedDate":"2023-10-22"},{"lineNumber":217,"author":{"gitId":"samuelim01"},"content":"            return isNameEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":218,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":219,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"samuelim01"},"content":"        public boolean isPhoneEdited() {","lastModifiedDate":"2023-10-22"},{"lineNumber":221,"author":{"gitId":"samuelim01"},"content":"            return isPhoneEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":222,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":223,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":224,"author":{"gitId":"samuelim01"},"content":"        public boolean isEmailEdited() {","lastModifiedDate":"2023-10-22"},{"lineNumber":225,"author":{"gitId":"samuelim01"},"content":"            return isEmailEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":226,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":227,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":228,"author":{"gitId":"samuelim01"},"content":"        public boolean isAddressEdited() {","lastModifiedDate":"2023-10-22"},{"lineNumber":229,"author":{"gitId":"samuelim01"},"content":"            return isAddressEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":230,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"        public boolean isTagsEdited() {","lastModifiedDate":"2023-10-22"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"            return isTagsEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"samuelim01"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":237,"author":{"gitId":"samuelim01"},"content":"         * Creates and returns a {@code Vendor} with the details of {@code vendorToEdit}","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"samuelim01"},"content":"         * edited with this {@code editVendorDescriptor}.","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"samuelim01"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":240,"author":{"gitId":"samuelim01"},"content":"        private Vendor createEditedVendor(Vendor vendorToEdit) {","lastModifiedDate":"2023-10-22"},{"lineNumber":241,"author":{"gitId":"samuelim01"},"content":"            assert vendorToEdit !\u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":242,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":243,"author":{"gitId":"samuelim01"},"content":"            Name updatedName \u003d isNameEdited ? name : vendorToEdit.getName();","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"samuelim01"},"content":"            Phone updatedPhone \u003d isPhoneEdited ? phone : vendorToEdit.getPhone().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"samuelim01"},"content":"            Email updatedEmail \u003d isEmailEdited ? email : vendorToEdit.getEmail().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":246,"author":{"gitId":"samuelim01"},"content":"            Address updatedAddress \u003d isAddressEdited ? address : vendorToEdit.getAddress().orElse(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":247,"author":{"gitId":"samuelim01"},"content":"            Set\u003cTag\u003e updatedTags \u003d isTagsEdited ? Collections.unmodifiableSet(tags) : vendorToEdit.getTags();","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"samuelim01"},"content":"            return new Vendor(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":251,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":252,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":253,"author":{"gitId":"samuelim01"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":254,"author":{"gitId":"samuelim01"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":255,"author":{"gitId":"samuelim01"},"content":"                return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":256,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":257,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":258,"author":{"gitId":"samuelim01"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":259,"author":{"gitId":"samuelim01"},"content":"            if (!(other instanceof EditVendorDescriptor)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":260,"author":{"gitId":"samuelim01"},"content":"                return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":261,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":262,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":263,"author":{"gitId":"samuelim01"},"content":"            EditVendorDescriptor otherEditVendorDescriptor \u003d (EditVendorDescriptor) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":264,"author":{"gitId":"samuelim01"},"content":"            return Objects.equals(name, otherEditVendorDescriptor.name)","lastModifiedDate":"2023-10-21"},{"lineNumber":265,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditVendorDescriptor.phone)","lastModifiedDate":"2023-10-21"},{"lineNumber":266,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditVendorDescriptor.email)","lastModifiedDate":"2023-10-21"},{"lineNumber":267,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditVendorDescriptor.address)","lastModifiedDate":"2023-10-21"},{"lineNumber":268,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditVendorDescriptor.tags)","lastModifiedDate":"2023-10-22"},{"lineNumber":269,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 isNameEdited \u003d\u003d otherEditVendorDescriptor.isNameEdited","lastModifiedDate":"2023-10-22"},{"lineNumber":270,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 isPhoneEdited \u003d\u003d otherEditVendorDescriptor.isPhoneEdited","lastModifiedDate":"2023-10-22"},{"lineNumber":271,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 isEmailEdited \u003d\u003d otherEditVendorDescriptor.isEmailEdited","lastModifiedDate":"2023-10-22"},{"lineNumber":272,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 isAddressEdited \u003d\u003d otherEditVendorDescriptor.isAddressEdited","lastModifiedDate":"2023-10-22"},{"lineNumber":273,"author":{"gitId":"samuelim01"},"content":"                    \u0026\u0026 isTagsEdited \u003d\u003d otherEditVendorDescriptor.isTagsEdited;","lastModifiedDate":"2023-10-22"},{"lineNumber":274,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":275,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":276,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":277,"author":{"gitId":"samuelim01"},"content":"        public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":278,"author":{"gitId":"samuelim01"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":279,"author":{"gitId":"samuelim01"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-21"},{"lineNumber":280,"author":{"gitId":"samuelim01"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-21"},{"lineNumber":281,"author":{"gitId":"samuelim01"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-21"},{"lineNumber":282,"author":{"gitId":"samuelim01"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-21"},{"lineNumber":283,"author":{"gitId":"samuelim01"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-21"},{"lineNumber":284,"author":{"gitId":"samuelim01"},"content":"                    .add(\"isNameEdited\", isNameEdited)","lastModifiedDate":"2023-10-22"},{"lineNumber":285,"author":{"gitId":"samuelim01"},"content":"                    .add(\"isPhoneEdited\", isPhoneEdited)","lastModifiedDate":"2023-10-22"},{"lineNumber":286,"author":{"gitId":"samuelim01"},"content":"                    .add(\"isEmailEdited\", isEmailEdited)","lastModifiedDate":"2023-10-22"},{"lineNumber":287,"author":{"gitId":"samuelim01"},"content":"                    .add(\"isAddressEdited\", isAddressEdited)","lastModifiedDate":"2023-10-22"},{"lineNumber":288,"author":{"gitId":"samuelim01"},"content":"                    .add(\"isTagsEdited\", isTagsEdited)","lastModifiedDate":"2023-10-22"},{"lineNumber":289,"author":{"gitId":"samuelim01"},"content":"                    .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":290,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":291,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":292,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"tllshan":2,"samuelim01":290}},{"path":"src/main/java/wedlog/address/logic/commands/VendorFilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.VendorCommandParser.VENDOR_COMMAND_WORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":" * Filters and lists all Vendors in address book whose fields contains any of the argument keywords.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"public class VendorFilterCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all vendors whose fields contain any of \"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"            + \"Example: \" + VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            + PREFIX_TAG + \"caterer\";","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    private final List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"     * Creates a VendorFilterCommand which filters according to {@code predicates}","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"    public VendorFilterCommand(List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // Defensive programming by not allowing a null to be assigned to predicates","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        assert predicates !\u003d null : \"Predicates passed to VendorFilterCommand should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        model.updateFilteredVendorList(preparePredicate(predicates));","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"                String.format(Messages.MESSAGE_VENDORS_LISTED_OVERVIEW, model.getFilteredVendorList().size()));","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof VendorFilterCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        VendorFilterCommand otherFilterCommand \u003d (VendorFilterCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        return predicates.equals(otherFilterCommand.predicates);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"                .add(\"predicates\", predicates)","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"     * Creates a predicate which returns true if all predicates return true,","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"     * and false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    private Predicate\u003cVendor\u003e preparePredicate(List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates) {","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"        // all match here make it that all parameters have an AND relationship","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        return vendor -\u003e predicates.stream().allMatch(predicate -\u003e predicate.test(vendor));","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"tllshan":8,"samuelim01":18,"wasjoe1":65}},{"path":"src/main/java/wedlog/address/logic/commands/VendorListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * Lists all Vendors in the address book to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"public class VendorListCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all vendors. \";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"        model.updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":1,"samuelim01":4,"wasjoe1":17}},{"path":"src/main/java/wedlog/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"samuelim01":1,"-":16}},{"path":"src/main/java/wedlog/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     * Parses user input into guest and vendor commands for execution.","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * Old commands are parsed as well to keep the program intact.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim()); // trims the back and end of the string","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        // old switch commands are included for now to not break the program","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"        // change it from here to split between vendor","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        case \"vendor\": // there shouldn\u0027t be a need to create an entire new vendor/guest command class","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"            return new VendorCommandParser().parseCommand(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"        case \"guest\":","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"            return new GuestCommandParser().parseCommand(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":17,"wasjoe1":9,"-":54}},{"path":"src/main/java/wedlog/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // creates an ArrayList of all the values inside that prefix","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"samuelim01":3,"wasjoe1":1,"-":75}},{"path":"src/main/java/wedlog/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"samuelim01":1,"-":147}},{"path":"src/main/java/wedlog/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    public static final Prefix PREFIX_RSVP \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    public static final Prefix PREFIX_DIETARY \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    public static final Prefix PREFIX_TABLE \u003d new Prefix(\"tn/\");","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tllshan":1,"samuelim01":1,"keaganpzh":2,"-":13}},{"path":"src/main/java/wedlog/address/logic/parser/GuestAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":" * Parses user input for GuestAdd commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"public class GuestAddCommandParser implements Parser\u003cGuestAddCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the GuestAddCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * and returns an GuestAddCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    public GuestAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"                        PREFIX_RSVP, PREFIX_DIETARY, PREFIX_TABLE, PREFIX_TAG);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // check compulsory fields; only name is compulsory","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"            // message usage is a generic message about how to use the add command for guests","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"        // throws parse exception if any field (except dietary and tags) is inputted twice","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_RSVP,","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"                PREFIX_TABLE);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        // marks the optional fields null if they are empty","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        Phone phone \u003d ParserUtil.parseOptionally(argMultimap.getValue(PREFIX_PHONE), ParserUtil::parsePhone);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        Email email \u003d ParserUtil.parseOptionally(argMultimap.getValue(PREFIX_EMAIL), ParserUtil::parseEmail);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        Address address \u003d ParserUtil.parseOptionally(argMultimap.getValue(PREFIX_ADDRESS), ParserUtil::parseAddress);","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        RsvpStatus rsvpStatus \u003d argMultimap.getValue(PREFIX_RSVP).isEmpty()","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"                ? RsvpStatus.unknown() // no input defaults to Status stored as unknown","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"                : ParserUtil.parseRsvp(argMultimap.getValue(PREFIX_RSVP).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"        Set\u003cDietaryRequirement\u003e dietaryRequirements \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"                ParserUtil.parseDietaryRequirements(argMultimap.getAllValues(PREFIX_DIETARY));","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        TableNumber tableNumber \u003d argMultimap.getValue(PREFIX_TABLE).isEmpty()","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"                ? null","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"                : ParserUtil.parseTable(argMultimap.getValue(PREFIX_TABLE).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"        Guest guest \u003d new Guest(name, phone, email, address, rsvpStatus, dietaryRequirements, tableNumber, tagList);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        return new GuestAddCommand(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":7,"samuelim01":20,"p-xp":9,"wasjoe1":38,"keaganpzh":5}},{"path":"src/main/java/wedlog/address/logic/parser/GuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.commands.GuestFilterCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for Guest commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"public class GuestCommandParser {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    public static final String GUEST_COMMAND_WORD \u003d \"guest\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim()); // trims the back and end of the string","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        logger.fine(\"Guest command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        case GuestAddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"            return new GuestAddCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        case GuestEditCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"            return new GuestEditCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        case GuestDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"            return new GuestDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        case GuestListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"            return new GuestListCommand();","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        case GuestFilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"            return new GuestFilterCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"        default:","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"            logger.finer(\"This user input for guest command caused a ParseException: \" + userInput);","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":14,"p-xp":6,"wasjoe1":54}},{"path":"src/main/java/wedlog/address/logic/parser/GuestDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for GuestDelete commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"public class GuestDeleteCommandParser implements Parser\u003cGuestDeleteCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    public GuestDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"            return new GuestDeleteCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":1,"samuelim01":5,"wasjoe1":22}},{"path":"src/main/java/wedlog/address/logic/parser/GuestEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand.EditGuestDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":" * Parses input arguments and creates a new GuestEditCommand object","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"public class GuestEditCommandParser implements Parser\u003cGuestEditCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code GuestEditCommand}","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"     * and returns an {@code GuestEditCommand} object for execution.","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    public GuestEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"                        PREFIX_RSVP, PREFIX_DIETARY, PREFIX_TABLE, PREFIX_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        // Only DR and Tag fields allowed to have multiple values in user input","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"                PREFIX_RSVP, PREFIX_TABLE);","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor editGuestDescriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"            editGuestDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"            editGuestDescriptor.setPhone(","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"                    ParserUtil.parseIfNotBlank(argMultimap.getValue(PREFIX_PHONE).get(), ParserUtil::parsePhone));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"            editGuestDescriptor.setEmail(","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"                    ParserUtil.parseIfNotBlank(argMultimap.getValue(PREFIX_EMAIL).get(), ParserUtil::parseEmail));","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"            editGuestDescriptor.setAddress(","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"                    ParserUtil.parseIfNotBlank(argMultimap.getValue(PREFIX_ADDRESS).get(), ParserUtil::parseAddress));","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        if (argMultimap.getValue(PREFIX_RSVP).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"            editGuestDescriptor.setRsvp(ParserUtil.parseRsvp(argMultimap.getValue(PREFIX_RSVP).get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        if (argMultimap.getValue(PREFIX_TABLE).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"            editGuestDescriptor.setTable(","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"                    ParserUtil.parseIfNotBlank(argMultimap.getValue(PREFIX_TABLE).get(), ParserUtil::parseTable));","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        parseDietaryRequirementsForEdit(argMultimap.getAllValues(PREFIX_DIETARY))","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"                .ifPresent(editGuestDescriptor::setDietary);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editGuestDescriptor::setTags);","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        if (!editGuestDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"            throw new ParseException(GuestEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        return new GuestEditCommand(index, editGuestDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"     * Parses {@code Collection\u003cString\u003e requirements} into a {@code Set\u003cDietaryRequirement\u003e}","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"     * if {@code requirements} is non-empty.","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"     * If {@code requirements} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"     * {@code Set\u003cDietaryRequirement\u003e} containing zero dietary requirements.","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    private Optional\u003cSet\u003cDietaryRequirement\u003e\u003e parseDietaryRequirementsForEdit(Collection\u003cString\u003e requirements)","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        assert requirements !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        if (requirements.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        Collection\u003cString\u003e requirementsSet \u003d requirements.size() \u003d\u003d 1 \u0026\u0026 requirements.contains(\"\")","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"                : requirements;","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        return Optional.of(ParserUtil.parseDietaryRequirements(requirementsSet));","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"p-xp":125}},{"path":"src/main/java/wedlog/address/logic/parser/GuestFilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.Messages.MESSAGE_NO_PREFIX_FOUND;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.commands.GuestFilterCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.AddressPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.EmailPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.person.GuestRsvpPredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.person.GuestTablePredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NamePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.PhonePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.GuestDietaryPredicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.TagPredicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":" * Parses user input for GuestFilter commands.","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"public class GuestFilterCommandParser implements Parser\u003cGuestFilterCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    // Prefixes for non-tag fields (everything except Dietary Requirement and Tag)","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"    private static final Prefix[] NON_TAG_PREFIXES \u003d { PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"        PREFIX_RSVP, PREFIX_TABLE };","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"    // Prefixes for all fields","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    private static final Prefix[] PREFIXES \u003d { PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        PREFIX_RSVP, PREFIX_TABLE, PREFIX_DIETARY, PREFIX_TAG };","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the GuestFilterCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"     * and returns an GuestFilterCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    public GuestFilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        // Only DR and Tag fields are allowed to have multiple inputs","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(NON_TAG_PREFIXES);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        for (Prefix prefix : PREFIXES) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"            if (isNonTagFilter(prefix)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"                parseNonTagFilters(argMultimap, prefix, predicates);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"            } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"                parseTagFilters(argMultimap, prefix, predicates);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"        if (predicates.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"            throw new ParseException(String.format(MESSAGE_NO_PREFIX_FOUND, GuestFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"        return new GuestFilterCommand(predicates);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"     * Returns true if field values are not stored as tags,","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"     * and false otherwise.","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"    private boolean isNonTagFilter(Prefix prefix) {","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"        return Arrays.asList(NON_TAG_PREFIXES).contains(prefix);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"     * Parses user input for fields that do not utilise Tags and updates predicate list.","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    private void parseNonTagFilters(ArgumentMultimap argMultimap, Prefix prefix,","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"                                    List\u003cPredicate\u003c? super Guest\u003e\u003e predicates) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        Optional\u003cString\u003e str \u003d argMultimap.getValue(prefix);","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        if (str.isEmpty()) { // skip the fields not included in the user\u0027s input","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"            return;","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"wasjoe1"},"content":"        String trimmedInputString \u003d str.get().trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"        // all parameters will accept any kind of inputs: \"\", \"anything\", \"123asd\" etc.","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"            // now accepts \"\" \u003d\u003e but will return an empty guest list since name is never an empty string","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new NamePredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        } else if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new PhonePredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        } else if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new EmailPredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        } else if (prefix.equals(PREFIX_ADDRESS)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new AddressPredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        } else if (prefix.equals(PREFIX_RSVP)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new GuestRsvpPredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        } else if (prefix.equals(PREFIX_TABLE)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new GuestTablePredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"     * Parses user input for fields that utilise Tags and updates predicate list.","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    private void parseTagFilters(ArgumentMultimap argMultimap, Prefix prefix,","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"                                    List\u003cPredicate\u003c? super Guest\u003e\u003e predicates) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        Boolean isFieldIncludedInInput \u003d !argMultimap.getValue(prefix).isEmpty();","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        List\u003cString\u003e keywords \u003d argMultimap.getAllValues(prefix);","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        if (!isFieldIncludedInInput) { // skip the fields not included in the user\u0027s input","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"            return;","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        if (prefix.equals(PREFIX_DIETARY)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"            predicates.add(new GuestDietaryPredicate(keywords));","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"        } else if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"            predicates.add(new TagPredicate(keywords));","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"samuelim01":11,"p-xp":61,"wasjoe1":56}},{"path":"src/main/java/wedlog/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"samuelim01":3,"-":13}},{"path":"src/main/java/wedlog/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"     * Parses a {@code String rsvp} into a {@code RsvpStatus}.","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the given {@code rsvp} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"    public static RsvpStatus parseRsvp(String rsvp) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        // null inputs and empty string defaults to unknown status","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        if (rsvp \u003d\u003d null || rsvp \u003d\u003d \"\" || rsvp.isBlank()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"            return RsvpStatus.unknown();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        requireNonNull(rsvp);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"        String trimmedRsvp \u003d rsvp.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        // checks that value is either \"yes\", \"no\", or \"unknown\"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"wasjoe1"},"content":"        if (!RsvpStatus.isValidRsvpStatus(trimmedRsvp)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(RsvpStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"        return new RsvpStatus(trimmedRsvp);","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"     * Parses a {@code String dietaryRequirement} into a {@code DietaryRequirement}.","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"     * @throws ParseException if the given {@code dietaryRequirement} is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"    public static DietaryRequirement parseDietaryRequirement(String dietaryRequirement) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"        requireNonNull(dietaryRequirement);","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"        String trimmedDietaryRequirement \u003d dietaryRequirement.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"        if (!DietaryRequirement.isValidDietaryRequirement(trimmedDietaryRequirement)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"            throw new ParseException(DietaryRequirement.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"keaganpzh"},"content":"        return new DietaryRequirement(trimmedDietaryRequirement);","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"keaganpzh"},"content":"     * Parses {@code Collection\u003cString\u003e dietaryRequirements} into a {@code Set\u003cDietaryRequirement\u003e}.","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"keaganpzh"},"content":"    public static Set\u003cDietaryRequirement\u003e parseDietaryRequirements(Collection\u003cString\u003e dietaryRequirements)","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"keaganpzh"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"keaganpzh"},"content":"        requireNonNull(dietaryRequirements);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"keaganpzh"},"content":"        final Set\u003cDietaryRequirement\u003e dietarySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"keaganpzh"},"content":"        for (String dietary : dietaryRequirements) {","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"keaganpzh"},"content":"            // takes in a list of strings \u0026 parse then put into a hashset","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"keaganpzh"},"content":"            dietarySet.add(parseDietaryRequirement(dietary));","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"        return dietarySet;","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"tllshan"},"content":"     * Parses a {@code String table} into a {@code TableNumber}.","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"     * @throws ParseException if the given {@code table} is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"    public static TableNumber parseTable(String table) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"        requireNonNull(table);","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"        String trimmedTable \u003d table.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"        if (!TableNumber.isValidTableNumber(trimmedTable)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"            throw new ParseException(TableNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"        return new TableNumber(trimmedTable);","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"wasjoe1"},"content":"            tagSet.add(parseTag(tagName)); // takes in a list of strings \u0026 parse then put into a hashset","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    //@@author samuelim01-reused","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    // Reused from AY2324S1-CS2103T-W08-3","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Represents a function that parses the given {@code String} into the given result.","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public interface ParserFunction\u003cR\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        R parse(String value) throws ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Returns the result of parsing {@code optionalString} with the given","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * parser function if {@code optionalString} is present, else returns null.","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static \u003cR\u003e R parseOptionally(Optional\u003cString\u003e optionalString, ParserFunction\u003cR\u003e parserFunction)","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (optionalString.isPresent()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return parserFunction.parse(optionalString.get());","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Returns the result of parsing {@code String} with the given","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * parser function if {@code string} is not empty, else returns null.","lastModifiedDate":"2023-10-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public static \u003cR\u003e R parseIfNotBlank(String string, ParserFunction\u003cR\u003e parserFunction)","lastModifiedDate":"2023-10-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (!string.isBlank()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return parserFunction.parse(string);","lastModifiedDate":"2023-10-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2023-10-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tllshan":16,"samuelim01":15,"p-xp":7,"wasjoe1":21,"keaganpzh":22,"-":150}},{"path":"src/main/java/wedlog/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"samuelim01":1,"-":41}},{"path":"src/main/java/wedlog/address/logic/parser/VendorAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorAddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for VendorAdd commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"public class VendorAddCommandParser implements Parser\u003cVendorAddCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the VendorAddCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     * and returns an VendorAddCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public VendorAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"        // check compulsory fields; only name is compulsory","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        // throws parse exception if any field (except tags) is inputted twice","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        Phone phone \u003d ParserUtil.parseOptionally(argMultimap.getValue(PREFIX_PHONE), ParserUtil::parsePhone);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        Email email \u003d ParserUtil.parseOptionally(argMultimap.getValue(PREFIX_EMAIL), ParserUtil::parseEmail);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        Address address \u003d ParserUtil.parseOptionally(argMultimap.getValue(PREFIX_ADDRESS), ParserUtil::parseAddress);","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        Vendor vendor \u003d new Vendor(name, phone, email, address, tagList);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        return new VendorAddCommand(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":14,"p-xp":11,"wasjoe1":37}},{"path":"src/main/java/wedlog/address/logic/parser/VendorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorAddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.commands.VendorEditCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.commands.VendorFilterCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.commands.VendorListCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for Vendor commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"public class VendorCommandParser {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public static final String VENDOR_COMMAND_WORD \u003d \"vendor\";","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim()); // trims the back and end of the string","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        // any way the \"vendor command is removed, should have the same format as previous\"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        logger.fine(\"Vendor command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"        case VendorAddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"            return new VendorAddCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        case VendorDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"            return new VendorDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        case VendorListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"            return new VendorListCommand();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        case VendorEditCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"            return new VendorEditCommandParser().parse(arguments);","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        case VendorFilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"            return new VendorFilterCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"        default:","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"            logger.finer(\"This user input for vendor command caused a ParseException: \" + userInput);","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"tllshan":1,"samuelim01":15,"wasjoe1":58}},{"path":"src/main/java/wedlog/address/logic/parser/VendorDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for VendorDelete commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"public class VendorDeleteCommandParser implements Parser\u003cVendorDeleteCommand\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    public VendorDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"            return new VendorDeleteCommand(index);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":22}},{"path":"src/main/java/wedlog/address/logic/parser/VendorEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.VendorEditCommand.EditVendorDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorEditCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":" * Parses input arguments and creates a new VendorEditCommand object","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"public class VendorEditCommandParser implements Parser\u003cVendorEditCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"     * Parses the given {@code String} of arguments in the context of the VendorEditCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"     * and returns an VendorEditCommand object for execution.","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    public VendorEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        Index index;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        try {","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"                    VendorEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor editVendorDescriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"            editVendorDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"            editVendorDescriptor.setPhone(ParserUtil.parseIfNotBlank(argMultimap.getValue(PREFIX_PHONE).get(),","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"                    ParserUtil::parsePhone));","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"            editVendorDescriptor.setEmail(ParserUtil.parseIfNotBlank(argMultimap.getValue(PREFIX_EMAIL).get(),","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"                    ParserUtil::parseEmail));","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"            editVendorDescriptor.setAddress(ParserUtil.parseIfNotBlank(argMultimap.getValue(PREFIX_ADDRESS).get(),","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"                    ParserUtil::parseAddress));","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editVendorDescriptor::setTags);","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        if (!editVendorDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"            throw new ParseException(VendorEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        return new VendorEditCommand(index, editVendorDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"samuelim01":89}},{"path":"src/main/java/wedlog/address/logic/parser/VendorFilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.Messages.MESSAGE_NO_PREFIX_FOUND;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.commands.VendorFilterCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.AddressPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.EmailPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NamePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.PhonePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.tag.TagPredicate;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":" * Parses user input for VendorFilter commands.","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"public class VendorFilterCommandParser implements Parser\u003cVendorFilterCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    // Prefixes for non-tag fields (everything except Tag)","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    private static final Prefix[] NON_TAG_PREFIXES \u003d { PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS };","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    // Prefixes for all fields","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    private static final Prefix[] PREFIXES \u003d { PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG };","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the VendorFilterCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"     * and returns an VendorFilterCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    public VendorFilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIXES);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        // Only Tag fields are allowed to have multiple inputs","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(NON_TAG_PREFIXES);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        for (Prefix prefix : PREFIXES) {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"            if (isNonTagFilter(prefix)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"                parseNonTagFilters(argMultimap, prefix, predicates);","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"                parseTagFilters(argMultimap, prefix, predicates);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        if (predicates.size() \u003d\u003d 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"            throw new ParseException(String.format(MESSAGE_NO_PREFIX_FOUND, VendorFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        return new VendorFilterCommand(predicates);","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"     * Returns true if field values are not stored as tags,","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"     * and false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"    private boolean isNonTagFilter(Prefix prefix) {","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        return Arrays.asList(NON_TAG_PREFIXES).contains(prefix);","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"     * Parses user input for fields that do not utilise Tags and updates predicate list.","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"    private void parseNonTagFilters(ArgumentMultimap argMultimap, Prefix prefix,","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"                                    List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"        Optional\u003cString\u003e str \u003d argMultimap.getValue(prefix);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"        if (str.isEmpty()) { // skip the fields not included in the user\u0027s input","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"        String trimmedInputString \u003d str.get().trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        // all parameters will accept any kind of inputs: \"\", \"anything\", \"123asd\" etc.","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"            // accepts \"\" but will return an empty vendor list since name is never an empty string","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new NamePredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"        } else if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new PhonePredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"        } else if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new EmailPredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"wasjoe1"},"content":"        } else if (prefix.equals(PREFIX_ADDRESS)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"            predicates.add(new AddressPredicate(trimmedInputString));","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"     * Parses user input for Tags and updates predicate list.","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"    private void parseTagFilters(ArgumentMultimap argMultimap, Prefix prefix,","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"                                 List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"        Boolean isFieldIncludedInInput \u003d !argMultimap.getValue(prefix).isEmpty();","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"        List\u003cString\u003e keywords \u003d argMultimap.getAllValues(prefix);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"        if (!isFieldIncludedInInput) { // skip the fields not included in the user\u0027s input","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"        if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"            predicates.add(new TagPredicate(keywords));","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"tllshan":56,"samuelim01":8,"wasjoe1":49}},{"path":"src/main/java/wedlog/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"samuelim01":2,"-":15}},{"path":"src/main/java/wedlog/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.UniqueGuestList;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.UniqueVendorList;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"    private final UniqueGuestList guests;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"    private final UniqueVendorList vendors;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        guests \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        vendors \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"     * Replaces the contents of the guest list with {@code guests}.","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"     * {@code guests} must not contain duplicate guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    public void setGuests(List\u003cGuest\u003e guests) {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        this.guests.setGuests(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"     * Replaces the contents of the vendor list with {@code vendors}.","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"     * {@code vendors} must not contain duplicate vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    public void setVendors(List\u003cVendor\u003e vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        this.vendors.setVendors(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        setGuests(newData.getGuestList());","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        setVendors(newData.getVendorList());","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"    //// guest-level operations","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        requireNonNull(guest);","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        return guests.contains(guest);","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"     * Adds a guest to the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"     * The guest must not already exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    public void addGuest(Guest g) {","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        guests.add(g);","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"     * Replaces the given guest {@code target} in the list with {@code editedGuest}.","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        requireNonNull(editedGuest);","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        guests.setGuest(target, editedGuest);","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"    public void removeGuest(Guest key) {","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        guests.remove(key);","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code RsvpStatistics} with information on the RSVP statuses of guests","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code RsvpStatistics}","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"        return new RsvpStatistics(guests.getNumGuestsRsvpYes(), guests.getNumGuestsRsvpNo(),","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"                guests.getNumGuestsRsvpUnknown());","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code DietaryRequirementStatistics} with information on the dietary requirements of guests","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code DietaryRequirementStatistics}","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirementStatistics getDietaryRequirementStatistics() {","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"keaganpzh"},"content":"        return guests.getDietaryRequirementStatistics();","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"    //// vendor-level operations","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"     * Returns true if a vendor with the same identity as {@code vendor} exists in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"    public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        return vendors.contains(vendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"     * Adds a vendor to the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"     * The vendor must not already exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"    public void addVendor(Vendor v) {","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        vendors.add(v);","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"     * Replaces the given vendor {@code target} in the list with {@code editedVendor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"     * The vendor identity of {@code editedVendor} must not be the same as another existing vendor in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(editedVendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"        vendors.setVendor(target, editedVendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"    public void removeVendor(Vendor key) {","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"        vendors.remove(key);","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"                .add(\"guests\", guests)","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"                .add(\"vendors\", vendors)","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"    public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"        return guests.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"    public ObservableList\u003cVendor\u003e getVendorList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"        return vendors.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"        return guests.equals(otherAddressBook.guests) \u0026\u0026 vendors.equals(otherAddressBook.vendors);","lastModifiedDate":"2023-11-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"        return Objects.hash(guests, vendors);","lastModifiedDate":"2023-11-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":62,"p-xp":55,"keaganpzh":17,"-":71}},{"path":"src/main/java/wedlog/address/model/DietaryRequirementStatistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates the dietary requirement statistics of the guests.","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":" * It stores each combination of dietary requirements as a key","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":" * and the number of guests with that combination as the value.","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"public class DietaryRequirementStatistics {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    private final HashMap\u003cString, Integer\u003e dietaryRequirementMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for an empty {@code DietaryRequirementStatistics} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirementStatistics() {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"        this.dietaryRequirementMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for a {@code DietaryRequirementStatistics} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * @param dietaryRequirementMap The map of dietary requirements to the number of guests","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     *                              with that combination.","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirementStatistics(HashMap\u003cString, Integer\u003e dietaryRequirementMap) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"        this.dietaryRequirementMap \u003d dietaryRequirementMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    public HashMap\u003cString, Integer\u003e getMap() {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"        return this.dietaryRequirementMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"        if (!(other instanceof DietaryRequirementStatistics)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics otherDietaryRequirementStatistics \u003d (DietaryRequirementStatistics) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        return this.dietaryRequirementMap.equals(otherDietaryRequirementStatistics.dietaryRequirementMap);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"keaganpzh":48}},{"path":"src/main/java/wedlog/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"     * Saves the current address book state.","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"    void commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"     * Restores the address book to its previous state.","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"    void undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"     * Restores the address book to its previously state before undo.","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"    void redoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"     * Returns true if the address book has previous states to restore.","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"     * Returns true if the address book has undone states to restore.","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    boolean hasGuest(Guest guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"     * Deletes the given guest.","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"     * The guest must exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    void deleteGuest(Guest target);","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"     * Adds the given guest.","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"     * {@code guest} must not already exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    void addGuest(Guest guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"     * Replaces the given guest {@code target} with {@code editedGuest}.","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"    void setGuest(Guest target, Guest editedGuest);","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code RsvpStatistics} with information of the RSVP statuses of guests in {@code AddressBook}.","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code RsvpStatistics} object.","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"    RsvpStatistics getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code DietaryRequirementStatistics} with information of the dietary requirements of guests in","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"keaganpzh"},"content":"     * {@code AddressBook}.","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code DietaryRequirementStatistics} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"    DietaryRequirementStatistics getDietaryRequirementStatistics();","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"     * Returns true if a vendor with the same identity as {@code vendor} exists in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    boolean hasVendor(Vendor vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"     * Deletes the given vendor.","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"     * The vendor must exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"    void deleteVendor(Vendor target);","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"     * Adds the given vendor.","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"     * {@code vendor} must not already exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"    void addVendor(Vendor vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"     * Replaces the given vendor {@code target} with {@code editedVendor}.","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"     * The vendor identity of {@code editedVendor} must not be the same as another existing vendor in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"    void setVendor(Vendor target, Vendor editedVendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"    /** Returns an unmodifiable view of the filtered guest list */","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"    ObservableList\u003cGuest\u003e getFilteredGuestList();","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"     * Updates the filter of the filtered guest list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"    void updateFilteredGuestList(Predicate\u003c? super Guest\u003e predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"    /** Returns an unmodifiable view of the filtered vendor list */","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"    ObservableList\u003cVendor\u003e getFilteredVendorList();","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"     * Updates the filter of the filtered vendor list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"    void updateFilteredVendorList(Predicate\u003c? super Vendor\u003e predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samuelim01":95,"keaganpzh":13,"-":52}},{"path":"src/main/java/wedlog/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"    private final VersionedAddressBook addressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    private final FilteredList\u003cGuest\u003e filteredGuests;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private final FilteredList\u003cVendor\u003e filteredVendors;","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        this.addressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        filteredGuests \u003d new FilteredList\u003c\u003e(this.addressBook.getGuestList());","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        filteredVendors \u003d new FilteredList\u003c\u003e(this.addressBook.getVendorList());","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        addressBook.commit();","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        addressBook.undo();","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        addressBook.redo();","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        return addressBook.canUndo();","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        return addressBook.canRedo();","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        return addressBook.hasGuest(guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    public void deleteGuest(Guest target) {","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"        addressBook.removeGuest(target);","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"    public void addGuest(Guest guest) {","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"        addressBook.addGuest(guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(target, editedGuest);","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        addressBook.setGuest(target, editedGuest);","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"        return addressBook.getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirementStatistics getDietaryRequirementStatistics() {","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"        return addressBook.getDietaryRequirementStatistics();","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"    public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"        return addressBook.hasVendor(vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"    public void deleteVendor(Vendor target) {","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"        addressBook.removeVendor(target);","lastModifiedDate":"2023-10-11"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"    public void addVendor(Vendor vendor) {","lastModifiedDate":"2023-10-11"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"        addressBook.addVendor(vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"        updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(target, editedVendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        addressBook.setVendor(target, editedVendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"     * Returns an unmodifiable view of the list of {@code Guest} backed by the internal list of","lastModifiedDate":"2023-10-11"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-11"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"        return filteredGuests;","lastModifiedDate":"2023-10-11"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"    public void updateFilteredGuestList(Predicate\u003c? super Guest\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"        filteredGuests.setPredicate(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"     * Returns an unmodifiable view of the list of {@code Vendor} backed by the internal list of","lastModifiedDate":"2023-10-11"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-11"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"    public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"        return filteredVendors;","lastModifiedDate":"2023-10-11"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"    public void updateFilteredVendorList(Predicate\u003c? super Vendor\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"        filteredVendors.setPredicate(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 filteredGuests.equals(otherModelManager.filteredGuests)","lastModifiedDate":"2023-10-11"},{"lineNumber":223,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 filteredVendors.equals(otherModelManager.filteredVendors);","lastModifiedDate":"2023-10-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":117,"keaganpzh":10,"-":99}},{"path":"src/main/java/wedlog/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"     * Returns an unmodifiable view of the guest list.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"     * This list will not contain any duplicate guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"    ObservableList\u003cGuest\u003e getGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"     * Returns an unmodifiable view of the vendors list.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"     * This list will not contain any duplicate vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    ObservableList\u003cVendor\u003e getVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":8,"p-xp":6,"-":9}},{"path":"src/main/java/wedlog/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"samuelim01":2,"-":14}},{"path":"src/main/java/wedlog/address/model/RsvpStatistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates the RSVP statistics of the guests.","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"public class RsvpStatistics {","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"    private final int numGuestsRsvpYes;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"    private final int numGuestsRsvpNo;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    private final int numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for a {@code RsvpStatistics} object.","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"     * @param numGuestsRsvpYes The number of guests with RSVP status \"yes\".","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"     * @param numGuestsRsvpNo The number of guests with RSVP status \"no\".","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"     * @param numGuestsRsvpUnknown The number of guests with RSVP status \"unknown\".","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatistics(int numGuestsRsvpYes, int numGuestsRsvpNo, int numGuestsRsvpUnknown) {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"        this.numGuestsRsvpYes \u003d numGuestsRsvpYes;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        this.numGuestsRsvpNo \u003d numGuestsRsvpNo;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"        this.numGuestsRsvpUnknown \u003d numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public int getNumGuestsRsvpYes() {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        return numGuestsRsvpYes;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    public int getNumGuestsRsvpNo() {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        return numGuestsRsvpNo;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    public int getNumGuestsRsvpUnknown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        return numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"        if (!(other instanceof RsvpStatistics)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatistics otherRsvpStatistics \u003d (RsvpStatistics) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        return this.numGuestsRsvpYes \u003d\u003d otherRsvpStatistics.numGuestsRsvpYes","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"                \u0026\u0026 this.numGuestsRsvpNo \u003d\u003d otherRsvpStatistics.numGuestsRsvpNo","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"                \u0026\u0026 this.numGuestsRsvpUnknown \u003d\u003d otherRsvpStatistics.numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tllshan":8,"keaganpzh":43}},{"path":"src/main/java/wedlog/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":86}},{"path":"src/main/java/wedlog/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//@@author samuelim01-reused","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Reused from Address Book(Level 4) with minor modifications.","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * {@code AddressBook} that keeps track of its own history","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cReadOnlyAddressBook\u003e addressBookStateList;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private int currentStatePointer;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the persons in {@code initialState}","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param initialState","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook initialState) {","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(initialState);","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        addressBookStateList.add(new AddressBook(initialState));","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Saves a copy of the current {@code AddressBook} state.","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void commit() {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        removeStatesAfterCurrentStatePointer();","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        addressBookStateList.add(new AddressBook(this));","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        currentStatePointer++;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void removeStatesAfterCurrentStatePointer() {","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookStateList.subList(currentStatePointer + 1, addressBookStateList.size()).clear();","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Restores the address book to its previous state.","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void undo() {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!canUndo()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new NoUndoableStateException();","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        currentStatePointer--;","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Restores the address book to its previous state before undo.","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void redo() {","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!canRedo()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new NoRedoableStateException();","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        currentStatePointer++;","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return currentStatePointer \u003c addressBookStateList.size() - 1;","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof VersionedAddressBook)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        VersionedAddressBook otherAddressBook \u003d (VersionedAddressBook) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return super.equals(otherAddressBook)","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookStateList.equals(otherAddressBook.addressBookStateList)","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 currentStatePointer \u003d\u003d otherAddressBook.currentStatePointer;","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Thrown when trying to {@code undo} with no undoable state.","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static class NoUndoableStateException extends RuntimeException {","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        private NoUndoableStateException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(\"Current state pointer at start of list, unable to undo.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Thrown when trying to {@code redo} with no redoable state.","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static class NoRedoableStateException extends RuntimeException {","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        private NoRedoableStateException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            super(\"Current state pointer at end of list, unable to redo.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"samuelim01":5,"-":103}},{"path":"src/main/java/wedlog/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"p-xp":1,"-":62}},{"path":"src/main/java/wedlog/address/model/person/AddressPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * Tests that a {@code Person}\u0027s {@code Address} contains the given input.","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"public class AddressPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    private final String input;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"     * Constructor for AddressPredicate.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public AddressPredicate(String input) {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        assert person !\u003d null : \"Person passed to AddressPredicate should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        return input.isEmpty()","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                ? person.getAddress().isEmpty() // if input is \"\", return if field is empty","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                : person.getAddress() // else check if input is contained in the field value","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"                        .map(a -\u003e a.value.toLowerCase().contains(input.toLowerCase())).orElse(false);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof AddressPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        AddressPredicate otherAddressPredicate \u003d (AddressPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        return input.equals(otherAddressPredicate.input);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        return new ToStringBuilder(this).add(\"input\", input).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":43}},{"path":"src/main/java/wedlog/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":77}},{"path":"src/main/java/wedlog/address/model/person/EmailPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the input given.","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"public class EmailPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    private final String input;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"     * Constructor for EmailPredicate.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public EmailPredicate(String input) {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        assert person !\u003d null : \"Person passed to EmailPredicate should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        return input.isEmpty()","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                ? person.getEmail().isEmpty() // if input is \"\", return if field is empty","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                : person.getEmail() // else check if input is contained in the field value","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"                .map(e -\u003e e.value.toLowerCase().contains(input.toLowerCase())).orElse(false);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof EmailPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        EmailPredicate otherEmailPredicate \u003d (EmailPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        return input.equals(otherEmailPredicate.input);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        return new ToStringBuilder(this).add(\"input\", input).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":43}},{"path":"src/main/java/wedlog/address/model/person/Guest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":" * Represents a Guest in the address book. Inherits from Person.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"public class Guest extends Person {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    // Additional data fields","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    private final RsvpStatus rsvpStatus;","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    private final Set\u003cDietaryRequirement\u003e dietaryRequirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private final Optional\u003cTableNumber\u003e tableNumber;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"     * Name, rsvp status, dietary requirements and tags must be present and not null.","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    public Guest(Name name, Phone phone, Email email, Address address, RsvpStatus rsvpStatus,","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"                 Set\u003cDietaryRequirement\u003e dietaryRequirements, TableNumber tableNumber, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        requireAllNonNull(rsvpStatus, dietaryRequirements);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        this.rsvpStatus \u003d rsvpStatus;","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        this.dietaryRequirements.addAll(dietaryRequirements);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        this.tableNumber \u003d Optional.ofNullable(tableNumber);","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatus getRsvpStatus() {","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"        return rsvpStatus;","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"     * Returns an immutable dietary requirement set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"    public Set\u003cDietaryRequirement\u003e getDietaryRequirements() {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"        return Collections.unmodifiableSet(dietaryRequirements);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"    public Optional\u003cTableNumber\u003e getTableNumber() {","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"        return tableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"     * Returns the comma separated dietary requirements of the guest.","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"     * String of dietary requirements is lexicographically ordered.","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"    public String getDietaryRequirementsString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"        if (this.dietaryRequirements.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"            return \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"        // Add all dietary requirements to an array and sort it","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirement[] dietaryRequirementsArray \u003d this.dietaryRequirements.toArray(DietaryRequirement[]::new);","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"        Arrays.sort(dietaryRequirementsArray, Comparator.comparing(DietaryRequirement::toString));","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"        StringBuilder dietaryRequirementsStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"        for (DietaryRequirement dietaryRequirement : dietaryRequirementsArray) {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"            dietaryRequirementsStringBuilder.append(dietaryRequirement.value.toLowerCase());","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"            dietaryRequirementsStringBuilder.append(\", \");","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"        return dietaryRequirementsStringBuilder.substring(0, dietaryRequirementsStringBuilder.length() - 2);","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"     * Returns true if both guests have the same identity and data fields.","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"     * This defines a stronger notion of equality between two guests.","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"        if (!(other instanceof Guest)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"        Guest otherGuest \u003d (Guest) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"keaganpzh"},"content":"        return super.equals(otherGuest)","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 rsvpStatus.equals(otherGuest.rsvpStatus)","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"                \u0026\u0026 dietaryRequirements.equals(otherGuest.dietaryRequirements)","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"                \u0026\u0026 Objects.equals(tableNumber, otherGuest.tableNumber);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"keaganpzh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"keaganpzh"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), getTags(),","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"                rsvpStatus, dietaryRequirements, tableNumber);","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"keaganpzh"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"keaganpzh"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"                .add(\"email\", getEmail())","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"keaganpzh"},"content":"                .add(\"address\", getAddress())","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"keaganpzh"},"content":"                .add(\"rsvpStatus\", getRsvpStatus())","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"                .add(\"dietaryRequirements\", getDietaryRequirements())","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"                .add(\"tableNumber\", getTableNumber())","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"                .toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"tllshan":7,"samuelim01":10,"keaganpzh":102}},{"path":"src/main/java/wedlog/address/model/person/GuestRsvpPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * Tests that a {@code Guest}\u0027s {@code Rsvp} matches the given input.","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class GuestRsvpPredicate implements Predicate\u003cGuest\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    private final String input;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for GuestRsvpPredicate.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public GuestRsvpPredicate(String input) {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    public boolean test(Guest guest) {","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        assert guest !\u003d null : \"Guest passed to GuestRsvpPredicate should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        return input.isEmpty()","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                ? guest.getRsvpStatus().value.toLowerCase().contains(\"unknown\") // check if value is unknown","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                : guest.getRsvpStatus().value.equalsIgnoreCase(input); // check if value is exactly same","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        if (!(other instanceof GuestRsvpPredicate)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate otherRsvpPredicate \u003d (GuestRsvpPredicate) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        return input.equals(otherRsvpPredicate.input);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        return new ToStringBuilder(this).add(\"input\", input).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"wasjoe1":47}},{"path":"src/main/java/wedlog/address/model/person/GuestTablePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * Tests that a {@code Guest}\u0027s {@code TableNumber} matches any of the keyword given.","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class GuestTablePredicate implements Predicate\u003cGuest\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    private final String input;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for GuestTablePredicate.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public GuestTablePredicate(String input) {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    public boolean test(Guest guest) {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        assert guest !\u003d null : \"Guest passed to GuestTablePredicate should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        return input.isEmpty()","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                ? guest.getTableNumber().isEmpty() // if input is \"\", return if field is empty","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                : guest.getTableNumber() // else check if input is contained in the field value","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"                .map(tn -\u003e tn.value.equalsIgnoreCase(input)).orElse(false);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"        if (!(other instanceof GuestTablePredicate)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate otherGuestTablePredicate \u003d (GuestTablePredicate) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        return input.equals(otherGuestTablePredicate.input);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        return new ToStringBuilder(this).add(\"input\", input).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"wasjoe1":49}},{"path":"src/main/java/wedlog/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        return fullName.toLowerCase().equals(otherName.fullName.toLowerCase());","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":3,"-":64}},{"path":"src/main/java/wedlog/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"samuelim01":3,"-":41}},{"path":"src/main/java/wedlog/address/model/person/NamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * Tests that a {@code Person}\u0027s {@code Name} contains the given input.","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"public class NamePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    private final String input;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"     * Constructor for NamePredicate.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public NamePredicate(String input) {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        assert person !\u003d null : \"Person passed to NamePredicate should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        return input.isEmpty()","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                ? false // if input is \"\", return false","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                : person.getName().fullName.toLowerCase().contains(input.toLowerCase());","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof NamePredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        NamePredicate otherNamePredicate \u003d (NamePredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        return input.equals(otherNamePredicate.input);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        return new ToStringBuilder(this).add(\"input\", input).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":42}},{"path":"src/main/java/wedlog/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    private final Optional\u003cPhone\u003e phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"    private final Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private final Optional\u003cAddress\u003e address;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"     * Name and tags must be present and not null.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(name, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d Optional.ofNullable(phone);","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d Optional.ofNullable(email);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d Optional.ofNullable(address);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 Objects.equals(phone, otherPerson.phone)","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 Objects.equals(email, otherPerson.email)","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 Objects.equals(address, otherPerson.address)","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":19,"-":99}},{"path":"src/main/java/wedlog/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{3,}$\";","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"p-xp":1,"-":58}},{"path":"src/main/java/wedlog/address/model/person/PhonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the input given.","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"public class PhonePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    private final String input;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"     * Constructor for PhonePredicate.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public PhonePredicate(String input) {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        assert person !\u003d null : \"Person passed to PhonePredicate should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        return input.isEmpty()","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                ? person.getPhone().isEmpty() // if input is \"\", return if field is empty","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                : person.getPhone() // else check if input is contained in the field value","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"                .map(p -\u003e p.value.toLowerCase().contains(input.toLowerCase())).orElse(false);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof PhonePredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        PhonePredicate otherPhonePredicate \u003d (PhonePredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        return input.equals(otherPhonePredicate.input);","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        return new ToStringBuilder(this).add(\"input\", input).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":43}},{"path":"src/main/java/wedlog/address/model/person/RsvpStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":" * Represents a Guest\u0027s RsvpStatus status in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRsvpStatus(String)}","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"public class RsvpStatus {","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"            \"RsvpStatus Status should only have one of three values. yes, no, or unknown.\";","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     * RSVP status can only be one of the following values.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"    public enum Status {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        YES, NO, UNKNOWN","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    /*","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * RSVP status should only consist of yes, no, or unknown values. Not case-sensitive.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?i)(yes|no|unknown)$\";","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"    public static final String RSVP_YES_REGEX \u003d \"^(?i)(yes)$\";","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    public static final String RSVP_NO_REGEX \u003d \"^(?i)(no)$\";","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    public final Status status;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    /*","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"     * Value is stored in lower case.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * Possible values are: \"yes\", \"no\", \"unknown\".","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    public final String value;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"     * Constructs a {@code RsvpStatus}.","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"     * @param rsvp A valid RSVP status.","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatus(String rsvp) {","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        requireNonNull(rsvp);","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        checkArgument(isValidRsvpStatus(rsvp), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        this.status \u003d rsvp.matches(RSVP_YES_REGEX)","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"            ? Status.YES","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"            : rsvp.matches(RSVP_NO_REGEX)","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"            ? Status.NO","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"            : Status.UNKNOWN;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"        this.value \u003d rsvp.toLowerCase();","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"     * Constructs a {@code RsvpStatus} with no value and","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"     * defaults to unknown.","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    private RsvpStatus() {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        this.status \u003d Status.UNKNOWN;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        this.value \u003d \"unknown\";","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    public static RsvpStatus unknown() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        return new RsvpStatus();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"     * Returns true if a given string is a valid RSVP status.","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"    public static boolean isValidRsvpStatus(String test) {","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"        return this.value;","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"        if (!(other instanceof RsvpStatus)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatus otherName \u003d (RsvpStatus) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        return status \u003d\u003d (otherName.status);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":22,"wasjoe1":1,"keaganpzh":73}},{"path":"src/main/java/wedlog/address/model/person/TableNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.commons.util.StringUtil.isNonZeroUnsignedInteger;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" * Represents a Person\u0027s table number in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTableNumber(String)}","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"public class TableNumber {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"            \"Table numbers should only contain numbers\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    public final String value;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * Constructs a {@code TableNumber}.","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     * @param tableNumber A valid table number.","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    public TableNumber(String tableNumber) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        requireNonNull(tableNumber);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        checkArgument(isValidTableNumber(tableNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        value \u003d Integer.toString(parseInt(tableNumber)); //Integer.parseInt removes preceding zeros from tableNumber","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     * Returns true if a given string is a valid table number.","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    public static boolean isValidTableNumber(String test) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isNonZeroUnsignedInteger(test);","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        return value;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        if (!(other instanceof TableNumber)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        TableNumber otherTableNumber \u003d (TableNumber) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        return value.equals(otherTableNumber.value);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tllshan":63}},{"path":"src/main/java/wedlog/address/model/person/UniqueGuestList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.DietaryRequirementStatistics;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateGuestException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.GuestNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":" * A list of guests that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":" * A guest is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":" * guests uses Person#isSamePerson(Person) for equality to ensure that the guest being added or updated is","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":" * unique in terms of identity in the UniqueGuestList. However, the removal of a guest uses Guest#equals(Object)","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":" * to ensure that the guest with exactly the same fields will be removed.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"public class UniqueGuestList implements Iterable\u003cGuest\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    private final ObservableList\u003cGuest\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    private final ObservableList\u003cGuest\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"     * Returns true if the list contains an equivalent guest as the given argument.","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    public boolean contains(Guest toCheck) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"     * Adds a guest to the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"     * The guest must not already exist in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"    public void add(Guest toAdd) {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"     * Replaces the guest {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"     * The guest identity of {@code editedPerson} must not be the same as another existing guest in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    public void setGuest(Guest target, Guest editedPerson) {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"            throw new GuestNotFoundException();","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"     * Removes the equivalent guest from the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"     * The guest must exist in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    public void remove(Guest toRemove) {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"            throw new GuestNotFoundException();","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"    public void setGuests(UniqueGuestList replacement) {","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"     * Replaces the contents of this list with {@code guests}.","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"     * {@code guests} must not contain duplicate guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    public void setGuests(List\u003cGuest\u003e guests) {","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        requireAllNonNull(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        if (!guestsAreUnique(guests)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        internalList.setAll(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"     * Calculates the number of guests with an RSVP status of \"yes\".","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"keaganpzh"},"content":"     * @return number of guests with an RSVP status of \"yes\".","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"    public int getNumGuestsRsvpYes() {","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"        int numGuestsRsvpYes \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"keaganpzh"},"content":"        for (Guest guest : internalList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"keaganpzh"},"content":"            if (guest.getRsvpStatus().value.equals(\"yes\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"                numGuestsRsvpYes++;","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"        return numGuestsRsvpYes;","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"     * Calculates the number of guests with an RSVP status of \"no\".","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"     * @return number of guests with an RSVP status of \"no\".","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"keaganpzh"},"content":"    public int getNumGuestsRsvpNo() {","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"keaganpzh"},"content":"        int numGuestsRsvpNo \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"keaganpzh"},"content":"        for (Guest guest : internalList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"keaganpzh"},"content":"            if (guest.getRsvpStatus().value.equals(\"no\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"keaganpzh"},"content":"                numGuestsRsvpNo++;","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"keaganpzh"},"content":"        return numGuestsRsvpNo;","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"keaganpzh"},"content":"     * Calculates the number of guests with an RSVP status of \"unknown\".","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"keaganpzh"},"content":"     * @return number of guests with an RSVP status of \"unknown\".","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"keaganpzh"},"content":"    public int getNumGuestsRsvpUnknown() {","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"        int numGuestsRsvpUnknown \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"keaganpzh"},"content":"        for (Guest guest : internalList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"            if (guest.getRsvpStatus().value.equals(\"unknown\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"                numGuestsRsvpUnknown++;","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"keaganpzh"},"content":"        return numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"     * Collates dietary requirements of all guests into a {@code DietaryRequirementStatistics} object.","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code DietaryRequirementStatistics} object containing key-value pairs of dietary requirements.","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirementStatistics getDietaryRequirementStatistics() { // O(n^2) solution. Can optimise?","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"        HashMap\u003cString, Integer\u003e dietaryRequirementMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"        for (Guest guest : internalList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"            String dietaryRequirementsString \u003d guest.getDietaryRequirementsString();","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"            if (guest.getRsvpStatus().status !\u003d RsvpStatus.Status.YES) {","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"                continue;","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"keaganpzh"},"content":"            if (dietaryRequirementsString.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"keaganpzh"},"content":"                dietaryRequirementsString \u003d \"regular\";","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"keaganpzh"},"content":"            if (dietaryRequirementMap.containsKey(dietaryRequirementsString)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"keaganpzh"},"content":"                dietaryRequirementMap.put(dietaryRequirementsString,","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"keaganpzh"},"content":"                        dietaryRequirementMap.get(dietaryRequirementsString) + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"keaganpzh"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"keaganpzh"},"content":"                dietaryRequirementMap.put(dietaryRequirementsString, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"keaganpzh"},"content":"        return new DietaryRequirementStatistics(dietaryRequirementMap);","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"    public ObservableList\u003cGuest\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"    public Iterator\u003cGuest\u003e iterator() {","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof UniqueGuestList)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList otherUniqueGuestList \u003d (UniqueGuestList) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"        return internalList.equals(otherUniqueGuestList.internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"     * Returns true if {@code guests} contains only unique guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"    private boolean guestsAreUnique(List\u003cGuest\u003e guests) {","lastModifiedDate":"2023-10-07"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"        for (int i \u003d 0; i \u003c guests.size() - 1; i++) {","lastModifiedDate":"2023-10-07"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"            for (int j \u003d i + 1; j \u003c guests.size(); j++) {","lastModifiedDate":"2023-10-07"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"                if (guests.get(i).isSamePerson(guests.get(j))) {","lastModifiedDate":"2023-10-07"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"                    return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":216,"author":{"gitId":"p-xp"},"content":"                }","lastModifiedDate":"2023-10-07"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":219,"author":{"gitId":"p-xp"},"content":"        return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":220,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":221,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":4,"samuelim01":4,"p-xp":146,"keaganpzh":67}},{"path":"src/main/java/wedlog/address/model/person/UniqueVendorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateVendorException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.VendorNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":" * A list of vendors that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":" * A vendor is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":" * vendors uses Person#isSamePerson(Person) for equality so as to ensure that the vendor being added or updated is","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":" * unique in terms of identity in the UniqueVendorList. However, the removal of a vendor uses Vendor#equals(Object) so","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":" * as to ensure that the vendor with exactly the same fields will be removed.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"public class UniqueVendorList implements Iterable\u003cVendor\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    private final ObservableList\u003cVendor\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    private final ObservableList\u003cVendor\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"     * Returns true if the list contains an equivalent vendor as the given argument.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"    public boolean contains(Vendor toCheck) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"     * Adds a vendor to the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"     * The vendor must not already exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    public void add(Vendor toAdd) {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"            throw new DuplicateVendorException();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"     * Replaces the vendor {@code target} in the list with {@code editedVendor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"     * The vendor identity of {@code editedVendor} must not be the same as another existing vendor in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(target, editedVendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"            throw new VendorNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        if (!target.isSamePerson(editedVendor) \u0026\u0026 contains(editedVendor)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"            throw new DuplicateVendorException();","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        internalList.set(index, editedVendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"     * Removes the equivalent vendor from the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"     * The vendor must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    public void remove(Vendor toRemove) {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"            throw new VendorNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    public void setVendors(UniqueVendorList replacement) {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"     * Replaces the contents of this list with {@code vendors}.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"     * {@code vendors} must not contain duplicate vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    public void setVendors(List\u003cVendor\u003e vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        if (!vendorsAreUnique(vendors)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"            throw new DuplicateVendorException();","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        internalList.setAll(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    public ObservableList\u003cVendor\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    public Iterator\u003cVendor\u003e iterator() {","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof UniqueVendorList)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList otherUniqueVendorList \u003d (UniqueVendorList) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        return internalList.equals(otherUniqueVendorList.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"     * Returns true if {@code vendors} contains only unique vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"    private boolean vendorsAreUnique(List\u003cVendor\u003e vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        for (int i \u003d 0; i \u003c vendors.size() - 1; i++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"            for (int j \u003d i + 1; j \u003c vendors.size(); j++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"                if (vendors.get(i).isSamePerson(vendors.get(j))) {","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"                    return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":150}},{"path":"src/main/java/wedlog/address/model/person/Vendor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":" * Represents a Vendor in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":" * Guarantees: field values are validated, immutable.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"public class Vendor extends Person {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"     * Name and tags must be present and not null.","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public Vendor(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     * Returns true if both vendors have the same identity and data fields.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"     * This defines a stronger notion of equality between two vendors.","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        if (!(other instanceof Vendor)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"            return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        Vendor otherVendor \u003d (Vendor) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        return super.equals(otherVendor);","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), getTags());","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"                .add(\"email\", getEmail())","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"                .add(\"address\", getAddress())","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"                .toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tllshan":52,"samuelim01":4,"p-xp":1}},{"path":"src/main/java/wedlog/address/model/person/exceptions/DuplicateGuestException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":" * Signals that the operation will result in duplicate Guests (Guests are considered duplicates if they have the same","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":" * identity).","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"public class DuplicateGuestException extends RuntimeException {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"    public DuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"        super(\"Operation would result in duplicate guests\");","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":1,"p-xp":11}},{"path":"src/main/java/wedlog/address/model/person/exceptions/DuplicateVendorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":" * Signals that the operation will result in duplicate Vendors (Vendors are considered duplicates if they have the same","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":" * identity).","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"public class DuplicateVendorException extends RuntimeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"    public DuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"        super(\"Operation would result in duplicate vendors\");","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":11}},{"path":"src/main/java/wedlog/address/model/person/exceptions/GuestNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"public class GuestNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":1,"p-xp":5}},{"path":"src/main/java/wedlog/address/model/person/exceptions/VendorNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":" * Signals that the operation is unable to find the specified vendor.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"public class VendorNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":6}},{"path":"src/main/java/wedlog/address/model/tag/DietaryRequirement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":" * Represents a Guest\u0027s dietary requirement in WedLog.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"public class DietaryRequirement {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"            \"Dietary requirements should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    public final String value;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"     * Constructs a {@code DietaryRequirement}.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     * @param remark A dietary requirement.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirement(String remark) {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        checkArgument(isValidDietaryRequirement(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"        this.value \u003d remark;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"     * Returns true if a given string is a valid dietary requirement.","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    public static boolean isValidDietaryRequirement(String test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"        if (!(other instanceof DietaryRequirement)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirement otherDietaryRequirement \u003d (DietaryRequirement) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"        return value.equals(otherDietaryRequirement.value);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        return \u0027[\u0027 + value + \u0027]\u0027;","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"tllshan":1,"keaganpzh":60}},{"path":"src/main/java/wedlog/address/model/tag/GuestDietaryPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":" * Tests that a {@code Person}\u0027s {@code Dietary Requirement} matches any of the keywords given.","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"public class GuestDietaryPredicate implements Predicate\u003cGuest\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"     * Constructor for GuestDietaryPredicate.","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"    public GuestDietaryPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"     * Returns true if ALL keywords provided match at least one of the given {@code Guest}\u0027s dietary requirement(s).","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"     * Keywords list should never be empty.","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"     * A keyword that is an empty string should match an empty {@code DietaryRequirement} field.","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"     * A non-empty keyword will match dietary requirement(s) on an exact match basis.","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    public boolean test(Guest guest) {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"        assert guest !\u003d null : \"Guest passed to GuestDietaryPredicate should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        assert !keywords.isEmpty() : \"keywords list for GuestDietaryPredicate should not be empty\";","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        return keywords.get(0).isEmpty() // If a keyword is empty","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"                ? guest.getDietaryRequirements().isEmpty() // Return true if DR field is also empty","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"                // Else if there are no empty keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"                // Check that all keywords match at least one DR","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"                : keywords.stream().allMatch(keyword -\u003e guest.getDietaryRequirements().stream()","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"                    .anyMatch(dr -\u003e DietaryRequirement.isValidDietaryRequirement(keyword)","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"                        \u0026\u0026 dr.equals(new DietaryRequirement(keyword))));","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof GuestDietaryPredicate)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        GuestDietaryPredicate otherGuestDietaryPredicate \u003d (GuestDietaryPredicate) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        return keywords.equals(otherGuestDietaryPredicate.keywords);","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"p-xp":60,"wasjoe1":1}},{"path":"src/main/java/wedlog/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":60}},{"path":"src/main/java/wedlog/address/model/tag/TagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"public class TagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"     * Constructor for TagPredicate.","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"    public TagPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"     * Returns true if ALL keywords provided match at least one of the given {@code Person}\u0027s Tags.","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"     * {@code keywords} list should never be empty.","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"     * A keyword that is an empty string should match an empty tag field.","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"     * A non-empty keyword will match Tag(s) on an exact match basis.","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"        assert person !\u003d null : \"Person passed to TagPredicate should not be null!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"        assert !keywords.isEmpty() : \"keywords list for TagPredicate should not be empty\";","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        return keywords.get(0).isEmpty() // If a keyword is empty","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"                ? person.getTags().isEmpty() // Return true if Tag field is also empty","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"                // Else if there are no empty keywords","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"                : keywords.stream().allMatch(keyword -\u003e person.getTags().stream() // all keywords must match a Tag","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"                      .anyMatch(tag -\u003e Tag.isValidTagName(keyword) // checks if any Tag matches the keyword","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"                              \u0026\u0026 tag.equals(new Tag(keyword))));","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof TagPredicate)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        TagPredicate otherTagPredicate \u003d (TagPredicate) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        return keywords.equals(otherTagPredicate.keywords);","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"p-xp":58,"wasjoe1":1}},{"path":"src/main/java/wedlog/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    public static Guest[] getSampleGuests() {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"        return new Guest[] {","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"            new Guest(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new RsvpStatus(\"yes\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"                getDietaryRequirementSet(\"vegan\"), new TableNumber(\"1\"), getTagSet(\"friends\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"            new Guest(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new RsvpStatus(\"yes\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"                getDietaryRequirementSet(), new TableNumber(\"1\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"            new Guest(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new RsvpStatus(\"no\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"                getDietaryRequirementSet(), null, getTagSet(\"neighbours\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"            new Guest(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new RsvpStatus(\"unknown\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"                getDietaryRequirementSet(\"vegetarian\"), new TableNumber(\"2\"), getTagSet(\"family\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"            new Guest(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new RsvpStatus(\"no\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"                getDietaryRequirementSet(), null, getTagSet(\"classmates\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"            new Guest(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new RsvpStatus(\"yes\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"                getDietaryRequirementSet(\"pescatarian\", \"peanut allergy\"), new TableNumber(\"3\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        };","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    public static Vendor[] getSampleVendors() {","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        return new Vendor[] {","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"            new Vendor(new Name(\"ABC Catering\"), new Phone(\"67143607\"), new Email(\"abccatering@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 105 Towner Road, #01-400\"), getTagSet(\"catering\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"            new Vendor(new Name(\"Bridal Boutique\"), new Phone(\"66242358\"), new Email(\"bridalboutique@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 42 Ang Mo Kio, #03-04\"), getTagSet(\"boutique\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"            new Vendor(new Name(\"Creative Catering\"), new Phone(\"62404261\"), new Email(\"creativecatering@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 167 Tampines Street 74, #01-042\"), getTagSet(\"catering\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"            new Vendor(new Name(\"Dave Catering\"), new Phone(\"61781282\"), new Email(\"davecatering@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 260 Choa Chu Kang Drive, #01-47\"), getTagSet(\"catering\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"            new Vendor(new Name(\"Evergreen Hotel\"), new Phone(\"62413366\"), new Email(\"evergreenhotel@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"                new Address(\"162 Orchard Boulevard\"), getTagSet(\"venue\", \"catering\")),","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"            new Vendor(new Name(\"Flora Concepts\"), new Phone(\"61423611\"), new Email(\"floraconcepts@example.com\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"                new Address(\"Blk 2 Jalan Bukit Merah, #14-21\"), getTagSet(\"florist\"))","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        };","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        for (Guest sampleGuest : getSampleGuests()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"            sampleAb.addGuest(sampleGuest);","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        for (Vendor sampleVendor : getSampleVendors()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"            sampleAb.addVendor(sampleVendor);","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"     * Returns a set of dietary requirements containing the list of strings given.","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"    public static Set\u003cDietaryRequirement\u003e getDietaryRequirementSet(String... strings) {","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"keaganpzh"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"keaganpzh"},"content":"                .map(DietaryRequirement::new)","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"samuelim01":59,"keaganpzh":10,"-":26}},{"path":"src/main/java/wedlog/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":5,"-":41}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedDietaryRequirement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" * Jackson-friendly version of {@link DietaryRequirement}.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"public class JsonAdaptedDietaryRequirement {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    private final String dietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     * Constructs a {@code JsonAdaptedDietaryRequirement} with the given {@code dietaryRequirement}.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    public JsonAdaptedDietaryRequirement(String dietaryRequirement) {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"        this.dietaryRequirement \u003d dietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     * Converts a given {@code DietaryRequirement} into this class for Jackson use.","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"    public JsonAdaptedDietaryRequirement(DietaryRequirement source) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirement \u003d source.value;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    @JsonValue","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    public String getDietaryRequirement() {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        return dietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"     * Converts this Jackson-friendly adapted dietary requirement object into the model\u0027s {@code DietaryRequirement}","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"     * object.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted dietary requirement.","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirement toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"        if (!DietaryRequirement.isValidDietaryRequirement(dietaryRequirement)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"            throw new IllegalValueException(DietaryRequirement.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        return new DietaryRequirement(dietaryRequirement);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"keaganpzh":49}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedGuest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":" * Jackson-friendly version of {@link Guest}.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"class JsonAdaptedGuest extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Guest\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    private final String rsvpStatus;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    private final List\u003cJsonAdaptedDietaryRequirement\u003e dietaryRequirements \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    private final String tableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"     * Constructs a {@code JsonAdaptedGuest} with the given guest details.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"    public JsonAdaptedGuest(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"                            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"                            @JsonProperty(\"rsvpStatus\") String rsvpStatus,","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"                            @JsonProperty(\"dietaryRequirements\") List\u003cJsonAdaptedDietaryRequirement\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"                                        dietaryRequirements,","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"                            @JsonProperty(\"tableNumber\") String tableNumber,","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"                            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        this.rsvpStatus \u003d rsvpStatus;","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        this.tableNumber \u003d tableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"        if (dietaryRequirements !\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"            this.dietaryRequirements.addAll(dietaryRequirements);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"     * Converts a given {@code Guest} into this class for Jackson use.","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    public JsonAdaptedGuest(Guest source) {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        super(source);","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        rsvpStatus \u003d source.getRsvpStatus().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        tableNumber \u003d source.getTableNumber().map(tn -\u003e tn.value).orElse(null);","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements.addAll(source.getDietaryRequirements().stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"                .map(JsonAdaptedDietaryRequirement::new)","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"                .collect(java.util.stream.Collectors.toList()));","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"     * Converts this Jackson-friendly adapted guest object into the model\u0027s {@code Guest} object.","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    public Guest toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        final List\u003cTag\u003e guestTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"            guestTags.add(tag.toModelType());","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"        final List\u003cDietaryRequirement\u003e guestDietaryRequirements \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"        for (JsonAdaptedDietaryRequirement dietaryRequirement : dietaryRequirements) {","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"            guestDietaryRequirements.add(dietaryRequirement.toModelType());","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        final Phone modelPhone;","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        final Email modelEmail;","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        final Address modelAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        } else if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        final RsvpStatus modelRsvpStatus;","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        if (rsvpStatus \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"                    RsvpStatus.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        } else if (!RsvpStatus.isValidRsvpStatus(rsvpStatus)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(RsvpStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"            modelRsvpStatus \u003d new RsvpStatus(rsvpStatus);","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"        final TableNumber modelTableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"        if (tableNumber \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"            modelTableNumber \u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"        } else if (!TableNumber.isValidTableNumber(tableNumber)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"            throw new IllegalValueException(TableNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"            modelTableNumber \u003d new TableNumber(tableNumber);","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(guestTags);","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"keaganpzh"},"content":"        final Set\u003cDietaryRequirement\u003e modelDietaryRequirements \u003d new HashSet\u003c\u003e(guestDietaryRequirements);","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"        return new Guest(modelName, modelPhone, modelEmail, modelAddress, modelRsvpStatus,","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"                modelDietaryRequirements, modelTableNumber, modelTags);","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":14,"samuelim01":32,"p-xp":80,"keaganpzh":15}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    protected final String name;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    protected final String phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    protected final String email;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    protected final String address;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    protected final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        phone \u003d source.getPhone().map(p -\u003e p.value).orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        address \u003d source.getAddress().map(a -\u003e a.value).orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        email \u003d source.getEmail().map(e -\u003e e.value).orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        final Phone modelPhone;","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        final Email modelEmail;","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        final Address modelAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        } else if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":31,"-":81}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":3,"-":45}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedVendor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":" * Jackson-friendly version of {@link Vendor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"class JsonAdaptedVendor extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Vendor\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"     * Constructs a {@code JsonAdaptedVendor} with the given person details.","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    public JsonAdaptedVendor(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"     * Converts a given {@code Vendor} into this class for Jackson use.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    public JsonAdaptedVendor(Vendor source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        super(source);","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Vendor} object.","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    public Vendor toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        final Phone modelPhone;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        final Email modelEmail;","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        final Address modelAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        } else if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        return new Vendor(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":93}},{"path":"src/main/java/wedlog/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":7,"-":73}},{"path":"src/main/java/wedlog/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"Guests list contains duplicate guest(s).\";","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_DUPLICATE_VENDOR \u003d \"Vendors list contains duplicate vendor(s).\";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    private final List\u003cJsonAdaptedGuest\u003e guests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    private final List\u003cJsonAdaptedVendor\u003e vendors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons, guests and vendors.","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"                                       @JsonProperty(\"guests\") List\u003cJsonAdaptedGuest\u003e guests,","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"                                       @JsonProperty(\"vendors\") List\u003cJsonAdaptedVendor\u003e vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"        this.guests.addAll(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        this.vendors.addAll(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        guests.addAll(source.getGuestList().stream().map(JsonAdaptedGuest::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        vendors.addAll(source.getVendorList().stream().map(JsonAdaptedVendor::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        for (JsonAdaptedGuest jsonAdaptedGuest : guests) {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"            Guest guest \u003d jsonAdaptedGuest.toModelType();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"            if (addressBook.hasGuest(guest)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"            addressBook.addGuest(guest);","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        for (JsonAdaptedVendor jsonAdaptedVendor : vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"            Vendor vendor \u003d jsonAdaptedVendor.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"            if (addressBook.hasVendor(vendor)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"            addressBook.addVendor(vendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":18,"p-xp":14,"-":42}},{"path":"src/main/java/wedlog/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":5,"-":42}},{"path":"src/main/java/wedlog/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samuelim01":5,"-":27}},{"path":"src/main/java/wedlog/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":6,"-":72}},{"path":"src/main/java/wedlog/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":6,"-":30}},{"path":"src/main/java/wedlog/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        setupKeyShortcuts();","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"     * Sets up the key shortcuts","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    private void setupKeyShortcuts() {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        commandTextField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"            if (event.isShortcutDown()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"                if (event.getCode() \u003d\u003d KeyCode.Z) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"                    handleUndoAction();","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"                } else if (event.getCode() \u003d\u003d KeyCode.Y) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"                    handleRedoAction();","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"        });","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"     * Defines the Shortcut+Z action as undo","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"    private void handleUndoAction() {","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            commandExecutor.execute(UndoCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"     * Defines the Shortcut+Y action as redo","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"    private void handleRedoAction() {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"            commandExecutor.execute(RedoCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"         * @see wedlog.address.logic.Logic#execute(String)","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"tllshan":35,"samuelim01":4,"keaganpzh":7,"-":84}},{"path":"src/main/java/wedlog/address/ui/DietaryPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":" * A UI component that displays statistics of WedLog.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":" * To be updated in the future.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"public class DietaryPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    private static final String FXML \u003d \"DietaryPanel.fxml\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DietaryPanel.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    private final Logic logic;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    private Label dietaryLabel;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    private ListView\u003cString\u003e dietaryListView;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     * Creates a {@code StatisticsPanel}","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     * Currently, this is a blank component.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    public DietaryPanel(Logic logic) {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        super(FXML);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        dietaryLabel.setText(\"Dietary Requirements\");","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        dietaryListView.setItems(generateList());","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    private ObservableList\u003cString\u003e generateList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        ObservableList\u003cString\u003e dietaryList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"        logic.getDietaryRequirementStatistics().getMap().entrySet().stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"                .sorted(Map.Entry.comparingByValue((Comparator.reverseOrder())))","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"                .forEachOrdered(entry -\u003e dietaryList.add(entry.getKey() + \": \" + entry.getValue()));","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        return dietaryList;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"tllshan":44,"keaganpzh":5}},{"path":"src/main/java/wedlog/address/ui/GuestCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":" * A UI component that displays information of a {@code Guest}.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"public class GuestCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"GuestListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    private static final String RSVP_YES \u003d \"yes\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    private static final String RSVP_NO \u003d \"no\";","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    public final Guest guest;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    private Label name;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"    private Label id;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"    private Label phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    private Label address;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    private Label email;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"    private Label rsvpStatusPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"    private Label rsvpStatus;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"    private FlowPane dietaryRequirements;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    private Label tableNumber;","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code GuestCode} with the given {@code Guest} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"    public GuestCard(Guest guest, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"        this.guest \u003d guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"        name.setText(guest.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        phone.setText(guest.getPhone().map(p -\u003e p.value).orElse(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        address.setText(guest.getAddress().map(a -\u003e a.value).orElse(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        email.setText(guest.getEmail().map(e -\u003e e.value).orElse(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        tableNumber.setText(guest.getTableNumber().map(tn -\u003e \"table \" + tn.value).orElse(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"        phone.setManaged(!phone.getText().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"        email.setManaged(!email.getText().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        address.setManaged(!address.getText().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        tableNumber.setManaged(!tableNumber.getText().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"        // Setting the RSVP Label with conditional styling","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"        rsvpStatus.setText(Optional.ofNullable(guest.getRsvpStatus()).map(r -\u003e \"RSVP: \" + r.value).orElse(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"        switch (guest.getRsvpStatus().value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"        case RSVP_YES:","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            rsvpStatus.setStyle(\"-fx-background-color: #6aa84f\");","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"            break;","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"        case RSVP_NO:","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"            rsvpStatus.setStyle(\"-fx-background-color: #cc4125\");","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"            break;","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"        default:","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"            rsvpStatus.setStyle(\"-fx-background-color: #ffa42f\");","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"        guest.getDietaryRequirements().stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"                .sorted(Comparator.comparing(dietaryRequirement -\u003e dietaryRequirement.value))","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"                .forEach(dietaryRequirement -\u003e dietaryRequirements.getChildren()","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"keaganpzh"},"content":"                        .add(new Label(dietaryRequirement.value)));","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"        guest.getTags().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"keaganpzh"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"keaganpzh"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"tllshan":14,"keaganpzh":82}},{"path":"src/main/java/wedlog/address/ui/GuestListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":" * Panel containing the list of guests.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"public class GuestListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"GuestListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GuestListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    private Label guestTitle;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    private ListView\u003cGuest\u003e guestListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code GuestListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    public GuestListPanel(ObservableList\u003cGuest\u003e guestList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"        guestTitle.setText(\"Guests (\" + guestList.size() + \")\");","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"        guestListView.setItems(guestList);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        guestListView.setCellFactory(listView -\u003e new GuestListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Guest} using a {@code GuestCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    class GuestListViewCell extends ListCell\u003cGuest\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"        protected void updateItem(Guest guest, boolean isEmpty) {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"            super.updateItem(guest, isEmpty);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"            if (isEmpty || guest \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"                setGraphic(new GuestCard(guest, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":52}},{"path":"src/main/java/wedlog/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-f11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":3,"-":99}},{"path":"src/main/java/wedlog/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    private static final String LOGO_APPLICATION \u003d \"/images/WedLogLogo.png\";","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"    private GuestListPanel guestListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    private VendorListPanel vendorListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    private RsvpPanel rsvpPanel;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    private DietaryPanel dietaryPanel;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"    private ImageView logoImage;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"    private StackPane guestListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"    private StackPane vendorListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    private StackPane rsvpPlaceholder;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"    private StackPane dietaryPlaceholder;","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        logoImage.setImage(getImage(LOGO_APPLICATION));","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"        setGuestListPanel();","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"keaganpzh"},"content":"        setVendorListPanel();","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"        setRsvpPanel();","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"        setDietaryPanel();","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"keaganpzh"},"content":"    public GuestListPanel getGuestListPanel() {","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"keaganpzh"},"content":"        return guestListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"keaganpzh"},"content":"    public VendorListPanel getVendorListPanel() {","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"keaganpzh"},"content":"        return vendorListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"     * @see wedlog.address.logic.Logic#execute(String)","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"keaganpzh"},"content":"            setGuestListPanel();","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"keaganpzh"},"content":"            setVendorListPanel();","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"tllshan"},"content":"            setRsvpPanel();","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"tllshan"},"content":"            setDietaryPanel();","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"keaganpzh"},"content":"    private void setGuestListPanel() {","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"keaganpzh"},"content":"        guestListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"keaganpzh"},"content":"        guestListPanel \u003d new GuestListPanel(logic.getFilteredGuestList());","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"keaganpzh"},"content":"        guestListPanelPlaceholder.getChildren().add(guestListPanel.getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"keaganpzh"},"content":"    private void setVendorListPanel() {","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"keaganpzh"},"content":"        vendorListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"keaganpzh"},"content":"        vendorListPanel \u003d new VendorListPanel(logic.getFilteredVendorList());","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"keaganpzh"},"content":"        vendorListPanelPlaceholder.getChildren().add(vendorListPanel.getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"tllshan"},"content":"    private void setRsvpPanel() {","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"tllshan"},"content":"        rsvpPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"tllshan"},"content":"        rsvpPanel \u003d new RsvpPanel(logic);","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"tllshan"},"content":"        rsvpPlaceholder.getChildren().add(rsvpPanel.getRoot());","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"tllshan"},"content":"    private void setDietaryPanel() {","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"tllshan"},"content":"        dietaryPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"tllshan"},"content":"        dietaryPanel \u003d new DietaryPanel(logic);","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"tllshan"},"content":"        dietaryPlaceholder.getChildren().add(dietaryPanel.getRoot());","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"samuelim01"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"samuelim01"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tllshan":24,"samuelim01":16,"keaganpzh":38,"-":183}},{"path":"src/main/java/wedlog/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":1,"-":27}},{"path":"src/main/java/wedlog/address/ui/RsvpPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":" * A UI component that displays rsvp statistics of WedLog.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"public class RsvpPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    private static final String FXML \u003d \"RsvpPanel.fxml\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(RsvpPanel.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    private final Logic logic;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    private PieChart pieChart;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    private Label sliceLabel;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private Label rsvpLabel;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    private HBox piechartPlaceholder;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     * Creates a {@code StatisticsPanel}","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"     * Currently, this is a blank component.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"    public RsvpPanel(Logic logic) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        super(FXML);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        this.pieChart \u003d generatePiechart();","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        this.sliceLabel \u003d new Label();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        rsvpLabel.setText(\"RSVP Status\");","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        piechartPlaceholder.getChildren().addAll(pieChart, sliceLabel);","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    private PieChart generatePiechart() {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        RsvpStatistics rsvpStatistics \u003d logic.getRsvpStatistics();","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        int rsvpNo \u003d rsvpStatistics.getNumGuestsRsvpNo();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        int rsvpYes \u003d rsvpStatistics.getNumGuestsRsvpYes();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        int rsvpUnknown \u003d rsvpStatistics.getNumGuestsRsvpUnknown();","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        pieChartData.add(new PieChart.Data(\"No (\" + rsvpNo + \")\", rsvpNo));","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        pieChartData.add(new PieChart.Data(\"Yes (\" + rsvpYes + \")\", rsvpYes));","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        pieChartData.add(new PieChart.Data(\"Unknown (\" + rsvpUnknown + \")\", rsvpUnknown));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        final PieChart chart \u003d new PieChart(pieChartData);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        chart.setLabelsVisible(true);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        chart.setLegendVisible(false);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        return chart;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"tllshan":63,"keaganpzh":1}},{"path":"src/main/java/wedlog/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":27}},{"path":"src/main/java/wedlog/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samuelim01":1,"-":12}},{"path":"src/main/java/wedlog/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":5,"-":83}},{"path":"src/main/java/wedlog/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":2,"-":86}},{"path":"src/main/java/wedlog/address/ui/VendorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":" * A UI component that displays information of a {@code Vendor}.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"public class VendorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"VendorListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"    public final Vendor vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code GuestCode} with the given {@code Vendor} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    public VendorCard(Vendor vendor, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"        this.vendor \u003d vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"        name.setText(vendor.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        phone.setText(vendor.getPhone().map(p -\u003e p.value).orElse(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"        address.setText(vendor.getAddress().map(a -\u003e a.value).orElse(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        email.setText(vendor.getEmail().map(e -\u003e e.value).orElse(\"\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        phone.setManaged(!phone.getText().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        email.setManaged(!email.getText().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        address.setManaged(!address.getText().isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"        vendor.getTags().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tllshan":8,"samuelim01":1,"keaganpzh":10,"-":45}},{"path":"src/main/java/wedlog/address/ui/VendorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":" * Panel containing the list of guests.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"public class VendorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"VendorListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(VendorListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    private Label vendorTitle;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    private ListView\u003cVendor\u003e vendorListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code VendorListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    public VendorListPanel(ObservableList\u003cVendor\u003e vendorList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"        vendorTitle.setText(\"Vendors (\" + vendorList.size() + \")\");","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"        vendorListView.setItems(vendorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        vendorListView.setCellFactory(listView -\u003e new VendorListViewCell());","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Vendor} using a {@code VendorCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    class VendorListViewCell extends ListCell\u003cVendor\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"        protected void updateItem(Vendor vendor, boolean isEmpty) {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"            super.updateItem(vendor, isEmpty);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"            if (isEmpty || vendor \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"                setGraphic(new VendorCard(vendor, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":52}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003cStackPane styleClass\u003d\"command-box\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"tllshan":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    -fx-base: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    -fx-control-inner-background: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: derive(#f9fafb, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #edede9;","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":".card {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"    -fx-background-insets: 4;","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"    -fx-padding: 10;","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #f8f8f8;","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #efefef;","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"    -fx-background-insets: 2;","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"    -fx-padding: 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":".list-cell:empty {","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":".list-cell:selected {","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":".combined-list-view {","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"    -fx-background-insets: 4 0 0 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"    -fx-padding: 10 10 6 10;","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #efefef;","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":".card_label {","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Times New Roman\";","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"tllshan"},"content":"    -fx-text-fill: #c9606a;","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"    -fx-text-fill: #666666;","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":157,"author":{"gitId":"keaganpzh"},"content":"     -fx-background-color: #f9fafb;","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"keaganpzh"},"content":"     -fx-background-radius: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"keaganpzh"},"content":"     -fx-border-radius: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"keaganpzh"},"content":"     -fx-border-color: #d0d0d0;","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"    -fx-text-fill: #434141;","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"tllshan"},"content":".command-box {","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #dd888f;","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"tllshan"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"tllshan"},"content":".status-bar {","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: linear-gradient(to top, darkgray, transparent);","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":187,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"tllshan"},"content":"    -fx-font-size: 8pt;","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: linear-gradient(to top, darkgray, transparent);","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-color: derive(#f9fafb, 25%);","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: derive(#f9fafb, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-color: derive(#f9fafb, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":210,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: derive(#f9fafb, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #f1e5e5;","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: linear-gradient(to top, #d8d8d8, transparent);","lastModifiedDate":"2023-10-28"},{"lineNumber":224,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-width: 0 0 0.5 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"tllshan"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-10-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":230,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"keaganpzh"},"content":"  -fx-background-color: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"keaganpzh"},"content":"  -fx-text-fill: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":275,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: derive(#fffeed, 25%);","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"keaganpzh"},"content":"    -fx-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #edede9;","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #d0d0d0;","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"tllshan"},"content":".data0.chart-pie {","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #cc4125;","lastModifiedDate":"2023-10-28"},{"lineNumber":341,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":343,"author":{"gitId":"tllshan"},"content":".data1.chart-pie {","lastModifiedDate":"2023-10-27"},{"lineNumber":344,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #6aa84f;","lastModifiedDate":"2023-10-28"},{"lineNumber":345,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":347,"author":{"gitId":"tllshan"},"content":".data2.chart-pie {","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #ffa42f;","lastModifiedDate":"2023-10-28"},{"lineNumber":349,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":350,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"tllshan"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"tllshan"},"content":"    -fx-prompt-text-fill: #efefef;","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #f8f8f8;","lastModifiedDate":"2023-10-25"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"keaganpzh"},"content":"#dietaryRequirements {","lastModifiedDate":"2023-10-24"},{"lineNumber":379,"author":{"gitId":"keaganpzh"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-24"},{"lineNumber":380,"author":{"gitId":"keaganpzh"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-24"},{"lineNumber":381,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":382,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":383,"author":{"gitId":"keaganpzh"},"content":"#dietaryRequirements .label {","lastModifiedDate":"2023-10-24"},{"lineNumber":384,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"tllshan"},"content":"    -fx-text-fill: #f8f8f8;","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #e3b5ba;","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"tllshan"},"content":"    -fx-padding: 2 6 2 6;","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-24"},{"lineNumber":389,"author":{"gitId":"tllshan"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"tllshan"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-10-27"},{"lineNumber":391,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":392,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":393,"author":{"gitId":"tllshan"},"content":"#rsvpStatus {","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"tllshan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"tllshan"},"content":"    -fx-text-fill: #f8f8f8;","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"tllshan"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-26"},{"lineNumber":398,"author":{"gitId":"tllshan"},"content":"    -fx-padding: 2 6 2 6;","lastModifiedDate":"2023-10-26"},{"lineNumber":399,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":401,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":407,"author":{"gitId":"tllshan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-26"},{"lineNumber":408,"author":{"gitId":"tllshan"},"content":"    -fx-text-fill: #f8f8f8;","lastModifiedDate":"2023-10-26"},{"lineNumber":409,"author":{"gitId":"tllshan"},"content":"    -fx-background-color: #c9606a;","lastModifiedDate":"2023-10-26"},{"lineNumber":410,"author":{"gitId":"tllshan"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-26"},{"lineNumber":411,"author":{"gitId":"tllshan"},"content":"    -fx-padding: 2 6 2 6;","lastModifiedDate":"2023-10-26"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":413,"author":{"gitId":"tllshan"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"tllshan":80,"keaganpzh":53,"-":281}},{"path":"src/main/resources/view/DietaryPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"\u003cHBox id\u003d\"dietaryPanel\" fx:id\u003d\"dietaryPanel\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"        \u003cLabel fx:id\u003d\"dietaryLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"22.0\" prefWidth\u003d\"1000.0\" styleClass\u003d\"card_label\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        \u003cListView fx:id\u003d\"dietaryListView\" styleClass\u003d\"combined-list-view\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"tllshan":12,"keaganpzh":1}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"    -fx-background: #edede9;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"keaganpzh":1,"-":19}},{"path":"src/main/resources/view/GuestListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" style\u003d\"-fx-padding: 1 0 1 0\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"            \u003cFlowPane fx:id\u003d\"dietaryRequirements\" style\u003d\"-fx-padding: 1 0 2 0\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            \u003cLabel fx:id\u003d\"rsvpStatus\" styleClass\u003d\"rsvpStatus\" text\u003d\"\\$RSVP\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"            \u003cLabel fx:id\u003d\"tableNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$tableNumber\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tllshan":39}},{"path":"src/main/resources/view/GuestListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"card\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"    \u003cLabel fx:id\u003d\"guestTitle\" alignment\u003d\"CENTER\" prefWidth\u003d\"10000\" styleClass\u003d\"card_label\" text\u003d\"Guests\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    \u003cListView fx:id\u003d\"guestListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"tllshan":1,"keaganpzh":9}},{"path":"src/main/resources/view/LogoView.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"            fx:controller\u003d\"view.LogoView\"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"            prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"tllshan":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"\u003cfx:root minHeight\u003d\"660\" minWidth\u003d\"900\" onCloseRequest\u003d\"#handleExit\" title\u003d\"WedLog\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        \u003cHBox HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"400\" style\u003d\"-fx-background-color: #f1e5e5\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            \u003cInsets left\u003d\"6\" right\u003d\"6\" top\u003d\"6\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"          \u003cVBox styleClass\u003d\"stack-pane\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"            \u003cStackPane styleClass\u003d\"stack-pane\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"              \u003cImageView fx:id\u003d\"logoImage\" fitWidth\u003d\"200.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"            \u003cStackPane fx:id\u003d\"rsvpPlaceholder\" prefWidth\u003d\"200.0\" minWidth\u003d\"300.0\" styleClass\u003d\"card\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"            \u003cStackPane fx:id\u003d\"dietaryPlaceholder\" prefHeight\u003d\"500.0\" prefWidth\u003d\"200.0\" minHeight\u003d\"100.0\" styleClass\u003d\"card\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"          \u003cVBox fx:id\u003d\"guestList\" prefWidth\u003d\"350\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"            \u003cStackPane fx:id\u003d\"guestListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"          \u003cVBox fx:id\u003d\"vendorList\" prefWidth\u003d\"350\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"            \u003cStackPane fx:id\u003d\"vendorListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        \u003cHBox HBox.hgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: #f1e5e5\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            \u003cInsets bottom\u003d\"6\" left\u003d\"6\" right\u003d\"6\"/\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"          \u003cVBox minWidth\u003d\"400.0\" prefWidth\u003d\"10000\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"80.0\" styleClass\u003d\"card\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"command-box\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" prefWidth\u003d\"405.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tllshan":14,"keaganpzh":17,"-":47}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"tllshan":1,"-":7}},{"path":"src/main/resources/view/RsvpPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003cHBox id\u003d\"rsvpPanel\" fx:id\u003d\"rsvpPanel\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"    \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"        \u003cLabel fx:id\u003d\"rsvpLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"1000.0\" styleClass\u003d\"card_label\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"        \u003cHBox fx:id\u003d\"piechartPlaceholder\" alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"tllshan":12}},{"path":"src/main/resources/view/VendorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"tllshan":1,"keaganpzh":35}},{"path":"src/main/resources/view/VendorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"card\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"    \u003cLabel fx:id\u003d\"vendorTitle\" alignment\u003d\"CENTER\" prefWidth\u003d\"10000\" styleClass\u003d\"card_label\" text\u003d\"Vendors\" textAlignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    \u003cListView fx:id\u003d\"vendorListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"tllshan":2,"keaganpzh":8}},{"path":"src/test/java/wedlog/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"samuelim01":1,"-":88}},{"path":"src/test/java/wedlog/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"samuelim01":1,"-":26}},{"path":"src/test/java/wedlog/address/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import java.awt.Point;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"    public void getWindowCoordinates() {","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"        // non-null -\u003e returns coordinates","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"        Point expectedCoordinates \u003d new Point(3, 4);","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedCoordinates, guiSettings.getWindowCoordinates());","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns null","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"        guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        assertEquals(null, guiSettings.getWindowCoordinates());","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        assertTrue(guiSettings.equals(guiSettings));","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        GuiSettings guiSettingsCpy \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        assertTrue(guiSettings.equals(guiSettingsCpy));","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        assertFalse(guiSettings.equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        assertFalse(guiSettings.equals(5.0f));","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        // different windowWidth -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        GuiSettings diffValues \u003d new GuiSettings(2, 2, 3, 4);","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"        assertFalse(guiSettings.equals(diffValues));","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        // different windowHeight -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        diffValues \u003d new GuiSettings(1, 3, 3, 4);","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        assertFalse(guiSettings.equals(diffValues));","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        // different xPosition -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        diffValues \u003d new GuiSettings(1, 2, 4, 4);","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        assertFalse(guiSettings.equals(diffValues));","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        // different yPosition -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        diffValues \u003d new GuiSettings(1, 2, 3, 5);","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        assertFalse(guiSettings.equals(diffValues));","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"samuelim01":51,"-":15}},{"path":"src/test/java/wedlog/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":133}},{"path":"src/test/java/wedlog/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core.index;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"samuelim01":2,"-":65}},{"path":"src/test/java/wedlog/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"samuelim01":2,"-":34}},{"path":"src/test/java/wedlog/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"    public void isAnyTrue() {","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        // EPs: [empty][null][all false][all true][mixed]","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        // EP1: empty","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        assertFalse(CollectionUtil.isAnyTrue());","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        // EP2: null","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        assertFalse(CollectionUtil.isAnyTrue((Boolean[]) null));","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        assertFalse(CollectionUtil.isAnyTrue((Boolean) null));","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        // EP3: all false","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        assertFalse(CollectionUtil.isAnyTrue(false));","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        assertFalse(CollectionUtil.isAnyTrue(false, false, false));","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        // EP4: all true","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        assertTrue(CollectionUtil.isAnyTrue(true));","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        assertTrue(CollectionUtil.isAnyTrue(true, true, true));","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        // EP5: mixed","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        assertTrue(CollectionUtil.isAnyTrue(true, false));","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        assertTrue(CollectionUtil.isAnyTrue(true, null));","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        assertFalse(CollectionUtil.isAnyTrue(false, null));","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"samuelim01":28,"-":105}},{"path":"src/test/java/wedlog/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":4,"-":112}},{"path":"src/test/java/wedlog/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":21}},{"path":"src/test/java/wedlog/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TestUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":3,"-":42}},{"path":"src/test/java/wedlog/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"samuelim01":2,"-":141}},{"path":"src/test/java/wedlog/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.RSVP_DESC_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TABLE_DESC_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalGuests.GABRIEL;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalGuests.GEORGE;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.logic.commands.GuestListCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.DietaryRequirementStatistics;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.StorageManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"        String guestDeleteCommand \u003d \"guest delete 9\";","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"        assertCommandException(guestDeleteCommand, MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"        String guestListCommand \u003d \"guest \" + GuestListCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"        assertCommandSuccess(guestListCommand, GuestListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    public void getFilteredGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredGuestList().remove(0));","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"    public void getFilteredVendorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredVendorList().remove(0));","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"    public void getRsvpStatisticsTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"keaganpzh"},"content":"        model.addGuest(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"keaganpzh"},"content":"        model.addGuest(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(1, 1, 0), logic.getRsvpStatistics());","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"keaganpzh"},"content":"    public void getDietaryRequirementStatisticsTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"        HashMap\u003cString, Integer\u003e expectedMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"        expectedMap.put(\"vegan\", 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"        expectedMap.put(\"no beef\", 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"        model.addGuest(GINA);","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"        model.addGuest(GREG); // rsvp no","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"        model.addGuest(GABRIEL); // rsvp unknown","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"        model.addGuest(GEORGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new DietaryRequirementStatistics(expectedMap), logic.getDietaryRequirementStatistics());","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"    public void setGuiSettings() {","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        // EPs: [null][non-null]","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        // EP1: null","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.setGuiSettings(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        // EP2: non-null","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"        assertEquals(guiSettings, logic.getGuiSettings());","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":155,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":164,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":173,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"keaganpzh"},"content":"        // Triggers the saveAddressBook method by executing a guest add command","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"p-xp"},"content":"        String guestAddCommand \u003d \"guest \" + GuestAddCommand.COMMAND_WORD + NAME_DESC_GIA + PHONE_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":222,"author":{"gitId":"p-xp"},"content":"                + EMAIL_DESC_GIA + ADDRESS_DESC_GIA + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":223,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GIA).withTags().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":225,"author":{"gitId":"keaganpzh"},"content":"        expectedModel.addGuest(expectedGuest);","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"        assertCommandFailure(guestAddCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tllshan":6,"samuelim01":35,"p-xp":11,"keaganpzh":37,"-":140}},{"path":"src/test/java/wedlog/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalGuests;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalVendors;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        Model model \u003d new ModelManager(TypicalGuests.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"        Model expectedModel \u003d new ModelManager(TypicalGuests.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        model \u003d new ModelManager(TypicalVendors.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        expectedModel \u003d new ModelManager(TypicalVendors.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"samuelim01":19,"-":23}},{"path":"src/test/java/wedlog/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"samuelim01":1,"-":62}},{"path":"src/test/java/wedlog/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NamePredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditVendorDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    // Names","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_NAME_GIA \u003d \"Gia Giordano\";","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_NAME_GABE \u003d \"Gabe Gaberella\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_NAME_VAL \u003d \"Val Valencia\";","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    public static final String VALID_NAME_VICTOR \u003d \"Victor Tan\";","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    // Phone","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_PHONE_GIA \u003d \"33333333\";","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_PHONE_GABE \u003d \"44444444\";","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_PHONE_VAL \u003d \"55555555\";","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"    // Email","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_EMAIL_GIA \u003d \"gia@example.com\";","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_EMAIL_GABE \u003d \"gabe@example.com\";","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_EMAIL_VAL \u003d \"val@example.com\";","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    // Address","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_ADDRESS_GIA \u003d \"Block 456, Gia Street 5\";","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_ADDRESS_GABE \u003d \"Block 654, Gabe Street 7\";","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_ADDRESS_VAL \u003d \"Block 456, Val Street 7\";","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    // RSVP","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_RSVP_STATUS_AMY \u003d \"no\";","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_RSVP_STATUS_BOB \u003d \"unknown\";","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_RSVP_STATUS_GIA \u003d \"yes\";","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_RSVP_STATUS_GABE \u003d \"no\";","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    // Dietary Requirement","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_DIETARY_REQUIREMENTS_BOB \u003d \"no beef\";","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_DIETARY_REQUIREMENTS_GIA \u003d \"vegan\";","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_DIETARY_REQUIREMENTS_GABE \u003d \"vegetarian\";","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    // Table Number","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"    public static final String VALID_TABLE_NUMBER_AMY \u003d \"13\";","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"    public static final String VALID_TABLE_NUMBER_BOB \u003d \"31\";","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_TABLE_NUMBER_GIA \u003d \"57\";","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_TABLE_NUMBER_GABE \u003d \"75\";","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    // Tags","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_TAG_FLORIST \u003d \"florist\";","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_TAG_PHOTOGRAPHER \u003d \"photographer\";","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"    // With prefixes","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    public static final String NAME_DESC_GIA \u003d \" \" + PREFIX_NAME + VALID_NAME_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"    public static final String NAME_DESC_GABE \u003d \" \" + PREFIX_NAME + VALID_NAME_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    public static final String NAME_DESC_VAL \u003d \" \" + PREFIX_NAME + VALID_NAME_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    public static final String PHONE_DESC_GIA \u003d \" \" + PREFIX_PHONE + VALID_PHONE_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"    public static final String PHONE_DESC_GABE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    public static final String PHONE_DESC_VAL \u003d \" \" + PREFIX_PHONE + VALID_PHONE_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"    public static final String EMAIL_DESC_GIA \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"    public static final String EMAIL_DESC_GABE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"    public static final String EMAIL_DESC_VAL \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    public static final String ADDRESS_DESC_GIA \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"    public static final String ADDRESS_DESC_GABE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"    public static final String ADDRESS_DESC_VAL \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"    public static final String RSVP_DESC_GIA \u003d \" \" + PREFIX_RSVP + VALID_RSVP_STATUS_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"    public static final String RSVP_DESC_GABE \u003d \" \" + PREFIX_RSVP + VALID_RSVP_STATUS_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"    public static final String DIETARY_DESC_GIA \u003d \" \" + PREFIX_DIETARY + VALID_DIETARY_REQUIREMENTS_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"    public static final String DIETARY_DESC_GABE \u003d \" \" + PREFIX_DIETARY + VALID_DIETARY_REQUIREMENTS_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"    public static final String TABLE_DESC_GIA \u003d \" \" + PREFIX_TABLE + VALID_TABLE_NUMBER_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    public static final String TABLE_DESC_GABE \u003d \" \" + PREFIX_TABLE + VALID_TABLE_NUMBER_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    public static final String TAG_DESC_FLORIST \u003d \" \" + PREFIX_TAG + VALID_TAG_FLORIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"    public static final String TAG_DESC_PHOTOGRAPHER \u003d \" \" + PREFIX_TAG + VALID_TAG_PHOTOGRAPHER;","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"    public static final String INVALID_EMPTY_NAME_DESC \u003d \" \" + PREFIX_NAME; // empty string not allowed in names","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"    public static final String INVALID_RSVP_DESC \u003d \" \" + PREFIX_RSVP + \"abcd\"; // not within range of accepted rsvp","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"keaganpzh"},"content":"    public static final String INVALID_DIETARY_DESC \u003d \" \" + PREFIX_DIETARY + \"#vegan\"; // \"#\" not allowed for dietary","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"    public static final String INVALID_TABLE_DESC \u003d \" \" + PREFIX_TABLE + \"1a\"; // \u0027a\u0027 not allowed in table numbers","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"    public static final GuestEditCommand.EditGuestDescriptor DESC_GIA;","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"    public static final GuestEditCommand.EditGuestDescriptor DESC_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"    public static final VendorEditCommand.EditVendorDescriptor DESC_VAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"    public static final VendorEditCommand.EditVendorDescriptor DESC_BRYAN;","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        // Guest","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"        DESC_GIA \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_GIA).withPhone(VALID_PHONE_GIA)","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"                .withEmail(VALID_EMAIL_GIA).withAddress(VALID_ADDRESS_GIA).withRsvp(VALID_RSVP_STATUS_GIA)","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"                .withDietary(VALID_DIETARY_REQUIREMENTS_GIA).withTable(VALID_TABLE_NUMBER_GIA).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"        DESC_GABE \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_GABE).withPhone(VALID_PHONE_GABE)","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"                .withEmail(VALID_EMAIL_GABE).withAddress(VALID_ADDRESS_GABE).withRsvp(VALID_RSVP_STATUS_GABE)","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"                .withDietary(VALID_DIETARY_REQUIREMENTS_GABE).withTable(VALID_TABLE_NUMBER_GABE)","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"        // Vendor","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"        DESC_VAL \u003d new EditVendorDescriptorBuilder().withName(VALID_NAME_VAL)","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        DESC_BRYAN \u003d new EditVendorDescriptorBuilder().withName(VALID_NAME_VICTOR)","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"        List\u003cPerson\u003e expectedGuestFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredGuestList());","lastModifiedDate":"2023-11-10"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"        List\u003cPerson\u003e expectedVendorFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredVendorList());","lastModifiedDate":"2023-11-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuestFilteredList, actualModel.getFilteredGuestList());","lastModifiedDate":"2023-11-10"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedVendorFilteredList, actualModel.getFilteredVendorList());","lastModifiedDate":"2023-11-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"tllshan"},"content":"     * Updates {@code model}\u0027s filtered guest list to show only the guest at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"tllshan"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"tllshan"},"content":"    public static void showGuestAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"tllshan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGuestList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"tllshan"},"content":"        Guest guest \u003d model.getFilteredGuestList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"wasjoe1"},"content":"        final String fullName \u003d guest.getName().fullName;","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"wasjoe1"},"content":"        model.updateFilteredGuestList(new NamePredicate(fullName));","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"tllshan"},"content":"        assertEquals(1, model.getFilteredGuestList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"tllshan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"tllshan"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"tllshan"},"content":"    public static void showVendorAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"tllshan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredVendorList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"tllshan"},"content":"        Vendor vendor \u003d model.getFilteredVendorList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"wasjoe1"},"content":"        final String fullName \u003d vendor.getName().fullName;","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"wasjoe1"},"content":"        model.updateFilteredVendorList(new NamePredicate(fullName));","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"tllshan"},"content":"        assertEquals(1, model.getFilteredVendorList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"samuelim01"},"content":"     * Inspired by AddressBook Level 4","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"samuelim01"},"content":"     * Deletes {@code model}\u0027s first guest from the {@code model}\u0027s address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"samuelim01"},"content":"    public static void deleteFirstGuest(Model model) {","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"samuelim01"},"content":"        assertTrue(model.getFilteredGuestList().size() \u003e 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"        Guest firstGuest \u003d model.getFilteredGuestList().get(0);","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"samuelim01"},"content":"        model.deleteGuest(firstGuest);","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"samuelim01"},"content":"        model.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tllshan":27,"samuelim01":39,"p-xp":76,"wasjoe1":5,"keaganpzh":1,"-":89}},{"path":"src/test/java/wedlog/address/logic/commands/EditGuestDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_GIA;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TABLE_NUMBER_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand.EditGuestDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"public class EditGuestDescriptorTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    public void setDietary_nullDietary_exception() {","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor egd \u003d new EditGuestDescriptor(DESC_GIA);","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"        assertThrows(AssertionError.class, () -\u003e egd.setDietary(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"    public void setTags_nullTags_exception() {","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor egd \u003d new EditGuestDescriptor(DESC_GIA);","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"        assertThrows(AssertionError.class, () -\u003e egd.setTags(null));","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptorWithSameValues \u003d new EditGuestDescriptor(DESC_GIA);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        assertTrue(DESC_GIA.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"        assertTrue(DESC_GIA.equals(DESC_GIA));","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(5));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(DESC_GABE));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        // different rsvp -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withRsvp(VALID_RSVP_STATUS_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        // different table number -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withTable(VALID_TABLE_NUMBER_BOB).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        // different dietary -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withDietary(VALID_DIETARY_REQUIREMENTS_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        // absent phone -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withoutPhone().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        // absent email -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withoutEmail().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        // absent address -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withoutAddress().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        // unknown rsvp -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withUnknownRsvp().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        // absent table number -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withoutTable().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        // absent dietary -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        editedGia \u003d new EditGuestDescriptorBuilder(DESC_GIA).withDietary().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        assertFalse(DESC_GIA.equals(editedGia));","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor editGuestDescriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        String expected \u003d EditGuestDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getName() + \", phone\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getPhone() + \", email\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getEmail() + \", address\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getAddress() + \", rsvp status\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getRsvp() + \", table number\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getTable() + \", dietary requirements\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getDietary() + \", tags\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getTags() + \", isNameEdited\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getIsNameEdited() + \", isPhoneEdited\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getIsPhoneEdited() + \", isEmailEdited\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getIsEmailEdited() + \", isAddressEdited\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getIsAddressEdited() + \", isRsvpEdited\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getIsRsvpEdited() + \", isTableEdited\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getIsTableEdited() + \", isDietaryEdited\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getIsDietaryEdited() + \", isTagsEdited\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor.getIsTagsEdited() + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        assertEquals(expected, editGuestDescriptor.toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"p-xp":135}},{"path":"src/test/java/wedlog/address/logic/commands/EditVendorDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_BRYAN;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_VAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorEditCommand.EditVendorDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditVendorDescriptorBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"public class EditVendorDescriptorTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptorWithSameValues \u003d new EditVendorDescriptor(DESC_VAL);","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"        assertTrue(DESC_VAL.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"        assertTrue(DESC_VAL.equals(DESC_VAL));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(5));","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(DESC_BRYAN));","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        // absent phone -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withoutPhone().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        // absent email -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withoutEmail().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        // absent address -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withoutAddress().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        // absent tags -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        editedVal \u003d new EditVendorDescriptorBuilder(DESC_VAL).withTags().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertFalse(DESC_VAL.equals(editedVal));","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor editVendorDescriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        String expected \u003d EditVendorDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.getName() + \", phone\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.getPhone() + \", email\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.getEmail() + \", address\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.getAddress() + \", tags\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.getTags() + \", isNameEdited\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.isNameEdited() + \", isPhoneEdited\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.isPhoneEdited() + \", isEmailEdited\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.isEmailEdited() + \", isAddressEdited\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.isAddressEdited() + \", isTagsEdited\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor.isTagsEdited() + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, editVendorDescriptor.toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"samuelim01":92}},{"path":"src/test/java/wedlog/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"samuelim01":5,"-":15}},{"path":"src/test/java/wedlog/address/logic/commands/GuestAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":" * Contains integration tests (interaction with the Model) for {@code GuestAddCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"public class GuestAddCommandIntegrationTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    public void execute_newGuestIntoEmptyAddressBook_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"        expectedModel.addGuest(validGuest);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(new GuestAddCommand(validGuest), model,","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"                String.format(GuestAddCommand.MESSAGE_SUCCESS, Messages.format(validGuest)),","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    public void execute_newGuestIntoPrefilledAddressBook_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        expectedModel.addGuest(validGuest);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(new GuestAddCommand(validGuest), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"                String.format(GuestAddCommand.MESSAGE_SUCCESS, Messages.format(validGuest)),","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"                expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        Guest guestInList \u003d model.getAddressBook().getGuestList().get(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        assertCommandFailure(new GuestAddCommand(guestInList), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"                GuestAddCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"samuelim01":2,"p-xp":61,"wasjoe1":1}},{"path":"src/test/java/wedlog/address/logic/commands/GuestAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.DietaryRequirementStatistics;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"class GuestAddCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    public void constructor_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GuestAddCommand(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public void execute_guestAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        ModelStubAcceptingGuestAdded modelStub \u003d new ModelStubAcceptingGuestAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        CommandResult commandResult \u003d new GuestAddCommand(validGuest).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        assertEquals(String.format(GuestAddCommand.MESSAGE_SUCCESS, Messages.format(validGuest)),","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        assertEquals(Arrays.asList(validGuest), modelStub.guestsAdded);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand guestAddCommand \u003d new GuestAddCommand(validGuest);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        ModelStub modelStub \u003d new ModelStubWithGuest(validGuest);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"                GuestAddCommand.MESSAGE_DUPLICATE_GUEST, () -\u003e guestAddCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        Guest alice \u003d new GuestBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        Guest bob \u003d new GuestBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand addAliceCommand \u003d new GuestAddCommand(alice);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand addBobCommand \u003d new GuestAddCommand(bob);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand addAliceCommandCopy \u003d new GuestAddCommand(alice);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand addCommand \u003d new GuestAddCommand(GINA);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        String expected \u003d GuestAddCommand.class.getCanonicalName() + \"{toAddGuest\u003d\" + GINA + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"            // called by GuestAddCommand#execute()","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"        public void deleteGuest(Guest target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"        public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"        public void deleteVendor(Vendor target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"        public void addVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"        public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"        public void updateFilteredGuestList(Predicate\u003c? super Guest\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"        public void updateFilteredVendorList(Predicate\u003c? super Vendor\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"keaganpzh"},"content":"        // statistics","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"keaganpzh"},"content":"        public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"keaganpzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"keaganpzh"},"content":"        public DietaryRequirementStatistics getDietaryRequirementStatistics() {","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"keaganpzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"p-xp"},"content":"     * A Model stub that contains a single guest.","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"p-xp"},"content":"    private class ModelStubWithGuest extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"p-xp"},"content":"        private final Guest guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"p-xp"},"content":"        ModelStubWithGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"p-xp"},"content":"            requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"p-xp"},"content":"            this.guest \u003d guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"p-xp"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"p-xp"},"content":"            requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"            return this.guest.equals(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":250,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":251,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":252,"author":{"gitId":"p-xp"},"content":"     * A Model stub that always accept the guest being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":253,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":254,"author":{"gitId":"p-xp"},"content":"    private class ModelStubAcceptingGuestAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"p-xp"},"content":"        final ArrayList\u003cGuest\u003e guestsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"            requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"            return guestsAdded.stream().anyMatch(guest::equals);","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"p-xp"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"p-xp"},"content":"            requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"p-xp"},"content":"            guestsAdded.add(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"p-xp"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"samuelim01":27,"p-xp":234,"keaganpzh":13}},{"path":"src/test/java/wedlog/address/logic/commands/GuestDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":" * {@code GuestDeleteCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"public class GuestDeleteCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    public void execute_validIndexUnfilteredGuestList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        Guest guestToDelete \u003d model.getFilteredGuestList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d String.format(GuestDeleteCommand.MESSAGE_DELETE_GUEST_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"                Messages.format(guestToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        expectedModel.deleteGuest(guestToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        assertCommandSuccess(guestDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    public void execute_invalidIndexUnfilteredGuestList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGuestList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        assertCommandFailure(guestDeleteCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    public void execute_validIndexFilteredGuestList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        Guest guestToDelete \u003d model.getFilteredGuestList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d String.format(GuestDeleteCommand.MESSAGE_DELETE_GUEST_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"                Messages.format(guestToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        expectedModel.deleteGuest(guestToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"        assertCommandSuccess(guestDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"    public void execute_invalidIndexFilteredGuestList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGuestList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        assertCommandFailure(guestDeleteCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteFirstCommand \u003d new GuestDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteSecondCommand \u003d new GuestDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"        assertTrue(guestDeleteFirstCommand.equals(guestDeleteFirstCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteFirstCommandCopy \u003d new GuestDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        assertTrue(guestDeleteFirstCommand.equals(guestDeleteFirstCommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        assertFalse(guestDeleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"        assertFalse(guestDeleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        assertFalse(guestDeleteFirstCommand.equals(guestDeleteSecondCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"        String expected \u003d GuestDeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"        assertEquals(expected, guestDeleteCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"     * Updates {@code model}\u0027s filtered guest list to show no one.","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        model.updateFilteredGuestList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"        assertTrue(model.getFilteredGuestList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"tllshan":120,"samuelim01":2}},{"path":"src/test/java/wedlog/address/logic/commands/GuestEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_GIA;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.GuestEditCommand.MESSAGE_EDIT_GUEST_SUCCESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand.EditGuestDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":" * Contains integration tests (interaction with the Model) and unit tests for GuestEditCommand.","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"public class GuestEditCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        Guest editedGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(editedGuest).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_GUEST_SUCCESS, Messages.format(editedGuest));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        expectedModel.setGuest(model.getFilteredGuestList().get(0), editedGuest);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(guestEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        Index indexLastGuest \u003d Index.fromOneBased(model.getFilteredGuestList().size());","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        Guest lastGuest \u003d model.getFilteredGuestList().get(indexLastGuest.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        GuestBuilder guestInList \u003d new GuestBuilder(lastGuest);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        Guest editedGuest \u003d guestInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(editedGuest).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(indexLastGuest, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_GUEST_SUCCESS, Messages.format(editedGuest));","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        expectedModel.setGuest(lastGuest, editedGuest);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(guestEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(INDEX_FIRST_PERSON, new EditGuestDescriptor());","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        Guest editedGuest \u003d model.getFilteredGuestList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_GUEST_SUCCESS, Messages.format(editedGuest));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(guestEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"    public void execute_emptyFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        // Edits guest directly using GuestBuilder to created expected guest and expected model","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        Guest guestToEdit \u003d model.getFilteredGuestList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        Guest editedGuest \u003d new GuestBuilder().withoutPhone().withoutEmail().withoutAddress()","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"                .withUnknownRsvpStatus().withDietaryRequirements().withoutTableNumber().withTags().build();","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        // Attempts to edit guest using GuestEditCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withName(\"Giselle Gee\")","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"                .withoutPhone().withoutEmail().withoutAddress().withUnknownRsvp()","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"                .withDietary().withoutTable().withTags().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        // Setting expected behaviour","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_GUEST_SUCCESS, Messages.format(editedGuest));","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        expectedModel.setGuest(guestToEdit, editedGuest);","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(guestEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        Guest guestInFilteredList \u003d model.getFilteredGuestList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        Guest editedGuest \u003d new GuestBuilder(guestInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"                new EditGuestDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_GUEST_SUCCESS, Messages.format(editedGuest));","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        expectedModel.setGuest(model.getFilteredGuestList().get(0), editedGuest);","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(guestEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateGuestUnfilteredList_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"        Guest firstGuest \u003d model.getFilteredGuestList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(firstGuest).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"        assertCommandFailure(guestEditCommand, model, GuestEditCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateGuestFilteredList_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"        // edit guest in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"        Guest guestInList \u003d model.getAddressBook().getGuestList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"                new EditGuestDescriptorBuilder(guestInList).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"        assertCommandFailure(guestEditCommand, model, GuestEditCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"    public void execute_invalidGuestIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGuestList().size() + 1);","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"        assertCommandFailure(guestEditCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"    public void execute_invalidGuestIndexFilteredList_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGuestList().size());","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"                new EditGuestDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"        assertCommandFailure(guestEditCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"        final GuestEditCommand standardCommand \u003d new GuestEditCommand(INDEX_FIRST_PERSON, DESC_GIA);","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor copyDescriptor \u003d new EditGuestDescriptor(DESC_GIA);","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand commandWithSameValues \u003d new GuestEditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"        assertFalse(standardCommand.equals(new GuestEditCommand(INDEX_SECOND_PERSON, DESC_GIA)));","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"        assertFalse(standardCommand.equals(new GuestEditCommand(INDEX_FIRST_PERSON, DESC_GABE)));","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor editGuestDescriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand guestEditCommand \u003d new GuestEditCommand(index, editGuestDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"        String expected \u003d GuestEditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editGuestDescriptor\u003d\"","lastModifiedDate":"2023-10-22"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"                + editGuestDescriptor + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"        assertEquals(expected, guestEditCommand.toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"samuelim01":1,"p-xp":210}},{"path":"src/test/java/wedlog/address/logic/commands/GuestFilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_GUESTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NamePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"class GuestFilterCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"                Collections.singletonList(new NamePredicate(\"keyword1\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"                Collections.singletonList(new NamePredicate(\"keyword2\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        GuestFilterCommand filterFirstCommand \u003d new GuestFilterCommand(firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        GuestFilterCommand filterSecondCommand \u003d new GuestFilterCommand(secondPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e firstPredicateCopy \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"                Collections.singletonList(new NamePredicate(\"keyword1\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        GuestFilterCommand filterFirstCommandCopy \u003d new GuestFilterCommand(firstPredicateCopy);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionPersonNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate predicate \u003d prepareNamePredicate(\"Alice\");","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e predicates \u003d Collections.singletonList(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(new GuestFilterCommand(predicates) instanceof GuestFilterCommand);","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e nullPredicates \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        String expectedErrMsg \u003d \"Predicates passed to GuestFilterCommand should not be null!\";","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"                expectedErrMsg, () -\u003e new GuestFilterCommand(nullPredicates));","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    public void execute_noKeywords_noGuestFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GUESTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        NamePredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        GuestFilterCommand command \u003d new GuestFilterCommand(Collections.singletonList(predicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        expectedModel.updateFilteredGuestList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredGuestList());","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"    public void execute_singleKeyword_singleGuestFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GUESTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        NamePredicate predicate \u003d prepareNamePredicate(\"gina\");","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        GuestFilterCommand command \u003d new GuestFilterCommand(Collections.singletonList(predicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"        expectedModel.updateFilteredGuestList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        assertEquals(Collections.singletonList(GINA), model.getFilteredGuestList());","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e predicates \u003d Collections.singletonList(new NamePredicate(\"keyword1\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        GuestFilterCommand filterCommand \u003d new GuestFilterCommand(predicates);","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        String expected \u003d GuestFilterCommand.class.getCanonicalName() + \"{predicates\u003d\" + predicates + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     * Parses {@code userInput} into a {@code NamePredicate}.","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"    private NamePredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"        return new NamePredicate(userInput.trim());","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"samuelim01":85,"wasjoe1":22}},{"path":"src/test/java/wedlog/address/logic/commands/GuestListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for GuestListCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"public class GuestListCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    private Model model;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    public void execute_guestListIsNotFiltered_showsSameGuestList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"        assertCommandSuccess(new GuestListCommand(), model, GuestListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    // TODO: execute_listIsFiltered_showsEverything()","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"wasjoe1":33}},{"path":"src/test/java/wedlog/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"samuelim01":5,"-":15}},{"path":"src/test/java/wedlog/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.deleteFirstGuest;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//@@author samuelim01-reused","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// Reused from Address Book(Level 4) with minor modifications.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class RedoCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void execute_multipleRedoableStates_commandSuccess() {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        deleteFirstGuest(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        deleteFirstGuest(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        deleteFirstGuest(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        deleteFirstGuest(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void execute_singleRedoableState_commandSuccess() {","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        deleteFirstGuest(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        deleteFirstGuest(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void execute_noRedoableStates_commandSuccess() {","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandFailure(new RedoCommand(), model, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        deleteFirstGuest(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        deleteFirstGuest(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"//@author","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"samuelim01":15,"-":53}},{"path":"src/test/java/wedlog/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.deleteFirstGuest;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//@@author samuelim01-reused","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// Reused from Address Book(Level 4) with minor modifications.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class UndoCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void execute_multipleUndoableStates_commandSuccess() {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        deleteFirstGuest(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        deleteFirstGuest(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        deleteFirstGuest(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        deleteFirstGuest(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void execute_singleUndoableState_commandSuccess() {","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        deleteFirstGuest(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        deleteFirstGuest(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void execute_noUndoableStates_commandSuccess() {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        deleteFirstGuest(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        deleteFirstGuest(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"//@author","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"samuelim01":15,"-":46}},{"path":"src/test/java/wedlog/address/logic/commands/VendorAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalVendors.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":" * Contains integration tests (interaction with the Model) for {@code VendorAddCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"public class VendorAddCommandIntegrationTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"    public void execute_newVendorIntoEmptyAddressBook_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"        expectedModel.addVendor(validVendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(new VendorAddCommand(validVendor), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"                String.format(VendorAddCommand.MESSAGE_SUCCESS, Messages.format(validVendor)),","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"                expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"    public void execute_newVendorIntoPrefilledAddressBook_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        expectedModel.addVendor(validVendor);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(new VendorAddCommand(validVendor), model,","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"                String.format(VendorAddCommand.MESSAGE_SUCCESS, Messages.format(validVendor)),","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateVendor_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        Vendor vendorInList \u003d model.getAddressBook().getVendorList().get(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        assertCommandFailure(new VendorAddCommand(vendorInList), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"                VendorAddCommand.MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"samuelim01":2,"p-xp":64}},{"path":"src/test/java/wedlog/address/logic/commands/VendorAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.VICTOR;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.DietaryRequirementStatistics;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"class VendorAddCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    public void constructor_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new VendorAddCommand(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public void execute_vendorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        ModelStubAcceptingVendorAdded modelStub \u003d new ModelStubAcceptingVendorAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        CommandResult commandResult \u003d new VendorAddCommand(validVendor).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        assertEquals(String.format(VendorAddCommand.MESSAGE_SUCCESS, Messages.format(validVendor)),","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        assertEquals(Arrays.asList(validVendor), modelStub.vendorsAdded);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateVendor_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand vendorAddCommand \u003d new VendorAddCommand(validVendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        ModelStub modelStub \u003d new ModelStubWithVendor(validVendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"                VendorAddCommand.MESSAGE_DUPLICATE_VENDOR, () -\u003e vendorAddCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        Vendor alice \u003d new VendorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        Vendor bob \u003d new VendorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand addAliceCommand \u003d new VendorAddCommand(alice);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand addBobCommand \u003d new VendorAddCommand(bob);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand addAliceCommandCopy \u003d new VendorAddCommand(alice);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        // different vendor -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        VendorAddCommand addCommand \u003d new VendorAddCommand(VICTOR);","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        String expected \u003d VendorAddCommand.class.getCanonicalName() + \"{toAddVendor\u003d\" + VICTOR + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"            // called by VendorAddCommand#execute()","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        // add","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"        public void addVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"        // has","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"        // delete","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"        public void deleteGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"        public void deleteVendor(Vendor target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"        // set","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"        public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"        public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"        public void updateFilteredGuestList(Predicate\u003c? super Guest\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"samuelim01"},"content":"        public void updateFilteredVendorList(Predicate\u003c? super Vendor\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"keaganpzh"},"content":"        // statistics","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"keaganpzh"},"content":"        public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"keaganpzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"keaganpzh"},"content":"        public DietaryRequirementStatistics getDietaryRequirementStatistics() {","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"keaganpzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"p-xp"},"content":"     * A Model stub that contains a single vendor.","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"p-xp"},"content":"    private class ModelStubWithVendor extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"p-xp"},"content":"        private final Vendor vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"p-xp"},"content":"        ModelStubWithVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"p-xp"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"            this.vendor \u003d vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":250,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":251,"author":{"gitId":"p-xp"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":252,"author":{"gitId":"p-xp"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":253,"author":{"gitId":"p-xp"},"content":"            return this.vendor.equals(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":254,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"     * A Model stub that always accept the vendor being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"    private class ModelStubAcceptingVendorAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"        final ArrayList\u003cVendor\u003e vendorsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"p-xp"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"p-xp"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"p-xp"},"content":"            return vendorsAdded.stream().anyMatch(vendor::equals);","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"p-xp"},"content":"        public void addVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"p-xp"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"p-xp"},"content":"            vendorsAdded.add(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"p-xp"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"samuelim01":30,"p-xp":237,"keaganpzh":13}},{"path":"src/test/java/wedlog/address/logic/commands/VendorDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showVendorAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalVendors.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":" * {@code GuestDeleteCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"public class VendorDeleteCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    public void execute_validIndexUnfilteredVendorList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        Vendor vendorToDelete \u003d model.getFilteredVendorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d String.format(VendorDeleteCommand.MESSAGE_DELETE_VENDOR_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"                Messages.format(vendorToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        expectedModel.deleteVendor(vendorToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        assertCommandSuccess(vendorDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    public void execute_invalidIndexUnfilteredVendorList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredVendorList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        assertCommandFailure(vendorDeleteCommand, model, Messages.MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    public void execute_validIndexFilteredVendorList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        showVendorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        Vendor vendorToDelete \u003d model.getFilteredVendorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d String.format(VendorDeleteCommand.MESSAGE_DELETE_VENDOR_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"                Messages.format(vendorToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        expectedModel.deleteVendor(vendorToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"        assertCommandSuccess(vendorDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"    public void execute_invalidIndexFilteredVendorList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        showVendorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getVendorList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        assertCommandFailure(vendorDeleteCommand, model, Messages.MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteFirstCommand \u003d new VendorDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteSecondCommand \u003d new VendorDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"        assertTrue(vendorDeleteFirstCommand.equals(vendorDeleteFirstCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteFirstCommandCopy \u003d new VendorDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        assertTrue(vendorDeleteFirstCommand.equals(vendorDeleteFirstCommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendorDeleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendorDeleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendorDeleteFirstCommand.equals(vendorDeleteSecondCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"        String expected \u003d VendorDeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"        assertEquals(expected, vendorDeleteCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"     * Updates {@code model}\u0027s filtered guest list to show no one.","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        model.updateFilteredVendorList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"        assertTrue(model.getFilteredVendorList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"tllshan":120,"samuelim01":2}},{"path":"src/test/java/wedlog/address/logic/commands/VendorEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_BRYAN;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_VAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showVendorAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.VendorEditCommand.MESSAGE_EDIT_VENDOR_SUCCESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.getTypicalAddressBook;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorEditCommand.EditVendorDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditVendorDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":" * Contains integration tests (interaction with the Model) and unit tests for VendorEditCommand.","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"public class VendorEditCommandTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        Vendor editedVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder(editedVendor).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_VENDOR_SUCCESS, Messages.format(editedVendor));","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        expectedModel.setVendor(model.getFilteredVendorList().get(0), editedVendor);","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        Index indexLastVendor \u003d Index.fromOneBased(model.getFilteredVendorList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        Vendor lastVendor \u003d model.getFilteredVendorList().get(indexLastVendor.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        VendorBuilder vendorInList \u003d new VendorBuilder(lastVendor);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        Vendor editedVendor \u003d vendorInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(indexLastVendor, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_VENDOR_SUCCESS, Messages.format(editedVendor));","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        expectedModel.setVendor(lastVendor, editedVendor);","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(INDEX_FIRST_PERSON, new EditVendorDescriptor());","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        Vendor editedVendor \u003d model.getFilteredVendorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_VENDOR_SUCCESS, Messages.format(editedVendor));","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"    public void execute_someFieldsSpecifiedEmptyUnfilteredList_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        Vendor firstVendor \u003d model.getFilteredVendorList().get(0);","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        Vendor editedVendor \u003d new VendorBuilder().withName(\"Anne Chua\")","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"                .withoutPhone().withoutAddress().withoutEmail().withTags().build();","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder()","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"                .withoutPhone().withoutAddress().withoutEmail().withTags().build();","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_VENDOR_SUCCESS, Messages.format(editedVendor));","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        expectedModel.setVendor(firstVendor, editedVendor);","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        showVendorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        Vendor vendorInFilteredList \u003d model.getFilteredVendorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        Vendor editedVendor \u003d new VendorBuilder(vendorInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"                new EditVendorDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_VENDOR_SUCCESS, Messages.format(editedVendor));","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        expectedModel.setVendor(model.getFilteredVendorList().get(0), editedVendor);","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    public void execute_duplicateVendorUnfilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        Vendor firstVendor \u003d model.getFilteredVendorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder(firstVendor).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        assertCommandFailure(editCommand, model, VendorEditCommand.MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"    public void execute_duplicateVendorFilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        showVendorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        // edit vendor in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"        Vendor vendorInList \u003d model.getAddressBook().getVendorList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"                new EditVendorDescriptorBuilder(vendorInList).build());","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        assertCommandFailure(editCommand, model, VendorEditCommand.MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"    public void execute_invalidVendorIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredVendorList().size() + 1);","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"    public void execute_invalidVendorIndexFilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"        showVendorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getVendorList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"                new EditVendorDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"        final VendorEditCommand standardCommand \u003d new VendorEditCommand(INDEX_FIRST_PERSON, DESC_VAL);","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"        // EP1: same object -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"        // EP2: same values -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor copyDescriptor \u003d new EditVendorDescriptor(DESC_VAL);","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand commandWithSameValues \u003d new VendorEditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"        // EP3: null -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"        // EP4: different types -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"        // EP5: different index -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"        assertFalse(standardCommand.equals(new VendorEditCommand(INDEX_SECOND_PERSON, DESC_VAL)));","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"        // EP6: different descriptor -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"        assertFalse(standardCommand.equals(new VendorEditCommand(INDEX_FIRST_PERSON, DESC_BRYAN)));","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor editVendorDescriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand editCommand \u003d new VendorEditCommand(index, editVendorDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"        String expected \u003d VendorEditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editVendorDescriptor\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"                + editVendorDescriptor + \"}\";","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"samuelim01":203}},{"path":"src/test/java/wedlog/address/logic/commands/VendorFilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_VENDORS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NamePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"class VendorFilterCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"                Collections.singletonList(new NamePredicate(\"keyword1\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"                Collections.singletonList(new NamePredicate(\"keyword2\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        VendorFilterCommand filterFirstCommand \u003d new VendorFilterCommand(firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        VendorFilterCommand filterSecondCommand \u003d new VendorFilterCommand(secondPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e firstPredicateCopy \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"                Collections.singletonList(new NamePredicate(\"keyword1\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        VendorFilterCommand filterFirstCommandCopy \u003d new VendorFilterCommand(firstPredicateCopy);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionPersonNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate predicate \u003d prepareNamePredicate(\"Alice\");","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates \u003d Collections.singletonList(predicate);","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(new VendorFilterCommand(predicates) instanceof VendorFilterCommand);","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e nullPredicates \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        String expectedErrMsg \u003d \"Predicates passed to VendorFilterCommand should not be null!\";","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"                expectedErrMsg, () -\u003e new VendorFilterCommand(nullPredicates));","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    public void execute_noKeywords_noVendorFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_VENDORS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        NamePredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        VendorFilterCommand command \u003d new VendorFilterCommand(Collections.singletonList(predicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        expectedModel.updateFilteredVendorList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredVendorList());","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"    public void execute_singleKeyword_singleVendorFound() {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_VENDORS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        NamePredicate predicate \u003d prepareNamePredicate(\"anne\");","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        VendorFilterCommand command \u003d new VendorFilterCommand(Collections.singletonList(predicate));","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"        expectedModel.updateFilteredVendorList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        assertEquals(Collections.singletonList(ANNE), model.getFilteredVendorList());","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates \u003d Collections.singletonList(new NamePredicate(\"keyword1\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        VendorFilterCommand filterCommand \u003d new VendorFilterCommand(predicates);","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        String expected \u003d VendorFilterCommand.class.getCanonicalName() + \"{predicates\u003d\" + predicates + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     * Parses {@code userInput} into a {@code NamePredicate}.","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"    private NamePredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"        return new NamePredicate(userInput.trim());","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"samuelim01":84,"wasjoe1":23}},{"path":"src/test/java/wedlog/address/logic/commands/VendorListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.testutil.TypicalVendors.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for VendorListCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"public class VendorListCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    private Model model;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    public void execute_vendorListIsNotFiltered_showsSameVendorList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"        assertCommandSuccess(new VendorListCommand(), model, VendorListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    // TODO: execute_listIsFiltered_showsEverything","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"wasjoe1":33}},{"path":"src/test/java/wedlog/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_vendor() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"vendor list\"; // a valid command","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        // no split between Vendor \u0026 Guest type, so just test that the output is a command","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(command instanceof Command, true);","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_guest() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"guest list\"; // a valid command","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"        // no split between Vendor \u0026 Guest type, so just test that the output is a command","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(command instanceof Command, true);","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"samuelim01":23,"wasjoe1":32,"-":25}},{"path":"src/test/java/wedlog/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"samuelim01":1,"-":149}},{"path":"src/test/java/wedlog/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"samuelim01":3,"-":36}},{"path":"src/test/java/wedlog/address/logic/parser/GuestAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_DIETARY_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_RSVP_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TABLE_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.RSVP_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TABLE_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"public class GuestAddCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    private GuestAddCommandParser parser \u003d new GuestAddCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand guestAddCommand \u003d parser.parse(NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_GIA + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_FRIEND);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        assertEquals(guestAddCommand, new GuestAddCommand(GIA));","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    public void parse_onlyNamePresent_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(VALID_NAME_GIA).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand guestAddCommand \u003d parser.parse(NAME_DESC_GIA);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        assertEquals(new GuestAddCommand(expectedGuest), guestAddCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    public void parse_repeatedNameValue_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        String validExpectedPersonString \u003d NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_GIA + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(NAME_DESC_AMY + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"     * Tests instance where a field has an invalid value (with no valid value present).","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_GIA + INVALID_PHONE_DESC + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_GIA + PHONE_DESC_GIA + INVALID_EMAIL_DESC + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        // invalid rsvp","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"                + INVALID_RSVP_DESC + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"                RsvpStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"keaganpzh"},"content":"        // invalid dietary requirement","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"keaganpzh"},"content":"        assertParseFailure(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"                + RSVP_DESC_GIA + INVALID_DIETARY_DESC + TABLE_DESC_GIA + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"keaganpzh"},"content":"                DietaryRequirement.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        // invalid table number","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + INVALID_TABLE_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"                TableNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        // invalid tag","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_GIA + EMAIL_DESC_GIA + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA,","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"                        + ADDRESS_DESC_GIA + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"     * Tests instance where a field has an invalid value (with a valid value before / after).","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValuesWithValidValues_failure() throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        String validExpectedPersonString \u003d NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_NAME_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_PHONE_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_EMAIL_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_ADDRESS_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"        // invalid rsvp","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_RSVP_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"keaganpzh"},"content":"        // invalid dietary requirement","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_DIETARY_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"        // invalid table number","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_TABLE_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_NAME_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_PHONE_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_EMAIL_DESC));","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_ADDRESS_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"        // invalid rsvp","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_RSVP_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"keaganpzh"},"content":"        // invalid dietary requirement","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_DIETARY_DESC));","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"tllshan"},"content":"        // invalid table number","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"tllshan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_TABLE_DESC));","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, VALID_NAME_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA,","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"    public void parse_missingPhone_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GIA).withoutPhone().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"                new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"    public void parse_missingEmail_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GIA).withoutEmail().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_GIA + PHONE_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"                new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"    public void parse_missingAddress_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GIA).withoutAddress().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"                new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"    public void parse_missingRsvp_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GIA).withUnknownRsvpStatus().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":220,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"p-xp"},"content":"                + DIETARY_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":222,"author":{"gitId":"tllshan"},"content":"                new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"p-xp"},"content":"    public void parse_missingDietaryRequirement_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GIA).withDietaryRequirements().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":229,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + TABLE_DESC_GIA + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":230,"author":{"gitId":"tllshan"},"content":"                new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-19"},{"lineNumber":231,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":232,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"tllshan"},"content":"    public void parse_missingTableNumber_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GIA).withoutTableNumber().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":236,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":237,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_GIA + DIETARY_DESC_GIA + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":238,"author":{"gitId":"tllshan"},"content":"                new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"p-xp"},"content":"    public void parse_missingTags_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":243,"author":{"gitId":"p-xp"},"content":"        // zero tags","lastModifiedDate":"2023-10-21"},{"lineNumber":244,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GIA).withTags().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":245,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA + ADDRESS_DESC_GIA","lastModifiedDate":"2023-10-21"},{"lineNumber":246,"author":{"gitId":"p-xp"},"content":"                        + RSVP_DESC_GIA + DIETARY_DESC_GIA + TABLE_DESC_GIA,","lastModifiedDate":"2023-10-21"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"                new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-21"},{"lineNumber":248,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"tllshan":9,"samuelim01":1,"p-xp":203,"wasjoe1":5,"keaganpzh":31}},{"path":"src/test/java/wedlog/address/logic/parser/GuestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestFilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"public class GuestCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    private GuestCommandParser parser \u003d new GuestCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    public void parseCommand_guestAdd_success() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"add n/guest p/102391\";","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        assertTrue(command instanceof GuestAddCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_guestDelete() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(command instanceof GuestDeleteCommand);","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_guestList() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(\"list\") instanceof GuestListCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    public void parseCommand_guestFilter() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        assertTrue(parser.parseCommand(\"filter n/name\") instanceof GuestFilterCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"    public void parseCommand_guestEdit() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        GuestEditCommand.EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(guest).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        GuestEditCommand command \u003d (GuestEditCommand) parser.parseCommand(GuestEditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + GuestUtil.getEditGuestDescriptorDetails(descriptor));","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        assertEquals(new GuestEditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":27,"p-xp":9,"wasjoe1":37}},{"path":"src/test/java/wedlog/address/logic/parser/GuestDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * outside of the GuestDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * same path through the GuestDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"public class GuestDeleteCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    private GuestDeleteCommandParser parser \u003d new GuestDeleteCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    public void parse_validArgs_returnsGuestDeleteCommand() throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        assertParseSuccess(parser, \"1\", new GuestDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"                GuestDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"tllshan":3,"samuelim01":5,"wasjoe1":26}},{"path":"src/test/java/wedlog/address/logic/parser/GuestEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_GABE;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMPTY_NAME_DESC;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_RSVP_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TABLE_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.RSVP_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TABLE_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FLORIST;","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_GABE;","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TABLE_NUMBER_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FLORIST;","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand.EditGuestDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"public class GuestEditCommandParserTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    private static final String DIETARY_REQUIREMENT_EMPTY \u003d \" \" + PREFIX_DIETARY;","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    private GuestEditCommandParser parser \u003d new GuestEditCommandParser();","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        // no index specified","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, VALID_NAME_GIA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        // no field specified","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\", GuestEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        // negative index","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_GIA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        // zero index","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_GIA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMPTY_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        // no invalid values for address as empty string signifies deletion","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_RSVP_DESC, RsvpStatus.MESSAGE_CONSTRAINTS); // invalid rsvp","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        // invalid dietary requirement does not exist","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TABLE_DESC, TableNumber.MESSAGE_CONSTRAINTS); // invalid rsvp","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_GIA, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Guest} being edited,","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_GIA + VALID_PHONE_GIA,","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_GABE + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"                + EMAIL_DESC_GIA + ADDRESS_DESC_GIA + NAME_DESC_GIA + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_GIA)","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"                .withPhone(VALID_PHONE_GABE).withEmail(VALID_EMAIL_GIA).withAddress(VALID_ADDRESS_GIA)","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_GABE + EMAIL_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withPhone(VALID_PHONE_GABE)","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"                .withEmail(VALID_EMAIL_GIA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"        // name","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_GIA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"        // phone","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withPhone(VALID_PHONE_GIA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"        expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"        // email","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withEmail(VALID_EMAIL_GIA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"        expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"        // address","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withAddress(VALID_ADDRESS_GIA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"        expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"        // RSVP","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + RSVP_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withRsvp(VALID_RSVP_STATUS_GIA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"        expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"        // dietary","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + DIETARY_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withDietary(VALID_DIETARY_REQUIREMENTS_GIA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"        expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"        // table","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + TABLE_DESC_GIA;","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withTable(VALID_TABLE_NUMBER_GIA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"        expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"        // tags","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"        expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-22"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-22"},{"lineNumber":216,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-22"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_GABE + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-22"},{"lineNumber":221,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":222,"author":{"gitId":"p-xp"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-11-08"},{"lineNumber":223,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_GIA + ADDRESS_DESC_GIA + EMAIL_DESC_GIA","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_GIA + ADDRESS_DESC_GIA + EMAIL_DESC_GIA + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"p-xp"},"content":"                + PHONE_DESC_GABE + ADDRESS_DESC_GABE + EMAIL_DESC_GABE + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":227,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-22"},{"lineNumber":228,"author":{"gitId":"p-xp"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-22"},{"lineNumber":229,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":230,"author":{"gitId":"p-xp"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"p-xp"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-22"},{"lineNumber":232,"author":{"gitId":"p-xp"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-22"},{"lineNumber":233,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"p-xp"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":239,"author":{"gitId":"p-xp"},"content":"    public void parse_resetDietaryRequirements_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":240,"author":{"gitId":"p-xp"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-11-08"},{"lineNumber":241,"author":{"gitId":"p-xp"},"content":"        String userInput \u003d targetIndex.getOneBased() + DIETARY_REQUIREMENT_EMPTY;","lastModifiedDate":"2023-11-08"},{"lineNumber":242,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":243,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withDietary().build();","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":245,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-08"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":248,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":249,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"p-xp"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"p-xp"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"p-xp"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":256,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":257,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"    public void parse_multipleDietary_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":263,"author":{"gitId":"p-xp"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-11-08"},{"lineNumber":264,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":265,"author":{"gitId":"p-xp"},"content":"        String userInput \u003d targetIndex.getOneBased() + DIETARY_DESC_GIA + DIETARY_DESC_GABE;","lastModifiedDate":"2023-11-08"},{"lineNumber":266,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2023-11-08"},{"lineNumber":267,"author":{"gitId":"p-xp"},"content":"                .withDietary(VALID_DIETARY_REQUIREMENTS_GIA, VALID_DIETARY_REQUIREMENTS_GABE).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":268,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":269,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-08"},{"lineNumber":270,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":271,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":272,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":273,"author":{"gitId":"p-xp"},"content":"    public void parse_multipleTags_success() {","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"p-xp"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-11-08"},{"lineNumber":275,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":276,"author":{"gitId":"p-xp"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND + TAG_DESC_FLORIST;","lastModifiedDate":"2023-11-08"},{"lineNumber":277,"author":{"gitId":"p-xp"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2023-11-08"},{"lineNumber":278,"author":{"gitId":"p-xp"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_FLORIST).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":279,"author":{"gitId":"p-xp"},"content":"        GuestEditCommand expectedCommand \u003d new GuestEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":280,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-08"},{"lineNumber":281,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":282,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"p-xp":282}},{"path":"src/test/java/wedlog/address/logic/parser/GuestFilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_NO_PREFIX_FOUND;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_GIA;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_GABE;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_GIA;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_GIA;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.RSVP_DESC_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TABLE_DESC_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FLORIST;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_GIA;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_GABE;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_GIA;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_GIA;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TABLE_NUMBER_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FLORIST;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestFilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.AddressPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.EmailPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.GuestRsvpPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.GuestTablePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NamePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.PhonePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.GuestDietaryPredicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.TagPredicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"class GuestFilterCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    private GuestFilterCommandParser parser \u003d new GuestFilterCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        // no predicates","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_NO_PREFIX_FOUND,","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"                GuestFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        // non empty preamble","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY,","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        // repeated name","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/gina n/greg\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        // repeated phone","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(PHONE_DESC_GIA + PHONE_DESC_GIA));","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        // repeated email","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(EMAIL_DESC_GIA + EMAIL_DESC_GIA));","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        // repeated address","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" a/Jurong a/West\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"        // repeated rsvp","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(RSVP_DESC_GIA + RSVP_DESC_GIA));","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        // repeated table number","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(TABLE_DESC_GIA + TABLE_DESC_GIA));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    public void parse_repeatedDietary_success() throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        GuestFilterCommand guestFilterCommand \u003d parser.parse(DIETARY_DESC_GIA + DIETARY_DESC_GABE);","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e predicates \u003d Arrays.asList(","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"                new GuestDietaryPredicate(Arrays.asList(VALID_DIETARY_REQUIREMENTS_GIA,","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"                        VALID_DIETARY_REQUIREMENTS_GABE)));","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        assertEquals(new GuestFilterCommand(predicates), guestFilterCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    public void parse_repeatedTags_success() throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        GuestFilterCommand guestFilterCommand \u003d parser.parse(TAG_DESC_FRIEND + TAG_DESC_FLORIST);","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e predicates \u003d Arrays.asList(","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"                new TagPredicate(Arrays.asList(VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"                        VALID_TAG_FLORIST)));","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        assertEquals(new GuestFilterCommand(predicates), guestFilterCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"    public void parse_onlyOneFieldPresent_success() throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        // name present","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"        GuestFilterCommand guestFilterCommand \u003d parser.parse(NAME_DESC_GIA);","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e predicateList \u003d Collections.singletonList(","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"                new NamePredicate(VALID_NAME_GIA));","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        // phone present","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        guestFilterCommand \u003d parser.parse(PHONE_DESC_GIA);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"        predicateList \u003d Collections.singletonList(new PhonePredicate(VALID_PHONE_GIA));","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        // email present","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"        guestFilterCommand \u003d parser.parse(EMAIL_DESC_GIA);","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"wasjoe1"},"content":"        predicateList \u003d Collections.singletonList(new EmailPredicate(VALID_EMAIL_GIA));","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"        // address present","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        guestFilterCommand \u003d parser.parse(\" a/jurong\");","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"wasjoe1"},"content":"        predicateList \u003d Collections.singletonList(new AddressPredicate(\"jurong\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        // rsvp present","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        guestFilterCommand \u003d parser.parse(RSVP_DESC_GIA);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"wasjoe1"},"content":"        predicateList \u003d Collections.singletonList(new GuestRsvpPredicate(VALID_RSVP_STATUS_GIA));","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        // table number present","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        guestFilterCommand \u003d parser.parse(TABLE_DESC_GIA);","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"wasjoe1"},"content":"        predicateList \u003d Collections.singletonList(new GuestTablePredicate(VALID_TABLE_NUMBER_GIA));","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"        // dietary requirement present","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        guestFilterCommand \u003d parser.parse(DIETARY_DESC_GIA);","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"        predicateList \u003d Collections.singletonList(new GuestDietaryPredicate(Collections.singletonList(","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"                VALID_DIETARY_REQUIREMENTS_GIA)));","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicateList));","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"        // tag present","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"        guestFilterCommand \u003d parser.parse(TAG_DESC_FRIEND);","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"        predicateList \u003d Collections.singletonList(new TagPredicate(Collections.singletonList(","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"                VALID_TAG_FRIEND)));","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicateList));","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"wasjoe1"},"content":"        GuestFilterCommand guestFilterCommand \u003d parser.parse(NAME_DESC_GIA + PHONE_DESC_GIA + EMAIL_DESC_GIA","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"wasjoe1"},"content":"                + ADDRESS_DESC_GIA + RSVP_DESC_GIA + TABLE_DESC_GIA + DIETARY_DESC_GIA + TAG_DESC_FRIEND);","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Guest\u003e\u003e predicates \u003d Arrays.asList(","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"wasjoe1"},"content":"                new NamePredicate(VALID_NAME_GIA),","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"wasjoe1"},"content":"                new PhonePredicate(VALID_PHONE_GIA),","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"wasjoe1"},"content":"                new EmailPredicate(VALID_EMAIL_GIA),","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"wasjoe1"},"content":"                new AddressPredicate(VALID_ADDRESS_GIA),","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"wasjoe1"},"content":"                new GuestRsvpPredicate(VALID_RSVP_STATUS_GIA),","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"wasjoe1"},"content":"                new GuestTablePredicate(VALID_TABLE_NUMBER_GIA),","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"                new GuestDietaryPredicate(Arrays.asList(VALID_DIETARY_REQUIREMENTS_GIA)),","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"                new TagPredicate(Arrays.asList(VALID_TAG_FRIEND))","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"        assertEquals(guestFilterCommand, new GuestFilterCommand(predicates));","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"samuelim01":101,"p-xp":42,"wasjoe1":19}},{"path":"src/test/java/wedlog/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_RSVP \u003d \"gibberish\";","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    private static final String INVALID_DIETARY_REQUIREMENT \u003d \"no milk, cheese\";","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    private static final String INVALID_TABLE_NUMBER \u003d \"-1.0\";","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    private static final String VALID_RSVP_YES \u003d \"yes\";","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    private static final String VALID_RSVP_NO \u003d \"no\";","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    private static final String VALID_RSVP_UNKNOWN \u003d \"unknown\";","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    private static final String VALID_DIETARY_REQUIREMENT_1 \u003d \"no beef\";","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    private static final String VALID_DIETARY_REQUIREMENT_2 \u003d \"vegan\";","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    private static final String VALID_TABLE_NUMBER \u003d \"13\";","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"    public void parseRsvp_null_returnsRsvpUnknown() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"        RsvpStatus expectedRsvp \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedRsvp, ParserUtil.parseRsvp((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":168,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"    public void parseRsvp_emptyString_returnsRsvpUnknown() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"        RsvpStatus expectedRsvp \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedRsvp, ParserUtil.parseRsvp(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":176,"author":{"gitId":"wasjoe1"},"content":"    public void parseRsvp_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":177,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRsvp(INVALID_RSVP));","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":179,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":180,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"    public void parseRsvp_validValueWithWhitespace_returnsTrimmedRsvp() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"wasjoe1"},"content":"        String rsvpYesWithWhitespace \u003d WHITESPACE + VALID_RSVP_YES + WHITESPACE;","lastModifiedDate":"2023-10-08"},{"lineNumber":183,"author":{"gitId":"wasjoe1"},"content":"        String rsvpNoWithWhitespace \u003d WHITESPACE + VALID_RSVP_NO + WHITESPACE;","lastModifiedDate":"2023-10-08"},{"lineNumber":184,"author":{"gitId":"wasjoe1"},"content":"        String rsvpUnknownWithWhitespace \u003d WHITESPACE + VALID_RSVP_UNKNOWN + WHITESPACE;","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedYesRsvp \u003d new RsvpStatus(VALID_RSVP_YES);","lastModifiedDate":"2023-10-08"},{"lineNumber":186,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedNoRsvp \u003d new RsvpStatus(VALID_RSVP_NO);","lastModifiedDate":"2023-10-08"},{"lineNumber":187,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedUnknownRsvp \u003d new RsvpStatus(VALID_RSVP_UNKNOWN);","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedYesRsvp, ParserUtil.parseRsvp(rsvpYesWithWhitespace));","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedNoRsvp, ParserUtil.parseRsvp(rsvpNoWithWhitespace));","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedUnknownRsvp, ParserUtil.parseRsvp(rsvpUnknownWithWhitespace));","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":192,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":193,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"    public void parseRsvp_validValueWithoutWhitespace_returnsTrimmedRsvp() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedYesRsvp \u003d new RsvpStatus(VALID_RSVP_YES);","lastModifiedDate":"2023-10-08"},{"lineNumber":196,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedNoRsvp \u003d new RsvpStatus(VALID_RSVP_NO);","lastModifiedDate":"2023-10-08"},{"lineNumber":197,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedUnknownRsvp \u003d new RsvpStatus(VALID_RSVP_UNKNOWN);","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedYesRsvp, ParserUtil.parseRsvp(VALID_RSVP_YES));","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedNoRsvp, ParserUtil.parseRsvp(VALID_RSVP_NO));","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedUnknownRsvp, ParserUtil.parseRsvp(VALID_RSVP_UNKNOWN));","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":202,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":203,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"keaganpzh"},"content":"    public void parseDietaryRequirement_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDietaryRequirement(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"keaganpzh"},"content":"    public void parseDietaryRequirement_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDietaryRequirement(INVALID_DIETARY_REQUIREMENT));","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"keaganpzh"},"content":"    public void parseDietaryRequirement_validValueWithoutWhiteSpace_returnsDietaryRequirement() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirement expectedDietaryRequirement \u003d new DietaryRequirement(VALID_DIETARY_REQUIREMENT_1);","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(expectedDietaryRequirement, ParserUtil.parseDietaryRequirement(VALID_DIETARY_REQUIREMENT_1));","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":220,"author":{"gitId":"keaganpzh"},"content":"    public void parseDietaryRequirement_validValueWithWhiteSpace_returnsTrimmedDietaryRequirement() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"keaganpzh"},"content":"        String dietaryRequirementWithWhitespace \u003d WHITESPACE + VALID_DIETARY_REQUIREMENT_1 + WHITESPACE;","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirement expectedDietaryRequirement \u003d new DietaryRequirement(VALID_DIETARY_REQUIREMENT_1);","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(expectedDietaryRequirement, ParserUtil.parseDietaryRequirement(dietaryRequirementWithWhitespace));","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":225,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":226,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"    public void parseDietaryRequirements_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDietaryRequirements(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"keaganpzh"},"content":"    public void parseDietaryRequirements_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(ParserUtil.parseDietaryRequirements(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"keaganpzh"},"content":"    public void parseDietaryRequirements_nonEmptyCollection_returnsDietaryRequirementSet() throws Exception {","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"keaganpzh"},"content":"        Set\u003cDietaryRequirement\u003e actualDietaryRequirementSet \u003d ParserUtil.parseDietaryRequirements(","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"keaganpzh"},"content":"                Arrays.asList(VALID_DIETARY_REQUIREMENT_1, VALID_DIETARY_REQUIREMENT_2));","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"keaganpzh"},"content":"        Set\u003cDietaryRequirement\u003e expectedDietaryRequirementSet \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"keaganpzh"},"content":"                Arrays.asList(new DietaryRequirement(VALID_DIETARY_REQUIREMENT_1),","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"keaganpzh"},"content":"                        new DietaryRequirement(VALID_DIETARY_REQUIREMENT_2)));","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":244,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(expectedDietaryRequirementSet, actualDietaryRequirementSet);","lastModifiedDate":"2023-10-24"},{"lineNumber":245,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":246,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"tllshan"},"content":"    public void parseTable_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":249,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTable(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"tllshan"},"content":"    public void parseTable_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":254,"author":{"gitId":"tllshan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_TABLE_NUMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"tllshan"},"content":"    public void parseTable_validValueWithoutWhitespace_returnsTableNumber() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":259,"author":{"gitId":"tllshan"},"content":"        TableNumber expectedTableNumber \u003d new TableNumber(VALID_TABLE_NUMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":260,"author":{"gitId":"tllshan"},"content":"        assertEquals(expectedTableNumber, ParserUtil.parseTable(VALID_TABLE_NUMBER));","lastModifiedDate":"2023-10-20"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"tllshan"},"content":"    public void parseTable_validValueWithWhitespace_returnsTrimmedTableNumber() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":265,"author":{"gitId":"tllshan"},"content":"        String tableNumberWithWhiteSpace \u003d WHITESPACE + VALID_TABLE_NUMBER + WHITESPACE;","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"tllshan"},"content":"        TableNumber expectedTableNumber \u003d new TableNumber(VALID_TABLE_NUMBER);","lastModifiedDate":"2023-10-20"},{"lineNumber":267,"author":{"gitId":"tllshan"},"content":"        assertEquals(expectedTableNumber, ParserUtil.parseTable(tableNumberWithWhiteSpace));","lastModifiedDate":"2023-10-20"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tllshan":13,"samuelim01":13,"p-xp":13,"wasjoe1":41,"keaganpzh":37,"-":198}},{"path":"src/test/java/wedlog/address/logic/parser/VendorAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_PHOTOGRAPHER;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalVendors.VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.VendorAddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.TypicalVendors;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"public class VendorAddCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    private VendorAddCommandParser parser \u003d new VendorAddCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand vendorAddCommand \u003d parser.parse(NAME_DESC_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_VAL + TAG_DESC_PHOTOGRAPHER);","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        assertEquals(vendorAddCommand, new VendorAddCommand(VAL));","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"    public void parse_onlyNamePresent_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(VALID_NAME_VAL).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand vendorAddCommand \u003d parser.parse(NAME_DESC_VAL);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        assertEquals(new VendorAddCommand(expectedVendor), vendorAddCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    public void parse_repeatedNameValue_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        String validExpectedPersonString \u003d NAME_DESC_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_VAL + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(NAME_DESC_BOB + validExpectedPersonString));","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"     * Tests instance where a field has an invalid value (with no valid value present).","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_VAL + EMAIL_DESC_VAL + ADDRESS_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_VAL + INVALID_PHONE_DESC + EMAIL_DESC_VAL + ADDRESS_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_VAL + PHONE_DESC_VAL + INVALID_EMAIL_DESC + ADDRESS_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        // invalid tag","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL + ADDRESS_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_VAL + EMAIL_DESC_VAL + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"                        + ADDRESS_DESC_VAL + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"     * Tests instance where a field has an invalid value (with a valid value before / after).","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValuesWithValidValues_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        String validExpectedPersonString \u003d NAME_DESC_VAL + PHONE_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_VAL + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_NAME_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_PHONE_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_EMAIL_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_ADDRESS_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_NAME_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_PHONE_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_EMAIL_DESC));","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_ADDRESS_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"    public void parse_compulsoryNameFieldMissing_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, VALID_NAME_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL + ADDRESS_DESC_VAL,","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"    public void parse_missingPhone_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(VAL).withoutPhone().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_VAL + EMAIL_DESC_VAL + ADDRESS_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_PHOTOGRAPHER, new VendorAddCommand(expectedVendor));","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"    public void parse_missingEmail_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(VAL).withoutEmail().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_VAL + PHONE_DESC_VAL + ADDRESS_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_PHOTOGRAPHER, new VendorAddCommand(expectedVendor));","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"    public void parse_missingAddress_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(VAL).withoutAddress().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_PHOTOGRAPHER, new VendorAddCommand(expectedVendor));","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"    public void parse_missingTags_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"        // zero tags","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(TypicalVendors.VAL).withTags().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL + ADDRESS_DESC_VAL,","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"                new VendorAddCommand(expectedVendor));","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":7,"p-xp":163,"wasjoe1":4}},{"path":"src/test/java/wedlog/address/logic/parser/VendorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.VendorAddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorEditCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorFilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditVendorDescriptorBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"public class VendorCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    private VendorCommandParser parser \u003d new VendorCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_vendorAdd() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"add n/vendor p/102391\";","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        assertTrue(command instanceof VendorAddCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_vendorDelete() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(command instanceof VendorDeleteCommand);","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_vendorList() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(\"list\") instanceof VendorListCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    public void parseCommand_vendorFilter() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        assertTrue(parser.parseCommand(\"filter n/name\") instanceof VendorFilterCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        Vendor vendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand.EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder(vendor).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand command \u003d (VendorEditCommand) parser.parseCommand(VendorEditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + VendorUtil.getEditVendorDescriptorDetails(descriptor));","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        assertEquals(new VendorEditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":31,"p-xp":3,"wasjoe1":38}},{"path":"src/test/java/wedlog/address/logic/parser/VendorDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * outside of the VendorDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * same path through the VendorDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"public class VendorDeleteCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    private VendorDeleteCommandParser parser \u003d new VendorDeleteCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public void parse_validArgs_returnsVendorDeleteCommand() throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parse(\"1\") instanceof VendorDeleteCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        // code below invalid due to un-evolved VendorDeleteCommand (equals method)","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        // assertParseSuccess(parser, \"1\", new VendorDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"                VendorDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":31}},{"path":"src/test/java/wedlog/address/logic/parser/VendorEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMPTY_NAME_DESC;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorEditCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorEditCommand.EditVendorDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditVendorDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"public class VendorEditCommandParserTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    private VendorEditCommandParser parser \u003d new VendorEditCommandParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        // no index specified","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        // no field specified","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\", VendorEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        // negative index","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        // zero index","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMPTY_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        // no invalid values for address as empty string signifies deletion","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Vendor} being edited,","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"    public void parse_blankOptionalValue_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        // phone","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_PHONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder().withoutPhone().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand expectedCommand \u003d new VendorEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"        // email","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_EMAIL + \" \";","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptorBuilder().withoutEmail().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        expectedCommand \u003d new VendorEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        // address","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptorBuilder().withoutAddress().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"        expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        // tags","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"    public void parse_blankNameValue_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        String userInput \u003d \"1 \" + PREFIX_NAME;","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, userInput, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"        // name","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"        // phone","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"        expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"        // email","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"        expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"        // address","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"        expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"        // tags","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"        expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"samuelim01"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"samuelim01"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":211,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-21"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"samuelim01"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-21"},{"lineNumber":214,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-21"},{"lineNumber":217,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":218,"author":{"gitId":"samuelim01"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-21"},{"lineNumber":219,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-21"},{"lineNumber":220,"author":{"gitId":"samuelim01"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"samuelim01"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":222,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":223,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":224,"author":{"gitId":"samuelim01"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-21"},{"lineNumber":225,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":226,"author":{"gitId":"samuelim01"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-21"},{"lineNumber":227,"author":{"gitId":"samuelim01"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-21"},{"lineNumber":228,"author":{"gitId":"samuelim01"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":229,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":230,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":231,"author":{"gitId":"samuelim01"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-21"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":234,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":235,"author":{"gitId":"samuelim01"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":236,"author":{"gitId":"samuelim01"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":237,"author":{"gitId":"samuelim01"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":238,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":239,"author":{"gitId":"samuelim01"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":240,"author":{"gitId":"samuelim01"},"content":"        VendorEditCommand expectedCommand \u003d new VendorEditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":241,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":242,"author":{"gitId":"samuelim01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":243,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":244,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"samuelim01":241,"p-xp":3}},{"path":"src/test/java/wedlog/address/logic/parser/VendorFilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_NO_PREFIX_FOUND;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_VAL;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_VAL;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_VAL;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_VAL;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.RSVP_DESC_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TABLE_DESC_GIA;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FLORIST;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_PHOTOGRAPHER;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_VAL;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_VAL;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_VAL;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_VAL;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FLORIST;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_PHOTOGRAPHER;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorFilterCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.AddressPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.EmailPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NamePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.PhonePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.tag.TagPredicate;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"class VendorFilterCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    private VendorFilterCommandParser parser \u003d new VendorFilterCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        // no predicates","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_NO_PREFIX_FOUND,","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"                VendorFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        // non empty preamble","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY,","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        // rsvp present","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, RSVP_DESC_GIA,","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        // table number present","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, TABLE_DESC_GIA,","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        // repeated name","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(NAME_DESC_VAL + NAME_DESC_VAL));","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        // repeated phone","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(PHONE_DESC_VAL + PHONE_DESC_VAL));","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        // repeated email","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(EMAIL_DESC_VAL + EMAIL_DESC_VAL));","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        // repeated address","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(ADDRESS_DESC_VAL + ADDRESS_DESC_VAL));","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"    public void parse_onlyOneFieldPresent_success() throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        // name present","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        VendorFilterCommand vendorFilterCommand \u003d parser.parse(NAME_DESC_VAL);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e predicateList \u003d Collections.singletonList(","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"                new NamePredicate(VALID_NAME_VAL));","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        assertEquals(vendorFilterCommand, new VendorFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        // phone present","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        vendorFilterCommand \u003d parser.parse(PHONE_DESC_VAL);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"        predicateList \u003d Collections.singletonList(new PhonePredicate(VALID_PHONE_VAL));","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        assertEquals(vendorFilterCommand, new VendorFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        // email present","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        vendorFilterCommand \u003d parser.parse(EMAIL_DESC_VAL);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"        predicateList \u003d Collections.singletonList(new EmailPredicate(VALID_EMAIL_VAL));","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        assertEquals(vendorFilterCommand, new VendorFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        // address present","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"        vendorFilterCommand \u003d parser.parse(ADDRESS_DESC_VAL);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        predicateList \u003d Collections.singletonList(new AddressPredicate(VALID_ADDRESS_VAL));","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        assertEquals(vendorFilterCommand, new VendorFilterCommand(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"    public void parse_repeatedTags_success() throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        VendorFilterCommand vendorFilterCommand \u003d parser.parse(TAG_DESC_FRIEND + TAG_DESC_FLORIST);","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates \u003d Arrays.asList(","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"                new TagPredicate(Arrays.asList(VALID_TAG_FRIEND,","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"                        VALID_TAG_FLORIST)));","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"        assertEquals(new VendorFilterCommand(predicates), vendorFilterCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"        VendorFilterCommand vendorFilterCommand \u003d parser.parse(NAME_DESC_VAL + PHONE_DESC_VAL + EMAIL_DESC_VAL","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"                + ADDRESS_DESC_VAL + TAG_DESC_PHOTOGRAPHER);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        List\u003cPredicate\u003c? super Vendor\u003e\u003e predicates \u003d Arrays.asList(","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"                new NamePredicate(VALID_NAME_VAL),","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"wasjoe1"},"content":"                new PhonePredicate(VALID_PHONE_VAL),","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"wasjoe1"},"content":"                new EmailPredicate(VALID_EMAIL_VAL),","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"                new AddressPredicate(VALID_ADDRESS_VAL),","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"                new TagPredicate(Collections.singletonList(VALID_TAG_PHOTOGRAPHER))","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        assertEquals(vendorFilterCommand, new VendorFilterCommand(predicates));","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"tllshan":32,"samuelim01":88,"wasjoe1":4}},{"path":"src/test/java/wedlog/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalGuests.GABRIEL;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalGuests.GEORGE;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateGuestException;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateVendorException;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.GuestNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalGuests;","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalVendors;","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        assertEquals(Collections.emptyList(), addressBook.getGuestList());","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        assertEquals(Collections.emptyList(), addressBook.getVendorList());","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        AddressBook newData \u003d TypicalGuests.getTypicalAddressBook();","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        newData \u003d TypicalVendors.getTypicalAddressBook();","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    // guest-tests","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"    public void resetData_withDuplicateGuests_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        // Two guests with the same identity fields","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        List\u003cGuest\u003e newGuests \u003d Arrays.asList(GINA, editedGina);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        AddressBookStub newData \u003d new AddressBookStub(new ArrayList\u003c\u003e(), newGuests, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"    public void hasGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasGuest(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    public void hasGuest_guestNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        assertFalse(addressBook.hasGuest(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    public void hasGuest_guestInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        assertTrue(addressBook.hasGuest(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    public void hasGuest_guestWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        assertTrue(addressBook.hasGuest(editedGina));","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"    public void setGuest_nullTargetGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.setGuest(null, GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"    public void setGuest_nullEditedGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.setGuest(GINA, null));","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"    public void setGuest_targetGuestNotInList_throwsGuestNotFoundException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e addressBook.setGuest(GINA, GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestHasSameIdentity_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        addressBook.setGuest(GINA, editedGina);","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"        expectedAddressBook.addGuest(editedGina);","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedAddressBook, addressBook);","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"    public void removeGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.removeGuest(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"    public void removeGuest_guestExists_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        addressBook.removeGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedAddressBook, addressBook);","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"    public void getGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getGuestList().remove(0));","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"    public void getRsvpStatisticsTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"        addressBook.addGuest(GREG);","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(1, 1, 0), addressBook.getRsvpStatistics());","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"keaganpzh"},"content":"    public void getDietaryRequirementStatisticsTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"keaganpzh"},"content":"        HashMap\u003cString, Integer\u003e expectedMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"keaganpzh"},"content":"        expectedMap.put(\"vegan\", 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"        expectedMap.put(\"no beef\", 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics expectedDietaryRequirementStatistics \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"keaganpzh"},"content":"                new DietaryRequirementStatistics(expectedMap);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"keaganpzh"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"        addressBook.addGuest(GREG); // rsvp no","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"        addressBook.addGuest(GABRIEL); // rsvp unknown","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"        addressBook.addGuest(GEORGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(expectedDietaryRequirementStatistics, addressBook.getDietaryRequirementStatistics());","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"    // vendor-tests","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"    public void resetData_withDuplicateVendors_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"        // Two vendors with the same identity fields","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAnne \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"        List\u003cVendor\u003e newVendors \u003d Arrays.asList(ANNE, editedAnne);","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"        AddressBookStub newData \u003d new AddressBookStub(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), newVendors);","lastModifiedDate":"2023-10-11"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasVendor(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_vendorNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"        assertFalse(addressBook.hasVendor(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_vendorInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"        addressBook.addVendor(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"        assertTrue(addressBook.hasVendor(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_vendorWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"        addressBook.addVendor(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAlice \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"        assertTrue(addressBook.hasVendor(editedAlice));","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"    public void getVendorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getVendorList().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":210,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-11-10"},{"lineNumber":211,"author":{"gitId":"samuelim01"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withGuest(GINA).withVendor(ANNE).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-10"},{"lineNumber":214,"author":{"gitId":"samuelim01"},"content":"        assertTrue(addressBook.equals(addressBook));","lastModifiedDate":"2023-11-10"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-10"},{"lineNumber":217,"author":{"gitId":"samuelim01"},"content":"        AddressBook addressBookCpy \u003d new AddressBookBuilder().withGuest(GINA).withVendor(ANNE).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":218,"author":{"gitId":"samuelim01"},"content":"        assertTrue(addressBook.equals(addressBookCpy));","lastModifiedDate":"2023-11-10"},{"lineNumber":219,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":220,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":221,"author":{"gitId":"samuelim01"},"content":"        assertFalse(addressBook.equals(0.4));","lastModifiedDate":"2023-11-10"},{"lineNumber":222,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":223,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":224,"author":{"gitId":"samuelim01"},"content":"        assertFalse(addressBook.equals(null));","lastModifiedDate":"2023-11-10"},{"lineNumber":225,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"samuelim01"},"content":"        // different list","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"samuelim01"},"content":"        AddressBook differentList \u003d new AddressBookBuilder().withVendor(ANNE).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"samuelim01"},"content":"        assertFalse(addressBook.equals(differentList));","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"samuelim01"},"content":"        differentList \u003d new AddressBookBuilder().withGuest(GINA).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"samuelim01"},"content":"        assertFalse(addressBook.equals(differentList));","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"p-xp"},"content":"        String expected \u003d AddressBook.class.getCanonicalName()","lastModifiedDate":"2023-10-07"},{"lineNumber":236,"author":{"gitId":"samuelim01"},"content":"                + \"{guests\u003d\" + addressBook.getGuestList()","lastModifiedDate":"2023-11-10"},{"lineNumber":237,"author":{"gitId":"samuelim01"},"content":"                + \", vendors\u003d\" + addressBook.getVendorList() + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":242,"author":{"gitId":"p-xp"},"content":"     * A stub ReadOnlyAddressBook whose persons list, guests list and vendors list can violate interface constraints.","lastModifiedDate":"2023-10-11"},{"lineNumber":243,"author":{"gitId":"samuelim01"},"content":"     * violate interface constraints.","lastModifiedDate":"2023-10-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"        private final ObservableList\u003cGuest\u003e guests \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-07"},{"lineNumber":248,"author":{"gitId":"samuelim01"},"content":"        private final ObservableList\u003cVendor\u003e vendors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":250,"author":{"gitId":"p-xp"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cGuest\u003e guests, Collection\u003cVendor\u003e vendors) {","lastModifiedDate":"2023-10-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":252,"author":{"gitId":"p-xp"},"content":"            this.guests.setAll(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":253,"author":{"gitId":"samuelim01"},"content":"            this.vendors.setAll(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":256,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":257,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"            return guests;","lastModifiedDate":"2023-10-07"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":262,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":263,"author":{"gitId":"samuelim01"},"content":"        public ObservableList\u003cVendor\u003e getVendorList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":264,"author":{"gitId":"samuelim01"},"content":"            return vendors;","lastModifiedDate":"2023-10-06"},{"lineNumber":265,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"tllshan":6,"samuelim01":95,"p-xp":97,"keaganpzh":19,"-":51}},{"path":"src/test/java/wedlog/address/model/DietaryRequirementStatisticsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"public class DietaryRequirementStatisticsTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    private static final HashMap\u003cString, Integer\u003e TEST_MAP_1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    private static final HashMap\u003cString, Integer\u003e TEST_MAP_2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        // Empty constructor","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"        assertDoesNotThrow(() -\u003e new DietaryRequirementStatistics());","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"        // Constructor with HashMap","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"        assertDoesNotThrow(() -\u003e new DietaryRequirementStatistics(new HashMap\u003c\u003e()));","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"    public void emptyMap_getter_returnsEmptyMap() {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics testDietaryRequirementStatistics \u003d new DietaryRequirementStatistics();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        assert(testDietaryRequirementStatistics.getMap().isEmpty());","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    public void nonEmptyMap_getter_returnsNonEmptyMap() {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"vegan\", 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"vegetarian\", 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"halal\", 3);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics testDietaryRequirementStatistics \u003d new DietaryRequirementStatistics(TEST_MAP_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(testDietaryRequirementStatistics.getMap(), TEST_MAP_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    public void equals_same_returnsTrue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"vegan\", 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"vegetarian\", 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"halal\", 3);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics expectedDietaryRequirementStatistics \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"                new DietaryRequirementStatistics(TEST_MAP_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics testDietaryRequirementStatistics \u003d new DietaryRequirementStatistics(TEST_MAP_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(testDietaryRequirementStatistics, expectedDietaryRequirementStatistics);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"    public void equals_notSame_returnsFalse() {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"Vegan\", 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"Vegetarian\", 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_1.put(\"Halal\", 3);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics expectedDietaryRequirementStatistics \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"                new DietaryRequirementStatistics(TEST_MAP_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_2.put(\"Vegan\", 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_2.put(\"Vegetarian\", 2);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"        TEST_MAP_2.put(\"Halal\", 4);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics testDietaryRequirementStatistics \u003d new DietaryRequirementStatistics(TEST_MAP_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"        assertNotEquals(testDietaryRequirementStatistics, expectedDietaryRequirementStatistics);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"    public void equals_notDietaryRequirementStatistics_returnsFalse() {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"        HashMap\u003cString, Integer\u003e testMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"        testMap.put(\"Vegan\", 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"        testMap.put(\"Vegetarian\", 2);","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"        testMap.put(\"Halal\", 3);","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics expectedDietaryRequirementStatistics \u003d new DietaryRequirementStatistics(testMap);","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"        assertNotEquals(expectedDietaryRequirementStatistics, testMap);","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics testDietaryRequirementStatistics \u003d new DietaryRequirementStatistics();","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(testDietaryRequirementStatistics.equals(testDietaryRequirementStatistics));","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"keaganpzh":81}},{"path":"src/test/java/wedlog/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalGuests.GABRIEL;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GEORGE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BRYAN;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NamePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateGuestException;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateVendorException;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.GuestNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.VendorNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"    public void hasGuest() {","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        // EPs: [null][does not exist][exists]","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        // EP1: null -\u003e throws NullPointerException","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGuest(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        // EP2: does not exist -\u003e returns False","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        assertFalse(modelManager.hasGuest(GEORGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        // EP3: exists -\u003e returns True","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        assertTrue(modelManager.hasGuest(GEORGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    public void deleteGuest() {","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        // EPs: [null][does not exist][exists]","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        // EP1: null -\u003e throws NullPointerException","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteGuest(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        // EP2: does not exist -\u003e throws GuestNotFoundException","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e modelManager.deleteGuest(GEORGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        // EP3: exists -\u003e deletes Guest","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        modelManager.deleteGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"    public void setGuest() {","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"        // Equivalence Partitions:","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        // target: [null][does not exist][exists]","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"        // editedGuest: [null][non-unique][unique]","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        // TC1: null target -\u003e throws NullPointerException","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuest(null, GEORGE));","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        // TC2: target does not exist -\u003e throws GuestNotFoundException","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e modelManager.setGuest(GEORGE, GEORGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        // TC3: null editedGuest -\u003e throws NullPointerException","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuest(GEORGE, null));","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"        // TC4: non-unique editedGuest -\u003e throws DuplicateGuestException","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GREG);","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e modelManager.setGuest(GEORGE, GREG));","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"        // TC5: target exists and unique editedGuest -\u003e success","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        modelManager \u003d new ModelManager();","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        modelManager.setGuest(GEORGE, GREG);","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addGuest(GREG);","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"    public void getRsvpStatisticsTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"        modelManager.addGuest(GREG);","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(1, 1, 0), modelManager.getRsvpStatistics());","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"    public void getDietaryRequirementStatisticsTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"keaganpzh"},"content":"        HashMap\u003cString, Integer\u003e expectedMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"        expectedMap.put(\"vegan\", 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"keaganpzh"},"content":"        expectedMap.put(\"no beef\", 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics expectedDietaryRequirementStatistics \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"keaganpzh"},"content":"                new DietaryRequirementStatistics(expectedMap);","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"        modelManager.addGuest(GINA);","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"keaganpzh"},"content":"        modelManager.addGuest(GREG);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"        modelManager.addGuest(GABRIEL);","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(expectedDietaryRequirementStatistics, modelManager.getDietaryRequirementStatistics());","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor() {","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"        // EPs: [null][does not exist][exists]","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"        // EP1: null -\u003e throws NullPointerException","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasVendor(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"        // EP2: does not exist -\u003e returns False","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        assertFalse(modelManager.hasVendor(ANNE));","lastModifiedDate":"2023-10-11"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"        // EP3: exists -\u003e returns True","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-11"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"        assertTrue(modelManager.hasVendor(ANNE));","lastModifiedDate":"2023-10-11"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"    public void deleteVendor() {","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"        // EPs: [null][does not exist][exists]","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"        // EP1: null -\u003e throws NullPointerException","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteVendor(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"        // EP2: does not exist -\u003e throws VendorNotFoundException","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"        assertThrows(VendorNotFoundException.class, () -\u003e modelManager.deleteVendor(ANNE));","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"        // EP3: exists -\u003e deletes Vendor","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"        modelManager.deleteVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"    public void setVendor() {","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"        // Equivalence Partitions:","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"        // target: [null][does not exist][exists]","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"        // editedVendor: [null][non-unique][unique]","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"        // TC1: null target -\u003e throws NullPointerException","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setVendor(null, ANNE));","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"        // TC2: target does not exist -\u003e throws VendorNotFoundException","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"        assertThrows(VendorNotFoundException.class, () -\u003e modelManager.setVendor(ANNE, ANNE));","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"samuelim01"},"content":"        // TC3: null editedVendor -\u003e throws NullPointerException","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setVendor(ANNE, null));","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"        // TC4: non-unique editedVendor -\u003e throws DuplicateVendorException","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(BRYAN);","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e modelManager.setVendor(ANNE, BRYAN));","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"samuelim01"},"content":"        // TC5: target exists and unique editedVendor -\u003e success","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"samuelim01"},"content":"        modelManager \u003d new ModelManager();","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"samuelim01"},"content":"        modelManager.setVendor(ANNE, BRYAN);","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addVendor(BRYAN);","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":227,"author":{"gitId":"samuelim01"},"content":"    public void getFilteredGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":228,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGuestList().remove(0));","lastModifiedDate":"2023-10-11"},{"lineNumber":229,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":230,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":231,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"    public void getFilteredVendorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredVendorList().remove(0));","lastModifiedDate":"2023-10-11"},{"lineNumber":234,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":235,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":238,"author":{"gitId":"samuelim01"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder()","lastModifiedDate":"2023-10-12"},{"lineNumber":239,"author":{"gitId":"samuelim01"},"content":"                .withGuest(GEORGE).withGuest(GREG)","lastModifiedDate":"2023-10-12"},{"lineNumber":240,"author":{"gitId":"samuelim01"},"content":"                .withVendor(ANNE).withVendor(BRYAN)","lastModifiedDate":"2023-10-12"},{"lineNumber":241,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"samuelim01"},"content":"        // different guest filteredList -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":263,"author":{"gitId":"wasjoe1"},"content":"        String guestFullname \u003d GEORGE.getName().fullName;","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"wasjoe1"},"content":"        modelManager.updateFilteredGuestList(new NamePredicate(guestFullname));","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"samuelim01"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-10-12"},{"lineNumber":266,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":267,"author":{"gitId":"samuelim01"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-12"},{"lineNumber":268,"author":{"gitId":"samuelim01"},"content":"        modelManager.updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":270,"author":{"gitId":"samuelim01"},"content":"        // different vendor filteredList -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":271,"author":{"gitId":"wasjoe1"},"content":"        String vendorFullname \u003d ANNE.getName().fullName;","lastModifiedDate":"2023-11-01"},{"lineNumber":272,"author":{"gitId":"wasjoe1"},"content":"        modelManager.updateFilteredVendorList(new NamePredicate(vendorFullname));","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"samuelim01"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-10-12"},{"lineNumber":274,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":275,"author":{"gitId":"samuelim01"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-12"},{"lineNumber":276,"author":{"gitId":"samuelim01"},"content":"        modelManager.updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tllshan":6,"samuelim01":161,"wasjoe1":5,"keaganpzh":18,"-":93}},{"path":"src/test/java/wedlog/address/model/RsvpStatisticsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"public class RsvpStatisticsTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"    private final RsvpStatistics testRsvpStatistics \u003d new RsvpStatistics(50, 20, 30);","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(50, 20, 30), testRsvpStatistics);","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    public void testEquals_same() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(50, 20, 30), new RsvpStatistics(50, 20, 30));","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    public void testEquals_notSame() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        assertNotEquals(new RsvpStatistics(50, 20, 30), new RsvpStatistics(50, 30, 20));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"keaganpzh":26}},{"path":"src/test/java/wedlog/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"samuelim01":2,"-":19}},{"path":"src/test/java/wedlog/address/model/VersionedAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BRYAN;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"//@@author samuelim01-reused","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"// Reused from Address Book(Level 4) with minor modifications.","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class VersionedAddressBookTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final ReadOnlyAddressBook EMPTY_ADDRESS_BOOK \u003d new AddressBookBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final ReadOnlyAddressBook ADDRESS_BOOK_WITH_GUEST_GINA \u003d new AddressBookBuilder()","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            .withGuest(GINA).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final ReadOnlyAddressBook ADDRESS_BOOK_WITH_VENDOR_ANNE \u003d new AddressBookBuilder()","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withVendor(ANNE).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final ReadOnlyAddressBook ADDRESS_BOOK_WITH_VENDOR_BRYAN \u003d new AddressBookBuilder()","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withVendor(BRYAN).build();","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void commit_singleAddressBook_noStatesRemovedCurrentStateSaved() {","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK);","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Collections.singletonList(EMPTY_ADDRESS_BOOK),","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Collections.emptyList());","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void commit_multipleAddressBooksCurrentStatePointerAtEnd_noStatesRemovedCurrentStateSaved() {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                Arrays.asList(EMPTY_ADDRESS_BOOK, ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA),","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_GUEST_GINA,","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                Collections.emptyList());","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void commit_multipleAddressBooksCurrentStatePointerNotAtEnd_statesRemovedCurrentStateSaved() {","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(versionedAddressBook, 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                Arrays.asList(EMPTY_ADDRESS_BOOK, ADDRESS_BOOK_WITH_VENDOR_ANNE),","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE,","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                Collections.emptyList());","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void undo_multipleAddressBooksCurrentStatePointerAtEnd_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Collections.singletonList(EMPTY_ADDRESS_BOOK),","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE,","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Collections.singletonList(ADDRESS_BOOK_WITH_GUEST_GINA));","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void undo_multipleAddressBooksCurrentStatePointerNotAtEnd_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(versionedAddressBook, 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Collections.emptyList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Arrays.asList(ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA));","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void undo_multipleAddressBooksCurrentStatePointerAtStart_throwsNoUndoableStateException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(versionedAddressBook, 2);","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(VersionedAddressBook.NoUndoableStateException.class, () -\u003e versionedAddressBook.undo());","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void undo_singleAddressBook_throwsNoUndoableStateException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK);","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(VersionedAddressBook.NoUndoableStateException.class, () -\u003e versionedAddressBook.undo());","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void redo_multipleAddressBooksCurrentStatePointerAtStart_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(versionedAddressBook, 2);","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Collections.singletonList(EMPTY_ADDRESS_BOOK),","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE,","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Collections.singletonList(ADDRESS_BOOK_WITH_GUEST_GINA));","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void redo_multipleAddressBooksCurrentStatePointerNotAtEnd_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(versionedAddressBook, 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                Arrays.asList(EMPTY_ADDRESS_BOOK, ADDRESS_BOOK_WITH_VENDOR_ANNE),","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_GUEST_GINA,","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Collections.emptyList());","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void redo_multipleAddressBooksCurrentStatePointerAtEnd_throwsNoRedoableException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(VersionedAddressBook.NoRedoableStateException.class, () -\u003e versionedAddressBook.redo());","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void redo_singleAddressBook_throwsNoRedoableException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK);","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(VersionedAddressBook.NoRedoableStateException.class, () -\u003e versionedAddressBook.redo());","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void canUndo_multipleAddressBooks_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(versionedAddressBook.canUndo());","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void canUndo_singleAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK);","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.canUndo());","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void canUndo_multipleAddressBooksCurrentStatePointerAtStart_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(versionedAddressBook, 2);","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.canUndo());","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void canRedo_singleAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK);","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void canRedo_multipleAddressBooksCurrentStatePointerAtStart_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(versionedAddressBook, 2);","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(versionedAddressBook.canRedo());","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void canRedo_multipleAddressBooksCurrentStatePointerAtMiddle_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(versionedAddressBook, 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(versionedAddressBook.canRedo());","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void canRedo_multipleAddressBooksCurrentStatePointerAtEnd_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertTrue(versionedAddressBook.equals(versionedAddressBook));","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBookCpy \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertTrue(versionedAddressBook.equals(versionedAddressBookCpy));","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.equals(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // different state list -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        VersionedAddressBook differentStateList \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_BRYAN, ADDRESS_BOOK_WITH_VENDOR_ANNE);","lastModifiedDate":"2023-11-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.equals(differentStateList));","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // different current state pointer -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        VersionedAddressBook differentStatePointer \u003d prepareVersionedAddressBook(EMPTY_ADDRESS_BOOK,","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                ADDRESS_BOOK_WITH_VENDOR_ANNE, ADDRESS_BOOK_WITH_GUEST_GINA);","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        shiftCurrentStatePointerLeft(differentStatePointer, 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.equals(differentStatePointer));","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    private void assertAddressBookListStatus(VersionedAddressBook versionedAddressBook,","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                                             List\u003cReadOnlyAddressBook\u003e expectedStatesBeforePointer,","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                                             ReadOnlyAddressBook expectedCurrentState,","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                                             List\u003cReadOnlyAddressBook\u003e expectedStatesAfterPointer) {","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // check current state","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(versionedAddressBook), expectedCurrentState);","lastModifiedDate":"2023-10-20"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // shift pointer to start of state list","lastModifiedDate":"2023-10-20"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        while (versionedAddressBook.canUndo()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // check states before pointer","lastModifiedDate":"2023-10-20"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        for (ReadOnlyAddressBook expectedState : expectedStatesBeforePointer) {","lastModifiedDate":"2023-10-20"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            assertEquals(expectedState, new AddressBook(versionedAddressBook));","lastModifiedDate":"2023-10-20"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2023-10-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        // check states after pointer","lastModifiedDate":"2023-10-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        for (ReadOnlyAddressBook expectedAddressBook : expectedStatesAfterPointer) {","lastModifiedDate":"2023-10-20"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2023-10-20"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            assertEquals(expectedAddressBook, new AddressBook(versionedAddressBook));","lastModifiedDate":"2023-10-20"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // check that there are no more states after pointer","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2023-10-20"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // revert pointer to original position","lastModifiedDate":"2023-10-20"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        expectedStatesAfterPointer.forEach(unused -\u003e versionedAddressBook.undo());","lastModifiedDate":"2023-10-20"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    private VersionedAddressBook prepareVersionedAddressBook(ReadOnlyAddressBook... addressBookStates) {","lastModifiedDate":"2023-10-20"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(addressBookStates[0]);","lastModifiedDate":"2023-10-20"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c addressBookStates.length; i++) {","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            versionedAddressBook.resetData(addressBookStates[i]);","lastModifiedDate":"2023-10-20"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            versionedAddressBook.commit();","lastModifiedDate":"2023-10-20"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        return versionedAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    private void shiftCurrentStatePointerLeft(VersionedAddressBook versionedAddressBook, int count) {","lastModifiedDate":"2023-10-20"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-10-20"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2023-10-20"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"},{"lineNumber":278,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"samuelim01":18,"-":260}},{"path":"src/test/java/wedlog/address/model/person/AddressPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"class AddressPredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        String firstPredicateString \u003d \"first\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        String secondPredicateString \u003d \"second\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate firstPredicate \u003d new AddressPredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate secondPredicate \u003d new AddressPredicate(secondPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate firstPredicateCopy \u003d new AddressPredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(0.1));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionPersonNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate pred \u003d new AddressPredicate(\"Jurong\");","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        Person person \u003d new PersonBuilder().withAddress(\"Jurong\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(pred.test(person));","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        Person nullPerson \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"                \"Person passed to AddressPredicate should not be null!\", () -\u003e pred.test(nullPerson));","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    public void test_addressContainsInput_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // Exact match","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate predicate \u003d new AddressPredicate(\"Jurong\");","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        // Partial Match","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new AddressPredicate(\"Jurong W\");","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        // Mixed-case match","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new AddressPredicate(\"jUroNg\");","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"    public void test_addressAbsentInputEmpty_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        // empty input","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate predicate \u003d new AddressPredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withoutAddress().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"    public void test_addressAbsentInputEmpty_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"        // empty input","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate predicate \u003d new AddressPredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Jurong\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"    public void test_addressDoesNotContainInput_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        // Address empty","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate predicate \u003d new AddressPredicate(\"Jurong\");","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withoutAddress().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"        // Non-matching input","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new AddressPredicate(\"Singapore\");","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Jurong West\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"random input\";","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"        AddressPredicate predicate \u003d new AddressPredicate(input);","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"wasjoe1"},"content":"        String expected \u003d AddressPredicate.class.getCanonicalName() + \"{input\u003d\" + input + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"samuelim01":58,"wasjoe1":44}},{"path":"src/test/java/wedlog/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"samuelim01":2,"-":54}},{"path":"src/test/java/wedlog/address/model/person/EmailPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"class EmailPredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        String firstPredicateString \u003d \"first@example.com\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        String secondPredicateString \u003d \"second@example.com\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate firstPredicate \u003d new EmailPredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate secondPredicate \u003d new EmailPredicate(secondPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate firstPredicateCopy \u003d new EmailPredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(0.1));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionPersonNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate pred \u003d new EmailPredicate(\"gina@example.com\");","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        Person person \u003d new PersonBuilder().withEmail(\"gina@example.com\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(pred.test(person));","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        Person nullPerson \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"                \"Person passed to EmailPredicate should not be null!\", () -\u003e pred.test(nullPerson));","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    public void test_emailContainsInput_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // Exact match","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate predicate \u003d new EmailPredicate(\"gina@example.com\");","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"gina@example.com\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        // Partial match","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new EmailPredicate(\"example.com\");","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"gina@example.com\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        // Mixed-case match","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new EmailPredicate(\"gInA@eXamPlE.coM\");","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Gina@example.com\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"    public void test_emailAbsentInputEmpty_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        // empty input","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate predicate \u003d new EmailPredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withoutEmail().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"    public void test_emailAbsentInputEmpty_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"        // empty input","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate predicate \u003d new EmailPredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"email@email.com\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"    public void test_emailDoesNotContainInput_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        // Email empty","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate predicate \u003d new EmailPredicate(\"gina@example.com\");","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withoutEmail().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"        // Non-matching input","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new EmailPredicate(\"greg@example.com\");","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"gina@example.com\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"random input\";","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"        EmailPredicate predicate \u003d new EmailPredicate(input);","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"wasjoe1"},"content":"        String expected \u003d EmailPredicate.class.getCanonicalName() + \"{input\u003d\" + input + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"samuelim01":58,"wasjoe1":44}},{"path":"src/test/java/wedlog/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"samuelim01":2,"-":86}},{"path":"src/test/java/wedlog/address/model/person/GuestRsvpPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"class GuestRsvpPredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        String firstPredicateString \u003d \"yes\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        String secondPredicateString \u003d \"no\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate firstPredicate \u003d new GuestRsvpPredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate secondPredicate \u003d new GuestRsvpPredicate(secondPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate firstPredicateCopy \u003d new GuestRsvpPredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(0.1));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionGuestNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate pred \u003d new GuestRsvpPredicate(\"yes\");","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        Guest guest \u003d new GuestBuilder().withRsvpStatus(\"yes\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(pred.test(guest));","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        Guest nullGuest \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"                \"Guest passed to GuestRsvpPredicate should not be null!\", () -\u003e pred.test(nullGuest));","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    public void test_rsvpContainsInput_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // Exact match","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate predicate \u003d new GuestRsvpPredicate(\"yes\");","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRsvpStatus(\"yes\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new GuestRsvpPredicate(\"yEs\");","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRsvpStatus(\"yes\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    public void test_rsvpAbsentInput_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        // Empty input","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate predicate \u003d new GuestRsvpPredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRsvpStatus(\"unknown\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"    public void test_rsvpAbsentInput_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"        // Empty input","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate predicate \u003d new GuestRsvpPredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new GuestBuilder().withRsvpStatus(\"yes\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"    public void test_rsvpDoesNotContainInput_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        // Rsvp Status unknown","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate predicate \u003d new GuestRsvpPredicate(\"yes\");","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new GuestBuilder().withUnknownRsvpStatus().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"        // Non-exact match keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new GuestRsvpPredicate(\"ye\");","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"        assertFalse(predicate.test(new GuestBuilder().withRsvpStatus(\"yes\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"random input\";","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"        GuestRsvpPredicate predicate \u003d new GuestRsvpPredicate(input);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"        String expected \u003d GuestRsvpPredicate.class.getCanonicalName() + \"{input\u003d\" + input + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"samuelim01":53,"wasjoe1":45}},{"path":"src/test/java/wedlog/address/model/person/GuestTablePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"class GuestTablePredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        String firstPredicateString \u003d \"111\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        String secondPredicateString \u003d \"222\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate firstPredicate \u003d new GuestTablePredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate secondPredicate \u003d new GuestTablePredicate(secondPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate firstPredicateCopy \u003d new GuestTablePredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(0.1));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionGuestNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate pred \u003d new GuestTablePredicate(\"111\");","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        Guest guest \u003d new GuestBuilder().withTableNumber(\"111\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(pred.test(guest));","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        Guest nullGuest \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"                \"Guest passed to GuestTablePredicate should not be null!\", () -\u003e pred.test(nullGuest));","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    public void test_tableNumberContainsInput_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // Exact match","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate predicate \u003d new GuestTablePredicate(\"111\");","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new GuestBuilder().withTableNumber(\"111\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"    public void test_tableNumberAbsentInputEmpty_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        // Empty input","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate predicate \u003d new GuestTablePredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new GuestBuilder().withoutTableNumber().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"    public void test_tableNumberAbsentInputEmpty_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"        // Empty input","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate predicate \u003d new GuestTablePredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        assertFalse(predicate.test(new GuestBuilder().withTableNumber(\"111\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"    public void test_tableNumberDoesNotContainInput_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        // Partial match","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate predicate \u003d new GuestTablePredicate(\"11\");","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new GuestBuilder().withTableNumber(\"111\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        // Table number empty","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new GuestTablePredicate(\"111\");","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new GuestBuilder().withoutTableNumber().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"        // Non-matching input","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new GuestTablePredicate(\"222\");","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new GuestBuilder().withTableNumber(\"111\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"random input\";","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"        GuestTablePredicate predicate \u003d new GuestTablePredicate(input);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"        String expected \u003d GuestTablePredicate.class.getCanonicalName() + \"{input\u003d\" + input + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"samuelim01":55,"wasjoe1":43}},{"path":"src/test/java/wedlog/address/model/person/GuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TABLE_NUMBER_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TABLE_NUMBER_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_TAGS;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":" * Simplified test class for Guest.","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":" * More detailed tests to be written in the future.","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":" *","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":" * @version v1.2","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"public class GuestTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    public static final Set\u003cDietaryRequirement\u003e VALID_DIETARY_REQUIREMENTS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    public static final RsvpStatus VALID_RSVP_STATUS \u003d new RsvpStatus(VALID_RSVP_STATUS_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    public static final TableNumber VALID_TABLE_NUMBER \u003d new TableNumber(VALID_TABLE_NUMBER_AMY);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        // Name Null","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Guest(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"                VALID_ADDRESS, VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        // Phone Null","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Guest(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"                VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        // Email Null","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Guest(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"                VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        // Address Null","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"                VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"        // Dietary Requirements Null","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"                VALID_ADDRESS, VALID_RSVP_STATUS, null, VALID_TABLE_NUMBER, VALID_TAGS));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        // Rsvp Status Null","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"                VALID_ADDRESS, null, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        // Table Number Null","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        assertDoesNotThrow(() -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"                VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, null, VALID_TAGS));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        // Tags Null","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"                VALID_ADDRESS, VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, null));","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        Guest ginaCopy \u003d new GuestBuilder(GINA).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"        assertTrue(GINA.equals(ginaCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"keaganpzh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        assertTrue(GINA.equals(GINA));","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"keaganpzh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"keaganpzh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(GREG));","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"        // different dietary requirements -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"        editedGina \u003d new GuestBuilder(GINA).withDietaryRequirements(VALID_DIETARY_REQUIREMENTS_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"keaganpzh"},"content":"        // edited rsvp status -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"keaganpzh"},"content":"        editedGina \u003d new GuestBuilder(GINA).withRsvpStatus(VALID_RSVP_STATUS_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"        // different table number -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"        editedGina \u003d new GuestBuilder(GINA).withTableNumber(VALID_TABLE_NUMBER_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        // no phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        // no email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"        // no address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"        // no table number -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"        editedGina \u003d new GuestBuilder(GINA).withoutTableNumber().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"keaganpzh"},"content":"        Name name \u003d new Name(\"Bob\");","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"keaganpzh"},"content":"        Phone phone \u003d new Phone(\"91234567\");","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"keaganpzh"},"content":"        Email email \u003d new Email(\"bob@bob.com\");","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"keaganpzh"},"content":"        Address address \u003d new Address(\"Blk 123\");","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirement dietaryRequirement \u003d new DietaryRequirement(\"Halal\");","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"keaganpzh"},"content":"        Set\u003cDietaryRequirement\u003e dietaryRequirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements.add(dietaryRequirement);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatus rsvpStatus \u003d new RsvpStatus(\"yes\");","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"        TableNumber tableNumber \u003d new TableNumber(\"13\");","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"keaganpzh"},"content":"        Tag tag \u003d new Tag(\"friend\");","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"keaganpzh"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"keaganpzh"},"content":"        tags.add(tag);","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"        Guest guest \u003d new Guest(name, phone, email, address, rsvpStatus, dietaryRequirements, tableNumber, tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"keaganpzh"},"content":"        String expected \u003d Guest.class.getCanonicalName() + \"{name\u003d\" + guest.getName() + \", phone\u003d\" + guest.getPhone()","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"keaganpzh"},"content":"                + \", email\u003d\" + guest.getEmail() + \", address\u003d\" + guest.getAddress()","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"keaganpzh"},"content":"                + \", rsvpStatus\u003d\" + guest.getRsvpStatus() + \", dietaryRequirements\u003d\" + guest.getDietaryRequirements()","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"tllshan"},"content":"                + \", tableNumber\u003d\" + guest.getTableNumber() + \", tags\u003d\" + guest.getTags() + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(expected, guest.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"keaganpzh"},"content":"    public void getDietaryRequirementsString_inputsInOrder() {","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"keaganpzh"},"content":"        Set\u003cDietaryRequirement\u003e dietaryRequirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements.add(new DietaryRequirement(\"halal\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements.add(new DietaryRequirement(\"vegetarian\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"keaganpzh"},"content":"        Guest guest \u003d new GuestBuilder().withName(\"Bob\").withDietaryRequirementSet(dietaryRequirements).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(\"halal, vegetarian\", guest.getDietaryRequirementsString());","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"keaganpzh"},"content":"    public void getDietaryRequirementsStringTest_inputsNotInOrder() {","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"keaganpzh"},"content":"        Set\u003cDietaryRequirement\u003e dietaryRequirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements.add(new DietaryRequirement(\"vegetarian\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements.add(new DietaryRequirement(\"halal\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"keaganpzh"},"content":"        Guest guest \u003d new GuestBuilder().withName(\"Bob\").withDietaryRequirementSet(dietaryRequirements).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(\"halal, vegetarian\", guest.getDietaryRequirementsString());","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"tllshan":26,"samuelim01":87,"keaganpzh":81}},{"path":"src/test/java/wedlog/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"samuelim01":2,"-":83}},{"path":"src/test/java/wedlog/address/model/person/NamePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"class NamePredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        String firstPredicateString \u003d \"first\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        String secondPredicateString \u003d \"second\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate firstPredicate \u003d new NamePredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate secondPredicate \u003d new NamePredicate(secondPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate firstPredicateCopy \u003d new NamePredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(0.1));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionPersonNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate pred \u003d new NamePredicate(\"Alice\");","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // EP1: Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        Person person \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(pred.test(person));","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // EP2: Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        Person nullPerson \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"                \"Person passed to NamePredicate should not be null!\", () -\u003e pred.test(nullPerson));","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    public void test_nameContainsInput_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // EP1: Exact match","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate predicate \u003d new NamePredicate(\"Alice\");","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        // EP2: Partial match","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new NamePredicate(\"Alice C\");","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        // EP3: Mixed-case input","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new NamePredicate(\"aLIce bOB\");","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        // EP4: Empty input","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate predicate \u003d new NamePredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"        // EP5: Non-matching input","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new NamePredicate(\"Carol\");","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"random input\";","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"        NamePredicate predicate \u003d new NamePredicate(input);","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"        String expected \u003d NamePredicate.class.getCanonicalName() + \"{input\u003d\" + input + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"samuelim01":52,"wasjoe1":36}},{"path":"src/test/java/wedlog/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        // different case -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        assertTrue(name.equals(new Name(\"valid name\")));","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"samuelim01":5,"-":58}},{"path":"src/test/java/wedlog/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    public static final Name VALID_NAME \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    public static final Phone VALID_PHONE \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    public static final Email VALID_EMAIL \u003d new Email(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    public static final Address VALID_ADDRESS \u003d new Address(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    public static final Set\u003cTag\u003e VALID_TAGS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        // null name","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, VALID_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        // null phone","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Person(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        // null email","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Person(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        // null address","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Person(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        // null tags","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, VALID_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"samuelim01":41,"-":89}},{"path":"src/test/java/wedlog/address/model/person/PhonePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"class PhonePredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        String firstPredicateString \u003d \"111\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        String secondPredicateString \u003d \"222\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate firstPredicate \u003d new PhonePredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate secondPredicate \u003d new PhonePredicate(secondPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate firstPredicateCopy \u003d new PhonePredicate(firstPredicateString);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(0.1));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionPersonNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate pred \u003d new PhonePredicate(\"111\");","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        Person person \u003d new PersonBuilder().withPhone(\"111\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(pred.test(person));","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        Person nullPerson \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"                \"Person passed to PhonePredicate should not be null!\", () -\u003e pred.test(nullPerson));","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    public void testPhoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // Exact match","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate predicate \u003d new PhonePredicate(\"91423611\");","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"91423611\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        // Partial match","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new PhonePredicate(\"11\");","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"91423611\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    public void testPhoneAbsentKeywordEmpty_returnsTrue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        // empty keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate predicate \u003d new PhonePredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withoutPhone().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"    public void testPhoneAbsentKeywordEmpty_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"        // Phone empty","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate predicate \u003d new PhonePredicate(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"91423611\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"    public void testPhoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        // Phone empty","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate predicate \u003d new PhonePredicate(\"91423611\");","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"        assertFalse(predicate.test(new PersonBuilder().withoutPhone().build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"        // Non-matching input","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"        predicate \u003d new PhonePredicate(\"999\");","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"91423611\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"random input\";","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"        PhonePredicate predicate \u003d new PhonePredicate(input);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"        String expected \u003d PhonePredicate.class.getCanonicalName() + \"{input\u003d\" + input + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"samuelim01":59,"wasjoe1":39}},{"path":"src/test/java/wedlog/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"samuelim01":2,"-":58}},{"path":"src/test/java/wedlog/address/model/person/RsvpStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" * Test class for RsvpStatus.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":" *","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":" * @version v1.2","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"public class RsvpStatusTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RsvpStatus(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    public void constructor_invalidRsvpStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        String invalidRsvpStatus \u003d \"\";","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RsvpStatus(invalidRsvpStatus));","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    public void isValidRsvpStatus() {","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"        // null rsvp status","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e RsvpStatus.isValidRsvpStatus(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        // invalid rsvp status","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(RsvpStatus.isValidRsvpStatus(\"\")); // empty string","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(RsvpStatus.isValidRsvpStatus(\" \")); // spaces only","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(RsvpStatus.isValidRsvpStatus(\"yesno\")); // more than 1 word","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(RsvpStatus.isValidRsvpStatus(\"nonsense\")); // invalid keyword","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"        // valid rsvp status","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"yes\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"no\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"Yes\")); // capitalised","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"No\")); // capitalised","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"unknown\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"Unknown\")); // capitalised","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"    public void equals() {","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatus rsvpStatus \u003d new RsvpStatus(\"yes\");","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(rsvpStatus.equals(new RsvpStatus(\"yes\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"        // same values but capitalised -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(rsvpStatus.equals(new RsvpStatus(\"Yes\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(rsvpStatus.equals(rsvpStatus));","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(rsvpStatus.equals(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(rsvpStatus.equals(5.0f));","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(rsvpStatus.equals(new RsvpStatus(\"no\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        assertFalse(rsvpStatus.equals(new RsvpStatus(\"unknown\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        // different constructor -\u003e return true","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        RsvpStatus unknownRsvpStatus \u003d new RsvpStatus(\"unknown\");","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertTrue(unknownRsvpStatus.equals(RsvpStatus.unknown()));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":7,"keaganpzh":69}},{"path":"src/test/java/wedlog/address/model/person/TableNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"public class TableNumberTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TableNumber(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    public void constructor_invalidTableNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"        String invalidTableNumber \u003d \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TableNumber(invalidTableNumber));","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public void isValidTableNumber() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        // null table number","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        assertThrows(NullPointerException.class, () -\u003e TableNumber.isValidTableNumber(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        // invalid table numbers","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"\")); // empty string","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\" \")); // spaces only","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"phone\")); // non-numeric","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"-1\")); // special character","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"1.1\")); //special character","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"2147483648\")); // greater than Integer.MAX_VALUE","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"0\")); //zero","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        assertFalse(TableNumber.isValidTableNumber(\"0000\")); //zero","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        // valid table numbers","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        assertTrue(TableNumber.isValidTableNumber(\"0002\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        assertTrue(TableNumber.isValidTableNumber(\"130\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        assertTrue(TableNumber.isValidTableNumber(\"2147483647\")); // equals to Integer.MAX_VALUE","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        TableNumber tableNumber \u003d new TableNumber(\"13\");","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        assertTrue(tableNumber.equals(new TableNumber(\"13\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"        assertTrue(tableNumber.equals(tableNumber));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        assertFalse(tableNumber.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        assertFalse(tableNumber.equals(5.0f));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        assertFalse(tableNumber.equals(new TableNumber(\"31\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tllshan":64}},{"path":"src/test/java/wedlog/address/model/person/UniqueGuestListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GABRIEL;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GERRARD;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GIA;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GIDEON;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GRACE;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREGORY;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.DietaryRequirementStatistics;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateGuestException;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.GuestNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"public class UniqueGuestListTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"    private final UniqueGuestList uniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"    public void contains_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.contains(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"    public void contains_guestNotInList_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        assertFalse(uniqueGuestList.contains(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"    public void contains_guestInList_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        assertTrue(uniqueGuestList.contains(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"        assertTrue(uniqueGuestList.contains(editedGina));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"    public void add_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.add(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    public void add_duplicateGuest_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.add(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"    public void setGuest_nullTargetGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuest(null, GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"    public void setGuest_nullEditedGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuest(GINA, null));","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    public void setGuest_targetGuestNotInList_throwsGuestNotFoundException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e uniqueGuestList.setGuest(GINA, GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestIsSameGuest_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuest(GINA, GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestHasSameIdentity_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        Guest editedAlice \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuest(GINA, editedAlice);","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(editedAlice);","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuest(GINA, GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestHasNonUniqueIdentity_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.setGuest(GINA, GREG));","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"    public void remove_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.remove(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"    public void remove_guestDoesNotExist_throwsGuestNotFoundException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e uniqueGuestList.remove(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"    public void remove_existingGuest_removesGuest() {","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.remove(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    public void setGuests_nullUniqueGuestList_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuests((UniqueGuestList) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"    public void setGuests_uniqueGuestList_replacesOwnListWithProvidedUniqueGuestList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuests(expectedUniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"    public void setGuests_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuests((List\u003cGuest\u003e) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"    public void setGuests_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        List\u003cGuest\u003e personList \u003d Collections.singletonList(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuests(personList);","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"    public void setGuests_listWithDuplicateGuests_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"        List\u003cGuest\u003e listWithDuplicateGuests \u003d Arrays.asList(GINA, GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.setGuests(listWithDuplicateGuests));","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"keaganpzh"},"content":"    public void getDietaryRequirementStatisticsTest() {","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"keaganpzh"},"content":"        HashMap\u003cString, Integer\u003e expectedMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"tllshan"},"content":"        // GABRIEL has unspecified dietary requirements and rsvp unknown","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"tllshan"},"content":"        // GINA has dietary requirements \"vegan\" and rsvp yes","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"        // GIDEON have dietary requirements \"none\" and rsvp unknown","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"tllshan"},"content":"        // GREG have dietary requirements \"none\" and rsvp no","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"        // GRACE has dietary requirements \"no shellfish\" and \"no pork\" and rsvp yes","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"        // GERRARD has no dietary requirements and rsvp yes","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"        // GREGORY has dietary requirements \"vegan\" and rsvp yes","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"        expectedMap.put(\"vegan\", 2);","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"keaganpzh"},"content":"        expectedMap.put(\"no pork, no shellfish\", 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"        expectedMap.put(\"regular\", 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirementStatistics expectedDietaryRequirementStatistics \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"keaganpzh"},"content":"                new DietaryRequirementStatistics(expectedMap);","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"tllshan"},"content":"        uniqueGuestList.add(GABRIEL); // rsvp unknown","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"tllshan"},"content":"        uniqueGuestList.add(GIDEON); // rsvp unknown","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"tllshan"},"content":"        uniqueGuestList.add(GREG); // rsvp no","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GRACE);","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"        uniqueGuestList.add(GERRARD);","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"        uniqueGuestList.add(GREGORY);","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"keaganpzh"},"content":"        assert(expectedDietaryRequirementStatistics.equals(uniqueGuestList.getDietaryRequirementStatistics()));","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"                -\u003e uniqueGuestList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"keaganpzh"},"content":"    public void getNumGuestsRsvpYes() {","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GABRIEL);","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GIDEON);","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(1, uniqueGuestList.getNumGuestsRsvpYes());","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"keaganpzh"},"content":"    public void getNumGuestsRsvpNo() {","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GABRIEL);","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GIDEON);","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(1, uniqueGuestList.getNumGuestsRsvpNo());","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"keaganpzh"},"content":"    public void getNumGuestsRsvpUnknown() {","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GABRIEL);","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GIDEON);","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(2, uniqueGuestList.getNumGuestsRsvpUnknown());","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":231,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"        uniqueGuestList.add(GIA);","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"samuelim01"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"samuelim01"},"content":"        // EP1: same object -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"samuelim01"},"content":"        assertTrue(uniqueGuestList.equals(uniqueGuestList));","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"samuelim01"},"content":"        // EP2: same values -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"samuelim01"},"content":"        UniqueGuestList uniqueGuestListCpy \u003d new UniqueGuestList();","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"samuelim01"},"content":"        uniqueGuestListCpy.add(GIA);","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"samuelim01"},"content":"        uniqueGuestListCpy.add(GINA);","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"samuelim01"},"content":"        assertTrue(uniqueGuestList.equals(uniqueGuestListCpy));","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"samuelim01"},"content":"        // EP3: null -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"samuelim01"},"content":"        assertFalse(uniqueGuestList.equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"samuelim01"},"content":"        // EP4: different type -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"samuelim01"},"content":"        assertFalse(uniqueGuestList.equals(0.7));","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"samuelim01"},"content":"        // EP5: different list -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"samuelim01"},"content":"        UniqueGuestList diffUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"samuelim01"},"content":"        diffUniqueGuestList.add(GIA);","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"samuelim01"},"content":"        diffUniqueGuestList.add(GRACE);","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"samuelim01"},"content":"        assertFalse(uniqueGuestList.equals(diffUniqueGuestList));","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"        assertEquals(uniqueGuestList.asUnmodifiableObservableList().toString(), uniqueGuestList.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":7,"samuelim01":46,"p-xp":166,"keaganpzh":43}},{"path":"src/test/java/wedlog/address/model/person/UniqueVendorListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BRYAN;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.CHLOE;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.VICTOR;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateVendorException;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.VendorNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"public class UniqueVendorListTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private final UniqueVendorList uniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    public void contains_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.contains(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"    public void contains_vendorNotInList_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        assertFalse(uniqueVendorList.contains(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    public void contains_vendorInList_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        assertTrue(uniqueVendorList.contains(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    public void contains_vendorWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAnne \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        assertTrue(uniqueVendorList.contains(editedAnne));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    public void add_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.add(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"    public void add_duplicateVendor_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e uniqueVendorList.add(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_nullTargetVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setVendor(null, ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_nullEditedVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setVendor(ANNE, null));","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_targetVendorNotInList_throwsVendorNotFoundException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        assertThrows(VendorNotFoundException.class, () -\u003e uniqueVendorList.setVendor(ANNE, ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorIsSameVendor_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendor(ANNE, ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorHasSameIdentity_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAlice \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendor(ANNE, editedAlice);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(editedAlice);","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendor(ANNE, VICTOR);","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(VICTOR);","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorHasNonUniqueIdentity_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(VICTOR);","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e uniqueVendorList.setVendor(ANNE, VICTOR));","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"    public void remove_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.remove(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"    public void remove_vendorDoesNotExist_throwsVendorNotFoundException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        assertThrows(VendorNotFoundException.class, () -\u003e uniqueVendorList.remove(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    public void remove_existingVendor_removesVendor() {","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.remove(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_nullUniqueVendorList_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setVendors((UniqueVendorList) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_uniqueVendorList_replacesOwnListWithProvidedUniqueVendorList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(VICTOR);","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendors(expectedUniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setVendors((List\u003cVendor\u003e) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"        List\u003cVendor\u003e vendorList \u003d Collections.singletonList(VICTOR);","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendors(vendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(VICTOR);","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_listWithDuplicateVendors_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"        List\u003cVendor\u003e listWithDuplicateVendors \u003d Arrays.asList(ANNE, ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e uniqueVendorList.setVendors(listWithDuplicateVendors));","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"            -\u003e uniqueVendorList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"    public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(BRYAN);","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"        // EP1: same object -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"        assertTrue(uniqueVendorList.equals(uniqueVendorList));","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"        // EP2: same values -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList uniqueVendorListCpy \u003d new UniqueVendorList();","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorListCpy.add(ANNE);","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorListCpy.add(BRYAN);","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"        assertTrue(uniqueVendorList.equals(uniqueVendorListCpy));","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"        // EP3: null -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"        assertFalse(uniqueVendorList.equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"        // EP4: different type -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"        assertFalse(uniqueVendorList.equals(0.7));","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"        // EP5: different list -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList diffUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"        diffUniqueVendorList.add(ANNE);","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"        diffUniqueVendorList.add(CHLOE);","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"        assertFalse(uniqueVendorList.equals(diffUniqueVendorList));","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"        assertEquals(uniqueVendorList.asUnmodifiableObservableList().toString(), uniqueVendorList.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":204}},{"path":"src/test/java/wedlog/address/model/person/VendorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_TAGS;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BRYAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":" * Simplified test class for Vendor.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":" * More detailed tests to be written in the future.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":" *","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":" * @author Shannon","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":" * @version v1.2","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"public class VendorTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        // null name","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Vendor(null, VALID_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        // null phone","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Vendor(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        // null email","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Vendor(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        // null address","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Vendor(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        // null tags","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Vendor(null, VALID_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"    public void isSameVendor() {","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        Name name \u003d new Name(\"ABC Catering\");","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        Phone phone \u003d new Phone(\"61234567\");","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        Email email \u003d new Email(\"abc@catering.com\");","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        Address address \u003d new Address(\"Blk 123\");","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        Tag tag \u003d new Tag(\"caterer\");","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"        tags.add(tag);","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"        Vendor vendor \u003d new Vendor(name, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        assertTrue(vendor.isSamePerson(vendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendor.isSamePerson(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        Phone phone1 \u003d new Phone(\"6123456\");","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        Email email1 \u003d new Email(\"diff@catering.com\");","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        Address address1 \u003d new Address(\"Blk 321\");","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"        Vendor editedVendor \u003d new Vendor(name, phone1, email1, address1, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        assertTrue(vendor.isSamePerson(editedVendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"        Name name1 \u003d new Name(\"XYZ Catering\");","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"        editedVendor \u003d new Vendor(name1, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendor.isSamePerson(editedVendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        Name name2 \u003d new Name(\"ABC CATERING\");","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"        editedVendor \u003d new Vendor(name2, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        assertTrue(vendor.isSamePerson(editedVendor));","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        Name name3 \u003d new Name(\"ABC Catering \");","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"        editedVendor \u003d new Vendor(name3, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendor.isSamePerson(editedVendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        Vendor anneCopy \u003d new VendorBuilder(ANNE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        assertTrue(ANNE.equals(anneCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        assertTrue(ANNE.equals(ANNE));","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"        // different vendor -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(BRYAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAnne \u003d new VendorBuilder(ANNE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        // no phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        // no email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        // no address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"        Name name \u003d new Name(\"ABC Catering\");","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"        Phone phone \u003d new Phone(\"61234567\");","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"        Email email \u003d new Email(\"abc@catering.com\");","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"        Address address \u003d new Address(\"Blk 123\");","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"        Tag tag \u003d new Tag(\"caterer\");","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"        tags.add(tag);","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"        Vendor vendor \u003d new Vendor(name, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"tllshan"},"content":"        String expected \u003d Vendor.class.getCanonicalName() + \"{name\u003d\" + vendor.getName() + \", phone\u003d\" + vendor.getPhone()","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"                + \", email\u003d\" + vendor.getEmail() + \", address\u003d\" + vendor.getAddress()","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"                + \", tags\u003d\" + vendor.getTags() + \"}\";","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"        assertEquals(expected, vendor.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tllshan":91,"samuelim01":79}},{"path":"src/test/java/wedlog/address/model/tag/DietaryRequirementTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"public class DietaryRequirementTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DietaryRequirement(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    public void constructor_invalidRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        String invalidRemark \u003d \"no milk, cheese\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DietaryRequirement(invalidRemark));","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    public void equals_notDietaryRequirement_returnsFalse() {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        assertNotEquals(new DietaryRequirement(\"vegan\"), \"vegan\");","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    public void equals_sameDietaryRequirement_returnsTrue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new DietaryRequirement(\"vegan\"), new DietaryRequirement(\"vegan\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirement testDietaryRequirement \u003d new DietaryRequirement(\"vegan\");","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(testDietaryRequirement.equals(testDietaryRequirement));","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"    public void toString_returnsCorrectString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        assertEquals(new DietaryRequirement(\"vegan\").toString(), \"[vegan]\");","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"tllshan":1,"keaganpzh":42}},{"path":"src/test/java/wedlog/address/model/tag/GuestDietaryPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"public class GuestDietaryPredicateTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"        List\u003cString\u003e predicateKeywordList \u003d Collections.singletonList(\"no seafood\");","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"        GuestDietaryPredicate predicate \u003d new GuestDietaryPredicate(predicateKeywordList);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"        // EP1: same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"        assertEquals(predicate, predicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"        // EP2: same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"        GuestDietaryPredicate predicateCopy \u003d new GuestDietaryPredicate(predicateKeywordList);","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"        assertEquals(predicate, predicateCopy);","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        // EP3: different values -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Collections.singletonList(\"no beef\");","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"        GuestDietaryPredicate secondPredicate \u003d new GuestDietaryPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        assertNotEquals(predicate, secondPredicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"        // EP4: null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"        assertNotEquals(predicate, null);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionGuestNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        GuestDietaryPredicate pred \u003d new GuestDietaryPredicate(Collections.singletonList(\"vegan\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        Guest guest \u003d new GuestBuilder().withDietaryRequirements(\"vegan\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(pred.test(guest));","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        Guest nullGuest \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"                \"Guest passed to GuestDietaryPredicate should not be null!\", () -\u003e pred.test(nullGuest));","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    public void test_dietaryRequirementMatchesKeywords_returnsTrue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        // EP1: Exact match","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        // One keyword","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        GuestDietaryPredicate predicate \u003d new GuestDietaryPredicate(Collections.singletonList(\"vegan\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(predicate.test(new GuestBuilder().withDietaryRequirements(\"vegan\").build()));","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        // Two matching keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new GuestDietaryPredicate(Arrays.asList(\"vegan\", \"no peanuts\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        assertTrue(predicate.test(new GuestBuilder().withDietaryRequirements(\"vegan\", \"no peanuts\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        // EP2: Match with additional non-matching values","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        // Two matching keywords (with additional non-matching value)","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new GuestDietaryPredicate(Arrays.asList(\"vegan\", \"no peanuts\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        assertTrue(predicate.test(new GuestBuilder().withDietaryRequirements(\"vegan\", \"no peanuts\", \"111\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    public void test_dietaryRequirementAbsentKeywordEmpty_returnsTrue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        // empty keyword should match empty dietary field","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        GuestDietaryPredicate predicate \u003d new GuestDietaryPredicate(Collections.singletonList(\"\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        assertTrue(predicate.test(new GuestBuilder().withoutDietaryRequirements().build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"    public void test_emptyKeywordList_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        // empty keyword list should result in Assertion Error","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        GuestDietaryPredicate predicate \u003d new GuestDietaryPredicate(Collections.emptyList());","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        assertThrows(","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"                AssertionError.class, () -\u003e predicate.test(new GuestBuilder()","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"                        .withDietaryRequirements(\"vegan\").build()));","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"    public void test_dietaryRequirementDoesNotMatchKeywords_returnsFalse() {","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        // EP1: No match","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        // Empty keyword with non-empty dietary requirement","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        GuestDietaryPredicate predicate \u003d new GuestDietaryPredicate(Collections.singletonList(\"\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withDietaryRequirements(\"no beef\").build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        // Non-empty keyword with empty dietary requirement","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new GuestDietaryPredicate(Collections.singletonList(\"no beef\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withoutDietaryRequirements().build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new GuestDietaryPredicate(Collections.singletonList(\"no beef\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withDietaryRequirements(\"no pork\").build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        // EP2: Partial match","lastModifiedDate":"2023-11-11"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new GuestDietaryPredicate(Arrays.asList(\"vegan\", \"no peanut\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withTags(\"vegan\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        // Keywords match name, phone, email, address and table number but does not match dietary requirement","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new GuestDietaryPredicate(Arrays.asList(","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"                \"Alice\", \"12345\", \"alice@email.com\", \"Jurong\", \"222\", \"12\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Jurong West\").withTableNumber(\"12\")","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"                .withoutDietaryRequirements().build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"    public void toString_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword\");","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        GuestDietaryPredicate predicate \u003d new GuestDietaryPredicate(keywords);","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        String expected \u003d GuestDietaryPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"p-xp":106,"wasjoe1":19}},{"path":"src/test/java/wedlog/address/model/tag/TagPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.Assert;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"public class TagPredicateTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"        List\u003cString\u003e predicateKeywordList \u003d Collections.singletonList(\"friend\");","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"        TagPredicate predicate \u003d new TagPredicate(predicateKeywordList);","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"        // EP1: same object -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"        assertEquals(predicate, predicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"        // EP2: different object but same values -\u003e returns true","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"        TagPredicate predicateCopy \u003d new TagPredicate(predicateKeywordList);","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"        assertEquals(predicate, predicateCopy);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        // EP3: different values -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Collections.singletonList(\"family\");","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        TagPredicate secondPredicate \u003d new TagPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"        assertNotEquals(predicate, secondPredicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"        // EP4: null -\u003e returns false","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"        assertNotEquals(predicate, null);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    public void testAssertionPersonNonNull() {","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        TagPredicate pred \u003d new TagPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        // Non null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        Person person \u003d new PersonBuilder().withTags(\"friend\").build();","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(pred.test(person));","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        // Heuristic: No more than 1 invalid input in a test case","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        // Null scenario","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        Person nullPerson \u003d null;","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        Assert.assertThrows(AssertionError.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"                \"Person passed to TagPredicate should not be null!\", () -\u003e pred.test(nullPerson));","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    public void test_tagMatchesKeywords_returnsTrue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        // EP1: Exact match","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        // One matching keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        TagPredicate predicate \u003d new TagPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        assertTrue(predicate.test(new GuestBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        // Two matching keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new TagPredicate(Arrays.asList(\"111\", \"222\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        assertTrue(predicate.test(new GuestBuilder().withTags(\"111\", \"222\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        // EP2: Match with additional non-matching values","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        // One matching keyword (with additional non-matching value)","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new TagPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        assertTrue(predicate.test(new GuestBuilder().withTags(\"friend\", \"family\").build()));","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        // Two matching keywords (with additional non-matching value)","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new TagPredicate(Arrays.asList(\"111\", \"222\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        assertTrue(predicate.test(new GuestBuilder().withTags(\"111\", \"222\", \"333\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"    public void test_tagAbsentKeywordEmpty_returnsTrue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        // empty keyword should match empty tag field","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        TagPredicate predicate \u003d new TagPredicate(Collections.singletonList(\"\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        assertTrue(predicate.test(new GuestBuilder().withoutTags().build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"    public void test_emptyKeywordList_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        // empty keyword list should result in Assertion Error","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        TagPredicate predicate \u003d new TagPredicate(Collections.emptyList());","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        assertThrows(AssertionError.class, () -\u003e predicate.test(new GuestBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    public void test_tagDoesNotMatchKeywords_returnsFalse() {","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        // EP1: No match","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        // Empty keyword with non-empty tag requirement","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        TagPredicate predicate \u003d new TagPredicate(Collections.singletonList(\"\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        // Non-empty keyword with empty tag","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new TagPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withoutTags().build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new TagPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withTags(\"family\").build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        // EP2: Partial match","lastModifiedDate":"2023-11-11"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new TagPredicate(Arrays.asList(\"friends\", \"family\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withTags(\"family\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"        // Keywords match name, phone, email, address and table number but does not match tag","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        predicate \u003d new TagPredicate(Arrays.asList(","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"                \"Alice\", \"12345\", \"alice@email.com\", \"Jurong\", \"222\", \"12\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Jurong West\").withTableNumber(\"12\")","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"                .withoutTags().build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"    public void toString_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\");","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        TagPredicate predicate \u003d new TagPredicate(keywords);","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"        String expected \u003d TagPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"p-xp":110,"wasjoe1":18}},{"path":"src/test/java/wedlog/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"samuelim01":2,"-":24}},{"path":"src/test/java/wedlog/address/storage/JsonAdaptedGuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.storage.JsonAdaptedGuest.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GABRIEL;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"public class JsonAdaptedGuestTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_RSVP_STATUS \u003d \"idk\";","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    private static final String INVALID_DIETARY_REQUIREMENT \u003d \"#vegan\";","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    private static final String INVALID_TABLE_NUMBER \u003d \"1a\";","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_NAME \u003d GINA.getName().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_PHONE \u003d GINA.getPhone().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_EMAIL \u003d GINA.getEmail().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_ADDRESS \u003d GINA.getAddress().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_RSVP_STATUS \u003d GINA.getRsvpStatus().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_YES_RSVP_STATUS \u003d GINA.getRsvpStatus().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_NO_RSVP_STATUS \u003d GREG.getRsvpStatus().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_UNKNOWN_RSVP_STATUS \u003d GABRIEL.getRsvpStatus().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    private static final List\u003cJsonAdaptedDietaryRequirement\u003e VALID_DIETARY_REQUIREMENTS \u003d GINA.getDietaryRequirements()","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"            .stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"            .map(JsonAdaptedDietaryRequirement::new)","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_TABLE_NUMBER \u003d GINA.getTableNumber().get().toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_PRESENT_DIETARY_REQUIREMENTS \u003d GINA.getDietaryRequirements().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d GINA.getTags().stream()","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    public void toModelType_validGuestDetails_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        assertEquals(GINA, guest.toModelType());","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullPhone_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(expectedGuest);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullEmail_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(expectedGuest);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullAddress_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(expectedGuest);","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidRsvpStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_RSVP_STATUS,","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d RsvpStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"tllshan"},"content":"    public void toModelType_nullRsvpStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null,","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"                RsvpStatus.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_validRsvpStatus_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        // yes rsvp status","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"                        VALID_YES_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withRsvpStatus(VALID_YES_RSVP_STATUS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"        // no rsvp status","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"        guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"                VALID_NO_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"        expectedGuest \u003d new GuestBuilder(GINA).withRsvpStatus(VALID_NO_RSVP_STATUS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"        // unknown rsvp status","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"        guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"                VALID_UNKNOWN_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"        expectedGuest \u003d new GuestBuilder(GINA).withRsvpStatus(VALID_UNKNOWN_RSVP_STATUS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_validDietaryRequirements_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"keaganpzh"},"content":"        List\u003cJsonAdaptedDietaryRequirement\u003e dietaryRequirements \u003d new ArrayList\u003c\u003e(VALID_DIETARY_REQUIREMENTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"keaganpzh"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"keaganpzh"},"content":"                        dietaryRequirements, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"keaganpzh"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"keaganpzh"},"content":"    public void toModelType_invalidDietaryRequirements_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"keaganpzh"},"content":"        List\u003cJsonAdaptedDietaryRequirement\u003e invalidDietaryRequirements \u003d new ArrayList\u003c\u003e(VALID_DIETARY_REQUIREMENTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"keaganpzh"},"content":"        invalidDietaryRequirements.add(new JsonAdaptedDietaryRequirement(INVALID_DIETARY_REQUIREMENT));","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"keaganpzh"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"keaganpzh"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"keaganpzh"},"content":"                        invalidDietaryRequirements, VALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(IllegalValueException.class, guest::toModelType);","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"tllshan"},"content":"    public void toModelType_invalidTableNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"tllshan"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"tllshan"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, INVALID_TABLE_NUMBER, VALID_TAGS);","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d TableNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"tllshan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"tllshan"},"content":"    public void toModelType_nullTableNumber_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"tllshan"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withoutTableNumber().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"tllshan"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(expectedGuest);","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"tllshan"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-07"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-07"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":210,"author":{"gitId":"tllshan"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TABLE_NUMBER, invalidTags);","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":30,"samuelim01":75,"p-xp":91,"keaganpzh":18}},{"path":"src/test/java/wedlog/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullPhone_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(expectedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullEmail_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(expectedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullAddress_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(expectedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":26,"-":86}},{"path":"src/test/java/wedlog/address/storage/JsonAdaptedVendorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BRYAN;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"public class JsonAdaptedVendorTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_NAME \u003d BRYAN.getName().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_PHONE \u003d BRYAN.getPhone().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_EMAIL \u003d BRYAN.getEmail().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_ADDRESS \u003d BRYAN.getAddress().get().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BRYAN.getTags().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_validVendorDetails_returnsVendor() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(BRYAN);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        assertEquals(BRYAN, vendor.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedVendor.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullPhone_returnsVendor() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(BRYAN).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(expectedVendor);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedVendor, vendor.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullEmail_returnsVendor() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(BRYAN).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(expectedVendor);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedVendor, vendor.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullAddress_returnsVendor() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(BRYAN).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(expectedVendor);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedVendor, vendor.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":112}},{"path":"src/test/java/wedlog/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.HENRY;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.IRENE;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalVendors;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    public void readAndSaveVendorOnlyAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        AddressBook original \u003d TypicalVendors.getTypicalAddressBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        original.addVendor(HENRY);","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        original.removeVendor(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        original.addVendor(IRENE);","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":14,"-":84}},{"path":"src/test/java/wedlog/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalVendors;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"    private static final Path TYPICAL_GUESTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalGuestsAddressBook.json\");","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"    private static final Path INVALID_GUEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidGuestAddressBook.json\");","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"    private static final Path DUPLICATE_GUEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGuestAddressBook.json\");","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    private static final Path TYPICAL_VENDORS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalVendorsAddressBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"    private static final Path INVALID_VENDOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidVendorAddressBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    private static final Path DUPLICATE_VENDOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateVendorAddressBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    // guests-test","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidGuestFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_GUEST_FILE,","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    public void toModelType_duplicateGuests_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GUEST_FILE,","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_GUEST,","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    // vendors-test","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_typicalVendorsFile_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_VENDORS_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        AddressBook typicalVendorsAddressBook \u003d TypicalVendors.getTypicalAddressBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        assertEquals(addressBookFromFile, typicalVendorsAddressBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidVendorFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_VENDOR_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_duplicateVendors_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_VENDOR_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_VENDOR,","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":32,"p-xp":22,"-":14}},{"path":"src/test/java/wedlog/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":5,"-":118}},{"path":"src/test/java/wedlog/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalGuests;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalVendors;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        AddressBook original \u003d TypicalGuests.getTypicalAddressBook();","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        original \u003d TypicalVendors.getTypicalAddressBook();","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":13,"-":61}},{"path":"src/test/java/wedlog/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"     * Adds a new {@code Guest} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    public AddressBookBuilder withGuest(Guest guest) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"        addressBook.addGuest(guest);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"     * Adds a new {@code Vendor} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"    public AddressBookBuilder withVendor(Vendor vendor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        addressBook.addVendor(vendor);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":15,"-":28}},{"path":"src/test/java/wedlog/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"samuelim01":1,"-":33}},{"path":"src/test/java/wedlog/address/testutil/EditGuestDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestEditCommand.EditGuestDescriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":" * A utility class to help with building EditGuestDescriptor objects.","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"public class EditGuestDescriptorBuilder {","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"    private EditGuestDescriptor descriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder() {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder(EditGuestDescriptor descriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"        this.descriptor \u003d new EditGuestDescriptor(descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"     * Returns an {@code EditGuestDescriptor} with fields containing {@code guest}\u0027s details","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder(Guest guest) {","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"        descriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"        descriptor.setName(guest.getName());","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"        descriptor.setPhone(guest.getPhone().orElse(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        descriptor.setEmail(guest.getEmail().orElse(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        descriptor.setAddress(guest.getAddress().orElse(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        descriptor.setTable(guest.getTableNumber().orElse(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"        // orElse not needed as these fields are guaranteed to be non-null","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        descriptor.setRsvp(guest.getRsvpStatus());","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        descriptor.setDietary(guest.getDietaryRequirements());","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        descriptor.setTags(guest.getTags());","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Name} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Phone} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Email} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Address} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Rsvp Status} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withRsvp(String rsvp) {","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        descriptor.setRsvp(new RsvpStatus(rsvp));","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Table Number} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withTable(String table) {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        descriptor.setTable(new TableNumber(table));","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Dietary Requirements} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withDietary(String... dietary) {","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        Set\u003cDietaryRequirement\u003e requirementsSet \u003d Stream.of(dietary)","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"                .map(DietaryRequirement::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        descriptor.setDietary(requirementsSet);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditGuestDescriptor}","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"     * that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Phone} of the {@code EditGuestDescriptor} that we are building to null.","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withoutPhone() {","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        descriptor.setPhone(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Email} of the {@code EditGuestDescriptor} that we are building to null.","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withoutEmail() {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        descriptor.setEmail(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Address} of the {@code EditGuestDescriptor} that we are building to null.","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withoutAddress() {","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"        descriptor.setAddress(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code RSVP status} of the {@code EditGuestDescriptor} that we are building to Unknown.","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withUnknownRsvp() {","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"        descriptor.setRsvp(RsvpStatus.unknown());","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Table Number} of the {@code EditGuestDescriptor} that we are building to null.","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptorBuilder withoutTable() {","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"        descriptor.setTable(null);","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"    public EditGuestDescriptor build() {","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        return descriptor;","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"p-xp":161}},{"path":"src/test/java/wedlog/address/testutil/EditVendorDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorEditCommand.EditVendorDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":" * A utility class to help with building EditVendorDescriptor objects.","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"public class EditVendorDescriptorBuilder {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"    private EditVendorDescriptor descriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder() {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder(EditVendorDescriptor descriptor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        this.descriptor \u003d new EditVendorDescriptor(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"     * Returns an {@code EditVendorDescriptor} with fields containing {@code vendor}\u0027s details","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder(Vendor vendor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        descriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        descriptor.setName(vendor.getName());","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        descriptor.setPhone(vendor.getPhone().orElse(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        descriptor.setEmail(vendor.getEmail().orElse(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        descriptor.setAddress(vendor.getAddress().orElse(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        descriptor.setTags(vendor.getTags());","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Name} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditVendorDescriptor}","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"     * that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder withoutPhone() {","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"        descriptor.setPhone(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder withoutEmail() {","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        descriptor.setEmail(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptorBuilder withoutAddress() {","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        descriptor.setAddress(null);","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    public EditVendorDescriptor build() {","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        return descriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"samuelim01":111}},{"path":"src/test/java/wedlog/address/testutil/GuestBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_GIA;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.TableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":" * A utility class to help with building Guest objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"public class GuestBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_NAME \u003d \"Giselle Gee\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_EMAIL \u003d \"giselle@gmail.com\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_RSVP_STATUS \u003d \"yes\";","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    public static final String DEFAULT_TABLE_NUMBER \u003d \"13\";","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"    private Name name;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    private Email email;","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"    private Address address;","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    private RsvpStatus rsvpStatus;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    private Set\u003cDietaryRequirement\u003e dietaryRequirements;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    private TableNumber tableNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"     * Creates a {@code GuestBuilder} with the default details.","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        rsvpStatus \u003d new RsvpStatus(DEFAULT_RSVP_STATUS);","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        dietaryRequirements.add(new DietaryRequirement(VALID_DIETARY_REQUIREMENTS_GIA));","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        tableNumber \u003d new TableNumber(DEFAULT_TABLE_NUMBER);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        tags.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"     * Creates a {@code GuestBuilder} with only the given name.","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        phone \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        email \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        address \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        rsvpStatus \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        tableNumber \u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"     * Initializes the GuestBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder(Guest guestToCopy) {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        name \u003d guestToCopy.getName();","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        phone \u003d guestToCopy.getPhone().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        email \u003d guestToCopy.getEmail().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        address \u003d guestToCopy.getAddress().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        rsvpStatus \u003d guestToCopy.getRsvpStatus();","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements \u003d new HashSet\u003c\u003e(guestToCopy.getDietaryRequirements());","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        tableNumber \u003d guestToCopy.getTableNumber().orElse(null);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        tags \u003d new HashSet\u003c\u003e(guestToCopy.getTags());","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Name} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withName(String name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Address} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withAddress(String address) {","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Phone} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Email} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withEmail(String email) {","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code RsvpStatus} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withRsvpStatus(String rsvpStatus) {","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        this.rsvpStatus \u003d new RsvpStatus(rsvpStatus);","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code TableNumber} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withTableNumber(String tableNumber) {","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"        this.tableNumber \u003d new TableNumber(tableNumber);","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"keaganpzh"},"content":"     * Parses the {@code dietaryRequirements} into a {@code Set\u003cDietaryRequirement\u003e}","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"     * and set it to the {@code Guest} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"    public GuestBuilder withDietaryRequirements(String ... dietaryRequirements) {","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"        this.dietaryRequirements \u003d SampleDataUtil.getDietaryRequirementSet(dietaryRequirements);","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"keaganpzh"},"content":"     * Sets the {@code DietaryRequirements} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"    public GuestBuilder withDietaryRequirementSet(Set\u003cDietaryRequirement\u003e dietaryRequirements) {","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"        this.dietaryRequirements \u003d dietaryRequirements;","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Guest} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"    public GuestBuilder withoutAddress() {","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"    public GuestBuilder withoutPhone() {","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"    public GuestBuilder withoutEmail() {","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code RsvpStatus} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withUnknownRsvpStatus() {","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"        this.rsvpStatus \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"tllshan"},"content":"     * Sets the {@code TableNumber} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"tllshan"},"content":"    public GuestBuilder withoutTableNumber() {","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"tllshan"},"content":"        this.tableNumber \u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"tllshan"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code DietaryRequirements} of the {@code Guest} that we are building to be empty.","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withoutDietaryRequirements() {","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"        this.dietaryRequirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Tags} of the {@code Guest} that we are building to be empty.","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withoutTags() {","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"    public Guest build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":214,"author":{"gitId":"tllshan"},"content":"        return new Guest(name, phone, email, address, rsvpStatus, dietaryRequirements, tableNumber, tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":216,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":21,"samuelim01":39,"p-xp":140,"keaganpzh":17}},{"path":"src/test/java/wedlog/address/testutil/GuestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestEditCommand.EditGuestDescriptor;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.DietaryRequirement;","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":" * A utility class for Person.","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"public class GuestUtil {","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     * Returns the part of command string for the given {@code guest}\u0027s details.","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"    public static String getGuestDetails(Guest guest) {","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        sb.append(PREFIX_NAME + guest.getName().fullName + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        sb.append(PREFIX_PHONE + guest.getPhone().map(p -\u003e p.value).orElse(\"\") + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"        sb.append(PREFIX_EMAIL + guest.getEmail().map(e -\u003e e.value).orElse(\"\") + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        sb.append(PREFIX_ADDRESS + guest.getAddress().map(a -\u003e a.value).orElse(\"\") + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        sb.append(PREFIX_RSVP + guest.getRsvpStatus().toString() + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        guest.getDietaryRequirements().stream().forEach(","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"                d -\u003e sb.append(PREFIX_DIETARY + d.value + \" \")","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        );","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        sb.append(PREFIX_TABLE + guest.getTableNumber().map(tn -\u003e tn.value).orElse(\"\") + \" \");","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"        guest.getTags().stream().forEach(","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        );","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"     * Returns the part of command string for the given {@code EditGuestDescriptor}\u0027s details.","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"    public static String getEditGuestDescriptorDetails(EditGuestDescriptor descriptor) {","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.getIsNameEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_NAME).append(descriptor.getName().fullName).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.getIsPhoneEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_PHONE).append(descriptor.getPhone().value).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.getIsEmailEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_EMAIL).append(descriptor.getEmail().value).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.getIsAddressEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_ADDRESS).append(descriptor.getAddress().value).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.getIsRsvpEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_RSVP).append(descriptor.getRsvp().value).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.getIsTableEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_TABLE).append(descriptor.getTable().value).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.getIsDietaryEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"            Set\u003cDietaryRequirement\u003e dietaryRequirements \u003d descriptor.getDietary();","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"            if (dietaryRequirements.isEmpty()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"                sb.append(PREFIX_DIETARY);","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"            } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"                dietaryRequirements.forEach(s -\u003e sb.append(PREFIX_DIETARY).append(s.value).append(\" \"));","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.getIsTagsEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags();","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"            } else {","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"tllshan":1,"samuelim01":46,"keaganpzh":38}},{"path":"src/test/java/wedlog/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        phone \u003d personToCopy.getPhone().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        email \u003d personToCopy.getEmail().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        address \u003d personToCopy.getAddress().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    public PersonBuilder withoutAddress() {","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    public PersonBuilder withoutPhone() {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"    public PersonBuilder withoutEmail() {","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"samuelim01":35,"-":85}},{"path":"src/test/java/wedlog/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":71}},{"path":"src/test/java/wedlog/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":29}},{"path":"src/test/java/wedlog/address/testutil/TypicalGuests.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TABLE_NUMBER_GABE;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TABLE_NUMBER_GIA;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":" * A utility class containing a list of {@code Guest} objects to be used in tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"public class TypicalGuests {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"    public static final Guest GINA \u003d new GuestBuilder().withName(\"Gina Pauline\")","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"gina@example.com\")","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"            .withPhone(\"94351253\").withRsvpStatus(\"yes\").withDietaryRequirements(\"vegan\")","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"            .withTableNumber(\"1\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    public static final Guest GREG \u003d new GuestBuilder().withName(\"Greg Meier\")","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"greg@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"            .withRsvpStatus(\"no\").withDietaryRequirements(\"none\")","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"            .withTableNumber(\"1\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    public static final Guest GABRIEL \u003d new GuestBuilder().withName(\"Gabriel Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"gabkurz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"            .withRsvpStatus(\"unknown\").withTableNumber(\"2\")","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    public static final Guest GEORGE \u003d new GuestBuilder().withName(\"George Tan\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"georgemeier@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"            .withRsvpStatus(\"yes\").withDietaryRequirements(\"no beef\").withTableNumber(\"2\")","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    // Manually added","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    public static final Guest GIDEON \u003d new GuestBuilder().withName(\"Gideon Lim\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"gideon@example.com\").withAddress(\"little india\")","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"            .withRsvpStatus(\"unknown\").withDietaryRequirements(\"none\").withTableNumber(\"3\")","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    public static final Guest GRACE \u003d new GuestBuilder().withName(\"Grace Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"grace@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            .withRsvpStatus(\"yes\").withDietaryRequirements(\"no shellfish\", \"no pork\").withTableNumber(\"3\")","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"    public static final Guest GERRARD \u003d new GuestBuilder().withName(\"Gerrard Tan\").withPhone(\"91324611\")","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"gerrard@example.com\").withAddress(\"chinatown\")","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"            .withRsvpStatus(\"yes\").withDietaryRequirements().withTableNumber(\"3\")","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"    public static final Guest GREGORY \u003d new GuestBuilder().withName(\"Gregory Tan\").withPhone(\"91424611\")","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"gregory@example.com\").withAddress(\"tampines ave 3\")","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"            .withRsvpStatus(\"yes\").withDietaryRequirements(\"vegan\").withTableNumber(\"3\")","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"    // Manually added - Guest\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    public static final Guest GIA \u003d new GuestBuilder().withName(VALID_NAME_GIA).withPhone(VALID_PHONE_GIA)","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"            .withEmail(VALID_EMAIL_GIA).withAddress(VALID_ADDRESS_GIA).withRsvpStatus(VALID_RSVP_STATUS_GIA)","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"            .withDietaryRequirements(VALID_DIETARY_REQUIREMENTS_GIA).withTableNumber(VALID_TABLE_NUMBER_GIA)","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"    public static final Guest GABE \u003d new GuestBuilder().withName(VALID_NAME_GABE).withPhone(VALID_PHONE_GABE)","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"            .withEmail(VALID_EMAIL_GABE).withAddress(VALID_ADDRESS_GABE).withRsvpStatus(VALID_RSVP_STATUS_GABE)","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"            .withDietaryRequirements(VALID_DIETARY_REQUIREMENTS_GABE).withTableNumber(VALID_TABLE_NUMBER_GABE)","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    private TypicalGuests() {} // prevents instantiation","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"     * Returns an {@code AddressBook} with all the typical guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        for (Guest guest : getTypicalGuests()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"            ab.addGuest(guest);","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        return ab;","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    public static List\u003cGuest\u003e getTypicalGuests() {","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GIA, GINA, GREG, GABRIEL, GEORGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":6,"samuelim01":17,"p-xp":75,"keaganpzh":1}},{"path":"src/test/java/wedlog/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"samuelim01":2,"-":10}},{"path":"src/test/java/wedlog/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"samuelim01":12,"-":52}},{"path":"src/test/java/wedlog/address/testutil/TypicalVendors.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_VAL;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FLORIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_PHOTOGRAPHER;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":" * A utility class containing a list of {@code Vendor} objects to be used in tests.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"public class TypicalVendors {","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor ANNE \u003d new VendorBuilder().withName(\"Anne Chua\")","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"anne@example.com\")","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor BRYAN \u003d new VendorBuilder().withName(\"Bryan Lim\")","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"bryand@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor CHLOE \u003d new VendorBuilder().withName(\"Chloe Chua\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"ckrz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor DANIEL \u003d new VendorBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor ETHAN \u003d new VendorBuilder().withName(\"Ethan Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"ethanmeyer@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor FELIZ \u003d new VendorBuilder().withName(\"Feliz Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor GRACE \u003d new VendorBuilder().withName(\"Grace Chan\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"charis@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"    // Manually added","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor HENRY \u003d new VendorBuilder().withName(\"Henry Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"hiimhenry@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor IRENE \u003d new VendorBuilder().withName(\"Irene Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"muellerirene@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"    // Manually added - Vendor\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    public static final Vendor VAL \u003d new VendorBuilder(VALID_NAME_VAL).withPhone(VALID_PHONE_VAL)","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"            .withEmail(VALID_EMAIL_VAL).withAddress(VALID_ADDRESS_VAL).withTags(VALID_TAG_PHOTOGRAPHER).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor VICTOR \u003d new VendorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FLORIST)","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"            .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    private TypicalVendors() {} // prevents instantiation","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"     * Returns an {@code AddressBook} with all the typical vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        for (Vendor vendor : getTypicalVendors()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"            ab.addVendor(vendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        return ab;","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"    public static List\u003cVendor\u003e getTypicalVendors() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ANNE, BRYAN, CHLOE, DANIEL, ETHAN, FELIZ, GRACE));","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":65,"p-xp":9,"wasjoe1":1}},{"path":"src/test/java/wedlog/address/testutil/VendorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":" * A utility class to help with building Vendor objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"public class VendorBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"    public static final String DEFAULT_NAME \u003d \"Annie Chua\";","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"    public static final String DEFAULT_PHONE \u003d \"91463224\";","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"    public static final String DEFAULT_EMAIL \u003d \"annie@gmail.com\";","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"301D, Anchorvale Drive, #05-15\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    private Name name;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private Email email;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    private Address address;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"     * Creates a {@code VendorBuilder} with the default details.","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"     * Creates a {@code VendorBuilder} with only the given name.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    public VendorBuilder(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        phone \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        email \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        address \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"     * Initializes the VendorBuilder with the data of {@code vendorToCopy}.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder(Vendor vendorToCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        name \u003d vendorToCopy.getName();","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        phone \u003d vendorToCopy.getPhone().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        email \u003d vendorToCopy.getEmail().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        address \u003d vendorToCopy.getAddress().orElse(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        tags \u003d new HashSet\u003c\u003e(vendorToCopy.getTags());","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Name} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withName(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withoutAddress() {","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withoutPhone() {","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withoutEmail() {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"    public Vendor build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        return new Vendor(name, phone, email, address, tags);","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":120,"p-xp":11}},{"path":"src/test/java/wedlog/address/testutil/VendorUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorEditCommand.EditVendorDescriptor;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" * A utility class for Vendor.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"public class VendorUtil {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * Returns the part of command string for the given {@code vendor}\u0027s details.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public static String getVendorDetails(Vendor vendor) {","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        sb.append(PREFIX_NAME + vendor.getName().fullName + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"        sb.append(PREFIX_PHONE + vendor.getPhone().map(p -\u003e p.value).orElse(\"\") + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"        sb.append(PREFIX_EMAIL + vendor.getEmail().map(e -\u003e e.value).orElse(\"\") + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"        sb.append(PREFIX_ADDRESS + vendor.getAddress().map(a -\u003e a.value).orElse(\"\") + \" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        vendor.getTags().stream().forEach(","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        );","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"     * Returns the part of command string for the given {@code EditVendorDescriptor}\u0027s details.","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    public static String getEditVendorDescriptorDetails(EditVendorDescriptor descriptor) {","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.isNameEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_NAME).append(descriptor.getName().fullName).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.isPhoneEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_PHONE).append(descriptor.getPhone().value).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.isEmailEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_EMAIL).append(descriptor.getEmail().value).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.isAddressEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"            sb.append(PREFIX_ADDRESS).append(descriptor.getAddress().value).append(\" \");","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        if (descriptor.isTagsEdited()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags();","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tllshan":34,"samuelim01":28}},{"path":"src/test/java/wedlog/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"samuelim01":1,"-":44}},{"path":"src/test/java/wedlog/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"samuelim01":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"\u003c?import wedlog.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"samuelim01":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"\u003cfx:root type\u003d\"wedlog.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"samuelim01":1,"-":5}}]
